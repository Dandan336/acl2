(BVCAT-OF-BITNOT-AND-BITNOT
 (12 5 (:REWRITE BVCAT-WHEN-LOWVAL-IS-NOT-AN-INTEGER))
 (12 5 (:REWRITE BVCAT-WHEN-HIGHVAL-IS-NOT-AN-INTEGER))
 (8 8 (:TYPE-PRESCRIPTION BITNOT))
 (5 5 (:REWRITE BVCAT-WHEN-LOWSIZE-IS-NOT-POSP))
 (5 5 (:REWRITE BVCAT-WHEN-HIGHSIZE-IS-NOT-POSP))
 (5 5 (:REWRITE BVCAT-WHEN-EQUAL-OF-GETBIT-0-LOW))
 (5 5 (:REWRITE BVCAT-WHEN-EQUAL-OF-GETBIT-0-HIGH))
 (5 5 (:REWRITE BVCAT-WHEN-ARG2-IS-NOT-AN-INTEGER))
 (5 5 (:REWRITE BVCAT-TIGHTEN-UPPER-SIZE))
 (5 5 (:REWRITE BVCAT-TIGHTEN-LOW-ARG))
 (5 5 (:REWRITE BVCAT-TIGHTEN-HIGH-ARG))
 (5 5 (:REWRITE BVCAT-SUBST-1))
 (5 5 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG4))
 (5 5 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG2))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 )
(BVCAT-OF-BVNOT-AND-BITNOT
 (10 4 (:REWRITE BVCAT-WHEN-LOWVAL-IS-NOT-AN-INTEGER))
 (10 4 (:REWRITE BVCAT-WHEN-HIGHVAL-IS-NOT-AN-INTEGER))
 (8 8 (:REWRITE DEFAULT-+-2))
 (8 8 (:REWRITE DEFAULT-+-1))
 (6 3 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (6 2 (:REWRITE DEFAULT-*-2))
 (4 4 (:REWRITE BVCAT-WHEN-LOWSIZE-IS-NOT-POSP))
 (4 4 (:REWRITE BVCAT-WHEN-HIGHSIZE-IS-NOT-POSP))
 (4 4 (:REWRITE BVCAT-WHEN-EQUAL-OF-GETBIT-0-LOW))
 (4 4 (:REWRITE BVCAT-WHEN-ARG2-IS-NOT-AN-INTEGER))
 (4 4 (:REWRITE BVCAT-TIGHTEN-UPPER-SIZE))
 (4 4 (:REWRITE BVCAT-TIGHTEN-LOW-ARG))
 (4 4 (:REWRITE BVCAT-TIGHTEN-HIGH-ARG))
 (4 4 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG4))
 (4 4 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG2))
 (3 3 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (3 3 (:TYPE-PRESCRIPTION BITNOT))
 (3 3 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (3 3 (:REWRITE NOT-<-WHEN-SBVLT))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE BOUND-WHEN-USB2))
 (3 3 (:REWRITE BOUND-WHEN-USB))
 (3 3 (:REWRITE <-WHEN-BVLT))
 (3 3 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE DEFAULT-*-1))
 (2 2 (:REWRITE BVNOT-WHEN-SIZE-IS-NOT-POSITIVE))
 (2 2 (:REWRITE BVNOT-WHEN-SIZE-IS-NOT-INTEGERP))
 (2 2 (:REWRITE BVNOT-WHEN-NOT-NATP-SIZE))
 (1 1 (:REWRITE EXPT-HACK))
 )
(BVCAT-OF-BITNOT-AND-BVNOT
 (10 4 (:REWRITE BVCAT-WHEN-LOWVAL-IS-NOT-AN-INTEGER))
 (10 4 (:REWRITE BVCAT-WHEN-HIGHVAL-IS-NOT-AN-INTEGER))
 (9 9 (:REWRITE DEFAULT-+-2))
 (9 9 (:REWRITE DEFAULT-+-1))
 (6 3 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (6 2 (:REWRITE DEFAULT-*-2))
 (4 4 (:REWRITE BVCAT-WHEN-LOWSIZE-IS-NOT-POSP))
 (4 4 (:REWRITE BVCAT-WHEN-HIGHSIZE-IS-NOT-POSP))
 (4 4 (:REWRITE BVCAT-WHEN-EQUAL-OF-GETBIT-0-HIGH))
 (4 4 (:REWRITE BVCAT-WHEN-ARG2-IS-NOT-AN-INTEGER))
 (4 4 (:REWRITE BVCAT-TIGHTEN-UPPER-SIZE))
 (4 4 (:REWRITE BVCAT-TIGHTEN-LOW-ARG))
 (4 4 (:REWRITE BVCAT-TIGHTEN-HIGH-ARG))
 (4 4 (:REWRITE BVCAT-SUBST-1))
 (4 4 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG4))
 (4 4 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG2))
 (3 3 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (3 3 (:TYPE-PRESCRIPTION BITNOT))
 (3 3 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (3 3 (:REWRITE NOT-<-WHEN-SBVLT))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE BOUND-WHEN-USB2))
 (3 3 (:REWRITE BOUND-WHEN-USB))
 (3 3 (:REWRITE <-WHEN-BVLT))
 (3 3 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE DEFAULT-*-1))
 (2 2 (:REWRITE BVNOT-WHEN-SIZE-IS-NOT-POSITIVE))
 (2 2 (:REWRITE BVNOT-WHEN-SIZE-IS-NOT-INTEGERP))
 (2 2 (:REWRITE BVNOT-WHEN-NOT-NATP-SIZE))
 (1 1 (:REWRITE EXPT-HACK))
 )
(BVCAT-OF-BVNOT-AND-BVNOT
 (19 1 (:DEFINITION EXPT))
 (10 4 (:REWRITE BVCAT-WHEN-LOWVAL-IS-NOT-AN-INTEGER))
 (10 4 (:REWRITE BVCAT-WHEN-HIGHVAL-IS-NOT-AN-INTEGER))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 3 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE BVNOT-WHEN-SIZE-IS-NOT-POSITIVE))
 (4 4 (:REWRITE BVNOT-WHEN-SIZE-IS-NOT-INTEGERP))
 (4 4 (:REWRITE BVNOT-WHEN-NOT-NATP-SIZE))
 (4 4 (:REWRITE BVCAT-WHEN-LOWSIZE-IS-NOT-POSP))
 (4 4 (:REWRITE BVCAT-WHEN-HIGHSIZE-IS-NOT-POSP))
 (4 4 (:REWRITE BVCAT-WHEN-ARG2-IS-NOT-AN-INTEGER))
 (4 4 (:REWRITE BVCAT-TIGHTEN-UPPER-SIZE))
 (4 4 (:REWRITE BVCAT-TIGHTEN-LOW-ARG))
 (4 4 (:REWRITE BVCAT-TIGHTEN-HIGH-ARG))
 (4 4 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG4))
 (4 4 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG2))
 (3 3 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (3 3 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (3 3 (:REWRITE NOT-<-WHEN-SBVLT))
 (3 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE BOUND-WHEN-USB2))
 (3 3 (:REWRITE BOUND-WHEN-USB))
 (3 3 (:REWRITE <-WHEN-BVLT))
 (3 3 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE EXPT-HACK))
 )
(BVXOR-OF-LEFTROTATE-TRIM-8-32-ARG2)
(BVXOR-OF-LEFTROTATE-TRIM-8-32-ARG1)
(BVXOR-OF-LEFTROTATE32-TRIM-8-ARG2)
(BVXOR-OF-LEFTROTATE32-TRIM-8-ARG1)
(LEFTROTATE-32-OF-BVXOR-32-WHEN-CONSTANT
 (8 3 (:REWRITE BVXOR-WHEN-Y-IS-NOT-AN-INTEGER))
 (8 3 (:REWRITE BVXOR-WHEN-X-IS-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVXOR-WITH-SMALLER-ARG-2))
 (3 3 (:REWRITE BVXOR-WITH-SMALLER-ARG-1))
 (3 3 (:REWRITE BVXOR-WHEN-SIZE-IS-NOT-POSITIVE))
 (3 3 (:REWRITE BVXOR-WHEN-SIZE-IS-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVXOR-TRIM-ARG2))
 (3 3 (:REWRITE BVXOR-TRIM-ARG1))
 (3 3 (:REWRITE BVXOR-TIGHTEN))
 (3 3 (:REWRITE BVXOR-SUBST-ARG3))
 (3 3 (:REWRITE BVXOR-SUBST-ARG2))
 (3 3 (:REWRITE BVXOR-OF-CONSTANT-TRIM-ARG1))
 (3 3 (:REWRITE BVXOR-COMMUTATIVE-ALT))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 )
(LEFTROTATE32-OF-BVXOR-32-WHEN-CONSTANT
 (8 3 (:REWRITE BVXOR-WHEN-Y-IS-NOT-AN-INTEGER))
 (8 3 (:REWRITE BVXOR-WHEN-X-IS-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVXOR-WITH-SMALLER-ARG-2))
 (3 3 (:REWRITE BVXOR-WITH-SMALLER-ARG-1))
 (3 3 (:REWRITE BVXOR-WHEN-SIZE-IS-NOT-POSITIVE))
 (3 3 (:REWRITE BVXOR-WHEN-SIZE-IS-NOT-AN-INTEGER))
 (3 3 (:REWRITE BVXOR-TRIM-ARG2))
 (3 3 (:REWRITE BVXOR-TRIM-ARG1))
 (3 3 (:REWRITE BVXOR-TIGHTEN))
 (3 3 (:REWRITE BVXOR-SUBST-ARG3))
 (3 3 (:REWRITE BVXOR-SUBST-ARG2))
 (3 3 (:REWRITE BVXOR-OF-CONSTANT-TRIM-ARG1))
 (3 3 (:REWRITE BVXOR-COMMUTATIVE-ALT))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE LEFTROTATE-32-OF-BVXOR-32-WHEN-CONSTANT))
 )
(BVCHOP-OF-1-WHEN-BITP)
(BITP-WHEN-EQUAL-OF-GETBIT-1)
(BITP-WHEN-EQUAL-OF-GETBIT-2)
(BITP-WHEN-EQUAL-OF-BITXOR-1)
(BITP-WHEN-EQUAL-OF-BITXOR-2)
(BITP-WHEN-EQUAL-1)
(BITP-WHEN-EQUAL-2)
