(MY-PACK-LIST
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REPLACE-IN-TERM2
 (548 1 (:DEFINITION PSEUDO-TERMP))
 (146 1 (:REWRITE ASSOC-EQUAL-WHEN-MEMBER-EQUAL-OF-STRIP-CARS))
 (121 3 (:REWRITE EQUAL-OF-+-WHEN-NEGATIVE-CONSTANT))
 (108 54 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (99 1 (:REWRITE MEMBER-EQUAL-OF-STRIP-CARS-WHEN-MEMBER-EQUAL-OF-HONS-DUPLICATED-MEMBERS-AUX))
 (94 1 (:REWRITE MEMBER-EQUAL-OF-HONS-DUPLICATED-MEMBERS-AUX))
 (66 2 (:DEFINITION STRIP-CARS))
 (59 3 (:DEFINITION LENGTH))
 (57 1 (:DEFINITION NO-DUPLICATESP-EQUAL))
 (54 54 (:TYPE-PRESCRIPTION NAT-LISTP))
 (51 1 (:DEFINITION SYMBOL-LISTP))
 (45 22 (:REWRITE DEFAULT-CAR))
 (44 4 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (43 3 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (37 9 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (36 3 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (34 8 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (30 4 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (28 16 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (27 3 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (24 1 (:REWRITE LEN-OF-CDR-BETTER))
 (23 23 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (23 23 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (23 23 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (22 22 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (21 21 (:REWRITE USE-ALL-CONSP-2))
 (21 21 (:REWRITE USE-ALL-CONSP))
 (21 21 (:REWRITE LEN-GIVES-CONSP))
 (21 21 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (21 21 (:REWRITE CONSP-FROM-LEN-BOUND))
 (20 16 (:REWRITE DEFAULT-CDR))
 (16 1 (:REWRITE SUBSETP-CAR-MEMBER))
 (15 3 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (12 6 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (10 10 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (10 10 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (10 1 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (10 1 (:REWRITE MEMBER-WHEN-ATOM))
 (9 9 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (9 9 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (9 9 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (9 9 (:REWRITE IMPOSSIBLE-VALUE-2))
 (9 9 (:REWRITE IMPOSSIBLE-VALUE-1))
 (9 9 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (9 9 (:REWRITE EQUAL-WHEN-<-OF-+))
 (9 9 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (9 3 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (9 3 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (9 3 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (9 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (8 8 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (8 8 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (8 8 (:REWRITE EQUAL-WHEN-BVLT))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (8 8 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (8 8 (:REWRITE CLR-DIFFERENTIAL))
 (8 7 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (8 4 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (8 1 (:REWRITE FIX-OF-LEN))
 (8 1 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (7 7 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (7 7 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (7 7 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (7 7 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (7 7 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (7 7 (:META LEN-CONS-META-RULE))
 (7 2 (:REWRITE DEFAULT-+-2))
 (7 1 (:REWRITE PSEUDO-TERMP-OF-CADDR))
 (6 6 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (6 6 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (6 6 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (6 6 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (6 6 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (6 4 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 3 (:REWRITE PSEUDO-TERMP-OF-CAR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (6 3 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP))
 (6 3 (:REWRITE ALISTP-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (6 3 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (6 3 (:REWRITE ALISTP-WHEN-PAIR-LISTP-CHEAP))
 (6 3 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (6 3 (:REWRITE ALIST-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (6 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (5 5 (:TYPE-PRESCRIPTION NO-DUPLICATESP-EQUAL))
 (5 5 (:TYPE-PRESCRIPTION BOOLEANP))
 (4 4 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (4 4 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (4 4 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (4 4 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (4 4 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (4 4 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (4 2 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION VAR-UNTRANSLATED-TERM-PAIRSP))
 (3 3 (:TYPE-PRESCRIPTION UNTRANSLATED-TERM-PAIRSP))
 (3 3 (:TYPE-PRESCRIPTION STRIP-CARS))
 (3 3 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (3 3 (:TYPE-PRESCRIPTION PAIR-LISTP))
 (3 3 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (3 3 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (3 3 (:REWRITE USE-ALL-RULE-ALISTP))
 (3 3 (:REWRITE USE-ALL-ALISTP-2))
 (3 3 (:REWRITE USE-ALL-ALISTP))
 (3 3 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (3 3 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (3 3 (:REWRITE SUBSETP-MEMBER . 2))
 (3 3 (:REWRITE SUBSETP-MEMBER . 1))
 (3 3 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (3 3 (:REWRITE EQUAL-CONSTANT-+))
 (3 3 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (3 3 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (3 3 (:REWRITE ALISTP-CONSTANT-OPENER))
 (3 1 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (2 2 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (2 2 (:TYPE-PRESCRIPTION AXE-TREEP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE EQUAL-OF-+-COMBINE-CONSTANTS))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (2 1 (:REWRITE SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-ALISTP-CHEAP))
 (2 1 (:REWRITE SYMBOL-LISTP-OF-CADR-OF-CAR-WHEN-PSEUDO-TERMP-CHEAP))
 (2 1 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (2 1 (:REWRITE BV-3-2-1-HACKB))
 (1 1 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (1 1 (:TYPE-PRESCRIPTION SYMBOL-ALISTP))
 (1 1 (:TYPE-PRESCRIPTION BVLT))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (1 1 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS))
 (1 1 (:REWRITE SUBSETP-MEMBER . 4))
 (1 1 (:REWRITE SUBSETP-MEMBER . 3))
 (1 1 (:REWRITE PSEUDO-TERMP-OF-LAMBDA-BODY-CHEAP))
 (1 1 (:REWRITE JVM::LEN-HACK))
 (1 1 (:REWRITE INTERSECTP-MEMBER . 3))
 (1 1 (:REWRITE INTERSECTP-MEMBER . 2))
 (1 1 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (1 1 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (1 1 (:REWRITE EQUAL-OF-+-OF-MINUS-32))
 (1 1 (:REWRITE EQUAL-OF-+-OF-MINUS))
 (1 1 (:REWRITE BV-3-2-1-HACK))
 (1 1 (:REWRITE ASSOC-EQUAL-WHEN-SUBSETP-EQUAL-OF-STRIP-CARS))
 (1 1 (:REWRITE ASSOC-EQUAL-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE ASSOC-EQUAL-WHEN-LOOKUP-EQUAL-CHEAP))
 (1 1 (:REWRITE +-OF-MINUS))
 )
(MYIF-OF-MYIF-OF-MYIF-SAME-TESTS
 (7 3 (:REWRITE MYIF-BECOMES-BIF))
 (5 5 (:TYPE-PRESCRIPTION BOOLEANP))
 (3 3 (:REWRITE MYIF-WHEN-NOT-NIL))
 (3 3 (:REWRITE MYIF-WHEN-NIL))
 (3 3 (:REWRITE MYIF-OF-CONSTANT-WHEN-NOT-NIL))
 (2 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (1 1 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (1 1 (:REWRITE IMPOSSIBLE-VALUE-2))
 (1 1 (:REWRITE IMPOSSIBLE-VALUE-1))
 (1 1 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (1 1 (:REWRITE EQUAL-WHEN-BVLT))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+))
 (1 1 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE CLR-DIFFERENTIAL))
 )
(DAG-TO-TERM-LIMITED
 (1050 525 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (525 525 (:TYPE-PRESCRIPTION NAT-LISTP))
 (330 10 (:LINEAR LEN-OF-CDR-LINEAR-STRONG))
 (290 10 (:LINEAR LEN-OF-CDR-LINEAR))
 (251 2 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (196 98 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (186 93 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (162 1 (:DEFINITION AXE-TREEP))
 (149 11 (:REWRITE INEQ-HACK2))
 (149 11 (:REWRITE INEQ-HACK))
 (110 110 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (110 110 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (110 110 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (110 110 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (110 110 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (110 110 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (110 110 (:META LEN-CONS-META-RULE))
 (98 98 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (93 93 (:TYPE-PRESCRIPTION ALL-NATP))
 (71 41 (:REWRITE DEFAULT-CDR))
 (70 1 (:REWRITE AXE-TREEP-WHEN-PSEUDO-TERMP))
 (68 2 (:REWRITE ALL-AXE-TREEP-WHEN-PSEUDO-TERM-LISTP))
 (67 1 (:DEFINITION PSEUDO-TERMP))
 (52 52 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (52 22 (:REWRITE DEFAULT-CAR))
 (52 2 (:DEFINITION PSEUDO-TERM-LISTP))
 (48 48 (:REWRITE DEFAULT-+-2))
 (48 48 (:REWRITE DEFAULT-+-1))
 (48 48 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (48 48 (:REWRITE +-OF-MINUS))
 (47 47 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (47 12 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (42 41 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (40 1 (:REWRITE NOT-MYQUOTEP-WHEN-LEN-WRONG))
 (39 1 (:REWRITE ALL-AXE-TREEP-OF-CDR-2))
 (35 2 (:REWRITE ALL-AXE-TREEP-WHEN-ALL-DARGP))
 (28 13 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (25 25 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (24 12 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (21 11 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (21 7 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (21 7 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (16 16 (:TYPE-PRESCRIPTION PSEUDO-TERMP))
 (16 16 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (16 16 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (16 16 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (16 16 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (15 15 (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
 (15 11 (:REWRITE NOT-<-WHEN-SBVLT))
 (15 4 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP))
 (14 1 (:REWRITE AXE-TREEP-WHEN-DARGP))
 (13 13 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (13 13 (:REWRITE CLR-DIFFERENTIAL))
 (12 12 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (12 12 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (12 12 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (12 12 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (12 12 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (12 12 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (12 12 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (12 12 (:REWRITE ARRAY-DIM-BOUND))
 (12 12 (:REWRITE ARITH-HACK-CHEAP))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (12 11 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (11 11 (:REWRITE USE-ALL-<=-2))
 (11 11 (:REWRITE USE-ALL-<=))
 (11 11 (:REWRITE USE-ALL-<-2))
 (11 11 (:REWRITE USE-ALL-<))
 (11 11 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (11 11 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (11 11 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (11 11 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (11 11 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (11 11 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (11 11 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (11 11 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (11 11 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (11 11 (:REWRITE IMPOSSIBLE-VALUE-2))
 (11 11 (:REWRITE IMPOSSIBLE-VALUE-1))
 (11 11 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (11 11 (:REWRITE EQUAL-WHEN-BVLT))
 (11 11 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (11 11 (:REWRITE EQUAL-WHEN-<-OF-+))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (11 11 (:REWRITE DROP-LINEAR-HYPS3))
 (11 11 (:REWRITE DROP-LINEAR-HYPS2))
 (11 11 (:REWRITE DROP->-HYPS))
 (11 11 (:REWRITE DROP-<=-HYPS))
 (11 11 (:REWRITE DROP-<-HYPS))
 (11 11 (:REWRITE DEFAULT-<-2))
 (11 11 (:REWRITE DEFAULT-<-1))
 (11 11 (:REWRITE BOUND-WHEN-USB2))
 (11 11 (:REWRITE BOUND-WHEN-USB))
 (11 11 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (11 11 (:REWRITE <-WHEN-BVLT))
 (11 11 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (11 11 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (11 11 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (11 11 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (11 11 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (11 11 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (11 11 (:REWRITE <-FROM-<=-FREE))
 (10 5 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP))
 (10 1 (:DEFINITION LENGTH))
 (8 8 (:TYPE-PRESCRIPTION ALL-DARGP))
 (8 4 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP-CHEAP))
 (8 4 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP))
 (8 4 (:REWRITE ALL-DARGP-WHEN-ALL-MYQUOTEP-CHEAP))
 (8 1 (:REWRITE LEN-OF-NTH-WHEN-ALL-DARGP))
 (8 1 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 (8 1 (:REWRITE ALL-DARGP-OF-CDR))
 (7 7 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (7 7 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (7 7 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (6 6 (:TYPE-PRESCRIPTION ALL-AXE-TREEP))
 (5 5 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (5 5 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (5 5 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (4 4 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (4 4 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE ALL-DARGP-WHEN-ALL-DARGP-LESS-THAN))
 (4 2 (:REWRITE PSEUDO-TERMP-OF-CAR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (4 2 (:REWRITE BV-3-2-1-HACKB))
 (3 3 (:TYPE-PRESCRIPTION AXE-TREEP))
 (3 3 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (3 3 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (3 3 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE ARRAY-DIM-IS-INTEGERP))
 (2 2 (:TYPE-PRESCRIPTION BVLT))
 (2 2 (:REWRITE USE-ALL-CONSP-2))
 (2 2 (:REWRITE USE-ALL-CONSP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE MYQUOTEP-WHEN-BOUNDED-DAG-EXPRP))
 (2 2 (:REWRITE LEN-GIVES-CONSP))
 (2 2 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (2 2 (:REWRITE CONSP-FROM-LEN-BOUND))
 (2 2 (:REWRITE BV-3-2-1-HACK))
 (2 1 (:REWRITE LEN-OF-NTH-0-WHEN-PSEUDO-TERMP-CHEAP))
 (2 1 (:REWRITE LEN-OF-NTH-0-WHEN-AXE-TREEP-CHEAP))
 (2 1 (:REWRITE ALL-AXE-TREEP-OF-CDR))
 (1 1 (:TYPE-PRESCRIPTION DARGP))
 (1 1 (:REWRITE USE-ALL-DARGP-2))
 (1 1 (:REWRITE USE-ALL-DARGP))
 (1 1 (:REWRITE LEN-OF-NTH-WHEN-ITEMS-HAVE-LEN))
 (1 1 (:REWRITE LEN-OF-NTH-WHEN-ALL-DARGP-LESS-THAN))
 (1 1 (:REWRITE LEN-NTH-FROM-ITEMS-HAVE-LEN))
 (1 1 (:REWRITE DARGP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (1 1 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE AXE-TREEP-WHEN-SYMBOLP-CHEAP))
 (1 1 (:REWRITE AXE-TREEP-WHEN-NOT-CONSP-AND-NOT-SYMBOLP-CHEAP))
 (1 1 (:REWRITE AXE-TREEP-WHEN-EQUAL-OF-CAR-AND-QUOTE-CHEAP))
 (1 1 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 )
(REMOVE-DUPLICATES-EQUAL2-AUX
 (6 3 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (3 3 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REMOVE-DUPLICATES-EQUAL2)
(LOOP-DESIGNATORP)
(MAKE-LOOP-DESIGNATOR)
(LOOP-DESIGNATORP-OF-MAKE-LOOP-DESIGNATOR
 (12 6 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (2 2 (:REWRITE USE-ALL-CLASS-NAMESP-2))
 (2 2 (:REWRITE USE-ALL-CLASS-NAMESP))
 (2 2 (:REWRITE JVM::CLASS-NAMEP-WHEN-MV-NTH-0-OF-RESOLVE-METHOD))
 (2 2 (:REWRITE JVM::CLASS-NAMEP-WHEN-BOUND-IN-CLASS-TABLEP))
 (2 2 (:REWRITE JVM::CLASS-NAMEP-CONSTANT-OPENER))
 )
(ALL-LOOP-DESIGNATORP
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-LOOP-DESIGNATORP-OF-CONS)
(USE-ALL-LOOP-DESIGNATORP-FOR-CAR)
(USE-ALL-LOOP-DESIGNATORP-FOR-CAR-OF-LAST)
(ALL-LOOP-DESIGNATORP-OF-APPEND)
(ALL-LOOP-DESIGNATORP-OF-UNION-EQUAL)
(ALL-LOOP-DESIGNATORP-WHEN-NOT-CONSP)
(ALL-LOOP-DESIGNATORP-WHEN-NOT-CONSP-CHEAP)
(ALL-LOOP-DESIGNATORP-OF-REVAPPEND)
(ALL-LOOP-DESIGNATORP-OF-CDR)
(ALL-LOOP-DESIGNATORP-OF-NTHCDR)
(ALL-LOOP-DESIGNATORP-OF-FIRSTN)
(ALL-LOOP-DESIGNATORP-OF-REMOVE1-EQUAL)
(ALL-LOOP-DESIGNATORP-OF-REMOVE-EQUAL)
(ALL-LOOP-DESIGNATORP-OF-LAST)
(ALL-LOOP-DESIGNATORP-OF-TAKE)
(ALL-LOOP-DESIGNATORP-WHEN-PERM)
(ALL-LOOP-DESIGNATORP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-LOOP-DESIGNATORP-1)
(USE-ALL-LOOP-DESIGNATORP)
(USE-ALL-LOOP-DESIGNATORP-2)
(ALL-LOOP-DESIGNATORP-OF-ADD-TO-SET-EQUAL)
(ALL-LOOP-DESIGNATORP)
(LOOP-IDP)
(ALL-LOOP-IDP
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-LOOP-IDP-OF-CONS)
(USE-ALL-LOOP-IDP-FOR-CAR)
(USE-ALL-LOOP-IDP-FOR-CAR-OF-LAST)
(ALL-LOOP-IDP-OF-APPEND)
(ALL-LOOP-IDP-OF-UNION-EQUAL)
(ALL-LOOP-IDP-WHEN-NOT-CONSP)
(ALL-LOOP-IDP-WHEN-NOT-CONSP-CHEAP)
(ALL-LOOP-IDP-OF-REVAPPEND)
(ALL-LOOP-IDP-OF-CDR)
(ALL-LOOP-IDP-OF-NTHCDR)
(ALL-LOOP-IDP-OF-FIRSTN)
(ALL-LOOP-IDP-OF-REMOVE1-EQUAL)
(ALL-LOOP-IDP-OF-REMOVE-EQUAL)
(ALL-LOOP-IDP-OF-LAST)
(ALL-LOOP-IDP-OF-TAKE)
(ALL-LOOP-IDP-WHEN-PERM)
(ALL-LOOP-IDP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-LOOP-IDP-1)
(USE-ALL-LOOP-IDP)
(USE-ALL-LOOP-IDP-2)
(ALL-LOOP-IDP-OF-ADD-TO-SET-EQUAL)
(ALL-LOOP-IDP)
(ELABORATE-LOOP-ID)
(LOOP-FUNCTION-IDP)
(ALL-LOOP-FUNCTION-IDP
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-LOOP-FUNCTION-IDP-OF-CONS)
(USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR)
(USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR-OF-LAST)
(ALL-LOOP-FUNCTION-IDP-OF-APPEND)
(ALL-LOOP-FUNCTION-IDP-OF-UNION-EQUAL)
(ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP)
(ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP)
(ALL-LOOP-FUNCTION-IDP-OF-REVAPPEND)
(ALL-LOOP-FUNCTION-IDP-OF-CDR)
(ALL-LOOP-FUNCTION-IDP-OF-NTHCDR)
(ALL-LOOP-FUNCTION-IDP-OF-FIRSTN)
(ALL-LOOP-FUNCTION-IDP-OF-REMOVE1-EQUAL)
(ALL-LOOP-FUNCTION-IDP-OF-REMOVE-EQUAL)
(ALL-LOOP-FUNCTION-IDP-OF-LAST)
(ALL-LOOP-FUNCTION-IDP-OF-TAKE)
(ALL-LOOP-FUNCTION-IDP-WHEN-PERM)
(ALL-LOOP-FUNCTION-IDP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-LOOP-FUNCTION-IDP-1)
(USE-ALL-LOOP-FUNCTION-IDP)
(USE-ALL-LOOP-FUNCTION-IDP-2)
(ALL-LOOP-FUNCTION-IDP-OF-ADD-TO-SET-EQUAL)
(ALL-LOOP-FUNCTION-IDP)
(LOOP-FUNCTION-DESIGNATORP)
(ALL-LOOP-FUNCTION-DESIGNATORP
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-CONS)
(USE-ALL-LOOP-FUNCTION-DESIGNATORP-FOR-CAR)
(USE-ALL-LOOP-FUNCTION-DESIGNATORP-FOR-CAR-OF-LAST)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-APPEND)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-UNION-EQUAL)
(ALL-LOOP-FUNCTION-DESIGNATORP-WHEN-NOT-CONSP)
(ALL-LOOP-FUNCTION-DESIGNATORP-WHEN-NOT-CONSP-CHEAP)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-REVAPPEND)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-CDR)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-NTHCDR)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-FIRSTN)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-REMOVE1-EQUAL)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-REMOVE-EQUAL)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-LAST)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-TAKE)
(ALL-LOOP-FUNCTION-DESIGNATORP-WHEN-PERM)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-LOOP-FUNCTION-DESIGNATORP-1)
(USE-ALL-LOOP-FUNCTION-DESIGNATORP)
(USE-ALL-LOOP-FUNCTION-DESIGNATORP-2)
(ALL-LOOP-FUNCTION-DESIGNATORP-OF-ADD-TO-SET-EQUAL)
(ALL-LOOP-FUNCTION-DESIGNATORP)
(ELABORATE-LOOP-FUNCTION-ID)
(LOOP-FUNCTION-DESIGNATORP-OF-ELABORATE-LOOP-ID
 (19 19 (:TYPE-PRESCRIPTION ELABORATE-LOOP-ID))
 (5 5 (:REWRITE USE-ALL-LOOP-DESIGNATORP-2))
 (5 5 (:REWRITE USE-ALL-LOOP-DESIGNATORP))
 (1 1 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-2))
 (1 1 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP))
 (1 1 (:REWRITE USE-ALL-CLASS-NAMESP-2))
 (1 1 (:REWRITE USE-ALL-CLASS-NAMESP))
 (1 1 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-WHEN-MV-NTH-0-OF-RESOLVE-METHOD))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-WHEN-BOUND-IN-CLASS-TABLEP))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-CONSTANT-OPENER))
 )
(ELABORATE-LOOP-FUNCTION-IDS
 (8 1 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (3 1 (:TYPE-PRESCRIPTION ELABORATE-LOOP-FUNCTION-ID))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (1 1 (:REWRITE USE-ALL-CONSP-2))
 (1 1 (:REWRITE USE-ALL-CONSP))
 (1 1 (:REWRITE USE-ALL-CLASS-NAMESP-2))
 (1 1 (:REWRITE USE-ALL-CLASS-NAMESP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (1 1 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (1 1 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (1 1 (:REWRITE LEN-GIVES-CONSP))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (1 1 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (1 1 (:REWRITE CONSP-FROM-LEN-BOUND))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-WHEN-MV-NTH-0-OF-RESOLVE-METHOD))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-WHEN-BOUND-IN-CLASS-TABLEP))
 (1 1 (:REWRITE JVM::CLASS-NAMEP-CONSTANT-OPENER))
 (1 1 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1 1 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP))
 (1 1 (:META LEN-CONS-META-RULE))
 )
(ELABORATE-LOOP-FUNCTION-IDS-IN-DOUBLETS
 (598 299 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (413 30 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (413 17 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP))
 (410 82 (:REWRITE DEFAULT-CAR))
 (299 299 (:TYPE-PRESCRIPTION NAT-LISTP))
 (196 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (103 103 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (103 103 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (99 99 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (99 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (93 39 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (93 4 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR))
 (91 91 (:REWRITE USE-ALL-CONSP-2))
 (91 91 (:REWRITE USE-ALL-CONSP))
 (91 91 (:REWRITE LEN-GIVES-CONSP))
 (91 91 (:REWRITE CONSP-FROM-LEN-BOUND))
 (87 13 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (82 82 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (69 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (64 22 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (64 22 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (62 1 (:DEFINITION STRIP-CADRS))
 (60 30 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (59 35 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (56 28 (:REWRITE DEFAULT-CDR))
 (51 28 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (50 10 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (44 22 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (42 42 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (42 42 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (39 39 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (39 39 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (39 39 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (39 39 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (39 39 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (39 39 (:META LEN-CONS-META-RULE))
 (38 17 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP))
 (38 1 (:DEFINITION ELABORATE-LOOP-FUNCTION-IDS))
 (36 3 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (32 32 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (30 30 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (30 16 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (30 10 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (28 28 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (28 28 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (27 27 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (27 27 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (22 22 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (22 22 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (22 22 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (22 22 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (22 1 (:DEFINITION ELABORATE-LOOP-FUNCTION-ID))
 (20 20 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (20 20 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 10 (:REWRITE ALISTP-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PAIR-LISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (20 10 (:REWRITE ALIST-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (19 19 (:TYPE-PRESCRIPTION VAR-UNTRANSLATED-TERM-PAIRSP))
 (19 19 (:TYPE-PRESCRIPTION UNTRANSLATED-TERM-PAIRSP))
 (19 19 (:TYPE-PRESCRIPTION PAIR-LISTP))
 (18 9 (:REWRITE ALL->=-LEN-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (18 9 (:REWRITE ALL->=-LEN-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (18 9 (:REWRITE ALL->=-LEN-WHEN-PAIR-LISTP-CHEAP))
 (17 17 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (17 17 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (17 17 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (17 17 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (17 17 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (17 17 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (17 17 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (17 17 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (17 17 (:REWRITE IMPOSSIBLE-VALUE-2))
 (17 17 (:REWRITE IMPOSSIBLE-VALUE-1))
 (17 17 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (16 16 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (16 16 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (16 16 (:REWRITE EQUAL-WHEN-BVLT))
 (16 16 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (16 16 (:REWRITE EQUAL-WHEN-<-OF-+))
 (16 16 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (16 16 (:REWRITE CLR-DIFFERENTIAL))
 (16 8 (:REWRITE NOT-<-WHEN-SBVLT))
 (16 8 (:REWRITE DEFAULT-<-1))
 (16 8 (:REWRITE ARITH-HACK-CHEAP))
 (13 13 (:REWRITE WFR-HACK5))
 (13 13 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (13 1 (:DEFINITION ELABORATE-LOOP-ID))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (9 9 (:REWRITE USE-ALL-CLASS-NAMESP-2))
 (9 9 (:REWRITE USE-ALL-CLASS-NAMESP))
 (9 9 (:REWRITE JVM::CLASS-NAMEP-WHEN-MV-NTH-0-OF-RESOLVE-METHOD))
 (9 9 (:REWRITE JVM::CLASS-NAMEP-WHEN-BOUND-IN-CLASS-TABLEP))
 (9 9 (:REWRITE JVM::CLASS-NAMEP-CONSTANT-OPENER))
 (9 9 (:REWRITE ALL->=-LEN-WHEN-ITEMS-HAVE-LEN))
 (8 8 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (8 8 (:REWRITE USE-ALL-<=-2))
 (8 8 (:REWRITE USE-ALL-<=))
 (8 8 (:REWRITE USE-ALL-<-2))
 (8 8 (:REWRITE USE-ALL-<))
 (8 8 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (8 8 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (8 8 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (8 8 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (8 8 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (8 8 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (8 8 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (8 8 (:REWRITE INEQ-HACK2))
 (8 8 (:REWRITE INEQ-HACK))
 (8 8 (:REWRITE DROP-LINEAR-HYPS3))
 (8 8 (:REWRITE DROP-LINEAR-HYPS2))
 (8 8 (:REWRITE DROP->-HYPS))
 (8 8 (:REWRITE DROP-<=-HYPS))
 (8 8 (:REWRITE DROP-<-HYPS))
 (8 8 (:REWRITE DEFAULT-<-2))
 (8 8 (:REWRITE BOUND-WHEN-USB2))
 (8 8 (:REWRITE BOUND-WHEN-USB))
 (8 8 (:REWRITE ARRAY-DIM-BOUND))
 (8 8 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (8 8 (:REWRITE <-WHEN-BVLT))
 (8 8 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (8 8 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (8 8 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (8 8 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (8 8 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (8 8 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (8 8 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (8 8 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (8 8 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (8 8 (:REWRITE <-FROM-<=-FREE))
 (5 1 (:REWRITE USE-ALL-LOOP-DESIGNATORP-FOR-CAR))
 (4 4 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-2))
 (4 4 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP))
 (4 4 (:LINEAR POSITION-EQUAL-BOUND))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 (3 1 (:REWRITE JVM::PCP-OF-CAR))
 (2 2 (:TYPE-PRESCRIPTION ALL-PCP))
 (2 2 (:TYPE-PRESCRIPTION ALL-LOOP-DESIGNATORP))
 (2 1 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION JVM::PCP))
 (1 1 (:TYPE-PRESCRIPTION LOOP-DESIGNATORP))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:REWRITE USE-ALL-LOOP-DESIGNATORP-2))
 (1 1 (:REWRITE USE-ALL-LOOP-DESIGNATORP))
 (1 1 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE ALL-LOOP-DESIGNATORP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-LOOP-DESIGNATORP-WHEN-NOT-CONSP))
 )
(LOOKUP-LOOP-FUNCTION
 (292 2 (:REWRITE ASSOC-EQUAL-WHEN-MEMBER-EQUAL-OF-STRIP-CARS))
 (198 6 (:DEFINITION STRIP-CARS))
 (198 2 (:REWRITE MEMBER-EQUAL-OF-STRIP-CARS-WHEN-MEMBER-EQUAL-OF-HONS-DUPLICATED-MEMBERS-AUX))
 (188 2 (:REWRITE MEMBER-EQUAL-OF-HONS-DUPLICATED-MEMBERS-AUX))
 (114 2 (:DEFINITION NO-DUPLICATESP-EQUAL))
 (90 12 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (46 1 (:REWRITE ALL-LOOP-FUNCTION-DESIGNATORP-WHEN-NOT-CONSP))
 (44 14 (:REWRITE DEFAULT-CAR))
 (32 2 (:REWRITE SUBSETP-CAR-MEMBER))
 (25 25 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (25 25 (:REWRITE USE-ALL-CONSP-2))
 (25 25 (:REWRITE USE-ALL-CONSP))
 (25 25 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (25 25 (:REWRITE LEN-GIVES-CONSP))
 (25 25 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (25 25 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (25 25 (:REWRITE CONSP-FROM-LEN-BOUND))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (24 2 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (22 2 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (20 10 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (20 2 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (20 2 (:REWRITE MEMBER-WHEN-ATOM))
 (18 2 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (14 14 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 (12 12 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (10 10 (:TYPE-PRESCRIPTION NO-DUPLICATESP-EQUAL))
 (10 10 (:TYPE-PRESCRIPTION LEN))
 (10 10 (:REWRITE DEFAULT-CDR))
 (10 10 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (10 2 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (9 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (6 6 (:REWRITE WFR-HACK5))
 (6 6 (:REWRITE SUBSETP-MEMBER . 2))
 (6 6 (:REWRITE SUBSETP-MEMBER . 1))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 6 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 2 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (6 2 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (6 2 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (4 4 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (4 4 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (4 4 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (4 4 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (4 4 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (4 4 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (4 2 (:REWRITE ALISTP-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (4 2 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE ALISTP-WHEN-PAIR-LISTP-CHEAP))
 (4 2 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (4 2 (:REWRITE ALIST-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION VAR-UNTRANSLATED-TERM-PAIRSP))
 (2 2 (:TYPE-PRESCRIPTION UNTRANSLATED-TERM-PAIRSP))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (2 2 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION PAIR-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (2 2 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (2 2 (:REWRITE USE-ALL-RULE-ALISTP))
 (2 2 (:REWRITE USE-ALL-ALISTP-2))
 (2 2 (:REWRITE USE-ALL-ALISTP))
 (2 2 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (2 2 (:REWRITE SUBSETP-TRANS2))
 (2 2 (:REWRITE SUBSETP-TRANS))
 (2 2 (:REWRITE SUBSETP-MEMBER . 4))
 (2 2 (:REWRITE SUBSETP-MEMBER . 3))
 (2 2 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (2 2 (:REWRITE INTERSECTP-MEMBER . 3))
 (2 2 (:REWRITE INTERSECTP-MEMBER . 2))
 (2 2 (:REWRITE ASSOC-EQUAL-WHEN-SUBSETP-EQUAL-OF-STRIP-CARS))
 (2 2 (:REWRITE ASSOC-EQUAL-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE ASSOC-EQUAL-WHEN-LOOKUP-EQUAL-CHEAP))
 (2 2 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (2 2 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE ALISTP-CONSTANT-OPENER))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 1 (:REWRITE ALL-LOOP-FUNCTION-DESIGNATORP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:REWRITE USE-ALL-LOOP-DESIGNATORP-2))
 (1 1 (:REWRITE USE-ALL-LOOP-DESIGNATORP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 )
(MEASURE-ITEMP)
(ALL-MEASURE-ITEMP)
(MEASURESP)
(ELABORATE-MEASURES-OPTION)
(MEASURE-HINTSP
 (396 198 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (273 24 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (198 198 (:TYPE-PRESCRIPTION NAT-LISTP))
 (196 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (99 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (69 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (55 9 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (50 10 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (48 24 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (46 20 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (36 3 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (35 35 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (35 35 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (31 31 (:REWRITE USE-ALL-CONSP-2))
 (31 31 (:REWRITE USE-ALL-CONSP))
 (31 31 (:REWRITE LEN-GIVES-CONSP))
 (31 31 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (31 31 (:REWRITE CONSP-FROM-LEN-BOUND))
 (30 10 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (28 28 (:REWRITE DEFAULT-CAR))
 (28 28 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (24 24 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (24 24 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (24 24 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (24 24 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (24 24 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (24 24 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (22 11 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (22 11 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (20 20 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (20 20 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 20 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (20 20 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (20 20 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (20 20 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (20 20 (:META LEN-CONS-META-RULE))
 (20 10 (:REWRITE ALISTP-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PAIR-LISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (20 10 (:REWRITE ALIST-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (18 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (18 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (15 10 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (13 13 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (13 13 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (12 12 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (12 12 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (11 11 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (11 11 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (11 11 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (11 11 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (11 11 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (11 11 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (11 11 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (11 11 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (11 11 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (11 11 (:REWRITE IMPOSSIBLE-VALUE-2))
 (11 11 (:REWRITE IMPOSSIBLE-VALUE-1))
 (11 11 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (11 11 (:REWRITE EQUAL-WHEN-BVLT))
 (11 11 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (11 11 (:REWRITE EQUAL-WHEN-<-OF-+))
 (11 11 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (11 11 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (11 11 (:REWRITE CLR-DIFFERENTIAL))
 (10 10 (:TYPE-PRESCRIPTION VAR-UNTRANSLATED-TERM-PAIRSP))
 (10 10 (:TYPE-PRESCRIPTION UNTRANSLATED-TERM-PAIRSP))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION PAIR-LISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE DEFAULT-CDR))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (8 8 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (6 6 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:LINEAR POSITION-EQUAL-BOUND))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 )
(LOOP-GUARDSP
 (396 198 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (273 24 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (198 198 (:TYPE-PRESCRIPTION NAT-LISTP))
 (196 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (99 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (69 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (55 9 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (50 10 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (48 24 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (46 20 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (36 3 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (35 35 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (35 35 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (31 31 (:REWRITE USE-ALL-CONSP-2))
 (31 31 (:REWRITE USE-ALL-CONSP))
 (31 31 (:REWRITE LEN-GIVES-CONSP))
 (31 31 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (31 31 (:REWRITE CONSP-FROM-LEN-BOUND))
 (30 10 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (28 28 (:REWRITE DEFAULT-CAR))
 (28 28 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (24 24 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (24 24 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (24 24 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (24 24 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (24 24 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (24 24 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (22 11 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (22 11 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (21 21 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (20 20 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (20 20 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 20 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (20 20 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (20 20 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (20 20 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (20 20 (:META LEN-CONS-META-RULE))
 (20 10 (:REWRITE ALISTP-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PAIR-LISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (20 10 (:REWRITE ALIST-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (18 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (18 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (15 10 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (13 13 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (13 13 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (12 12 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (12 12 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (11 11 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (11 11 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (11 11 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (11 11 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (11 11 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (11 11 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (11 11 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (11 11 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (11 11 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (11 11 (:REWRITE IMPOSSIBLE-VALUE-2))
 (11 11 (:REWRITE IMPOSSIBLE-VALUE-1))
 (11 11 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (11 11 (:REWRITE EQUAL-WHEN-BVLT))
 (11 11 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (11 11 (:REWRITE EQUAL-WHEN-<-OF-+))
 (11 11 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (11 11 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (11 11 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (11 11 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (11 11 (:REWRITE CLR-DIFFERENTIAL))
 (10 10 (:TYPE-PRESCRIPTION VAR-UNTRANSLATED-TERM-PAIRSP))
 (10 10 (:TYPE-PRESCRIPTION UNTRANSLATED-TERM-PAIRSP))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION PAIR-LISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE DEFAULT-CDR))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (8 8 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (6 6 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:LINEAR POSITION-EQUAL-BOUND))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 )
(ALL-UNTRANSLATED-TERM-LISTP
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-UNTRANSLATED-TERM-LISTP-OF-CONS)
(USE-ALL-UNTRANSLATED-TERM-LISTP-FOR-CAR)
(USE-ALL-UNTRANSLATED-TERM-LISTP-FOR-CAR-OF-LAST)
(ALL-UNTRANSLATED-TERM-LISTP-OF-APPEND)
(ALL-UNTRANSLATED-TERM-LISTP-OF-UNION-EQUAL)
(ALL-UNTRANSLATED-TERM-LISTP-WHEN-NOT-CONSP)
(ALL-UNTRANSLATED-TERM-LISTP-WHEN-NOT-CONSP-CHEAP)
(ALL-UNTRANSLATED-TERM-LISTP-OF-REVAPPEND)
(ALL-UNTRANSLATED-TERM-LISTP-OF-CDR)
(ALL-UNTRANSLATED-TERM-LISTP-OF-NTHCDR)
(ALL-UNTRANSLATED-TERM-LISTP-OF-FIRSTN)
(ALL-UNTRANSLATED-TERM-LISTP-OF-REMOVE1-EQUAL)
(ALL-UNTRANSLATED-TERM-LISTP-OF-REMOVE-EQUAL)
(ALL-UNTRANSLATED-TERM-LISTP-OF-LAST)
(ALL-UNTRANSLATED-TERM-LISTP-OF-TAKE)
(ALL-UNTRANSLATED-TERM-LISTP-WHEN-PERM)
(ALL-UNTRANSLATED-TERM-LISTP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-UNTRANSLATED-TERM-LISTP-1)
(USE-ALL-UNTRANSLATED-TERM-LISTP)
(USE-ALL-UNTRANSLATED-TERM-LISTP-2)
(ALL-UNTRANSLATED-TERM-LISTP-OF-ADD-TO-SET-EQUAL)
(ALL-UNTRANSLATED-TERM-LISTP)
(INVARIANTSP
 (516 258 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (396 30 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (258 258 (:TYPE-PRESCRIPTION NAT-LISTP))
 (196 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (196 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP))
 (189 61 (:REWRITE DEFAULT-CAR))
 (99 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (89 37 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (87 13 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (73 73 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (73 73 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (69 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (65 65 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (62 62 (:REWRITE USE-ALL-CONSP-2))
 (62 62 (:REWRITE USE-ALL-CONSP))
 (62 62 (:REWRITE LEN-GIVES-CONSP))
 (62 62 (:REWRITE CONSP-FROM-LEN-BOUND))
 (62 10 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (61 61 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (60 30 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (50 10 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (39 25 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (39 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (39 13 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (37 37 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (37 37 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (37 37 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (37 37 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (37 37 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (37 37 (:META LEN-CONS-META-RULE))
 (36 3 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (31 18 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (30 30 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (30 10 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (29 16 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (27 27 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (27 27 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (26 26 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (26 26 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (26 26 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (26 26 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (26 13 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (26 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR))
 (22 22 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (20 20 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (20 20 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 10 (:REWRITE ALISTP-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PAIR-LISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (20 10 (:REWRITE ALIST-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (18 18 (:REWRITE DEFAULT-CDR))
 (17 17 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (17 17 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (17 17 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (17 17 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (17 17 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (17 17 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (17 17 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (17 17 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (17 17 (:REWRITE IMPOSSIBLE-VALUE-2))
 (17 17 (:REWRITE IMPOSSIBLE-VALUE-1))
 (16 16 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (16 16 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (16 16 (:REWRITE EQUAL-WHEN-BVLT))
 (16 16 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (16 16 (:REWRITE EQUAL-WHEN-<-OF-+))
 (16 16 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (16 16 (:REWRITE CLR-DIFFERENTIAL))
 (16 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP))
 (15 15 (:TYPE-PRESCRIPTION VAR-UNTRANSLATED-TERM-PAIRSP))
 (15 15 (:TYPE-PRESCRIPTION UNTRANSLATED-TERM-PAIRSP))
 (15 15 (:TYPE-PRESCRIPTION PAIR-LISTP))
 (13 13 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (13 13 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (13 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (13 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (12 6 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 6 (:REWRITE DEFAULT-<-1))
 (12 6 (:REWRITE ARITH-HACK-CHEAP))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (10 5 (:REWRITE ALL->=-LEN-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (10 5 (:REWRITE ALL->=-LEN-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (10 5 (:REWRITE ALL->=-LEN-WHEN-PAIR-LISTP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:REWRITE WFR-HACK5))
 (6 6 (:REWRITE USE-ALL-<=-2))
 (6 6 (:REWRITE USE-ALL-<=))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (6 6 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (6 6 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (6 6 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (6 6 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (6 6 (:REWRITE INEQ-HACK2))
 (6 6 (:REWRITE INEQ-HACK))
 (6 6 (:REWRITE DROP-LINEAR-HYPS3))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<=-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE BOUND-WHEN-USB))
 (6 6 (:REWRITE ARRAY-DIM-BOUND))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (6 6 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (6 6 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (6 6 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (5 5 (:REWRITE ALL->=-LEN-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:LINEAR POSITION-EQUAL-BOUND))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-2))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP))
 )
(ALL-NAT-LISTP
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 )
(ALL-NAT-LISTP-OF-CONS)
(USE-ALL-NAT-LISTP-FOR-CAR)
(USE-ALL-NAT-LISTP-FOR-CAR-OF-LAST)
(ALL-NAT-LISTP-OF-APPEND)
(ALL-NAT-LISTP-OF-UNION-EQUAL)
(ALL-NAT-LISTP-WHEN-NOT-CONSP)
(ALL-NAT-LISTP-WHEN-NOT-CONSP-CHEAP)
(ALL-NAT-LISTP-OF-REVAPPEND)
(ALL-NAT-LISTP-OF-CDR)
(ALL-NAT-LISTP-OF-NTHCDR)
(ALL-NAT-LISTP-OF-FIRSTN)
(ALL-NAT-LISTP-OF-REMOVE1-EQUAL)
(ALL-NAT-LISTP-OF-REMOVE-EQUAL)
(ALL-NAT-LISTP-OF-LAST)
(ALL-NAT-LISTP-OF-TAKE)
(ALL-NAT-LISTP-WHEN-PERM)
(ALL-NAT-LISTP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-NAT-LISTP-1)
(USE-ALL-NAT-LISTP)
(USE-ALL-NAT-LISTP-2)
(ALL-NAT-LISTP-OF-ADD-TO-SET-EQUAL)
(ALL-NAT-LISTP)
(EXCLUDED-LOCALSP
 (516 258 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (396 30 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (258 258 (:TYPE-PRESCRIPTION NAT-LISTP))
 (196 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (196 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP))
 (189 61 (:REWRITE DEFAULT-CAR))
 (99 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (89 37 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (87 13 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (73 73 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (73 73 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (69 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (65 65 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (62 62 (:REWRITE USE-ALL-CONSP-2))
 (62 62 (:REWRITE USE-ALL-CONSP))
 (62 62 (:REWRITE LEN-GIVES-CONSP))
 (62 62 (:REWRITE CONSP-FROM-LEN-BOUND))
 (62 10 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (61 61 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (60 30 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (50 10 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (39 25 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (39 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (39 13 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (37 37 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (37 37 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (37 37 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (37 37 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (37 37 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (37 37 (:META LEN-CONS-META-RULE))
 (36 3 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (31 18 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (30 30 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (30 10 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (29 16 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (27 27 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (27 27 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (26 26 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (26 26 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (26 26 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (26 26 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (26 13 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (26 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR))
 (22 22 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (20 20 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (20 20 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 10 (:REWRITE ALISTP-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PAIR-LISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (20 10 (:REWRITE ALIST-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (18 18 (:REWRITE DEFAULT-CDR))
 (17 17 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (17 17 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (17 17 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (17 17 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (17 17 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (17 17 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (17 17 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (17 17 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (17 17 (:REWRITE IMPOSSIBLE-VALUE-2))
 (17 17 (:REWRITE IMPOSSIBLE-VALUE-1))
 (16 16 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (16 16 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (16 16 (:REWRITE EQUAL-WHEN-BVLT))
 (16 16 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (16 16 (:REWRITE EQUAL-WHEN-<-OF-+))
 (16 16 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (16 16 (:REWRITE CLR-DIFFERENTIAL))
 (16 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP))
 (15 15 (:TYPE-PRESCRIPTION VAR-UNTRANSLATED-TERM-PAIRSP))
 (15 15 (:TYPE-PRESCRIPTION UNTRANSLATED-TERM-PAIRSP))
 (15 15 (:TYPE-PRESCRIPTION PAIR-LISTP))
 (13 13 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (13 13 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (13 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (13 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (12 6 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 6 (:REWRITE DEFAULT-<-1))
 (12 6 (:REWRITE ARITH-HACK-CHEAP))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (10 5 (:REWRITE ALL->=-LEN-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (10 5 (:REWRITE ALL->=-LEN-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (10 5 (:REWRITE ALL->=-LEN-WHEN-PAIR-LISTP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:REWRITE WFR-HACK5))
 (6 6 (:REWRITE USE-ALL-<=-2))
 (6 6 (:REWRITE USE-ALL-<=))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (6 6 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (6 6 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (6 6 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (6 6 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (6 6 (:REWRITE INEQ-HACK2))
 (6 6 (:REWRITE INEQ-HACK))
 (6 6 (:REWRITE DROP-LINEAR-HYPS3))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<=-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE BOUND-WHEN-USB))
 (6 6 (:REWRITE ARRAY-DIM-BOUND))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (6 6 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (6 6 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (6 6 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (5 5 (:REWRITE ALL->=-LEN-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:LINEAR POSITION-EQUAL-BOUND))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-2))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP))
 )
(POSTLUDESP
 (516 258 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (396 30 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (258 258 (:TYPE-PRESCRIPTION NAT-LISTP))
 (196 10 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (196 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP))
 (189 61 (:REWRITE DEFAULT-CAR))
 (99 10 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (89 37 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (87 13 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (73 73 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (73 73 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (69 10 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (65 65 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (62 62 (:REWRITE USE-ALL-CONSP-2))
 (62 62 (:REWRITE USE-ALL-CONSP))
 (62 62 (:REWRITE LEN-GIVES-CONSP))
 (62 62 (:REWRITE CONSP-FROM-LEN-BOUND))
 (62 10 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (61 61 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (60 30 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (50 10 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (39 25 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (39 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (39 13 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (37 37 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (37 37 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (37 37 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (37 37 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (37 37 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (37 37 (:META LEN-CONS-META-RULE))
 (36 3 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (31 18 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (30 30 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (30 30 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (30 10 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (30 10 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (30 10 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (29 16 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (27 27 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (27 27 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (26 26 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (26 26 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (26 26 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (26 26 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (26 13 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (26 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-FOR-CAR))
 (22 22 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (20 20 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (20 20 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (20 20 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (20 20 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (20 20 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (20 10 (:REWRITE ALISTP-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-PAIR-LISTP-CHEAP))
 (20 10 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (20 10 (:REWRITE ALIST-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (18 18 (:REWRITE DEFAULT-CDR))
 (17 17 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (17 17 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (17 17 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (17 17 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (17 17 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (17 17 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (17 17 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (17 17 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (17 17 (:REWRITE IMPOSSIBLE-VALUE-2))
 (17 17 (:REWRITE IMPOSSIBLE-VALUE-1))
 (16 16 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (16 16 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (16 16 (:REWRITE EQUAL-WHEN-BVLT))
 (16 16 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (16 16 (:REWRITE EQUAL-WHEN-<-OF-+))
 (16 16 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (16 16 (:REWRITE CLR-DIFFERENTIAL))
 (16 9 (:REWRITE ALL-LOOP-FUNCTION-IDP-WHEN-NOT-CONSP-CHEAP))
 (15 15 (:TYPE-PRESCRIPTION VAR-UNTRANSLATED-TERM-PAIRSP))
 (15 15 (:TYPE-PRESCRIPTION UNTRANSLATED-TERM-PAIRSP))
 (15 15 (:TYPE-PRESCRIPTION PAIR-LISTP))
 (13 13 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (13 13 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (13 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (13 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (12 6 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 6 (:REWRITE DEFAULT-<-1))
 (12 6 (:REWRITE ARITH-HACK-CHEAP))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (10 10 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-RULE-ALISTP))
 (10 10 (:REWRITE USE-ALL-ALISTP-2))
 (10 10 (:REWRITE USE-ALL-ALISTP))
 (10 10 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (10 10 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (10 10 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (10 10 (:REWRITE ALISTP-CONSTANT-OPENER))
 (10 5 (:REWRITE ALL->=-LEN-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (10 5 (:REWRITE ALL->=-LEN-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (10 5 (:REWRITE ALL->=-LEN-WHEN-PAIR-LISTP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:REWRITE WFR-HACK5))
 (6 6 (:REWRITE USE-ALL-<=-2))
 (6 6 (:REWRITE USE-ALL-<=))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (6 6 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (6 6 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (6 6 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (6 6 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (6 6 (:REWRITE INEQ-HACK2))
 (6 6 (:REWRITE INEQ-HACK))
 (6 6 (:REWRITE DROP-LINEAR-HYPS3))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<=-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE BOUND-WHEN-USB))
 (6 6 (:REWRITE ARRAY-DIM-BOUND))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (6 6 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (6 6 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (6 6 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (5 5 (:REWRITE ALL->=-LEN-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:LINEAR POSITION-EQUAL-BOUND))
 (3 3 (:REWRITE ALISTP-OF-CDR))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP-2))
 (2 2 (:REWRITE USE-ALL-LOOP-FUNCTION-IDP))
 )
(COMPARISON)
(STATE-COMPONENT-EXTRACTION-RULES)
(SBVLT-RULES)
(TYPE-RULES2)
(MAKE-PC-DESIGNATOR$NOT-NORMALIZED)
(MAKE-PC-DESIGNATOR-CONSTANT-OPENER)
(RUN-UNTIL-EXIT-SEGMENT-OR-HIT-LOOP-HEADER-RULES-SPLIT)
(RUN-UNTIL-EXIT-SEGMENT-OR-HIT-LOOP-HEADER-RULES-SMART)
(RUN-UNTIL-EXIT-SEGMENT-RULES)
(LIFTER-RULES)
(MAKE-ALIST-BY-SECONDS
 (34 17 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (17 17 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(SEPARATE-PAIRS-BY-CLASS-NAME-AND-FIELD-NAME)
(NEGATE-DAG)
(MAKE-DISEQUALITY-DAG)
(ADS-DONT-ALIASP)
(AD-DOESNT-ALIAS-ANYP)
(NO-ALIASES-IN-SETP)
(NO-ALIASES-IN-SETSP)
(NO-ALIASESP)
(PROCESS-REPLACEMENT-ALIST
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-TOP-NODENUM-WHEN-PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(PERFORM-REPLACEMENTS
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-TOP-NODENUM-WHEN-PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (2 1 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (1 1 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (1 1 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(PERFORM-REPLACEMENTS-ON-CDRS
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(JVM-DESTRUCTOR-FNS)
(VARS-OF-ALL-ITEMS
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (1 1 (:TYPE-PRESCRIPTION TRUE-LISTP))
 )
(MAKE-DAG-VAR-ARRAY-AUX
 (48 24 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (24 24 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-DAG-VAR-ARRAY)
(FIND-NODENUM-OF-SI-DAG-TO-REPLACE
 (38 19 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (19 19 (:TYPE-PRESCRIPTION NAT-LISTP))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(LOOKUP-PARAMS
 (22 9 (:REWRITE DEFAULT-<-2))
 (22 9 (:REWRITE DEFAULT-<-1))
 (16 2 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (14 14 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (14 14 (:REWRITE ARRAY-DIM-BOUND))
 (14 14 (:REWRITE ARITH-HACK-CHEAP))
 (14 14 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (13 13 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (13 13 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (13 13 (:REWRITE INEQ-HACK2))
 (13 13 (:REWRITE INEQ-HACK))
 (13 13 (:REWRITE DROP-LINEAR-HYPS3))
 (13 13 (:REWRITE DROP-LINEAR-HYPS2))
 (13 13 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (13 13 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (12 9 (:REWRITE NOT-<-WHEN-SBVLT))
 (11 11 (:REWRITE DROP->-HYPS))
 (11 11 (:REWRITE DROP-<=-HYPS))
 (11 11 (:REWRITE DROP-<-HYPS))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (9 9 (:REWRITE USE-ALL-<=-2))
 (9 9 (:REWRITE USE-ALL-<=))
 (9 9 (:REWRITE USE-ALL-<-2))
 (9 9 (:REWRITE USE-ALL-<))
 (9 9 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (9 9 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (9 9 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (9 9 (:REWRITE DEFAULT-+-2))
 (9 9 (:REWRITE DEFAULT-+-1))
 (9 9 (:REWRITE BOUND-WHEN-USB2))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 9 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (9 9 (:REWRITE <-WHEN-BVLT))
 (9 9 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (9 9 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (9 9 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (9 9 (:REWRITE <-FROM-<=-FREE))
 (9 9 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (8 8 (:REWRITE DROP-LINEAR-HYPS1))
 (8 8 (:REWRITE BOUND-LEMMA))
 (6 6 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (6 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (5 5 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (5 5 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (5 5 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (5 5 (:REWRITE ARRAY-DIM-IS-INTEGERP))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (4 4 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (4 4 (:REWRITE +-OF-MINUS))
 (3 3 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (3 3 (:REWRITE USE-ALL-NATP-2))
 (3 3 (:REWRITE USE-ALL-NATP))
 (3 3 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (2 2 (:REWRITE USE-ALL-RATIONALP-2))
 (2 2 (:REWRITE USE-ALL-RATIONALP))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE <-OF-NEGATIVE-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 )
(ALL-PSEUDO-DAGP-OR-MYQUOTEP
 (10 5 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (5 5 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ADD-TO-DAG-ALLOWS-CONSTANTS
 (2216 1108 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1915 2 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (1316 1 (:DEFINITION AXE-TREEP))
 (1183 3 (:DEFINITION PSEUDO-TERMP))
 (1108 1108 (:TYPE-PRESCRIPTION NAT-LISTP))
 (509 1 (:REWRITE AXE-TREEP-WHEN-PSEUDO-TERMP))
 (381 35 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (306 9 (:REWRITE EQUAL-OF-+-WHEN-NEGATIVE-CONSTANT))
 (276 105 (:REWRITE USE-ALL-CONSP))
 (235 16 (:REWRITE WEAK-DAGP-AUX-WHEN-PSEUDO-DAGP-AUX-2))
 (222 26 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP))
 (192 3 (:DEFINITION SYMBOL-LISTP))
 (190 16 (:REWRITE PSEUDO-DAGP-AUX-WHEN-NOT-CONSP-CHEAP))
 (166 85 (:REWRITE DEFAULT-CAR))
 (140 58 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (136 136 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (132 4 (:LINEAR LEN-OF-CDR-LINEAR-STRONG))
 (130 130 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (126 6 (:DEFINITION LENGTH))
 (121 113 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (116 4 (:LINEAR LEN-OF-CDR-LINEAR))
 (114 58 (:REWRITE DEFAULT-CDR))
 (113 113 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (113 113 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (113 113 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (113 113 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (113 113 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (113 113 (:META LEN-CONS-META-RULE))
 (105 105 (:REWRITE USE-ALL-CONSP-2))
 (105 105 (:REWRITE LEN-GIVES-CONSP))
 (105 105 (:REWRITE CONSP-FROM-LEN-BOUND))
 (103 10 (:REWRITE DEFAULT-<-1))
 (93 59 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (85 85 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (82 1 (:REWRITE AXE-TREEP-WHEN-DARGP))
 (78 78 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (76 26 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (73 43 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (72 36 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (72 36 (:TYPE-PRESCRIPTION NATP-OF-TOP-NODENUM-WHEN-PSEUDO-DAGP))
 (70 35 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (69 2 (:REWRITE ALL-AXE-TREEP-WHEN-PSEUDO-TERM-LISTP))
 (61 61 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (58 58 (:REWRITE CLR-DIFFERENTIAL))
 (53 2 (:DEFINITION PSEUDO-TERM-LISTP))
 (51 51 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (51 51 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (51 1 (:DEFINITION DARGP))
 (50 50 (:TYPE-PRESCRIPTION MEMBERP))
 (50 43 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (50 43 (:REWRITE IMPOSSIBLE-VALUE-2))
 (50 25 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (48 16 (:REWRITE WEAK-DAGP-AUX-WHEN-PSEUDO-DAGP))
 (47 47 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (47 47 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (47 3 (:REWRITE PSEUDO-TERMP-OF-CADDR))
 (46 1 (:REWRITE NOT-MYQUOTEP-WHEN-LEN-WRONG))
 (45 5 (:REWRITE ALL-MYQUOTEP-WHEN-NOT-CONSP))
 (43 43 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (43 43 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (43 43 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (43 43 (:REWRITE IMPOSSIBLE-VALUE-1))
 (43 43 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (43 43 (:REWRITE EQUAL-WHEN-BVLT))
 (43 43 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (43 43 (:REWRITE EQUAL-WHEN-<-OF-+))
 (43 43 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (43 43 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (43 43 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (43 43 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (43 43 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (43 43 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (43 43 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (43 43 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (43 43 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (43 43 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (43 43 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (43 43 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (43 43 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (43 28 (:REWRITE DEFAULT-+-2))
 (42 42 (:TYPE-PRESCRIPTION PSEUDO-TERMP))
 (42 3 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (41 41 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (40 1 (:REWRITE ALL-AXE-TREEP-OF-CDR-2))
 (36 2 (:REWRITE ALL-AXE-TREEP-WHEN-ALL-DARGP))
 (35 35 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (35 35 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (35 35 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (35 35 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (35 35 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (35 35 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (35 25 (:REWRITE DAG-EXPRP0-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (33 33 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (33 33 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (32 32 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (31 31 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (30 30 (:TYPE-PRESCRIPTION AXE-TREEP))
 (30 5 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (29 29 (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
 (29 29 (:TYPE-PRESCRIPTION PSEUDO-DAGP-AUX))
 (29 29 (:REWRITE ALL-DARGP-WHEN-ALL-DARGP-LESS-THAN))
 (28 28 (:REWRITE DEFAULT-+-1))
 (28 28 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (27 3 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (26 26 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (26 26 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP-CHEAP))
 (26 3 (:REWRITE FIX-OF-LEN))
 (25 25 (:TYPE-PRESCRIPTION ALL-NATP))
 (25 25 (:REWRITE DAG-EXPRP0-WHEN-BOUNDED-DAG-EXPRP))
 (25 25 (:REWRITE +-OF-MINUS))
 (23 23 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (23 19 (:REWRITE TRUE-LISTP-OF-DARGS-WHEN-DAG-EXPRP0))
 (21 17 (:REWRITE ALL-DARGP-OF-DARGS-WHEN-DAG-EXPRP0))
 (20 20 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (20 10 (:REWRITE MEMBERP-WHEN-SINGLETON-CHEAP))
 (20 10 (:REWRITE MEMBERP-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (20 10 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-CDR-CHEAP))
 (20 10 (:REWRITE JVM::MEMBER-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (20 1 (:REWRITE USE-ALL-DARGP))
 (19 19 (:REWRITE TRUE-LISTP-OF-DARGS-WHEN-BOUNDED-DAG-EXPRP-AND-CONSP))
 (19 19 (:REWRITE TRUE-LISTP-OF-DARGS-BETTER))
 (18 18 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (18 18 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (16 16 (:TYPE-PRESCRIPTION BOOLEANP))
 (16 16 (:REWRITE WFR-HACK5))
 (16 16 (:REWRITE WEAK-DAGP-AUX-WHEN-PSEUDO-DAGP-AUX))
 (16 16 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (16 10 (:REWRITE DEFAULT-<-2))
 (16 8 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP))
 (15 5 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (15 5 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (15 5 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (15 5 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (14 8 (:REWRITE ARITH-HACK-CHEAP))
 (14 7 (:REWRITE PSEUDO-TERMP-OF-CAR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (14 7 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP-CHEAP))
 (14 7 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP))
 (14 7 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (13 13 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (13 13 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (12 7 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (10 10 (:REWRITE USE-ALL-<-2))
 (10 10 (:REWRITE USE-ALL-<))
 (10 10 (:REWRITE NOT-MEMBERP-WHEN-MEMBERP-OF-TAKE))
 (10 10 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (10 10 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (10 10 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-2))
 (10 10 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-1))
 (10 10 (:REWRITE MEMBERP-WHEN-NOT-EQUAL-OF-CAR-CHEAP))
 (10 10 (:REWRITE MEMBERP-WHEN-NOT-CONS-OF-CDR-CHEAP))
 (10 10 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-FIRSTN))
 (10 10 (:REWRITE MEMBERP-OF-CONSTANT-WHEN-NOT-MEMBER-OF-CONSTANT))
 (10 10 (:REWRITE MEMBERP-CONSTANT-OPENER))
 (10 10 (:REWRITE FW-1))
 (10 10 (:REWRITE DROP-LINEAR-HYPS2))
 (10 10 (:REWRITE DROP->-HYPS))
 (10 10 (:REWRITE DROP-<-HYPS))
 (10 10 (:REWRITE BOUND-WHEN-USB2))
 (10 10 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (10 10 (:REWRITE <-WHEN-BVLT))
 (10 10 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (10 10 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (10 10 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (10 10 (:REWRITE <-FROM-<=-FREE))
 (10 5 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (8 8 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (8 8 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (8 8 (:REWRITE ARRAY-DIM-BOUND))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (8 4 (:REWRITE SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-ALISTP-CHEAP))
 (8 1 (:REWRITE ALL-DARGP-OF-CDR))
 (7 7 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (7 7 (:REWRITE USE-ALL-<=-2))
 (7 7 (:REWRITE USE-ALL-<=))
 (7 7 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (7 7 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (7 7 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (7 7 (:REWRITE NOT-<-WHEN-SBVLT))
 (7 7 (:REWRITE INEQ-HACK2))
 (7 7 (:REWRITE INEQ-HACK))
 (7 7 (:REWRITE DROP-LINEAR-HYPS3))
 (7 7 (:REWRITE DROP-<=-HYPS))
 (7 7 (:REWRITE BOUND-WHEN-USB))
 (7 7 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (7 7 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (7 7 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (7 7 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (6 6 (:TYPE-PRESCRIPTION ALL-AXE-TREEP))
 (6 6 (:REWRITE JVM::LEN-HACK))
 (6 6 (:REWRITE EQUAL-OF-+-COMBINE-CONSTANTS))
 (6 3 (:REWRITE SYMBOL-LISTP-OF-CADR-OF-CAR-WHEN-PSEUDO-TERMP-CHEAP))
 (6 3 (:REWRITE BV-3-2-1-HACKB))
 (5 5 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (5 5 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (5 5 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (5 5 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (5 5 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (5 5 (:REWRITE ALL-MYQUOTEP-WHEN-EVALUATABLE-FN-AND-ARGSP))
 (4 4 (:TYPE-PRESCRIPTION SYMBOL-ALISTP))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (4 2 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (3 3 (:TYPE-PRESCRIPTION BVLT))
 (3 3 (:REWRITE USE-ALL-RATIONALP-2))
 (3 3 (:REWRITE USE-ALL-RATIONALP))
 (3 3 (:REWRITE PSEUDO-TERMP-OF-LAMBDA-BODY-CHEAP))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (3 3 (:REWRITE EQUAL-OF-+-OF-MINUS-32))
 (3 3 (:REWRITE EQUAL-OF-+-OF-MINUS))
 (3 3 (:REWRITE BV-3-2-1-HACK))
 (3 3 (:REWRITE ARRAY-DIM-IS-INTEGERP))
 (3 3 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:DEFINITION NULL))
 (3 1 (:REWRITE DARGP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (3 1 (:REWRITE AXE-TREEP-WHEN-EQUAL-OF-CAR-AND-QUOTE-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (2 2 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE MYQUOTEP-WHEN-BOUNDED-DAG-EXPRP))
 (2 2 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (2 2 (:REWRITE <-SELF))
 (2 1 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (2 1 (:REWRITE ALL-AXE-TREEP-OF-CDR))
 (1 1 (:TYPE-PRESCRIPTION DARGP))
 (1 1 (:REWRITE USE-ALL-DARGP-2))
 (1 1 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (1 1 (:REWRITE DARGP-WHEN-NATP-CHEAP))
 (1 1 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 (1 1 (:REWRITE BV-1-0-HACK))
 (1 1 (:REWRITE AXE-TREEP-WHEN-SYMBOLP-CHEAP))
 (1 1 (:REWRITE AXE-TREEP-WHEN-NOT-CONSP-AND-NOT-SYMBOLP-CHEAP))
 )
(MAKE-CONS-NEST-DAG
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-TOP-NODENUM-WHEN-PSEUDO-DAGP))
 (1 1 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 )
(STORE-PARTIAL-LIFT)
(PARTIAL-LIFT-EVENT
 (428 214 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (214 214 (:TYPE-PRESCRIPTION ALL-NATP))
 )
(SWAP-PAIRS
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(STANDARD-HYPS)
(GET-DAG-PC)
(CODE-HYPS)
(BAD-ARRAY-ROW-TERMP
 (50 28 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (22 22 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-ADDRESSES-FROM-DAG
 (18 9 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (9 9 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-UNCHANGEDNESS-INVARIANTS-FOR-EXPRS)
(SIMPLIFY-ALL-TERMS-WITH-ASSUMPTION)
(PROVE-INVARIANT-CONJUNCTS)
(PROVE-CANDIDATE-INVARS)
(FILTER-CANDIDATE-INVARS-THAT-HOLD-INITIALLY-AUX)
(FILTER-CANDIDATE-INVARS-THAT-HOLD-INITIALLY)
(GET-PC-OF-NODENUM)
(STACK-HEIGHT-COMPARISON)
(STACK-HEIGHT-COMPARISON-FOR-NODENUM)
(REPLACE-STATES-WITH-T-AND-NIL)
(GET-TERMINATION-TEST-DAG)
(REPLACE-LOOP-STATES)
(REPLACE-NON-LOOP-STATES)
(GET-ONE-REP-DAG)
(GET-EXIT-DAG)
(GET-HEAP-DAG)
(GET-LOCAL-DAG)
(MAKE-LOOP-PARAMETERS-FOR-LOCALS)
(GET-HEAP-UPDATE-TRIPLES-AUX)
(GET-HEAP-UPDATE-TRIPLES)
(GET-HEAP-UPDATE-PAIRS-FROM-TRIPLES
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-LOOP-PARAMETERS-FOR-FIELDS
 (48 24 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (24 24 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-STATIC-FIELD-UPDATE-PAIRS-AUX)
(GET-STATIC-FIELD-UPDATE-PAIRS)
(MAKE-LOOP-PARAMETERS-FOR-STATIC-FIELDS
 (48 24 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (24 24 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LOOKUP-EQUIVALENT-DAG
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-READ-ONLY-PARAMS)
(FIND-READ-ONLY-PARAMS-LST)
(MAKE-REPLACEMENT-ALIST
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-NEW-VAL-DAGS-READ-ONLY
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LOOKUP-AND-UNION
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-UNION-EQUAL-TYPE))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION UNION-EQUAL))
 (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP))
 )
(GREATEST-NUM-LESS-THAN-OR-EQUAL
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LOOKUP-IN-LINE-NUMBER-TABLE
 (10 5 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (5 5 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(STRIP-SET-FIELD-CALLS
 (2358 1247 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1626 27 (:REWRITE DAG-EXPRP0-OF-LOOKUP-EQUAL-WHEN-PSEUDO-DAGP))
 (1172 1172 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1153 16 (:REWRITE JVM::EQLABLE-ALISTP-WHEN-ALISTP-AND-INTEGER-LISTP-OF-STRIP-CARS))
 (1061 76 (:REWRITE DEFAULT-<-1))
 (1030 8 (:DEFINITION EQLABLE-ALISTP))
 (1029 537 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (846 114 (:REWRITE INEQ-HACK2))
 (846 114 (:REWRITE INEQ-HACK))
 (670 9 (:REWRITE ACL2-NUMBERP-OF-NTH-OF-DARGS))
 (634 2 (:REWRITE DARGP-LESS-THAN-OF-NTH-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (552 552 (:TYPE-PRESCRIPTION ALL-NATP))
 (522 261 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (470 3 (:REWRITE USE-ALL-<-FOR-CAR))
 (384 2 (:REWRITE NATP-OF-NTH-OF-DARGS))
 (378 38 (:REWRITE DEFAULT-+-2))
 (324 33 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (309 17 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (298 3 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (292 21 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (283 8 (:REWRITE ALISTP-OF-CDR))
 (277 31 (:REWRITE ALISTP-WHEN-ITEMS-HAVE-LEN))
 (262 262 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (255 14 (:REWRITE ALL-<-OF-CDR))
 (250 15 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (246 4 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (229 31 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (214 2 (:REWRITE ALL-DARGP-LESS-THAN-OF-DARGS-OF-LOOKUP-EQUAL-WHEN-WEAK-DAGP))
 (209 4 (:REWRITE NOT-MYQUOTEP-WHEN-LEN-WRONG))
 (206 2 (:REWRITE ALL-DARGP-LESS-THAN-OF-DARGS-OF-LOOKUP-EQUAL))
 (200 11 (:REWRITE NAT-LISTP-OF-CDR))
 (187 25 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (182 16 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (177 69 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (175 21 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (164 164 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (164 164 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (164 164 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (150 12 (:REWRITE ALL-RATIONALP-OF-CDR))
 (149 149 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (149 149 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (149 149 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (149 149 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (149 149 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (149 149 (:META LEN-CONS-META-RULE))
 (146 26 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (141 75 (:REWRITE DEFAULT-CDR))
 (138 138 (:REWRITE LEN-GIVES-CONSP))
 (138 138 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (138 138 (:REWRITE CONSP-FROM-LEN-BOUND))
 (135 31 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (134 76 (:REWRITE DEFAULT-<-2))
 (132 132 (:REWRITE USE-ALL-CONSP-2))
 (132 132 (:REWRITE USE-ALL-CONSP))
 (119 96 (:REWRITE NOT-<-WHEN-SBVLT))
 (115 115 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (114 114 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (114 114 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (114 114 (:REWRITE DROP-LINEAR-HYPS3))
 (114 114 (:REWRITE DROP-LINEAR-HYPS2))
 (114 114 (:REWRITE DROP->-HYPS))
 (114 114 (:REWRITE DROP-<=-HYPS))
 (114 114 (:REWRITE DROP-<-HYPS))
 (114 114 (:REWRITE ARRAY-DIM-BOUND))
 (114 114 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (114 114 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (114 114 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (114 114 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (114 75 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (113 69 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (112 14 (:REWRITE LEN-OF-NTH-WHEN-ALL-DARGP))
 (108 36 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (108 36 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (102 7 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (101 18 (:REWRITE ALL-NATP-OF-CDR))
 (97 96 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (96 96 (:REWRITE USE-ALL-<=-2))
 (96 96 (:REWRITE USE-ALL-<=))
 (96 96 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (96 96 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (96 96 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (96 96 (:REWRITE BOUND-WHEN-USB2))
 (96 96 (:REWRITE BOUND-WHEN-USB))
 (96 96 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (96 96 (:REWRITE <-WHEN-BVLT))
 (96 96 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (96 96 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (96 96 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (96 96 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (96 96 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (96 96 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (96 96 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (96 96 (:REWRITE <-FROM-<=-FREE))
 (90 15 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (88 88 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (84 84 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (83 31 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (83 31 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (83 31 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (82 2 (:REWRITE EQUAL-CONSTANT-+))
 (78 26 (:REWRITE DARGP-LESS-THAN-WHEN-EQUAL-OF-NTH-0-AND-QUOTE))
 (76 76 (:REWRITE USE-ALL-<-2))
 (76 76 (:REWRITE USE-ALL-<))
 (74 7 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (73 2 (:REWRITE ALL-DARGP-LESS-THAN-OF-DARGS-WHEN-<-SIMPLE))
 (71 71 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (71 71 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (71 71 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (71 71 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (69 69 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (69 69 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (69 69 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (69 69 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (69 69 (:REWRITE IMPOSSIBLE-VALUE-2))
 (69 69 (:REWRITE IMPOSSIBLE-VALUE-1))
 (69 69 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (69 69 (:REWRITE EQUAL-WHEN-BVLT))
 (69 69 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (69 69 (:REWRITE EQUAL-WHEN-<-OF-+))
 (69 69 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (69 69 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (69 69 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (69 69 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (69 69 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (69 69 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (69 69 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (69 69 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (69 69 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (69 69 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (69 69 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (69 69 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (69 69 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (69 69 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (69 69 (:REWRITE CLR-DIFFERENTIAL))
 (64 64 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (64 64 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (62 31 (:REWRITE ALISTP-WHEN-VAR-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (62 31 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (62 31 (:REWRITE ALISTP-WHEN-PAIR-LISTP-CHEAP))
 (62 31 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (62 31 (:REWRITE ALIST-WHEN-UNTRANSLATED-TERM-PAIRSP-CHEAP))
 (62 26 (:REWRITE DARGP-LESS-THAN-WHEN-EQUAL-OF-CAR-AND-QUOTE))
 (52 52 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (52 52 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (52 52 (:TYPE-PRESCRIPTION MYQUOTEP))
 (52 52 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (52 52 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (52 26 (:REWRITE DARGP-LESS-THAN-WHEN-MYQUOTEP-CHEAP))
 (52 26 (:REWRITE BOUNDED-DAG-EXPRP-WHEN-MYQUOTEP-CHEAP))
 (51 51 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (51 51 (:REWRITE ARRAY-DIM-IS-INTEGERP))
 (50 50 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (50 25 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (49 49 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (49 49 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (49 49 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (49 49 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (49 2 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-BOUNDED-DAG-EXPRP-GEN))
 (48 16 (:REWRITE JVM::EQLABLE-ALISTP-WHEN-METHOD-PROGRAMP))
 (46 23 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (45 45 (:TYPE-PRESCRIPTION ALL-<))
 (44 2 (:REWRITE NOT-EQUAL-NTH-WHEN-NOT-MEMBERP-CHEAP))
 (42 40 (:REWRITE NTH-WITH-LARGE-INDEX-CHEAP))
 (42 40 (:REWRITE NTH-WHEN-<=-LEN-CHEAP))
 (42 26 (:REWRITE BOUNDED-DAG-EXPRP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (40 40 (:REWRITE NTH-WHEN-ZP-CHEAP))
 (40 40 (:REWRITE NTH-WHEN-NOT-CONSP-CHEAP))
 (40 40 (:REWRITE NTH-WHEN-N-IS-ZP-2))
 (40 40 (:REWRITE NTH-WHEN-EQUAL-OF-TAKE-AND-CONSTANT))
 (40 40 (:REWRITE NTH-WHEN-EQUAL-OF-FIRSTN-AND-CONSTANT))
 (40 40 (:REWRITE NTH-WHEN-ALL-SAME-CHEAP))
 (40 40 (:REWRITE NTH-WHEN-ALL-EQUAL$-HELPER))
 (40 40 (:REWRITE NTH-BECOMES-BVNTH-WHEN-UNSIGNED-BYTE-P))
 (39 39 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (38 38 (:REWRITE DEFAULT-+-1))
 (38 38 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (37 26 (:REWRITE DARGP-LESS-THAN-WHEN-NATP-CHEAP))
 (36 36 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (36 3 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (32 32 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (31 31 (:TYPE-PRESCRIPTION VAR-UNTRANSLATED-TERM-PAIRSP))
 (31 31 (:TYPE-PRESCRIPTION UNTRANSLATED-TERM-PAIRSP))
 (31 31 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (31 31 (:TYPE-PRESCRIPTION PAIR-LISTP))
 (31 31 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (31 31 (:REWRITE USE-ALL-ALISTP-2))
 (31 31 (:REWRITE USE-ALL-ALISTP))
 (31 31 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (31 31 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (31 31 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (31 31 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (31 31 (:REWRITE ALISTP-CONSTANT-OPENER))
 (30 15 (:REWRITE NOT-<-OF-0-OF-NTH-WHEN-POSSIBLY-NEGATED-NODENUMSP-CHEAP))
 (29 29 (:REWRITE CONSP-OF-LOOKUP-EQUAL-WHEN-ITEMS-HAVE-LEN-OF-STRIP-CDRS))
 (28 14 (:REWRITE LEN-OF-NTH-0-WHEN-PSEUDO-TERMP-CHEAP))
 (28 14 (:REWRITE LEN-OF-NTH-0-WHEN-AXE-TREEP-CHEAP))
 (28 14 (:REWRITE ALL-DARGP-WHEN-ALL-MYQUOTEP-CHEAP))
 (26 26 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (26 26 (:REWRITE USE-ALL-RULE-ALISTP))
 (26 26 (:REWRITE USE-ALL-DARGP-LESS-THAN-2))
 (26 26 (:REWRITE USE-ALL-DARGP-LESS-THAN))
 (26 26 (:REWRITE DARGP-LESS-THAN-WHEN-QUOTEP-CHEAP))
 (26 26 (:REWRITE DARGP-LESS-THAN-MONO))
 (26 26 (:REWRITE BOUNDED-DAG-EXPRP-WHEN-SYMBOLP-CHEAP))
 (26 2 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-ALL-<))
 (25 25 (:REWRITE BOUNDED-DAG-EXPRP-WHEN-NOT-CONSP-CHEAP))
 (25 25 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (24 24 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (24 24 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (24 24 (:REWRITE ALL-DARGP-WHEN-ALL-DARGP-LESS-THAN))
 (23 23 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (23 23 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (23 23 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (23 23 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (23 23 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (23 21 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (22 22 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (22 22 (:REWRITE DROP-LINEAR-HYPS1))
 (22 22 (:REWRITE BOUND-LEMMA))
 (22 22 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (21 21 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (21 21 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (21 21 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (21 21 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (21 21 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (21 21 (:REWRITE ALL-<-TRANSITIVE))
 (19 19 (:REWRITE USE-ALL-NATP-2))
 (19 19 (:REWRITE USE-ALL-NATP))
 (19 19 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (19 19 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (19 19 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (19 19 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (19 19 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (18 2 (:REWRITE FIX-WHEN-ACL2-NUMBERP))
 (18 2 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-BOUNDED-DAG-EXPRP))
 (18 2 (:REWRITE ALL-DARGP-LESS-THAN-OF-DARGS-WHEN-BOUNDED-DAG-EXPRP))
 (17 17 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (17 17 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (16 16 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (16 16 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-EQLABLE-ALISTP))
 (16 16 (:REWRITE CONSP-NTH-FROM-ITEMS-HAVE-LEN))
 (16 16 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (16 16 (:REWRITE +-OF-MINUS))
 (15 15 (:REWRITE USE-ALL-NAT-LISTP-2))
 (15 15 (:REWRITE USE-ALL-NAT-LISTP))
 (15 15 (:REWRITE NOT-<-OF-NTH-WHEN-ALL-NATP))
 (15 15 (:REWRITE NOT-<-OF-NTH-WHEN-ALL-DARGP-LESS-THAN-GEN-CONSTANT))
 (15 15 (:REWRITE DAG-EXPRP-OF-LOOKUP-EQUAL-WHEN-PSEUDO-DAGP-AUX))
 (15 15 (:REWRITE <-OF-NTH-WHEN-ALL-<-FREE))
 (14 14 (:TYPE-PRESCRIPTION PSEUDO-TERMP))
 (14 14 (:TYPE-PRESCRIPTION BOOLEANP))
 (14 14 (:TYPE-PRESCRIPTION AXE-TREEP))
 (14 14 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (14 14 (:REWRITE LEN-OF-NTH-WHEN-ITEMS-HAVE-LEN))
 (14 14 (:REWRITE LEN-OF-NTH-WHEN-ALL-DARGP-LESS-THAN))
 (14 14 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (14 14 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (14 14 (:REWRITE LEN-NTH-FROM-ITEMS-HAVE-LEN))
 (14 14 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP-CHEAP))
 (14 14 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP))
 (14 7 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (12 12 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (12 6 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (12 6 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (12 6 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (12 2 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-NOT-CONSP))
 (12 1 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (11 11 (:REWRITE USE-ALL-RATIONALP-2))
 (11 11 (:REWRITE USE-ALL-RATIONALP))
 (10 10 (:TYPE-PRESCRIPTION MEMBERP))
 (9 9 (:REWRITE <-OF-NTH-WHEN-ALL-DARGP-LESS-THAN-FREE))
 (9 7 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (9 3 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (8 8 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (8 8 (:REWRITE WFR-HACK5))
 (8 8 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 7 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 4 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (6 6 (:TYPE-PRESCRIPTION ALL-DARGP-LESS-THAN))
 (6 6 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 6 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (6 3 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (4 4 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE MYQUOTEP-WHEN-BOUNDED-DAG-EXPRP))
 (4 4 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (4 2 (:REWRITE MEMBERP-WHEN-SINGLETON-CHEAP))
 (4 2 (:REWRITE MEMBERP-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (4 2 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-CDR-CHEAP))
 (4 2 (:REWRITE JVM::MEMBER-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (4 2 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-ALL-MYQUOTEP-CHEAP))
 (4 2 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-ALL-DARGP-LESS-THAN-OF-CDR-CHEAP))
 (3 3 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (2 2 (:REWRITE WEAK-DAGP-AUX-WHEN-PSEUDO-DAGP))
 (2 2 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN))
 (2 2 (:REWRITE NOT-MEMBERP-WHEN-MEMBERP-OF-TAKE))
 (2 2 (:REWRITE NOT-MEMBERP-WHEN-MEMBERP-AND-NOT-INTERSECTION-EQUAL-CHEAP))
 (2 2 (:REWRITE NATP-OF-NTH-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (2 2 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-2))
 (2 2 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-1))
 (2 2 (:REWRITE MEMBERP-WHEN-NOT-EQUAL-OF-CAR-CHEAP))
 (2 2 (:REWRITE MEMBERP-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE MEMBERP-WHEN-NOT-CONS-OF-CDR-CHEAP))
 (2 2 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-FIRSTN))
 (2 2 (:REWRITE MEMBERP-OF-CONSTANT-WHEN-NOT-MEMBER-OF-CONSTANT))
 (2 2 (:REWRITE MEMBERP-CONSTANT-OPENER))
 (2 2 (:REWRITE FW-1))
 (2 2 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (2 2 (:REWRITE BV-1-0-HACK))
 (2 2 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-DARGP-LESS-THAN-MONOTONE))
 (2 2 (:REWRITE <-OF-NEGATIVE-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-UNARY-MINUS))
 (2 1 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (1 1 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE <-OF-IF-ARG1-SAFE))
 (1 1 (:REWRITE <-OF-0-WHEN-<-FREE))
 )
(MAKE-UNCHANGEDNESS-CLAIMP
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ADDRESSP-CLAIMS-FOR-FIELDS
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ADDRESSP-CLAIMS-FOR-FIELDS-OF-CLASS)
(ADDRESSP-CLAIMS-FOR-FIELDS-OF-CLASSES
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ADDRESSP-CLAIMS-FOR-FIELDS-OF-OBJECT)
(INVARIANTS-ABOUT-HEAP-AUX)
(INVARIANTS-ABOUT-HEAP)
(MAKE-UNCHANGED-LOCAL-INVARS)
(LOCAL-STORED-INTO-OR-NIL
 (72 36 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (36 36 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LOCALS-STORED-INTO
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION ADD-TO-SET-EQUAL))
 )
(FIND-A-FACT-TO-PUSH-BACK)
(PUSH-BACK-FACTS)
(MAYBE-NON-NULL-INVAR-FOR-LOCAL)
(MAYBE-ADD-NON-NEGATIVE-INVAR-FOR-LOCAL)
(EXTRACT-CLASS-OF-LOCAL)
(EXTRACT-HEAP-DAG)
(MAYBE-ARRAY-REF-INVAR-FOR-LOCAL)
(MAKE-TYPE-INVARS-FOR-LOCAL)
(MAKE-TYPE-INVARS-FOR-LOCALS-AUX)
(MAKE-TYPE-INVARS-FOR-LOCALS)
(GET-CONJUNCTS-FROM-TERM
 (494 247 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (338 236 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (301 132 (:REWRITE DEFAULT-+-2))
 (254 254 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (182 125 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (163 49 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (161 132 (:REWRITE DEFAULT-+-1))
 (155 155 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (141 141 (:REWRITE USE-ALL-CONSP-2))
 (141 141 (:REWRITE USE-ALL-CONSP))
 (141 141 (:REWRITE LEN-GIVES-CONSP))
 (141 141 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (141 141 (:REWRITE CONSP-FROM-LEN-BOUND))
 (138 138 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (132 132 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (126 126 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (111 111 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (65 47 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (63 59 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (59 59 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (59 59 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (59 59 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (59 59 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (59 59 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (59 59 (:META LEN-CONS-META-RULE))
 (55 49 (:REWRITE IMPOSSIBLE-VALUE-1))
 (49 49 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (49 49 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (49 49 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (49 49 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (49 49 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (49 49 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (49 49 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (49 49 (:REWRITE IMPOSSIBLE-VALUE-2))
 (49 49 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (49 49 (:REWRITE EQUAL-WHEN-<-OF-+))
 (49 49 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (47 47 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (47 47 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (47 47 (:REWRITE EQUAL-WHEN-BVLT))
 (47 47 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (47 47 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (47 47 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (47 47 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (47 47 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (47 47 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (47 47 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (47 47 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (47 47 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (47 47 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (47 47 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (47 47 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (47 47 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (47 47 (:REWRITE CLR-DIFFERENTIAL))
 (42 7 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (40 15 (:REWRITE ARITH-HACK-CHEAP))
 (36 36 (:REWRITE FOLD-CONSTS-IN-+))
 (28 28 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (27 27 (:REWRITE WFR-HACK5))
 (27 27 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (26 13 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (24 12 (:REWRITE DEFAULT-<-2))
 (21 7 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (21 7 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (18 12 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (18 12 (:REWRITE DEFAULT-<-1))
 (17 17 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (17 17 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (16 16 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (16 16 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (15 15 (:REWRITE ARRAY-DIM-BOUND))
 (15 15 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (15 15 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (15 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (14 14 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (14 7 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (13 13 (:TYPE-PRESCRIPTION ALISTP))
 (13 13 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (12 12 (:REWRITE USE-ALL-<=-2))
 (12 12 (:REWRITE USE-ALL-<=))
 (12 12 (:REWRITE USE-ALL-<-2))
 (12 12 (:REWRITE USE-ALL-<))
 (12 12 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (12 12 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (12 12 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (12 12 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 12 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (12 12 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (12 12 (:REWRITE INEQ-HACK2))
 (12 12 (:REWRITE INEQ-HACK))
 (12 12 (:REWRITE DROP-LINEAR-HYPS3))
 (12 12 (:REWRITE DROP-LINEAR-HYPS2))
 (12 12 (:REWRITE DROP->-HYPS))
 (12 12 (:REWRITE DROP-<=-HYPS))
 (12 12 (:REWRITE DROP-<-HYPS))
 (12 12 (:REWRITE BOUND-WHEN-USB2))
 (12 12 (:REWRITE BOUND-WHEN-USB))
 (12 12 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (12 12 (:REWRITE <-WHEN-BVLT))
 (12 12 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (12 12 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (12 12 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (12 12 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (12 12 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (12 12 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (12 12 (:REWRITE <-FROM-<=-FREE))
 (11 11 (:REWRITE HELPER-HELPER2))
 (11 11 (:REWRITE HELPER-HELPER))
 (11 11 (:REWRITE +-OF-MINUS))
 (10 10 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (8 8 (:REWRITE EQUAL-CONSTANT-+))
 (7 7 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (7 7 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (7 7 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (6 6 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (6 6 (:REWRITE EQUAL-OF-+-COMBINE-CONSTANTS))
 (6 6 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (6 6 (:REWRITE DROP-LINEAR-HYPS1))
 (6 6 (:REWRITE COMMUTATIVITY-2-OF-+-WHEN-CONSTANT))
 (6 6 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (6 6 (:REWRITE BV-1-0-HACK))
 (6 6 (:REWRITE BOUND-LEMMA))
 (6 6 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (6 6 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (3 3 (:REWRITE <-OF-0-WHEN-<-FREE))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (3 3 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE EQUAL-OF-+-OF-MINUS-32))
 (2 2 (:REWRITE EQUAL-OF-+-OF-MINUS))
 (2 2 (:REWRITE <-SELF))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 )
(VARS-IN-TERM-INCLUDE-ONLYP)
(VARS-IN-TERMS-INCLUDE-ONLYP
 (22 1 (:DEFINITION SYMBOL-LISTP))
 (8 1 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (6 3 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 2 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION NAT-LISTP))
 (3 2 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (2 2 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (2 1 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (2 1 (:REWRITE PSEUDO-TERMP-OF-CAR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (2 1 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP-CHEAP))
 (2 1 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (1 1 (:REWRITE USE-ALL-CONSP-2))
 (1 1 (:REWRITE USE-ALL-CONSP))
 (1 1 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (1 1 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (1 1 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (1 1 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (1 1 (:REWRITE LEN-GIVES-CONSP))
 (1 1 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (1 1 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (1 1 (:REWRITE CONSP-FROM-LEN-BOUND))
 (1 1 (:META LEN-CONS-META-RULE))
 )
(VARS-IN-TERM-LISTS-INCLUDE-ONLYP
 (66 3 (:DEFINITION SYMBOL-LISTP))
 (22 11 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 2 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (11 11 (:TYPE-PRESCRIPTION NAT-LISTP))
 (11 6 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (8 4 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP))
 (7 7 (:REWRITE DEFAULT-CAR))
 (7 7 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (6 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (6 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (5 5 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (5 5 (:REWRITE USE-ALL-CONSP-2))
 (5 5 (:REWRITE USE-ALL-CONSP))
 (5 5 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (5 5 (:REWRITE LEN-GIVES-CONSP))
 (5 5 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (5 5 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (5 5 (:REWRITE CONSP-FROM-LEN-BOUND))
 (4 4 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (4 4 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (4 4 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (4 2 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP-CHEAP))
 (4 2 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION AXE-TREEP))
 (3 3 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (3 3 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (3 2 (:REWRITE PSEUDO-TERMP-OF-CAR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION ALISTP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (2 2 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (2 2 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:META LEN-CONS-META-RULE))
 )
(MEASURE-FOR-LOOP)
(EXTRACT-RULE-NAMES-FROM-EVENT
 (657 466 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (191 191 (:TYPE-PRESCRIPTION NAT-LISTP))
 (48 21 (:REWRITE DEFAULT-CAR))
 (46 20 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (38 7 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (30 20 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (26 20 (:REWRITE IMPOSSIBLE-VALUE-1))
 (26 20 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (22 7 (:REWRITE DEFAULT-CDR))
 (21 21 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (20 20 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (20 20 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (20 20 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (20 20 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (20 20 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (20 20 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (20 20 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (20 20 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (20 20 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (20 20 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (20 20 (:REWRITE IMPOSSIBLE-VALUE-2))
 (20 20 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (20 20 (:REWRITE EQUAL-WHEN-BVLT))
 (20 20 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (20 20 (:REWRITE EQUAL-WHEN-<-OF-+))
 (20 20 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (20 20 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (20 20 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (20 20 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (20 20 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (20 20 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (20 20 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (20 20 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (20 20 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (20 20 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (20 20 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (20 20 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (20 20 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (20 20 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (20 20 (:REWRITE CLR-DIFFERENTIAL))
 (16 16 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (12 12 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (12 12 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (12 12 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (12 12 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (12 12 (:META LEN-CONS-META-RULE))
 (8 4 (:REWRITE DEFAULT-+-2))
 (8 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (6 6 (:REWRITE USE-ALL-CONSP-2))
 (6 6 (:REWRITE USE-ALL-CONSP))
 (6 6 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (6 6 (:REWRITE LEN-GIVES-CONSP))
 (6 6 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (6 6 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (6 6 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (6 6 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (6 6 (:REWRITE CONSP-FROM-LEN-BOUND))
 (6 6 (:REWRITE BV-1-0-HACK))
 (5 5 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (4 4 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 4 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (4 4 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (4 2 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (4 2 (:REWRITE DEFAULT-<-2))
 (4 2 (:REWRITE ARITH-HACK-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:REWRITE USE-ALL-<=-2))
 (2 2 (:REWRITE USE-ALL-<=))
 (2 2 (:REWRITE USE-ALL-<-2))
 (2 2 (:REWRITE USE-ALL-<))
 (2 2 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (2 2 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (2 2 (:REWRITE NOT-<-WHEN-SBVLT))
 (2 2 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (2 2 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (2 2 (:REWRITE INEQ-HACK2))
 (2 2 (:REWRITE INEQ-HACK))
 (2 2 (:REWRITE DROP-LINEAR-HYPS3))
 (2 2 (:REWRITE DROP-LINEAR-HYPS2))
 (2 2 (:REWRITE DROP->-HYPS))
 (2 2 (:REWRITE DROP-<=-HYPS))
 (2 2 (:REWRITE DROP-<-HYPS))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE BOUND-WHEN-USB2))
 (2 2 (:REWRITE BOUND-WHEN-USB))
 (2 2 (:REWRITE ARRAY-DIM-BOUND))
 (2 2 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (2 2 (:REWRITE <-WHEN-BVLT))
 (2 2 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (2 2 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (2 2 (:REWRITE <-SELF))
 (2 2 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (2 2 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (2 2 (:REWRITE <-OF-0-WHEN-<-FREE))
 (2 2 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (2 2 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (2 2 (:REWRITE <-FROM-<=-FREE))
 )
(PRINT-LIST-WITH-INDENT-AUX)
(PRINT-LIST-WITH-INDENT)
(MAKE-AXE-RULES-FROM-THEOREM-SAFE)
(DAG-NODES-THAT-CALL
 (22 11 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (11 11 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(TERMS-MENTIONED-IN-POSSIBLY-NEGATED-NODENUMS
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(TERMS-MENTIONED-IN-CONTEXT)
(GET-TERMS-FROM-NODE-CONTEXTS-AUX
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(GET-TERMS-FROM-NODE-CONTEXTS)
(STRIP-NOTS-FROM-TERMS
 (119 75 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (44 44 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAYBE-PRINT-INFO-ON-EXCEPTION-BRANCHES)
(INITIALIZE-CLASSES-IN-S0)
(MAKE-LOOP-INFOS
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-LOOPS-FOR-METHOD
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-LOOPS-FOR-METHODS
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-LOOPS-FROM-CLASS)
(GET-LOOPS-FROM-CLASSES-AUX
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-LOOPS-FROM-CLASSES)
(INPUT-INDICATORP)
(INPUT-SOURCE-ALISTP
 (25 13 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-INPUT-ASSUMPTIONS
 (2451 65 (:REWRITE USE-ALL-<-FOR-CAR))
 (1897 65 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (1537 65 (:REWRITE INEQ-HACK2))
 (1537 65 (:REWRITE INEQ-HACK))
 (1456 130 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (1343 241 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1287 92 (:REWRITE ALL-<-OF-CDR))
 (1122 92 (:REWRITE NAT-LISTP-OF-CDR))
 (1091 403 (:REWRITE DEFAULT-CDR))
 (970 19 (:REWRITE USE-ALL-NATP-FOR-CAR))
 (962 60 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (873 165 (:REWRITE ALL-NATP-OF-CDR))
 (733 403 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (626 111 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (599 599 (:TYPE-PRESCRIPTION ALL-NATP))
 (501 65 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (482 241 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (455 65 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (333 333 (:TYPE-PRESCRIPTION ALL-<))
 (304 304 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (304 304 (:REWRITE USE-ALL-CONSP-2))
 (304 304 (:REWRITE USE-ALL-CONSP))
 (304 304 (:REWRITE LEN-GIVES-CONSP))
 (304 304 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (304 304 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (304 304 (:REWRITE CONSP-FROM-LEN-BOUND))
 (298 298 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (281 191 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (249 76 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (241 241 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (215 76 (:REWRITE IMPOSSIBLE-VALUE-1))
 (212 212 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (210 98 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (209 124 (:REWRITE DEFAULT-+-2))
 (191 191 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (191 191 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (191 191 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (191 191 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (191 191 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (191 191 (:META LEN-CONS-META-RULE))
 (182 182 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (182 182 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (182 91 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (182 91 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (181 91 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (175 91 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (173 173 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (158 158 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (158 158 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (154 49 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (154 49 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (154 38 (:REWRITE USE-ALL-NAT-LISTP-FOR-CAR))
 (130 130 (:REWRITE USE-ALL-NAT-LISTP-2))
 (130 130 (:REWRITE USE-ALL-NAT-LISTP))
 (130 130 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (130 130 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (130 65 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (124 124 (:REWRITE DEFAULT-+-1))
 (124 124 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (124 124 (:REWRITE +-OF-MINUS))
 (120 60 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (114 76 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (112 112 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (111 111 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (111 111 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (111 111 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (111 111 (:REWRITE ALL-<-TRANSITIVE))
 (91 91 (:TYPE-PRESCRIPTION ALISTP))
 (91 91 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (91 91 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (91 91 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (91 91 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (88 88 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (84 84 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (84 65 (:REWRITE NOT-<-WHEN-SBVLT))
 (76 76 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (76 76 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (76 76 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (76 76 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (76 76 (:REWRITE IMPOSSIBLE-VALUE-2))
 (76 76 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (76 76 (:REWRITE EQUAL-WHEN-BVLT))
 (76 76 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (76 76 (:REWRITE EQUAL-WHEN-<-OF-+))
 (76 76 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (76 76 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (76 76 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (76 76 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (76 76 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (76 76 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (76 76 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (76 76 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (76 76 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (76 76 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (76 76 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (76 76 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (76 76 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (76 76 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (76 76 (:REWRITE CLR-DIFFERENTIAL))
 (75 68 (:REWRITE DEFAULT-<-1))
 (69 68 (:REWRITE DEFAULT-<-2))
 (68 68 (:REWRITE USE-ALL-<-2))
 (68 68 (:REWRITE USE-ALL-<))
 (68 68 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (68 68 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (68 68 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (68 68 (:REWRITE DROP-LINEAR-HYPS2))
 (68 68 (:REWRITE DROP->-HYPS))
 (68 68 (:REWRITE DROP-<-HYPS))
 (68 68 (:REWRITE BOUND-WHEN-USB2))
 (68 68 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (68 68 (:REWRITE <-WHEN-BVLT))
 (68 68 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (68 68 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (68 68 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (68 68 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (68 68 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (68 68 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (68 68 (:REWRITE <-FROM-<=-FREE))
 (65 65 (:REWRITE USE-ALL-<=-2))
 (65 65 (:REWRITE USE-ALL-<=))
 (65 65 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (65 65 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (65 65 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (65 65 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (65 65 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (65 65 (:REWRITE DROP-LINEAR-HYPS3))
 (65 65 (:REWRITE DROP-<=-HYPS))
 (65 65 (:REWRITE BOUND-WHEN-USB))
 (65 65 (:REWRITE ARRAY-DIM-BOUND))
 (65 65 (:REWRITE ARITH-HACK-CHEAP))
 (65 65 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (65 65 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (65 65 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (65 65 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (65 65 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (61 61 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (60 60 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (60 60 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (60 60 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (60 60 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (60 60 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (60 60 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (57 19 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (54 54 (:TYPE-PRESCRIPTION ALL-NAT-LISTP))
 (49 49 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (42 21 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (40 40 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (40 40 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (40 40 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (40 40 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (40 8 (:REWRITE ALL-NAT-LISTP-OF-CDR))
 (38 19 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (38 19 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (38 19 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (32 16 (:REWRITE BV-3-2-1-HACKB))
 (27 27 (:REWRITE ALL-NAT-LISTP-WHEN-NOT-CONSP-CHEAP))
 (27 27 (:REWRITE ALL-NAT-LISTP-WHEN-NOT-CONSP))
 (26 8 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (20 20 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (20 20 (:REWRITE BV-1-0-HACK))
 (19 19 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (19 19 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (19 19 (:REWRITE USE-ALL-NATP-2))
 (19 19 (:REWRITE USE-ALL-NATP))
 (19 19 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (19 19 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (19 19 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (19 19 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (19 19 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (19 19 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (19 19 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (19 19 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (19 19 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (19 19 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (19 19 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (19 19 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (19 19 (:REWRITE ARRAY-DIM-IS-INTEGERP))
 (16 16 (:TYPE-PRESCRIPTION BVLT))
 (16 16 (:REWRITE BV-3-2-1-HACK))
 (16 8 (:REWRITE SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-ALISTP-CHEAP))
 (13 13 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (13 13 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (13 13 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (9 9 (:REWRITE WFR-HACK5))
 (9 9 (:REWRITE JVM::PRIMITIVE-TYPEP-CONSTANT-OPENER))
 (9 9 (:REWRITE JVM::PRIMITIVE-TYPEP-BASE))
 (9 9 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:TYPE-PRESCRIPTION SYMBOL-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION AXE-TREEP))
 (8 8 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (8 8 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (6 2 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (3 3 (:TYPE-PRESCRIPTION BOOLEANP))
 (3 3 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (2 2 (:REWRITE <-OF-IF-ARG1-SAFE))
 (1 1 (:REWRITE <-OF-LEN-AND-LEN-WHEN-PREFIXP))
 )
(OUTPUT-EXTRACTION-TERM-CORE
 (1606 405 (:REWRITE DEFAULT-CDR))
 (982 18 (:DEFINITION SYMBOL-LISTP))
 (748 405 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (732 58 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (533 3 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (507 29 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (506 161 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (492 492 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (460 460 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (459 95 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (452 452 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (422 422 (:REWRITE USE-ALL-CONSP-2))
 (422 422 (:REWRITE USE-ALL-CONSP))
 (422 422 (:REWRITE LEN-GIVES-CONSP))
 (422 422 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (422 422 (:REWRITE CONSP-FROM-LEN-BOUND))
 (416 416 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (377 10 (:REWRITE NAT-LISTP-OF-CDR))
 (367 16 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (341 182 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (341 182 (:REWRITE IMPOSSIBLE-VALUE-2))
 (340 3 (:REWRITE USE-ALL-<-FOR-CAR))
 (300 300 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (272 221 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (268 3 (:REWRITE USE-ALL-NATP-FOR-CAR))
 (267 95 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (260 130 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (255 255 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (255 255 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (233 88 (:REWRITE DEFAULT-+-2))
 (230 230 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (230 230 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (228 228 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (227 17 (:REWRITE ALL-NATP-OF-CDR))
 (221 221 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (221 221 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (221 221 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (221 221 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (221 221 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (221 221 (:META LEN-CONS-META-RULE))
 (209 5 (:REWRITE ALL-<-OF-CDR))
 (192 64 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (190 95 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (190 95 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (182 182 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (182 182 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (182 182 (:REWRITE IMPOSSIBLE-VALUE-1))
 (180 180 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (180 180 (:REWRITE EQUAL-WHEN-<-OF-+))
 (180 180 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (172 172 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (168 8 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (161 161 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (161 161 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (161 161 (:REWRITE EQUAL-WHEN-BVLT))
 (161 161 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (161 161 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (161 161 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (161 161 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (161 161 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (161 161 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (161 161 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (161 161 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (161 161 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (161 161 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (161 161 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (161 161 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (161 161 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (161 161 (:REWRITE CLR-DIFFERENTIAL))
 (160 32 (:REWRITE USE-ALL-CLASS-NAMESP-FOR-CAR))
 (147 147 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (138 37 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (136 4 (:REWRITE USE-ALL-NAT-LISTP-FOR-CAR))
 (133 19 (:REWRITE PSEUDO-TERMP-OF-CADDR))
 (116 58 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (110 6 (:REWRITE ALL-NAT-LISTP-WHEN-NOT-CONSP))
 (98 98 (:TYPE-PRESCRIPTION ALISTP))
 (96 32 (:REWRITE JVM::CLASS-NAMEP-OF-CAR-WHEN-METHOD-DESIGNATORP))
 (95 95 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (95 95 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (95 95 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (95 95 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (93 48 (:REWRITE ARITH-HACK-CHEAP))
 (88 88 (:REWRITE DEFAULT-+-1))
 (88 88 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (77 77 (:TYPE-PRESCRIPTION ALL-NATP))
 (76 38 (:REWRITE PSEUDO-TERMP-OF-CAR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (76 4 (:REWRITE ALL-NAT-LISTP-OF-CDR))
 (75 75 (:REWRITE WFR-HACK5))
 (75 75 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (69 69 (:REWRITE +-OF-MINUS))
 (64 64 (:TYPE-PRESCRIPTION JVM::METHOD-DESIGNATORP))
 (64 64 (:TYPE-PRESCRIPTION JVM::ALL-CLASS-NAMESP))
 (63 21 (:REWRITE JVM::CLASS-INFOP-WHEN-NORMAL-CLASS-INFOP))
 (61 8 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (58 58 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (58 58 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (58 58 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (58 58 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (58 58 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (58 58 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (58 58 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (58 58 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (58 29 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (57 57 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (56 56 (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
 (56 56 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (56 56 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (56 56 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (55 8 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (51 28 (:REWRITE DEFAULT-<-1))
 (48 48 (:REWRITE ARRAY-DIM-BOUND))
 (48 16 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (45 45 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (44 44 (:TYPE-PRESCRIPTION BOOLEANP))
 (44 44 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (44 44 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (43 43 (:REWRITE DROP-LINEAR-HYPS2))
 (43 43 (:REWRITE DROP->-HYPS))
 (43 43 (:REWRITE DROP-<-HYPS))
 (43 43 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (42 42 (:TYPE-PRESCRIPTION JVM::NORMAL-CLASS-INFOP))
 (40 20 (:REWRITE BV-3-2-1-HACKB))
 (40 5 (:LINEAR LEN-OF-CDR-LINEAR-STRONG))
 (38 38 (:REWRITE EQUAL-OF-+-COMBINE-CONSTANTS))
 (38 28 (:REWRITE DEFAULT-<-2))
 (38 20 (:REWRITE NOT-<-WHEN-SBVLT))
 (37 37 (:TYPE-PRESCRIPTION AXE-TREEP))
 (37 37 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (36 36 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (36 18 (:REWRITE SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-ALISTP-CHEAP))
 (36 18 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP))
 (36 18 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP))
 (35 35 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (35 35 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (35 35 (:REWRITE INEQ-HACK2))
 (35 35 (:REWRITE INEQ-HACK))
 (35 35 (:REWRITE DROP-LINEAR-HYPS3))
 (35 35 (:REWRITE DROP-<=-HYPS))
 (35 35 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (35 35 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (32 32 (:REWRITE USE-ALL-CLASS-NAMESP-2))
 (32 32 (:REWRITE USE-ALL-CLASS-NAMESP))
 (32 32 (:REWRITE JVM::CLASS-NAMEP-WHEN-MV-NTH-0-OF-RESOLVE-METHOD))
 (32 32 (:REWRITE JVM::CLASS-NAMEP-WHEN-BOUND-IN-CLASS-TABLEP))
 (32 32 (:REWRITE JVM::CLASS-NAMEP-CONSTANT-OPENER))
 (32 32 (:REWRITE ALL-CLASS-NAMESP-WHEN-NOT-CONSP-CHEAP))
 (32 32 (:REWRITE ALL-CLASS-NAMESP-WHEN-NOT-CONSP))
 (32 8 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (32 8 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (29 29 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (28 28 (:REWRITE USE-ALL-<-2))
 (28 28 (:REWRITE USE-ALL-<))
 (28 28 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (28 28 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (28 28 (:REWRITE BOUND-WHEN-USB2))
 (28 28 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (28 28 (:REWRITE <-WHEN-BVLT))
 (28 28 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (28 28 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (28 28 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (28 28 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (28 28 (:REWRITE <-FROM-<=-FREE))
 (28 14 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (25 25 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (22 20 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (22 16 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (20 20 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (20 20 (:TYPE-PRESCRIPTION BVLT))
 (20 20 (:REWRITE USE-ALL-<=-2))
 (20 20 (:REWRITE USE-ALL-<=))
 (20 20 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (20 20 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (20 20 (:REWRITE BV-3-2-1-HACK))
 (20 20 (:REWRITE BOUND-WHEN-USB))
 (20 20 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (20 20 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (20 20 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (19 19 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (19 19 (:TYPE-PRESCRIPTION ALL-<))
 (19 19 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (19 19 (:REWRITE PSEUDO-TERMP-OF-LAMBDA-BODY-CHEAP))
 (19 19 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (19 19 (:REWRITE EQUAL-OF-+-OF-MINUS-32))
 (19 19 (:REWRITE EQUAL-OF-+-OF-MINUS))
 (18 18 (:TYPE-PRESCRIPTION SYMBOL-ALISTP))
 (18 18 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (17 2 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (16 16 (:REWRITE USE-ALL-NAT-LISTP-2))
 (16 16 (:REWRITE USE-ALL-NAT-LISTP))
 (15 15 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (15 15 (:REWRITE DROP-LINEAR-HYPS1))
 (15 15 (:REWRITE BOUND-LEMMA))
 (15 15 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (15 15 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (13 13 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (13 13 (:REWRITE BV-1-0-HACK))
 (12 12 (:TYPE-PRESCRIPTION ALL-NAT-LISTP))
 (10 10 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (10 10 (:REWRITE USE-ALL-FIELD-IDP-2))
 (10 10 (:REWRITE USE-ALL-FIELD-IDP))
 (10 10 (:REWRITE JVM::FIELD-IDP-CONSTANT-OPENER))
 (9 3 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (9 1 (:LINEAR ACL2-COUNT-OF-CDR-BOUND))
 (8 8 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (8 8 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (8 8 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (8 8 (:REWRITE ALL-<-TRANSITIVE))
 (8 8 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (6 6 (:REWRITE ALL-NAT-LISTP-WHEN-NOT-CONSP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (6 3 (:REWRITE IFF-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (6 3 (:REWRITE CAR-WHEN-ALISTP-IFF-CHEAP))
 (6 3 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (3 3 (:REWRITE USE-ALL-NATP-2))
 (3 3 (:REWRITE USE-ALL-NATP))
 (3 3 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (3 3 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE ARRAY-DIM-IS-INTEGERP))
 (2 2 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (2 2 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (2 2 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (2 2 (:REWRITE <-OF-0-WHEN-<-FREE))
 )
(OUTPUT-EXTRACTION-TERM
 (4042 8 (:DEFINITION NATP))
 (2855 72 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1781 8 (:REWRITE USE-ALL-<-FOR-CAR))
 (1749 8 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (1669 40 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (1502 8 (:REWRITE USE-ALL-NATP-FOR-CAR))
 (1357 20 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (723 12 (:REWRITE ALL-<-OF-CDR))
 (671 24 (:REWRITE NAT-LISTP-OF-CDR))
 (660 20 (:REWRITE MEMBER-EQUAL-OF-CONS-DROP))
 (655 40 (:REWRITE ALL-NATP-OF-CDR))
 (529 168 (:REWRITE DEFAULT-CDR))
 (450 235 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (449 124 (:REWRITE DEFAULT-CAR))
 (440 8 (:DEFINITION CLASS-NAME-FIELD-ID-PAIRP))
 (409 240 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (319 168 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (269 5 (:REWRITE <-OF-IF-ARG1-SAFE))
 (254 254 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (254 254 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (249 249 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (249 249 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (240 240 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (240 240 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (240 240 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (240 240 (:REWRITE IMPOSSIBLE-VALUE-2))
 (240 240 (:REWRITE IMPOSSIBLE-VALUE-1))
 (240 240 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (240 240 (:REWRITE EQUAL-WHEN-<-OF-+))
 (240 240 (:REWRITE EQUAL-REWRITE-WHEN-TAKES-EQUAL))
 (235 235 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (235 235 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (235 235 (:REWRITE EQUAL-WHEN-BVLT))
 (235 235 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (235 235 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (235 235 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (235 235 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (235 235 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (235 235 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (235 235 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (235 235 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (235 235 (:REWRITE EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (235 235 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (235 235 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (235 235 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (235 235 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (235 235 (:REWRITE CLR-DIFFERENTIAL))
 (203 18 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (199 199 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (186 186 (:REWRITE NOT-CONSP-WHEN-NUMBER-OF-ARRAY-DIMENSIONS-IS-0))
 (186 186 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (185 4 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (176 176 (:REWRITE USE-ALL-CONSP-2))
 (176 176 (:REWRITE USE-ALL-CONSP))
 (176 176 (:REWRITE LEN-GIVES-CONSP))
 (176 176 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (176 176 (:REWRITE CONSP-FROM-LEN-BOUND))
 (152 152 (:TYPE-PRESCRIPTION ALL-NATP))
 (152 20 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (144 72 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (140 140 (:TYPE-PRESCRIPTION BOOLEANP))
 (132 20 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (124 124 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (102 102 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (102 102 (:META LEN-CONS-META-RULE))
 (102 2 (:DEFINITION SYMBOL-LISTP))
 (90 20 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (90 9 (:REWRITE EQUAL-OF-LEN-AND-0))
 (89 89 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (72 72 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (65 13 (:REWRITE USE-ALL-CLASS-NAMESP-FOR-CAR))
 (60 60 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (60 20 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (59 54 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (56 22 (:REWRITE DEFAULT-+-2))
 (54 54 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (54 54 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (54 54 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (54 54 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (48 48 (:TYPE-PRESCRIPTION ALL-<))
 (48 24 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (44 44 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (40 40 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (40 40 (:REWRITE USE-ALL-NAT-LISTP-2))
 (40 40 (:REWRITE USE-ALL-NAT-LISTP))
 (40 20 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (40 20 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (39 13 (:REWRITE JVM::CLASS-NAMEP-OF-CAR-WHEN-METHOD-DESIGNATORP))
 (36 18 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (35 5 (:REWRITE PSEUDO-TERMP-OF-CADDR))
 (32 21 (:REWRITE ARITH-HACK-CHEAP))
 (30 10 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (29 29 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (26 26 (:TYPE-PRESCRIPTION JVM::METHOD-DESIGNATORP))
 (26 26 (:TYPE-PRESCRIPTION JVM::ALL-CLASS-NAMESP))
 (24 12 (:REWRITE NOT-<-WHEN-SBVLT))
 (24 8 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (22 22 (:REWRITE DEFAULT-+-1))
 (22 22 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (21 21 (:REWRITE STRENGTHEN-<-OF-CONSTANT-WHEN-NOT-EQUAL))
 (21 21 (:REWRITE ARRAY-DIM-BOUND))
 (21 21 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (20 20 (:TYPE-PRESCRIPTION ALISTP))
 (20 20 (:REWRITE WFR-HACK5))
 (20 20 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (20 20 (:REWRITE SUBSETP-MEMBER . 4))
 (20 20 (:REWRITE SUBSETP-MEMBER . 3))
 (20 20 (:REWRITE SUBSETP-MEMBER . 2))
 (20 20 (:REWRITE SUBSETP-MEMBER . 1))
 (20 20 (:REWRITE INTERSECTP-MEMBER . 3))
 (20 20 (:REWRITE INTERSECTP-MEMBER . 2))
 (20 20 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (20 20 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (20 20 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (20 20 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (20 20 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (20 20 (:REWRITE ALL-<-TRANSITIVE))
 (20 10 (:REWRITE PSEUDO-TERMP-OF-CAR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (18 18 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (18 18 (:REWRITE TRUE-LISTP-WHEN-THEOREM-SYMBOL-LISTP))
 (18 18 (:REWRITE TRUE-LISTP-WHEN-TERMFN-LISTP))
 (18 18 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (18 18 (:REWRITE TRUE-LISTP-WHEN-MACRO-SYMBOL-LISTP))
 (18 18 (:REWRITE TRUE-LISTP-WHEN-LAMBDA-LISTP))
 (18 18 (:REWRITE TRUE-LISTP-WHEN-FUNCTION-SYMBOL-LISTP))
 (18 18 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (17 17 (:REWRITE +-OF-MINUS))
 (16 16 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (16 16 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (16 16 (:REWRITE INEQ-HACK2))
 (16 16 (:REWRITE INEQ-HACK))
 (16 16 (:REWRITE DROP-LINEAR-HYPS3))
 (16 16 (:REWRITE DROP-LINEAR-HYPS2))
 (16 16 (:REWRITE DROP->-HYPS))
 (16 16 (:REWRITE DROP-<=-HYPS))
 (16 16 (:REWRITE DROP-<-HYPS))
 (16 16 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (16 16 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (16 16 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (16 12 (:REWRITE DEFAULT-<-1))
 (16 8 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (16 8 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (16 8 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (16 8 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (15 15 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (15 15 (:REWRITE EQUAL-CONSTANT-+))
 (15 5 (:REWRITE JVM::CLASS-INFOP-WHEN-NORMAL-CLASS-INFOP))
 (14 7 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (13 13 (:REWRITE USE-ALL-CLASS-NAMESP-2))
 (13 13 (:REWRITE USE-ALL-CLASS-NAMESP))
 (13 13 (:REWRITE JVM::CLASS-NAMEP-WHEN-MV-NTH-0-OF-RESOLVE-METHOD))
 (13 13 (:REWRITE JVM::CLASS-NAMEP-WHEN-BOUND-IN-CLASS-TABLEP))
 (13 13 (:REWRITE JVM::CLASS-NAMEP-CONSTANT-OPENER))
 (13 13 (:REWRITE ALL-CLASS-NAMESP-WHEN-NOT-CONSP-CHEAP))
 (13 13 (:REWRITE ALL-CLASS-NAMESP-WHEN-NOT-CONSP))
 (12 12 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (12 12 (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
 (12 12 (:REWRITE USE-ALL-<=-2))
 (12 12 (:REWRITE USE-ALL-<=))
 (12 12 (:REWRITE USE-ALL-<-2))
 (12 12 (:REWRITE USE-ALL-<))
 (12 12 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (12 12 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (12 12 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (12 12 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (12 12 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (12 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE BOUND-WHEN-USB2))
 (12 12 (:REWRITE BOUND-WHEN-USB))
 (12 12 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (12 12 (:REWRITE <-WHEN-BVLT))
 (12 12 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (12 12 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (12 12 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (12 12 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (12 12 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (12 12 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (12 12 (:REWRITE <-FROM-<=-FREE))
 (10 10 (:TYPE-PRESCRIPTION JVM::NORMAL-CLASS-INFOP))
 (10 10 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (10 10 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (10 10 (:REWRITE EQUAL-OF-+-COMBINE-CONSTANTS))
 (10 5 (:REWRITE BV-3-2-1-HACKB))
 (8 8 (:TYPE-PRESCRIPTION JVM::FIELD-IDP))
 (8 8 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (8 8 (:REWRITE USE-ALL-NATP-2))
 (8 8 (:REWRITE USE-ALL-NATP))
 (8 8 (:REWRITE USE-ALL-FIELD-IDP-2))
 (8 8 (:REWRITE USE-ALL-FIELD-IDP))
 (8 8 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (8 8 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (8 8 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (8 8 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (8 8 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (8 8 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 8 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (8 8 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE JVM::FIELD-IDP-CONSTANT-OPENER))
 (8 8 (:REWRITE ARRAY-DIM-IS-INTEGERP))
 (7 7 (:TYPE-PRESCRIPTION AXE-TREEP))
 (7 7 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (5 5 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (5 5 (:TYPE-PRESCRIPTION BVLT))
 (5 5 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (5 5 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (5 5 (:REWRITE PSEUDO-TERMP-OF-LAMBDA-BODY-CHEAP))
 (5 5 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (5 5 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (5 5 (:REWRITE EQUAL-OF-+-OF-MINUS-32))
 (5 5 (:REWRITE EQUAL-OF-+-OF-MINUS))
 (5 5 (:REWRITE BV-3-2-1-HACK))
 (4 4 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (4 4 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (4 4 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (4 4 (:REWRITE DROP-LINEAR-HYPS1))
 (4 4 (:REWRITE BV-1-0-HACK))
 (4 4 (:REWRITE BOUND-LEMMA))
 (4 4 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (4 4 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (4 2 (:REWRITE SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-ALISTP-CHEAP))
 (4 2 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP))
 (4 2 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP))
 (3 3 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (3 3 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (3 3 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (2 2 (:TYPE-PRESCRIPTION SYMBOL-ALISTP))
 (2 2 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (1 1 (:REWRITE JVM::TYPEP-CONSTANT-OPENER))
 )
(EXTRACT-OUTPUT-DAG)
(PARAM-ASSUMPTIONS-AND-VARS-AUX
 (29 15 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (14 14 (:TYPE-PRESCRIPTION NAT-LISTP))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-REVAPPEND-TYPE-PRESCRIPTION))
 (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (6 6 (:TYPE-PRESCRIPTION REVAPPEND))
 )
(PARAM-ASSUMPTIONS-AND-VARS)
(SHOW-TERM-UNCHANGED)
(SHOW-TERMS-UNCHANGED)
(SUBMIT-POSTLUDE)
(DECOMPILE-LOOP-BY-UNROLLING)
(DECOMPILE-LOOP-BODY-WITH-INVARS)
(DECOMPILE-PROGRAM)
(LIFT-JAVA-CODE-FN)
(LIFT-JAVA-CODE-SEGMENT-FN)
