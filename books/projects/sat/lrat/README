This work is based on Nathan Wetzler's RAT checker work in ACL2
community books directory books/projects/sat/proof-checker-itp13/.
Here we accommodate a more recent input proof format, which provides
hints to speed up unit propagation -- "lrat" is mnemonic for "Linear
RAT" -- and we add deletion (to obtain a DRAT checker).  Because of
deletion, the hints, and other features (in particular, using a
fast-alist to represent formulas, which is occasionally compressed),
our checker can run much faster than Nathan's checker.

Marijn Heule, Warren A. Hunt, Jr., and Matt Kaufmann
Initial version (including soundness proof) completed November, 2016

See the top of satisfiable-add-proof-clause.lisp for an outline of the
proof.

The structure of files is as follows.

top.lisp
  soundness.lisp
    satisfiable-add-proof-clause.lisp
      satisfiable-add-proof-clause-base.lisp
        truth-monotone.lisp
        unit-propagation-implies-unsat.lisp
          truth-monotone.lisp
        unit-propagation-monotone.lisp
        unit-propagation-correct.lisp
          truth-monotone.lisp
          unit-propagation-monotone.lisp
          unit-propagation-implies-unsat.lisp
      satisfiable-add-proof-clause-rup.lisp
      satisfiable-add-proof-clause-drat.lisp
	satisfiable-add-proof-clause-base.lisp
	  [... see above]
        sat-drat-claim-1.lisp
          satisfiable-add-proof-clause-base.lisp
   	    [... see above]
          satisfiable-add-proof-clause-rup.lisp
   	    [... see above]
        sat-drat-claim-2.lisp
          satisfiable-add-proof-clause-base.lisp
   	    [... see above]
        sat-drat-claim-2-3.lisp
          satisfiable-add-proof-clause-base.lisp
   	    [... see above]
          sat-drat-claim-1.lisp
   	    [... see above]
    satisfiable-maybe-shrink-formula.lisp
      satisfiable-add-proof-clause-base.lisp
        [... see above]
  lrat-parser.lisp [no actual include-book]
    tools/bstar.lisp [:dir :system]
