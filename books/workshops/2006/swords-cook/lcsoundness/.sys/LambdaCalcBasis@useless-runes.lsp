(BOOL-P)
(BOOL)
(BOOL-P-COMPOUND-RECOGNIZER)
(BOOL-ACL2-COUNT)
(BOOL-P-BOOL)
(BOOL-UNIQUE
 (62 3 (:LINEAR ACL2-COUNT-0-LEN-0))
 (41 4 (:DEFINITION ACL2-COUNT))
 (25 12 (:REWRITE DEFAULT-+-2))
 (13 12 (:REWRITE DEFAULT-+-1))
 (12 12 (:REWRITE DEFAULT-CDR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (6 3 (:REWRITE |(+ 0 x)|))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE CAR-CONS))
 )
(BOOL-P-PRODUCT-TYPE)
(PRODUCT-TYPE-BOOL-P)
(BOOL-PRODUCT-TYPE)
(BOOL-EQUAL-PRODUCT-TYPE)
(FUN-P)
(FUN)
(FUN-DOMAIN)
(FUN-RANGE)
(FUN-P-COMPOUND-RECOGNIZER)
(FUN-ACL2-COUNT
 (89 41 (:REWRITE DEFAULT-+-2))
 (52 41 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (32 4 (:DEFINITION LENGTH))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (20 4 (:DEFINITION LEN))
 (11 11 (:REWRITE DEFAULT-CDR))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE DEFAULT-<-2))
 (8 8 (:REWRITE DEFAULT-<-1))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (8 8 (:REWRITE |(< (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (4 4 (:TYPE-PRESCRIPTION LEN))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 )
(FUN-DOMAIN-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(FUN-RANGE-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-FUN-P-FUN-DOMAIN
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-FUN-P-FUN-RANGE
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(FUN-P-FUN
 (4 2 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE DEFAULT-CDR))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:REWRITE DEFAULT-+-1))
 )
(FUN-ELIM
 (1366 8 (:LINEAR ACL2-COUNT-0-LEN-0))
 (1194 44 (:DEFINITION ACL2-COUNT))
 (971 7 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (451 202 (:REWRITE DEFAULT-+-2))
 (265 202 (:REWRITE DEFAULT-+-1))
 (175 175 (:REWRITE DEFAULT-CDR))
 (156 26 (:DEFINITION INTEGER-ABS))
 (146 40 (:REWRITE |(+ y x)|))
 (92 92 (:REWRITE DEFAULT-CAR))
 (91 13 (:REWRITE |(+ (if a b c) x)|))
 (78 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 28 (:REWRITE DEFAULT-<-2))
 (28 28 (:REWRITE DEFAULT-<-1))
 (28 28 (:REWRITE |(< (- x) (- y))|))
 (26 26 (:REWRITE DEFAULT-UNARY-MINUS))
 (26 26 (:REWRITE |(< (- x) 0)|))
 (16 16 (:REWRITE |(equal (- x) (- y))|))
 (16 7 (:REWRITE |(+ 0 x)|))
 (13 13 (:REWRITE DEFAULT-REALPART))
 (13 13 (:REWRITE DEFAULT-NUMERATOR))
 (13 13 (:REWRITE DEFAULT-IMAGPART))
 (13 13 (:REWRITE DEFAULT-DENOMINATOR))
 (13 13 (:REWRITE DEFAULT-COERCE-2))
 (13 13 (:REWRITE DEFAULT-COERCE-1))
 (10 1 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (10 1 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 (8 8 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (6 3 (:REWRITE |(equal (if a b c) x)|))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:REWRITE |(< 0 (- x))|))
 )
(FUN-P-PRODUCT-TYPE)
(PRODUCT-TYPE-FUN-P)
(FUN-PRODUCT-TYPE)
(FUN-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(FUN-DOMAIN-FUN
 (30 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 (14 7 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-CDR))
 (9 9 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-FUN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 )
(FUN-NOT-EQUAL-DOMAIN
 (164 10 (:DEFINITION ACL2-COUNT))
 (158 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (130 3 (:REWRITE PRODUCT-TYPE-FUN-P))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 32 (:REWRITE DEFAULT-+-2))
 (72 1 (:DEFINITION NTH))
 (62 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (62 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION BOOL-P))
 (42 32 (:REWRITE DEFAULT-+-1))
 (40 8 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (20 20 (:REWRITE DEFAULT-CDR))
 (17 17 (:REWRITE DEFAULT-CAR))
 (17 17 (:REWRITE |(equal (- x) (- y))|))
 (17 2 (:DEFINITION INTEGER-ABS))
 (11 3 (:REWRITE |(+ y x)|))
 (10 10 (:REWRITE FOLD-CONSTS-IN-+))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 6 (:REWRITE |(equal (- x) 0)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION BOOL-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(FUN-NOT-EQUAL-FUN-DOMAIN
 (261 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (229 2 (:LINEAR ACL2-COUNT-0-LEN-0))
 (226 1 (:DEFINITION NTH))
 (187 2 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (178 8 (:DEFINITION ACL2-COUNT))
 (72 32 (:REWRITE DEFAULT-+-2))
 (69 69 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (44 32 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (22 6 (:REWRITE |(+ y x)|))
 (20 4 (:DEFINITION LEN))
 (18 17 (:REWRITE DEFAULT-CDR))
 (16 2 (:DEFINITION LENGTH))
 (14 14 (:TYPE-PRESCRIPTION LEN))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (13 12 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (8 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (3 2 (:REWRITE PRODUCT-TYPE-FUN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (1 1 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (1 1 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 (1 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 )
(DIFFERENCE-DOMAIN-FUN
 (30 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 (14 7 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-CDR))
 (9 9 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-FUN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 )
(FUN-RANGE-FUN
 (36 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (14 7 (:REWRITE DEFAULT-+-2))
 (12 12 (:REWRITE DEFAULT-CDR))
 (10 10 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-FUN-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 )
(FUN-NOT-EQUAL-RANGE
 (164 10 (:DEFINITION ACL2-COUNT))
 (158 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (130 3 (:REWRITE PRODUCT-TYPE-FUN-P))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 32 (:REWRITE DEFAULT-+-2))
 (71 1 (:DEFINITION NTH))
 (62 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (62 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION BOOL-P))
 (42 32 (:REWRITE DEFAULT-+-1))
 (40 8 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (20 20 (:REWRITE DEFAULT-CDR))
 (17 17 (:REWRITE DEFAULT-CAR))
 (17 17 (:REWRITE |(equal (- x) (- y))|))
 (17 2 (:DEFINITION INTEGER-ABS))
 (11 3 (:REWRITE |(+ y x)|))
 (10 10 (:REWRITE FOLD-CONSTS-IN-+))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 6 (:REWRITE |(equal (- x) 0)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION BOOL-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(FUN-NOT-EQUAL-FUN-RANGE
 (262 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (229 2 (:LINEAR ACL2-COUNT-0-LEN-0))
 (227 1 (:DEFINITION NTH))
 (187 2 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (178 8 (:DEFINITION ACL2-COUNT))
 (72 32 (:REWRITE DEFAULT-+-2))
 (69 69 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (44 32 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (22 6 (:REWRITE |(+ y x)|))
 (20 4 (:DEFINITION LEN))
 (18 17 (:REWRITE DEFAULT-CDR))
 (16 2 (:DEFINITION LENGTH))
 (14 14 (:TYPE-PRESCRIPTION LEN))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (13 12 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (8 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (3 2 (:REWRITE PRODUCT-TYPE-FUN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (1 1 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (1 1 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 (1 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-RANGE-FUN
 (36 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (14 7 (:REWRITE DEFAULT-+-2))
 (12 12 (:REWRITE DEFAULT-CDR))
 (10 10 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-FUN-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 )
(STYPE-P
 (569 38 (:DEFINITION ACL2-COUNT))
 (503 19 (:LINEAR ACL2-COUNT-0-LEN-0))
 (383 10 (:REWRITE NTH-WITH-LARGE-INDEX))
 (358 5 (:DEFINITION NTH))
 (238 114 (:REWRITE DEFAULT-+-2))
 (196 5 (:REWRITE FUN-P-PRODUCT-TYPE))
 (160 5 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (134 114 (:REWRITE DEFAULT-+-1))
 (106 2 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (102 2 (:DEFINITION BOOL-P))
 (79 79 (:REWRITE DEFAULT-CDR))
 (60 10 (:DEFINITION INTEGER-ABS))
 (57 57 (:REWRITE DEFAULT-CAR))
 (56 28 (:REWRITE |(+ 0 x)|))
 (55 15 (:REWRITE |(+ y x)|))
 (35 5 (:REWRITE |(+ (if a b c) x)|))
 (29 29 (:REWRITE |(equal (- x) (- y))|))
 (26 2 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 (24 17 (:REWRITE DEFAULT-<-2))
 (20 20 (:REWRITE FOLD-CONSTS-IN-+))
 (19 19 (:REWRITE |(equal (- x) 0)|))
 (19 19 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (19 17 (:REWRITE DEFAULT-<-1))
 (17 17 (:REWRITE |(< (- x) (- y))|))
 (13 1 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (12 6 (:REWRITE PRODUCT-TYPE-FUN-P))
 (10 10 (:REWRITE DEFAULT-UNARY-MINUS))
 (10 10 (:REWRITE |(< (- x) 0)|))
 (6 2 (:REWRITE |(< (+ d x) (+ c y))|))
 (6 2 (:REWRITE |(< (+ c x) (+ d y))|))
 (5 5 (:REWRITE DEFAULT-REALPART))
 (5 5 (:REWRITE DEFAULT-NUMERATOR))
 (5 5 (:REWRITE DEFAULT-IMAGPART))
 (5 5 (:REWRITE DEFAULT-DENOMINATOR))
 (5 5 (:REWRITE DEFAULT-COERCE-2))
 (5 5 (:REWRITE DEFAULT-COERCE-1))
 (4 2 (:REWRITE |(< d (+ c x))|))
 (4 2 (:REWRITE |(< (+ c x) d)|))
 (4 2 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE |(< 0 (- x))|))
 )
(STYPE-COMPOUND-RECOGNIZER)
(STYPE-POSSIBILITIES
 (26 2 (:REWRITE PRODUCT-TYPE-BOOL-P))
 (12 3 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (11 3 (:REWRITE FUN-P-PRODUCT-TYPE))
 (10 5 (:REWRITE DEFAULT-+-2))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-CAR))
 (6 6 (:REWRITE |(equal (- x) (- y))|))
 (6 1 (:REWRITE PRODUCT-TYPE-FUN-P))
 (5 5 (:REWRITE DEFAULT-+-1))
 (4 2 (:DEFINITION TRUE-LISTP))
 (4 2 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION BOOL-P))
 )
(STYPE-FUN-ACCESSOR-TYPES
 (2 1 (:REWRITE PRODUCT-TYPE-FUN-P))
 (1 1 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (1 1 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 )
(FUN-NOT-STYPE)
(STYPE-P-BOOL)
(STYPE-P-FUN
 (628 14 (:DEFINITION BOOL-P))
 (583 10 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (455 16 (:REWRITE FUN-NOT-STYPE))
 (378 18 (:LINEAR ACL2-COUNT-0-LEN-0))
 (298 8 (:REWRITE PRODUCT-TYPE-FUN-P))
 (216 18 (:DEFINITION ACL2-COUNT))
 (180 180 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (118 50 (:REWRITE DEFAULT-+-2))
 (85 85 (:TYPE-PRESCRIPTION LEN))
 (84 14 (:DEFINITION LENGTH))
 (70 14 (:DEFINITION LEN))
 (68 50 (:REWRITE DEFAULT-+-1))
 (56 56 (:REWRITE |(equal (- x) (- y))|))
 (42 42 (:REWRITE DEFAULT-CAR))
 (38 38 (:REWRITE DEFAULT-CDR))
 (26 10 (:REWRITE FUN-P-PRODUCT-TYPE))
 (24 6 (:DEFINITION TRUE-LISTP))
 (20 10 (:DEFINITION PRODUCT-TYPE))
 (20 8 (:REWRITE STYPE-FUN-ACCESSOR-TYPES))
 (18 18 (:REWRITE FOLD-CONSTS-IN-+))
 (18 18 (:REWRITE |(equal (- x) 0)|))
 (18 18 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (16 16 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (4 4 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (4 4 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 )
(STYPE-MEASURE
 (130 4 (:DEFINITION ACL2-COUNT))
 (38 18 (:REWRITE DEFAULT-+-2))
 (24 18 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (22 6 (:REWRITE |(+ y x)|))
 (16 2 (:REWRITE PRODUCT-TYPE-FUN-P))
 (16 2 (:DEFINITION LENGTH))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (10 2 (:DEFINITION LEN))
 (6 6 (:REWRITE FOLD-CONSTS-IN-+))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 2 (:REWRITE FUN-P-PRODUCT-TYPE))
 (6 2 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (4 4 (:TYPE-PRESCRIPTION BOOL-P))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (1 1 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 )
(FUN-MEASURE-DECR
 (60 9 (:REWRITE PRODUCT-TYPE-FUN-P))
 (50 20 (:REWRITE DEFAULT-+-2))
 (30 20 (:REWRITE DEFAULT-+-1))
 (23 9 (:REWRITE FUN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (14 14 (:TYPE-PRESCRIPTION BOOL-P))
 (11 11 (:REWRITE NOT-FUN-P-FUN-RANGE))
 (11 11 (:REWRITE NOT-FUN-P-FUN-DOMAIN))
 (10 10 (:REWRITE FOLD-CONSTS-IN-+))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (6 2 (:REWRITE DEFAULT-<-2))
 (6 2 (:REWRITE |(< d (+ c x))|))
 (4 2 (:REWRITE DEFAULT-<-1))
 (4 2 (:REWRITE |(< d (+ c x y))|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 )
(VN-P)
(VN)
(VN-NAME)
(VN-NUM)
(VN-P-COMPOUND-RECOGNIZER)
(VN-ACL2-COUNT
 (89 41 (:REWRITE DEFAULT-+-2))
 (52 41 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (32 4 (:DEFINITION LENGTH))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (20 4 (:DEFINITION LEN))
 (11 11 (:REWRITE DEFAULT-CDR))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE DEFAULT-<-2))
 (8 8 (:REWRITE DEFAULT-<-1))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (8 8 (:REWRITE |(< (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (4 4 (:TYPE-PRESCRIPTION LEN))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 )
(VN-NAME-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(VN-NUM-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-VN-P-VN-NAME
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-VN-P-VN-NUM
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(VN-P-VN
 (4 2 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE DEFAULT-CDR))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:REWRITE DEFAULT-+-1))
 )
(VN-ELIM
 (1366 8 (:LINEAR ACL2-COUNT-0-LEN-0))
 (1194 44 (:DEFINITION ACL2-COUNT))
 (971 7 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (451 202 (:REWRITE DEFAULT-+-2))
 (265 202 (:REWRITE DEFAULT-+-1))
 (175 175 (:REWRITE DEFAULT-CDR))
 (156 26 (:DEFINITION INTEGER-ABS))
 (146 40 (:REWRITE |(+ y x)|))
 (92 92 (:REWRITE DEFAULT-CAR))
 (91 13 (:REWRITE |(+ (if a b c) x)|))
 (78 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 28 (:REWRITE DEFAULT-<-2))
 (28 28 (:REWRITE DEFAULT-<-1))
 (28 28 (:REWRITE |(< (- x) (- y))|))
 (26 26 (:REWRITE DEFAULT-UNARY-MINUS))
 (26 26 (:REWRITE |(< (- x) 0)|))
 (16 16 (:REWRITE |(equal (- x) (- y))|))
 (16 7 (:REWRITE |(+ 0 x)|))
 (13 13 (:REWRITE DEFAULT-REALPART))
 (13 13 (:REWRITE DEFAULT-NUMERATOR))
 (13 13 (:REWRITE DEFAULT-IMAGPART))
 (13 13 (:REWRITE DEFAULT-DENOMINATOR))
 (13 13 (:REWRITE DEFAULT-COERCE-2))
 (13 13 (:REWRITE DEFAULT-COERCE-1))
 (10 1 (:REWRITE NOT-VN-P-VN-NUM))
 (10 1 (:REWRITE NOT-VN-P-VN-NAME))
 (8 8 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (6 3 (:REWRITE |(equal (if a b c) x)|))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE |(< 0 (- x))|))
 )
(VN-P-PRODUCT-TYPE)
(PRODUCT-TYPE-VN-P)
(VN-PRODUCT-TYPE)
(VN-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(VN-NAME-VN
 (30 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-VN-P-VN-NAME))
 (14 7 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-CDR))
 (9 9 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-VN-P))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE VN-P-PRODUCT-TYPE))
 )
(VN-NOT-EQUAL-NAME
 (140 8 (:DEFINITION ACL2-COUNT))
 (116 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (74 3 (:REWRITE PRODUCT-TYPE-VN-P))
 (72 1 (:DEFINITION NTH))
 (62 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (60 27 (:REWRITE DEFAULT-+-2))
 (40 1 (:REWRITE NOT-VN-P-VN-NAME))
 (35 27 (:REWRITE DEFAULT-+-1))
 (35 7 (:DEFINITION LEN))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (17 17 (:REWRITE DEFAULT-CDR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE DEFAULT-CAR))
 (13 13 (:REWRITE |(equal (- x) (- y))|))
 (11 3 (:REWRITE |(+ y x)|))
 (8 8 (:REWRITE FOLD-CONSTS-IN-+))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(VN-NOT-EQUAL-VN-NAME
 (261 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (229 2 (:LINEAR ACL2-COUNT-0-LEN-0))
 (226 1 (:DEFINITION NTH))
 (187 2 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (178 8 (:DEFINITION ACL2-COUNT))
 (72 32 (:REWRITE DEFAULT-+-2))
 (69 69 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (44 32 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (22 6 (:REWRITE |(+ y x)|))
 (20 4 (:DEFINITION LEN))
 (18 17 (:REWRITE DEFAULT-CDR))
 (16 2 (:DEFINITION LENGTH))
 (14 14 (:TYPE-PRESCRIPTION LEN))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (13 12 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (8 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (3 2 (:REWRITE PRODUCT-TYPE-VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (1 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (1 1 (:REWRITE NOT-VN-P-VN-NUM))
 (1 1 (:REWRITE NOT-VN-P-VN-NAME))
 )
(DIFFERENCE-NAME-VN
 (30 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-VN-P-VN-NAME))
 (14 7 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-CDR))
 (9 9 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-VN-P))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE VN-P-PRODUCT-TYPE))
 )
(VN-NUM-VN
 (36 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-VN-P-VN-NUM))
 (14 7 (:REWRITE DEFAULT-+-2))
 (12 12 (:REWRITE DEFAULT-CDR))
 (10 10 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-VN-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE VN-P-PRODUCT-TYPE))
 )
(VN-NOT-EQUAL-NUM
 (140 8 (:DEFINITION ACL2-COUNT))
 (116 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (74 3 (:REWRITE PRODUCT-TYPE-VN-P))
 (71 1 (:DEFINITION NTH))
 (62 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (60 27 (:REWRITE DEFAULT-+-2))
 (40 1 (:REWRITE NOT-VN-P-VN-NUM))
 (35 27 (:REWRITE DEFAULT-+-1))
 (35 7 (:DEFINITION LEN))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (17 17 (:REWRITE DEFAULT-CDR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE DEFAULT-CAR))
 (13 13 (:REWRITE |(equal (- x) (- y))|))
 (11 3 (:REWRITE |(+ y x)|))
 (8 8 (:REWRITE FOLD-CONSTS-IN-+))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(VN-NOT-EQUAL-VN-NUM
 (262 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (229 2 (:LINEAR ACL2-COUNT-0-LEN-0))
 (227 1 (:DEFINITION NTH))
 (187 2 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (178 8 (:DEFINITION ACL2-COUNT))
 (72 32 (:REWRITE DEFAULT-+-2))
 (69 69 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (44 32 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (22 6 (:REWRITE |(+ y x)|))
 (20 4 (:DEFINITION LEN))
 (18 17 (:REWRITE DEFAULT-CDR))
 (16 2 (:DEFINITION LENGTH))
 (14 14 (:TYPE-PRESCRIPTION LEN))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (13 12 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (8 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (3 2 (:REWRITE PRODUCT-TYPE-VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (1 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (1 1 (:REWRITE NOT-VN-P-VN-NUM))
 (1 1 (:REWRITE NOT-VN-P-VN-NAME))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-NUM-VN
 (36 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-VN-P-VN-NUM))
 (14 7 (:REWRITE DEFAULT-+-2))
 (12 12 (:REWRITE DEFAULT-CDR))
 (10 10 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-VN-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE VN-P-PRODUCT-TYPE))
 )
(VARNAME-P)
(VARNAME-COMPOUND-RECOGNIZER)
(VARNAME-POSSIBILITIES)
(VARNAME-VN-ACCESSOR-TYPES)
(VN-NOT-VARNAME
 (13 1 (:REWRITE PRODUCT-TYPE-VN-P))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(VARNAME-P-VN
 (8 1 (:REWRITE VN-NOT-VARNAME))
 (2 1 (:REWRITE PRODUCT-TYPE-VN-P))
 (1 1 (:TYPE-PRESCRIPTION VN-P))
 (1 1 (:TYPE-PRESCRIPTION NATP))
 (1 1 (:REWRITE VN-PRODUCT-TYPE))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE |(< (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(VARNAME-MEASURE)
(VARNAME-LISTP)
(VARNAME-LISTP-APPEND
 (10 10 (:REWRITE DEFAULT-CDR))
 (10 10 (:REWRITE DEFAULT-CAR))
 )
(VARNAME-LISTP-BUTLAST)
(VARNAME-LISTP-CONS)
(VARNAME-LISTP-CAR)
(VARNAME-LISTP-CDR)
(VARNAME-LISTP-FIRSTN)
(VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL)
(VARNAME-LISTP-LAST)
(VARNAME-LISTP-MAKE-LIST)
(VARNAME-LISTP-MEMBER-EQUAL)
(VARNAME-LISTP-MEMBERP-EQUAL)
(VARNAME-LISTP-NTH)
(VARNAME-LISTP-NTH-SEG)
(VARNAME-LISTP-NTHCDR)
(VARNAME-LISTP-PUT-NTH)
(VARNAME-LISTP-PUT-SEG)
(VARNAME-LISTP-REMOVE-DUPLICATES-EQUAL)
(VARNAME-LISTP-REMOVE-EQUAL)
(VARNAME-LISTP-REVERSE)
(VARNAME-LISTP-SUBSEQ)
(VARNAME-LISTP-TRUE-LISTP)
(VARNAME-LISTP-UPDATE-NTH)
(ACL2-NUMBERP-VARNAME-NUM)
(TRUE-P)
(TRUE)
(TRUE-P-COMPOUND-RECOGNIZER)
(TRUE-ACL2-COUNT)
(TRUE-P-TRUE)
(TRUE-UNIQUE
 (62 3 (:LINEAR ACL2-COUNT-0-LEN-0))
 (41 4 (:DEFINITION ACL2-COUNT))
 (25 12 (:REWRITE DEFAULT-+-2))
 (13 12 (:REWRITE DEFAULT-+-1))
 (12 12 (:REWRITE DEFAULT-CDR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (6 3 (:REWRITE |(+ 0 x)|))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE CAR-CONS))
 )
(TRUE-P-PRODUCT-TYPE)
(PRODUCT-TYPE-TRUE-P)
(TRUE-PRODUCT-TYPE)
(TRUE-EQUAL-PRODUCT-TYPE)
(FALSE-P)
(FALSE)
(FALSE-P-COMPOUND-RECOGNIZER)
(FALSE-ACL2-COUNT)
(FALSE-P-FALSE)
(FALSE-UNIQUE
 (62 3 (:LINEAR ACL2-COUNT-0-LEN-0))
 (41 4 (:DEFINITION ACL2-COUNT))
 (25 12 (:REWRITE DEFAULT-+-2))
 (13 12 (:REWRITE DEFAULT-+-1))
 (12 12 (:REWRITE DEFAULT-CDR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (6 3 (:REWRITE |(+ 0 x)|))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE CAR-CONS))
 )
(FALSE-P-PRODUCT-TYPE)
(PRODUCT-TYPE-FALSE-P)
(FALSE-PRODUCT-TYPE)
(FALSE-EQUAL-PRODUCT-TYPE)
(LAM-P)
(LAM)
(LAM-VAR)
(LAM-TYPE)
(LAM-BODY)
(LAM-P-COMPOUND-RECOGNIZER)
(LAM-ACL2-COUNT
 (147 64 (:REWRITE DEFAULT-+-2))
 (84 64 (:REWRITE DEFAULT-+-1))
 (72 12 (:DEFINITION INTEGER-ABS))
 (48 6 (:DEFINITION LENGTH))
 (42 6 (:REWRITE |(+ (if a b c) x)|))
 (30 6 (:DEFINITION LEN))
 (16 16 (:REWRITE DEFAULT-CDR))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) 0)|))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (10 10 (:REWRITE DEFAULT-CAR))
 (6 6 (:TYPE-PRESCRIPTION LEN))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE DEFAULT-COERCE-2))
 (6 6 (:REWRITE DEFAULT-COERCE-1))
 )
(LAM-VAR-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(LAM-TYPE-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(LAM-BODY-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-LAM-P-LAM-VAR
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-LAM-P-LAM-TYPE
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-LAM-P-LAM-BODY
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(LAM-P-LAM
 (6 3 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:TYPE-PRESCRIPTION LEN))
 (3 3 (:REWRITE DEFAULT-+-1))
 )
(LAM-ELIM
 (2823 10 (:LINEAR ACL2-COUNT-0-LEN-0))
 (2536 78 (:DEFINITION ACL2-COUNT))
 (2115 10 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (950 402 (:REWRITE DEFAULT-+-2))
 (526 402 (:REWRITE DEFAULT-+-1))
 (346 346 (:REWRITE DEFAULT-CDR))
 (336 56 (:DEFINITION INTEGER-ABS))
 (314 86 (:REWRITE |(+ y x)|))
 (196 28 (:REWRITE |(+ (if a b c) x)|))
 (153 153 (:REWRITE DEFAULT-CAR))
 (127 10 (:REWRITE |(+ y (+ x z))|))
 (117 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (62 59 (:REWRITE DEFAULT-<-2))
 (59 59 (:REWRITE DEFAULT-<-1))
 (59 59 (:REWRITE |(< (- x) (- y))|))
 (56 56 (:REWRITE DEFAULT-UNARY-MINUS))
 (56 56 (:REWRITE |(< (- x) 0)|))
 (28 28 (:REWRITE DEFAULT-REALPART))
 (28 28 (:REWRITE DEFAULT-NUMERATOR))
 (28 28 (:REWRITE DEFAULT-IMAGPART))
 (28 28 (:REWRITE DEFAULT-DENOMINATOR))
 (28 28 (:REWRITE DEFAULT-COERCE-2))
 (28 28 (:REWRITE DEFAULT-COERCE-1))
 (22 9 (:REWRITE |(+ 0 x)|))
 (17 17 (:REWRITE |(equal (- x) (- y))|))
 (10 10 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (10 4 (:REWRITE |(equal (if a b c) x)|))
 (10 1 (:REWRITE NOT-LAM-P-LAM-VAR))
 (10 1 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (10 1 (:REWRITE NOT-LAM-P-LAM-BODY))
 (5 5 (:REWRITE |(equal (- x) 0)|))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (3 3 (:TYPE-PRESCRIPTION LAM-P))
 (3 3 (:REWRITE |(< 0 (- x))|))
 )
(LAM-P-PRODUCT-TYPE)
(PRODUCT-TYPE-LAM-P)
(LAM-PRODUCT-TYPE)
(LAM-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(LAM-VAR-LAM
 (42 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-LAM-P-LAM-VAR))
 (22 11 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-CDR))
 (13 13 (:TYPE-PRESCRIPTION LEN))
 (11 11 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-LAM-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 )
(LAM-NOT-EQUAL-VAR
 (201 3 (:REWRITE PRODUCT-TYPE-LAM-P))
 (200 8 (:LINEAR ACL2-COUNT-0-LEN-0))
 (188 12 (:DEFINITION ACL2-COUNT))
 (84 37 (:REWRITE DEFAULT-+-2))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 1 (:DEFINITION NTH))
 (62 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (62 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION TRUE-P))
 (60 1 (:DEFINITION FALSE-P))
 (49 37 (:REWRITE DEFAULT-+-1))
 (45 9 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-LAM-P-LAM-VAR))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (23 23 (:REWRITE DEFAULT-CDR))
 (21 21 (:REWRITE |(equal (- x) (- y))|))
 (20 20 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (11 3 (:REWRITE |(+ y x)|))
 (8 8 (:REWRITE |(equal (- x) 0)|))
 (8 8 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION FALSE-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(LAM-NOT-EQUAL-LAM-VAR
 (522 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (452 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-LAM-P))
 (1 1 (:REWRITE NOT-LAM-P-LAM-VAR))
 (1 1 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (1 1 (:REWRITE NOT-LAM-P-LAM-BODY))
 (1 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 )
(DIFFERENCE-VAR-LAM
 (42 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-LAM-P-LAM-VAR))
 (22 11 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-CDR))
 (13 13 (:TYPE-PRESCRIPTION LEN))
 (11 11 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-LAM-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 )
(LAM-TYPE-LAM
 (54 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (24 12 (:REWRITE DEFAULT-+-2))
 (17 17 (:REWRITE DEFAULT-CDR))
 (15 15 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-LAM-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 )
(LAM-NOT-EQUAL-TYPE
 (201 3 (:REWRITE PRODUCT-TYPE-LAM-P))
 (200 8 (:LINEAR ACL2-COUNT-0-LEN-0))
 (188 12 (:DEFINITION ACL2-COUNT))
 (84 37 (:REWRITE DEFAULT-+-2))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (71 1 (:DEFINITION NTH))
 (62 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (62 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION TRUE-P))
 (60 1 (:DEFINITION FALSE-P))
 (49 37 (:REWRITE DEFAULT-+-1))
 (45 9 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (23 23 (:REWRITE DEFAULT-CDR))
 (21 21 (:REWRITE |(equal (- x) (- y))|))
 (20 20 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (11 3 (:REWRITE |(+ y x)|))
 (8 8 (:REWRITE |(equal (- x) 0)|))
 (8 8 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION FALSE-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(LAM-NOT-EQUAL-LAM-TYPE
 (523 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (453 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-LAM-P))
 (1 1 (:REWRITE NOT-LAM-P-LAM-VAR))
 (1 1 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (1 1 (:REWRITE NOT-LAM-P-LAM-BODY))
 (1 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-TYPE-LAM
 (54 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (24 12 (:REWRITE DEFAULT-+-2))
 (17 17 (:REWRITE DEFAULT-CDR))
 (15 15 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-LAM-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 )
(LAM-BODY-LAM
 (60 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-LAM-P-LAM-BODY))
 (24 12 (:REWRITE DEFAULT-+-2))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 16 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 2 (:REWRITE PRODUCT-TYPE-LAM-P))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 )
(LAM-NOT-EQUAL-BODY
 (201 3 (:REWRITE PRODUCT-TYPE-LAM-P))
 (200 8 (:LINEAR ACL2-COUNT-0-LEN-0))
 (188 12 (:DEFINITION ACL2-COUNT))
 (84 37 (:REWRITE DEFAULT-+-2))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (71 1 (:DEFINITION NTH))
 (62 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (62 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION TRUE-P))
 (60 1 (:DEFINITION FALSE-P))
 (49 37 (:REWRITE DEFAULT-+-1))
 (45 9 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-LAM-P-LAM-BODY))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (23 23 (:REWRITE DEFAULT-CDR))
 (21 21 (:REWRITE |(equal (- x) (- y))|))
 (20 20 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (11 3 (:REWRITE |(+ y x)|))
 (8 8 (:REWRITE |(equal (- x) 0)|))
 (8 8 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION FALSE-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(LAM-NOT-EQUAL-LAM-BODY
 (523 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (453 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-LAM-P))
 (1 1 (:REWRITE NOT-LAM-P-LAM-VAR))
 (1 1 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (1 1 (:REWRITE NOT-LAM-P-LAM-BODY))
 (1 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-BODY-LAM
 (60 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-LAM-P-LAM-BODY))
 (24 12 (:REWRITE DEFAULT-+-2))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 16 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 2 (:REWRITE PRODUCT-TYPE-LAM-P))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 )
(APP-P)
(APP)
(APP-FUN)
(APP-ARG)
(APP-P-COMPOUND-RECOGNIZER)
(APP-ACL2-COUNT
 (89 41 (:REWRITE DEFAULT-+-2))
 (52 41 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (32 4 (:DEFINITION LENGTH))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (20 4 (:DEFINITION LEN))
 (11 11 (:REWRITE DEFAULT-CDR))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE DEFAULT-<-2))
 (8 8 (:REWRITE DEFAULT-<-1))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (8 8 (:REWRITE |(< (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (4 4 (:TYPE-PRESCRIPTION LEN))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 )
(APP-FUN-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(APP-ARG-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-APP-P-APP-FUN
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-APP-P-APP-ARG
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(APP-P-APP
 (4 2 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE DEFAULT-CDR))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:REWRITE DEFAULT-+-1))
 )
(APP-ELIM
 (1366 8 (:LINEAR ACL2-COUNT-0-LEN-0))
 (1194 44 (:DEFINITION ACL2-COUNT))
 (971 7 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (451 202 (:REWRITE DEFAULT-+-2))
 (265 202 (:REWRITE DEFAULT-+-1))
 (175 175 (:REWRITE DEFAULT-CDR))
 (156 26 (:DEFINITION INTEGER-ABS))
 (146 40 (:REWRITE |(+ y x)|))
 (92 92 (:REWRITE DEFAULT-CAR))
 (91 13 (:REWRITE |(+ (if a b c) x)|))
 (78 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 28 (:REWRITE DEFAULT-<-2))
 (28 28 (:REWRITE DEFAULT-<-1))
 (28 28 (:REWRITE |(< (- x) (- y))|))
 (26 26 (:REWRITE DEFAULT-UNARY-MINUS))
 (26 26 (:REWRITE |(< (- x) 0)|))
 (16 16 (:REWRITE |(equal (- x) (- y))|))
 (16 7 (:REWRITE |(+ 0 x)|))
 (13 13 (:REWRITE DEFAULT-REALPART))
 (13 13 (:REWRITE DEFAULT-NUMERATOR))
 (13 13 (:REWRITE DEFAULT-IMAGPART))
 (13 13 (:REWRITE DEFAULT-DENOMINATOR))
 (13 13 (:REWRITE DEFAULT-COERCE-2))
 (13 13 (:REWRITE DEFAULT-COERCE-1))
 (10 1 (:REWRITE NOT-APP-P-APP-FUN))
 (10 1 (:REWRITE NOT-APP-P-APP-ARG))
 (8 8 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (6 3 (:REWRITE |(equal (if a b c) x)|))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE |(< 0 (- x))|))
 )
(APP-P-PRODUCT-TYPE)
(PRODUCT-TYPE-APP-P)
(APP-PRODUCT-TYPE)
(APP-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(APP-FUN-APP
 (30 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-APP-P-APP-FUN))
 (14 7 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-CDR))
 (9 9 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-APP-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE APP-P-PRODUCT-TYPE))
 )
(APP-NOT-EQUAL-FUN
 (263 3 (:REWRITE PRODUCT-TYPE-APP-P))
 (242 10 (:LINEAR ACL2-COUNT-0-LEN-0))
 (212 14 (:DEFINITION ACL2-COUNT))
 (96 42 (:REWRITE DEFAULT-+-2))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 1 (:DEFINITION NTH))
 (62 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (62 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION TRUE-P))
 (60 1 (:DEFINITION LAM-P))
 (60 1 (:DEFINITION FALSE-P))
 (56 42 (:REWRITE DEFAULT-+-1))
 (50 10 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-APP-P-APP-FUN))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (26 26 (:REWRITE DEFAULT-CDR))
 (25 25 (:REWRITE |(equal (- x) (- y))|))
 (23 23 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE FOLD-CONSTS-IN-+))
 (11 3 (:REWRITE |(+ y x)|))
 (10 10 (:REWRITE |(equal (- x) 0)|))
 (10 10 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION LAM-P))
 (1 1 (:TYPE-PRESCRIPTION FALSE-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(APP-NOT-EQUAL-APP-FUN
 (261 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (229 2 (:LINEAR ACL2-COUNT-0-LEN-0))
 (226 1 (:DEFINITION NTH))
 (187 2 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (178 8 (:DEFINITION ACL2-COUNT))
 (72 32 (:REWRITE DEFAULT-+-2))
 (69 69 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (44 32 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (22 6 (:REWRITE |(+ y x)|))
 (20 4 (:DEFINITION LEN))
 (18 17 (:REWRITE DEFAULT-CDR))
 (16 2 (:DEFINITION LENGTH))
 (14 14 (:TYPE-PRESCRIPTION LEN))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (13 12 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (8 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (3 2 (:REWRITE PRODUCT-TYPE-APP-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (1 1 (:REWRITE NOT-APP-P-APP-FUN))
 (1 1 (:REWRITE NOT-APP-P-APP-ARG))
 (1 1 (:REWRITE APP-P-PRODUCT-TYPE))
 )
(DIFFERENCE-FUN-APP
 (30 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-APP-P-APP-FUN))
 (14 7 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-CDR))
 (9 9 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-APP-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE APP-P-PRODUCT-TYPE))
 )
(APP-ARG-APP
 (36 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-APP-P-APP-ARG))
 (14 7 (:REWRITE DEFAULT-+-2))
 (12 12 (:REWRITE DEFAULT-CDR))
 (10 10 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-APP-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE APP-P-PRODUCT-TYPE))
 )
(APP-NOT-EQUAL-ARG
 (263 3 (:REWRITE PRODUCT-TYPE-APP-P))
 (242 10 (:LINEAR ACL2-COUNT-0-LEN-0))
 (212 14 (:DEFINITION ACL2-COUNT))
 (96 42 (:REWRITE DEFAULT-+-2))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (71 1 (:DEFINITION NTH))
 (62 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (62 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION TRUE-P))
 (60 1 (:DEFINITION LAM-P))
 (60 1 (:DEFINITION FALSE-P))
 (56 42 (:REWRITE DEFAULT-+-1))
 (50 10 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-APP-P-APP-ARG))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (26 26 (:REWRITE DEFAULT-CDR))
 (25 25 (:REWRITE |(equal (- x) (- y))|))
 (23 23 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE FOLD-CONSTS-IN-+))
 (11 3 (:REWRITE |(+ y x)|))
 (10 10 (:REWRITE |(equal (- x) 0)|))
 (10 10 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION LAM-P))
 (1 1 (:TYPE-PRESCRIPTION FALSE-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(APP-NOT-EQUAL-APP-ARG
 (262 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (229 2 (:LINEAR ACL2-COUNT-0-LEN-0))
 (227 1 (:DEFINITION NTH))
 (187 2 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (178 8 (:DEFINITION ACL2-COUNT))
 (72 32 (:REWRITE DEFAULT-+-2))
 (69 69 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (44 32 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (22 6 (:REWRITE |(+ y x)|))
 (20 4 (:DEFINITION LEN))
 (18 17 (:REWRITE DEFAULT-CDR))
 (16 2 (:DEFINITION LENGTH))
 (14 14 (:TYPE-PRESCRIPTION LEN))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (13 12 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (8 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (3 2 (:REWRITE PRODUCT-TYPE-APP-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (1 1 (:REWRITE NOT-APP-P-APP-FUN))
 (1 1 (:REWRITE NOT-APP-P-APP-ARG))
 (1 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-ARG-APP
 (36 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (24 1 (:REWRITE NOT-APP-P-APP-ARG))
 (14 7 (:REWRITE DEFAULT-+-2))
 (12 12 (:REWRITE DEFAULT-CDR))
 (10 10 (:TYPE-PRESCRIPTION LEN))
 (7 7 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-APP-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE APP-P-PRODUCT-TYPE))
 )
(VAR-P)
(VAR)
(VAR-NAME)
(VAR-P-COMPOUND-RECOGNIZER)
(VAR-ACL2-COUNT
 (40 20 (:REWRITE DEFAULT-+-2))
 (24 20 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (16 2 (:DEFINITION LENGTH))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (10 2 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 )
(VAR-NAME-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-VAR-P-VAR-NAME
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(VAR-P-VAR
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:TYPE-PRESCRIPTION LEN))
 (1 1 (:REWRITE DEFAULT-+-1))
 )
(VAR-ELIM
 (341 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (259 18 (:DEFINITION ACL2-COUNT))
 (148 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (125 56 (:REWRITE DEFAULT-+-2))
 (71 56 (:REWRITE DEFAULT-+-1))
 (69 69 (:REWRITE DEFAULT-CDR))
 (43 43 (:REWRITE DEFAULT-CAR))
 (39 1 (:REWRITE NTH-WITH-LARGE-INDEX))
 (15 15 (:REWRITE FOLD-CONSTS-IN-+))
 (15 15 (:REWRITE |(equal (- x) (- y))|))
 (14 7 (:REWRITE |(+ 0 x)|))
 (12 2 (:DEFINITION INTEGER-ABS))
 (11 3 (:REWRITE |(+ y x)|))
 (10 1 (:REWRITE NOT-VAR-P-VAR-NAME))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE |(equal (- x) 0)|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (3 2 (:REWRITE |(equal (if a b c) x)|))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (1 1 (:TYPE-PRESCRIPTION VAR-P))
 (1 1 (:TYPE-PRESCRIPTION NFIX))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(VAR-P-PRODUCT-TYPE)
(PRODUCT-TYPE-VAR-P)
(VAR-PRODUCT-TYPE)
(VAR-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(VAR-NAME-VAR
 (18 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (18 1 (:REWRITE NOT-VAR-P-VAR-NAME))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (5 5 (:TYPE-PRESCRIPTION LEN))
 (4 2 (:REWRITE PRODUCT-TYPE-VAR-P))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 )
(VAR-NOT-EQUAL-NAME
 (325 3 (:REWRITE PRODUCT-TYPE-VAR-P))
 (284 12 (:LINEAR ACL2-COUNT-0-LEN-0))
 (236 16 (:DEFINITION ACL2-COUNT))
 (108 47 (:REWRITE DEFAULT-+-2))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 1 (:DEFINITION NTH))
 (63 47 (:REWRITE DEFAULT-+-1))
 (62 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (62 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION TRUE-P))
 (60 1 (:DEFINITION LAM-P))
 (60 1 (:DEFINITION FALSE-P))
 (60 1 (:DEFINITION APP-P))
 (55 11 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-VAR-P-VAR-NAME))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (29 29 (:REWRITE DEFAULT-CDR))
 (29 29 (:REWRITE |(equal (- x) (- y))|))
 (26 26 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (16 16 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE |(equal (- x) 0)|))
 (12 12 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (11 3 (:REWRITE |(+ y x)|))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION LAM-P))
 (1 1 (:TYPE-PRESCRIPTION FALSE-P))
 (1 1 (:TYPE-PRESCRIPTION APP-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(VAR-NOT-EQUAL-VAR-NAME
 (3 2 (:REWRITE DEFAULT-CDR))
 (3 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE PRODUCT-TYPE-VAR-P))
 (1 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (1 1 (:REWRITE NOT-VAR-P-VAR-NAME))
 )
(DIFFERENCE-NAME-VAR
 (18 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (18 1 (:REWRITE NOT-VAR-P-VAR-NAME))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (5 5 (:TYPE-PRESCRIPTION LEN))
 (4 2 (:REWRITE PRODUCT-TYPE-VAR-P))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 )
(IFELSE-P)
(IFELSE)
(IFELSE-COND)
(IFELSE-CASE1)
(IFELSE-CASE2)
(IFELSE-P-COMPOUND-RECOGNIZER)
(IFELSE-ACL2-COUNT
 (147 64 (:REWRITE DEFAULT-+-2))
 (84 64 (:REWRITE DEFAULT-+-1))
 (72 12 (:DEFINITION INTEGER-ABS))
 (48 6 (:DEFINITION LENGTH))
 (42 6 (:REWRITE |(+ (if a b c) x)|))
 (30 6 (:DEFINITION LEN))
 (16 16 (:REWRITE DEFAULT-CDR))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) 0)|))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (10 10 (:REWRITE DEFAULT-CAR))
 (6 6 (:TYPE-PRESCRIPTION LEN))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE DEFAULT-COERCE-2))
 (6 6 (:REWRITE DEFAULT-COERCE-1))
 )
(IFELSE-COND-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(IFELSE-CASE1-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(IFELSE-CASE2-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-IFELSE-P-IFELSE-COND
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-IFELSE-P-IFELSE-CASE1
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-IFELSE-P-IFELSE-CASE2
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(IFELSE-P-IFELSE
 (6 3 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:TYPE-PRESCRIPTION LEN))
 (3 3 (:REWRITE DEFAULT-+-1))
 )
(IFELSE-ELIM
 (2823 10 (:LINEAR ACL2-COUNT-0-LEN-0))
 (2536 78 (:DEFINITION ACL2-COUNT))
 (2115 10 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (950 402 (:REWRITE DEFAULT-+-2))
 (526 402 (:REWRITE DEFAULT-+-1))
 (346 346 (:REWRITE DEFAULT-CDR))
 (336 56 (:DEFINITION INTEGER-ABS))
 (314 86 (:REWRITE |(+ y x)|))
 (196 28 (:REWRITE |(+ (if a b c) x)|))
 (153 153 (:REWRITE DEFAULT-CAR))
 (127 10 (:REWRITE |(+ y (+ x z))|))
 (117 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (62 59 (:REWRITE DEFAULT-<-2))
 (59 59 (:REWRITE DEFAULT-<-1))
 (59 59 (:REWRITE |(< (- x) (- y))|))
 (56 56 (:REWRITE DEFAULT-UNARY-MINUS))
 (56 56 (:REWRITE |(< (- x) 0)|))
 (28 28 (:REWRITE DEFAULT-REALPART))
 (28 28 (:REWRITE DEFAULT-NUMERATOR))
 (28 28 (:REWRITE DEFAULT-IMAGPART))
 (28 28 (:REWRITE DEFAULT-DENOMINATOR))
 (28 28 (:REWRITE DEFAULT-COERCE-2))
 (28 28 (:REWRITE DEFAULT-COERCE-1))
 (22 9 (:REWRITE |(+ 0 x)|))
 (17 17 (:REWRITE |(equal (- x) (- y))|))
 (10 10 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (10 4 (:REWRITE |(equal (if a b c) x)|))
 (10 1 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (10 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (10 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (5 5 (:REWRITE |(equal (- x) 0)|))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (3 3 (:TYPE-PRESCRIPTION IFELSE-P))
 (3 3 (:REWRITE |(< 0 (- x))|))
 )
(IFELSE-P-PRODUCT-TYPE)
(PRODUCT-TYPE-IFELSE-P)
(IFELSE-PRODUCT-TYPE)
(IFELSE-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(IFELSE-COND-IFELSE
 (42 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (22 11 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-CDR))
 (13 13 (:TYPE-PRESCRIPTION LEN))
 (11 11 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 )
(IFELSE-NOT-EQUAL-COND
 (387 3 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (326 14 (:LINEAR ACL2-COUNT-0-LEN-0))
 (260 18 (:DEFINITION ACL2-COUNT))
 (120 52 (:REWRITE DEFAULT-+-2))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 1 (:DEFINITION NTH))
 (70 52 (:REWRITE DEFAULT-+-1))
 (62 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (62 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (60 12 (:DEFINITION LEN))
 (60 1 (:DEFINITION VAR-P))
 (60 1 (:DEFINITION TRUE-P))
 (60 1 (:DEFINITION LAM-P))
 (60 1 (:DEFINITION FALSE-P))
 (60 1 (:DEFINITION APP-P))
 (40 1 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (33 33 (:REWRITE |(equal (- x) (- y))|))
 (32 32 (:REWRITE DEFAULT-CDR))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (29 29 (:REWRITE DEFAULT-CAR))
 (18 18 (:REWRITE FOLD-CONSTS-IN-+))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE |(equal (- x) 0)|))
 (14 14 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (11 3 (:REWRITE |(+ y x)|))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION VAR-P))
 (1 1 (:TYPE-PRESCRIPTION TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION LAM-P))
 (1 1 (:TYPE-PRESCRIPTION FALSE-P))
 (1 1 (:TYPE-PRESCRIPTION APP-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(IFELSE-NOT-EQUAL-IFELSE-COND
 (522 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (452 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (1 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 )
(DIFFERENCE-COND-IFELSE
 (42 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (22 11 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-CDR))
 (13 13 (:TYPE-PRESCRIPTION LEN))
 (11 11 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 )
(IFELSE-CASE1-IFELSE
 (54 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (24 12 (:REWRITE DEFAULT-+-2))
 (17 17 (:REWRITE DEFAULT-CDR))
 (15 15 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 )
(IFELSE-NOT-EQUAL-CASE1
 (387 3 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (326 14 (:LINEAR ACL2-COUNT-0-LEN-0))
 (260 18 (:DEFINITION ACL2-COUNT))
 (120 52 (:REWRITE DEFAULT-+-2))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (71 1 (:DEFINITION NTH))
 (70 52 (:REWRITE DEFAULT-+-1))
 (62 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (62 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (60 12 (:DEFINITION LEN))
 (60 1 (:DEFINITION VAR-P))
 (60 1 (:DEFINITION TRUE-P))
 (60 1 (:DEFINITION LAM-P))
 (60 1 (:DEFINITION FALSE-P))
 (60 1 (:DEFINITION APP-P))
 (40 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (33 33 (:REWRITE |(equal (- x) (- y))|))
 (32 32 (:REWRITE DEFAULT-CDR))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (29 29 (:REWRITE DEFAULT-CAR))
 (18 18 (:REWRITE FOLD-CONSTS-IN-+))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE |(equal (- x) 0)|))
 (14 14 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (11 3 (:REWRITE |(+ y x)|))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION VAR-P))
 (1 1 (:TYPE-PRESCRIPTION TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION LAM-P))
 (1 1 (:TYPE-PRESCRIPTION FALSE-P))
 (1 1 (:TYPE-PRESCRIPTION APP-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(IFELSE-NOT-EQUAL-IFELSE-CASE1
 (523 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (453 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (1 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-CASE1-IFELSE
 (54 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (24 12 (:REWRITE DEFAULT-+-2))
 (17 17 (:REWRITE DEFAULT-CDR))
 (15 15 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 )
(IFELSE-CASE2-IFELSE
 (60 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (24 12 (:REWRITE DEFAULT-+-2))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 16 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 2 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 )
(IFELSE-NOT-EQUAL-CASE2
 (387 3 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (326 14 (:LINEAR ACL2-COUNT-0-LEN-0))
 (260 18 (:DEFINITION ACL2-COUNT))
 (120 52 (:REWRITE DEFAULT-+-2))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (71 1 (:DEFINITION NTH))
 (70 52 (:REWRITE DEFAULT-+-1))
 (62 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (62 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (60 12 (:DEFINITION LEN))
 (60 1 (:DEFINITION VAR-P))
 (60 1 (:DEFINITION TRUE-P))
 (60 1 (:DEFINITION LAM-P))
 (60 1 (:DEFINITION FALSE-P))
 (60 1 (:DEFINITION APP-P))
 (40 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (33 33 (:REWRITE |(equal (- x) (- y))|))
 (32 32 (:REWRITE DEFAULT-CDR))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (29 29 (:REWRITE DEFAULT-CAR))
 (18 18 (:REWRITE FOLD-CONSTS-IN-+))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE |(equal (- x) 0)|))
 (14 14 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (11 3 (:REWRITE |(+ y x)|))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION VAR-P))
 (1 1 (:TYPE-PRESCRIPTION TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION LAM-P))
 (1 1 (:TYPE-PRESCRIPTION FALSE-P))
 (1 1 (:TYPE-PRESCRIPTION APP-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(IFELSE-NOT-EQUAL-IFELSE-CASE2
 (523 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (453 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (1 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-CASE2-IFELSE
 (60 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (24 12 (:REWRITE DEFAULT-+-2))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 16 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 2 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 )
(EXPRESSION-P
 (5272 272 (:LINEAR ACL2-COUNT-0-LEN-0))
 (3393 333 (:DEFINITION ACL2-COUNT))
 (1918 35 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (1380 672 (:REWRITE DEFAULT-+-2))
 (1376 36 (:REWRITE NTH-WITH-LARGE-INDEX))
 (1286 18 (:DEFINITION NTH))
 (1219 23 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (1173 23 (:DEFINITION TRUE-P))
 (1036 29 (:REWRITE APP-P-PRODUCT-TYPE))
 (907 23 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (867 17 (:DEFINITION FALSE-P))
 (789 26 (:REWRITE LAM-P-PRODUCT-TYPE))
 (734 672 (:REWRITE DEFAULT-+-1))
 (649 29 (:REWRITE VAR-P-PRODUCT-TYPE))
 (604 302 (:REWRITE |(+ 0 x)|))
 (603 17 (:DEFINITION VAR-P))
 (576 576 (:REWRITE DEFAULT-CDR))
 (576 18 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (509 509 (:REWRITE DEFAULT-CAR))
 (408 408 (:REWRITE |(equal (- x) (- y))|))
 (272 272 (:REWRITE |(equal (- x) 0)|))
 (272 272 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (156 26 (:DEFINITION INTEGER-ABS))
 (143 39 (:REWRITE |(+ y x)|))
 (91 13 (:REWRITE |(+ (if a b c) x)|))
 (74 50 (:REWRITE DEFAULT-<-2))
 (69 23 (:REWRITE VN-P-PRODUCT-TYPE))
 (69 23 (:REWRITE FUN-P-PRODUCT-TYPE))
 (69 23 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (62 62 (:REWRITE FOLD-CONSTS-IN-+))
 (62 2 (:REWRITE NOT-APP-P-APP-FUN))
 (56 50 (:REWRITE DEFAULT-<-1))
 (50 50 (:REWRITE |(< (- x) (- y))|))
 (48 48 (:TYPE-PRESCRIPTION VN-P))
 (41 1 (:REWRITE NOT-LAM-P-LAM-VAR))
 (41 1 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (41 1 (:REWRITE NOT-LAM-P-LAM-BODY))
 (39 3 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (31 1 (:REWRITE NOT-APP-P-APP-ARG))
 (26 26 (:REWRITE DEFAULT-UNARY-MINUS))
 (26 26 (:REWRITE |(< (- x) 0)|))
 (26 2 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (24 12 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (18 6 (:REWRITE |(< (+ d x) (+ c y))|))
 (18 6 (:REWRITE |(< (+ c x) (+ d y))|))
 (13 13 (:REWRITE DEFAULT-REALPART))
 (13 13 (:REWRITE DEFAULT-NUMERATOR))
 (13 13 (:REWRITE DEFAULT-IMAGPART))
 (13 13 (:REWRITE DEFAULT-DENOMINATOR))
 (13 13 (:REWRITE DEFAULT-COERCE-2))
 (13 13 (:REWRITE DEFAULT-COERCE-1))
 (13 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (12 6 (:REWRITE |(< d (+ c x))|))
 (12 6 (:REWRITE |(< (+ c x) d)|))
 (12 6 (:DEFINITION TRUE-LISTP))
 (8 8 (:REWRITE |(< 0 (- x))|))
 (5 1 (:REWRITE VARNAME-LISTP-NTH))
 (3 1 (:REWRITE VN-NOT-VARNAME))
 (3 1 (:REWRITE FUN-NOT-STYPE))
 (2 1 (:DEFINITION VARNAME-LISTP))
 (1 1 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (1 1 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (1 1 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (1 1 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 )
(EXPRESSION-COMPOUND-RECOGNIZER)
(EXPRESSION-POSSIBILITIES
 (40 20 (:REWRITE DEFAULT-+-2))
 (34 2 (:REWRITE PRODUCT-TYPE-FALSE-P))
 (26 26 (:REWRITE DEFAULT-CDR))
 (25 9 (:REWRITE VAR-P-PRODUCT-TYPE))
 (25 9 (:REWRITE LAM-P-PRODUCT-TYPE))
 (25 9 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (25 9 (:REWRITE APP-P-PRODUCT-TYPE))
 (20 20 (:REWRITE DEFAULT-+-1))
 (19 1 (:REWRITE PRODUCT-TYPE-VAR-P))
 (19 1 (:REWRITE PRODUCT-TYPE-LAM-P))
 (19 1 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (19 1 (:REWRITE PRODUCT-TYPE-APP-P))
 (18 18 (:REWRITE DEFAULT-CAR))
 (18 18 (:REWRITE |(equal (- x) (- y))|))
 (18 6 (:REWRITE VN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FUN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (16 7 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (12 12 (:TYPE-PRESCRIPTION VN-P))
 (12 12 (:TYPE-PRESCRIPTION FUN-P))
 (12 12 (:TYPE-PRESCRIPTION BOOL-P))
 (12 6 (:DEFINITION TRUE-LISTP))
 (12 6 (:DEFINITION PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (1 1 (:TYPE-PRESCRIPTION TRUE-P))
 )
(EXPRESSION-LAM-ACCESSOR-TYPES
 (126 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (72 6 (:DEFINITION ACL2-COUNT))
 (64 3 (:REWRITE VAR-P-PRODUCT-TYPE))
 (64 3 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (64 3 (:REWRITE APP-P-PRODUCT-TYPE))
 (60 60 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (60 1 (:DEFINITION VAR-P))
 (60 1 (:DEFINITION IFELSE-P))
 (60 1 (:DEFINITION APP-P))
 (36 15 (:REWRITE DEFAULT-+-2))
 (21 21 (:TYPE-PRESCRIPTION LEN))
 (21 15 (:REWRITE DEFAULT-+-1))
 (18 3 (:DEFINITION LENGTH))
 (15 3 (:DEFINITION LEN))
 (12 12 (:REWRITE |(equal (- x) (- y))|))
 (9 9 (:REWRITE DEFAULT-CDR))
 (9 9 (:REWRITE DEFAULT-CAR))
 (6 6 (:REWRITE FOLD-CONSTS-IN-+))
 (6 6 (:REWRITE |(equal (- x) 0)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (5 1 (:REWRITE PRODUCT-TYPE-LAM-P))
 (3 1 (:REWRITE VN-NOT-VARNAME))
 (3 1 (:REWRITE FUN-NOT-STYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (1 1 (:TYPE-PRESCRIPTION VAR-P))
 (1 1 (:TYPE-PRESCRIPTION IFELSE-P))
 (1 1 (:TYPE-PRESCRIPTION APP-P))
 (1 1 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (1 1 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (1 1 (:REWRITE NOT-LAM-P-LAM-VAR))
 (1 1 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (1 1 (:REWRITE NOT-LAM-P-LAM-BODY))
 )
(EXPRESSION-APP-ACCESSOR-TYPES
 (84 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (65 4 (:REWRITE VAR-P-PRODUCT-TYPE))
 (65 4 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION VAR-P))
 (60 1 (:DEFINITION IFELSE-P))
 (48 4 (:DEFINITION ACL2-COUNT))
 (40 40 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (24 10 (:REWRITE DEFAULT-+-2))
 (14 14 (:TYPE-PRESCRIPTION LEN))
 (14 10 (:REWRITE DEFAULT-+-1))
 (12 2 (:DEFINITION LENGTH))
 (10 2 (:DEFINITION LEN))
 (8 8 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE FOLD-CONSTS-IN-+))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 1 (:REWRITE PRODUCT-TYPE-APP-P))
 (1 1 (:TYPE-PRESCRIPTION VAR-P))
 (1 1 (:TYPE-PRESCRIPTION IFELSE-P))
 (1 1 (:REWRITE NOT-APP-P-APP-FUN))
 (1 1 (:REWRITE NOT-APP-P-APP-ARG))
 )
(EXPRESSION-VAR-ACCESSOR-TYPES
 (66 5 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION IFELSE-P))
 (42 2 (:LINEAR ACL2-COUNT-0-LEN-0))
 (24 2 (:DEFINITION ACL2-COUNT))
 (20 20 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (12 5 (:REWRITE DEFAULT-+-2))
 (7 7 (:TYPE-PRESCRIPTION LEN))
 (7 5 (:REWRITE DEFAULT-+-1))
 (6 1 (:DEFINITION LENGTH))
 (5 1 (:DEFINITION LEN))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (3 3 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE DEFAULT-CAR))
 (3 1 (:REWRITE VN-NOT-VARNAME))
 (3 1 (:REWRITE PRODUCT-TYPE-VAR-P))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (1 1 (:TYPE-PRESCRIPTION IFELSE-P))
 (1 1 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (1 1 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (1 1 (:REWRITE NOT-VAR-P-VAR-NAME))
 )
(EXPRESSION-IFELSE-ACCESSOR-TYPES
 (2 1 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 )
(LAM-NOT-EXPRESSION)
(APP-NOT-EXPRESSION)
(VAR-NOT-EXPRESSION)
(IFELSE-NOT-EXPRESSION)
(EXPRESSION-P-TRUE)
(EXPRESSION-P-FALSE)
(EXPRESSION-P-LAM
 (15114 286 (:LINEAR ACL2-COUNT-0-LEN-0))
 (10181 16 (:REWRITE LAM-NOT-EXPRESSION))
 (7848 718 (:DEFINITION ACL2-COUNT))
 (7764 204 (:REWRITE NTH-WITH-LARGE-INDEX))
 (7254 102 (:DEFINITION NTH))
 (6684 60 (:LINEAR ACL2-COUNT-NTH-LEN-2))
 (5498 46 (:DEFINITION IFELSE-P))
 (5420 36 (:DEFINITION VAR-P))
 (5312 36 (:DEFINITION APP-P))
 (5290 5290 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (4469 16 (:REWRITE VAR-NOT-EXPRESSION))
 (4469 16 (:REWRITE IFELSE-NOT-EXPRESSION))
 (4469 16 (:REWRITE APP-NOT-EXPRESSION))
 (4262 1850 (:REWRITE DEFAULT-+-2))
 (3234 102 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (3042 60 (:LINEAR ACL2-COUNT-NTH-MEASURE))
 (2412 1850 (:REWRITE DEFAULT-+-1))
 (1992 396 (:DEFINITION LEN))
 (1488 1488 (:TYPE-PRESCRIPTION LEN))
 (1390 1384 (:REWRITE DEFAULT-CDR))
 (982 21 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (966 960 (:REWRITE DEFAULT-CAR))
 (964 19 (:REWRITE VAR-P-PRODUCT-TYPE))
 (818 17 (:REWRITE APP-P-PRODUCT-TYPE))
 (810 132 (:DEFINITION LENGTH))
 (720 12 (:REWRITE LAM-ACL2-COUNT))
 (588 294 (:REWRITE |(+ 0 x)|))
 (559 3 (:REWRITE PRODUCT-TYPE-LAM-P))
 (550 550 (:REWRITE FOLD-CONSTS-IN-+))
 (490 490 (:REWRITE |(equal (- x) (- y))|))
 (470 10 (:REWRITE PRODUCT-TYPE-APP-P))
 (448 6 (:REWRITE PRODUCT-TYPE-VAR-P))
 (404 8 (:DEFINITION FALSE-P))
 (396 12 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (360 12 (:LINEAR LAM-BODY-ACL2-COUNT))
 (315 66 (:DEFINITION TRUE-LISTP))
 (310 14 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (286 286 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (278 6 (:DEFINITION TRUE-P))
 (274 274 (:REWRITE |(equal (- x) 0)|))
 (268 12 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (244 244 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (204 204 (:TYPE-PRESCRIPTION NFIX))
 (204 102 (:REWRITE DEFAULT-<-2))
 (178 2 (:DEFINITION VAR-NAME))
 (178 2 (:DEFINITION IFELSE-COND))
 (178 2 (:DEFINITION APP-FUN))
 (176 2 (:DEFINITION IFELSE-CASE2))
 (176 2 (:DEFINITION IFELSE-CASE1))
 (176 2 (:DEFINITION APP-ARG))
 (144 12 (:REWRITE |(+ y (+ x z))|))
 (120 24 (:REWRITE |(+ y x)|))
 (102 102 (:REWRITE DEFAULT-<-1))
 (102 102 (:REWRITE |(< (- x) (- y))|))
 (62 2 (:REWRITE NOT-APP-P-APP-FUN))
 (44 2 (:REWRITE NOT-VAR-P-VAR-NAME))
 (42 42 (:REWRITE |(< 0 (- x))|))
 (36 12 (:REWRITE VN-P-PRODUCT-TYPE))
 (36 12 (:REWRITE FUN-P-PRODUCT-TYPE))
 (36 12 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (32 32 (:TYPE-PRESCRIPTION VN-P))
 (26 2 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (24 12 (:REWRITE LAM-P-PRODUCT-TYPE))
 (24 12 (:DEFINITION PRODUCT-TYPE))
 (22 2 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (22 2 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (22 2 (:REWRITE NOT-APP-P-APP-ARG))
 (19 6 (:REWRITE VN-NOT-VARNAME))
 (15 6 (:REWRITE EXPRESSION-LAM-ACCESSOR-TYPES))
 (14 14 (:REWRITE NOT-LAM-P-LAM-BODY))
 (10 4 (:REWRITE FUN-NOT-STYPE))
 (10 2 (:REWRITE VARNAME-LISTP-NTH))
 (6 6 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (6 6 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (4 2 (:DEFINITION VARNAME-LISTP))
 (2 2 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (2 2 (:REWRITE VARNAME-VN-ACCESSOR-TYPES))
 (2 2 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 (2 2 (:REWRITE NOT-LAM-P-LAM-VAR))
 (2 2 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NATP))
 (1 1 (:REWRITE NOT-VN-P-VN-NUM))
 (1 1 (:REWRITE NOT-VN-P-VN-NAME))
 )
(EXPRESSION-P-APP
 (25910 518 (:LINEAR ACL2-COUNT-0-LEN-0))
 (18244 31 (:REWRITE APP-NOT-EXPRESSION))
 (13808 1256 (:DEFINITION ACL2-COUNT))
 (13072 344 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12212 172 (:DEFINITION NTH))
 (10680 96 (:LINEAR ACL2-COUNT-NTH-LEN-2))
 (9520 90 (:DEFINITION IFELSE-P))
 (9360 70 (:DEFINITION VAR-P))
 (9262 9262 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (8852 73 (:DEFINITION LAM-P))
 (7662 31 (:REWRITE VAR-NOT-EXPRESSION))
 (7662 31 (:REWRITE LAM-NOT-EXPRESSION))
 (7662 31 (:REWRITE IFELSE-NOT-EXPRESSION))
 (7320 3185 (:REWRITE DEFAULT-+-2))
 (5456 172 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (4860 96 (:LINEAR ACL2-COUNT-NTH-MEASURE))
 (4135 3185 (:REWRITE DEFAULT-+-1))
 (3515 701 (:DEFINITION LEN))
 (2659 2659 (:TYPE-PRESCRIPTION LEN))
 (2436 2431 (:REWRITE DEFAULT-CDR))
 (1755 40 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (1718 1713 (:REWRITE DEFAULT-CAR))
 (1715 36 (:REWRITE VAR-P-PRODUCT-TYPE))
 (1581 261 (:DEFINITION LENGTH))
 (1056 28 (:REWRITE LAM-P-PRODUCT-TYPE))
 (976 488 (:REWRITE |(+ 0 x)|))
 (950 950 (:REWRITE FOLD-CONSTS-IN-+))
 (918 918 (:REWRITE |(equal (- x) (- y))|))
 (856 5 (:REWRITE PRODUCT-TYPE-APP-P))
 (808 16 (:DEFINITION FALSE-P))
 (792 24 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (720 24 (:LINEAR APP-FUN-ACL2-COUNT))
 (720 24 (:LINEAR APP-ARG-ACL2-COUNT))
 (640 12 (:REWRITE PRODUCT-TYPE-VAR-P))
 (620 130 (:DEFINITION TRUE-LISTP))
 (620 28 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (556 12 (:DEFINITION TRUE-P))
 (536 24 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (518 518 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (508 508 (:REWRITE |(equal (- x) 0)|))
 (480 480 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (356 4 (:DEFINITION VAR-NAME))
 (356 4 (:DEFINITION LAM-VAR))
 (356 4 (:DEFINITION IFELSE-COND))
 (352 4 (:DEFINITION LAM-TYPE))
 (352 4 (:DEFINITION LAM-BODY))
 (352 4 (:DEFINITION IFELSE-CASE2))
 (352 4 (:DEFINITION IFELSE-CASE1))
 (350 10 (:REWRITE APP-ACL2-COUNT))
 (344 344 (:TYPE-PRESCRIPTION NFIX))
 (344 172 (:REWRITE DEFAULT-<-2))
 (172 172 (:REWRITE DEFAULT-<-1))
 (172 172 (:REWRITE |(< (- x) (- y))|))
 (140 4 (:REWRITE NOT-LAM-P-LAM-VAR))
 (88 4 (:REWRITE NOT-VAR-P-VAR-NAME))
 (72 24 (:REWRITE VN-P-PRODUCT-TYPE))
 (72 24 (:REWRITE FUN-P-PRODUCT-TYPE))
 (72 24 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (68 28 (:REWRITE APP-P-PRODUCT-TYPE))
 (64 64 (:TYPE-PRESCRIPTION VN-P))
 (56 56 (:TYPE-PRESCRIPTION FUN-P))
 (52 4 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (50 10 (:REWRITE |(+ y x)|))
 (48 48 (:TYPE-PRESCRIPTION BOOL-P))
 (48 48 (:REWRITE |(< 0 (- x))|))
 (48 24 (:DEFINITION PRODUCT-TYPE))
 (44 4 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (44 4 (:REWRITE NOT-LAM-P-LAM-BODY))
 (44 4 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (44 4 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (40 8 (:REWRITE VARNAME-LISTP-NTH))
 (28 28 (:REWRITE NOT-APP-P-APP-FUN))
 (28 28 (:REWRITE NOT-APP-P-APP-ARG))
 (24 8 (:REWRITE VN-NOT-VARNAME))
 (20 8 (:REWRITE EXPRESSION-APP-ACCESSOR-TYPES))
 (16 8 (:DEFINITION VARNAME-LISTP))
 (12 4 (:REWRITE FUN-NOT-STYPE))
 (8 8 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (8 8 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (8 8 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (8 8 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 )
(EXPRESSION-P-VAR
 (152 8 (:LINEAR ACL2-COUNT-0-LEN-0))
 (128 8 (:REWRITE VAR-ACL2-COUNT))
 (128 2 (:DEFINITION IFELSE-P))
 (96 8 (:DEFINITION ACL2-COUNT))
 (72 5 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (68 1 (:REWRITE LAM-NOT-EXPRESSION))
 (68 1 (:REWRITE IFELSE-NOT-EXPRESSION))
 (68 1 (:REWRITE APP-NOT-EXPRESSION))
 (64 28 (:REWRITE DEFAULT-+-2))
 (64 1 (:DEFINITION LAM-P))
 (64 1 (:DEFINITION APP-P))
 (56 56 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (36 28 (:REWRITE DEFAULT-+-1))
 (36 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:DEFINITION LEN))
 (16 12 (:REWRITE DEFAULT-CDR))
 (16 12 (:REWRITE DEFAULT-CAR))
 (15 1 (:REWRITE VAR-NOT-EXPRESSION))
 (10 3 (:REWRITE VN-NOT-VARNAME))
 (8 8 (:REWRITE FOLD-CONSTS-IN-+))
 (8 8 (:REWRITE |(equal (- x) (- y))|))
 (8 8 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (3 3 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (3 3 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (3 1 (:REWRITE PRODUCT-TYPE-VAR-P))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:REWRITE VARNAME-VN-ACCESSOR-TYPES))
 (1 1 (:TYPE-PRESCRIPTION VAR-P))
 (1 1 (:TYPE-PRESCRIPTION NATP))
 (1 1 (:TYPE-PRESCRIPTION LAM-P))
 (1 1 (:TYPE-PRESCRIPTION APP-P))
 (1 1 (:REWRITE NOT-VN-P-VN-NUM))
 (1 1 (:REWRITE NOT-VN-P-VN-NAME))
 )
(EXPRESSION-P-IFELSE
 (33360 696 (:LINEAR ACL2-COUNT-0-LEN-0))
 (23664 46 (:REWRITE IFELSE-NOT-EXPRESSION))
 (18288 1644 (:DEFINITION ACL2-COUNT))
 (15066 396 (:REWRITE NTH-WITH-LARGE-INDEX))
 (14076 198 (:DEFINITION NTH))
 (12346 109 (:DEFINITION VAR-P))
 (12294 12294 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (12024 108 (:LINEAR ACL2-COUNT-NTH-LEN-2))
 (12022 109 (:DEFINITION APP-P))
 (11698 109 (:DEFINITION LAM-P))
 (9911 46 (:REWRITE VAR-NOT-EXPRESSION))
 (9911 46 (:REWRITE LAM-NOT-EXPRESSION))
 (9911 46 (:REWRITE APP-NOT-EXPRESSION))
 (9564 4131 (:REWRITE DEFAULT-+-2))
 (6282 198 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (5472 108 (:LINEAR ACL2-COUNT-NTH-MEASURE))
 (5433 4131 (:REWRITE DEFAULT-+-1))
 (4371 873 (:DEFINITION LEN))
 (3447 3447 (:TYPE-PRESCRIPTION LEN))
 (3108 3105 (:REWRITE DEFAULT-CDR))
 (2460 54 (:REWRITE VAR-P-PRODUCT-TYPE))
 (2244 2241 (:REWRITE DEFAULT-CAR))
 (2223 369 (:DEFINITION LENGTH))
 (2022 48 (:REWRITE APP-P-PRODUCT-TYPE))
 (1584 42 (:REWRITE LAM-P-PRODUCT-TYPE))
 (1296 1296 (:REWRITE FOLD-CONSTS-IN-+))
 (1284 1284 (:REWRITE |(equal (- x) (- y))|))
 (1212 24 (:DEFINITION FALSE-P))
 (1188 36 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (1116 558 (:REWRITE |(+ 0 x)|))
 (1080 36 (:LINEAR IFELSE-COND-ACL2-COUNT))
 (1080 36 (:LINEAR IFELSE-CASE2-ACL2-COUNT))
 (1080 36 (:LINEAR IFELSE-CASE1-ACL2-COUNT))
 (915 192 (:DEFINITION TRUE-LISTP))
 (834 18 (:DEFINITION TRUE-P))
 (804 36 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (708 708 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (696 696 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (690 690 (:REWRITE |(equal (- x) 0)|))
 (534 6 (:DEFINITION VAR-NAME))
 (534 6 (:DEFINITION LAM-VAR))
 (534 6 (:DEFINITION APP-FUN))
 (528 6 (:DEFINITION LAM-TYPE))
 (528 6 (:DEFINITION LAM-BODY))
 (528 6 (:DEFINITION APP-ARG))
 (515 10 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (396 396 (:TYPE-PRESCRIPTION NFIX))
 (396 198 (:REWRITE DEFAULT-<-2))
 (354 6 (:REWRITE IFELSE-ACL2-COUNT))
 (204 6 (:REWRITE NOT-LAM-P-LAM-VAR))
 (198 198 (:REWRITE DEFAULT-<-1))
 (198 198 (:REWRITE |(< (- x) (- y))|))
 (162 54 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (150 6 (:REWRITE NOT-APP-P-APP-FUN))
 (108 36 (:REWRITE VN-P-PRODUCT-TYPE))
 (108 36 (:REWRITE FUN-P-PRODUCT-TYPE))
 (108 36 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (96 96 (:TYPE-PRESCRIPTION VN-P))
 (96 6 (:REWRITE NOT-VAR-P-VAR-NAME))
 (84 84 (:TYPE-PRESCRIPTION FUN-P))
 (72 72 (:TYPE-PRESCRIPTION BOOL-P))
 (72 72 (:REWRITE |(< 0 (- x))|))
 (72 36 (:DEFINITION PRODUCT-TYPE))
 (72 6 (:REWRITE |(+ y (+ x z))|))
 (66 6 (:REWRITE NOT-LAM-P-LAM-TYPE))
 (66 6 (:REWRITE NOT-LAM-P-LAM-BODY))
 (66 6 (:REWRITE NOT-APP-P-APP-ARG))
 (60 12 (:REWRITE VARNAME-LISTP-NTH))
 (45 18 (:REWRITE EXPRESSION-IFELSE-ACCESSOR-TYPES))
 (42 42 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (42 42 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (42 42 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (36 12 (:REWRITE VN-NOT-VARNAME))
 (30 6 (:REWRITE |(+ y x)|))
 (24 12 (:DEFINITION VARNAME-LISTP))
 (18 6 (:REWRITE FUN-NOT-STYPE))
 (12 12 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (12 12 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (12 12 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (12 12 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 )
(EXPRESSION-MEASURE
 (390 12 (:DEFINITION ACL2-COUNT))
 (114 54 (:REWRITE DEFAULT-+-2))
 (87 3 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (72 54 (:REWRITE DEFAULT-+-1))
 (72 12 (:DEFINITION INTEGER-ABS))
 (66 18 (:REWRITE |(+ y x)|))
 (48 6 (:DEFINITION LENGTH))
 (42 6 (:REWRITE |(+ (if a b c) x)|))
 (30 6 (:DEFINITION LEN))
 (24 8 (:REWRITE VAR-P-PRODUCT-TYPE))
 (18 18 (:REWRITE FOLD-CONSTS-IN-+))
 (18 18 (:REWRITE DEFAULT-CDR))
 (18 6 (:REWRITE VN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE LAM-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FUN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (16 16 (:TYPE-PRESCRIPTION VAR-P))
 (12 12 (:TYPE-PRESCRIPTION VN-P))
 (12 12 (:TYPE-PRESCRIPTION TRUE-P))
 (12 12 (:TYPE-PRESCRIPTION FUN-P))
 (12 12 (:TYPE-PRESCRIPTION FALSE-P))
 (12 12 (:TYPE-PRESCRIPTION BOOL-P))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) 0)|))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (6 6 (:TYPE-PRESCRIPTION LEN))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE DEFAULT-COERCE-2))
 (6 6 (:REWRITE DEFAULT-COERCE-1))
 (6 6 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE NOT-LAM-P-LAM-BODY))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (1 1 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (1 1 (:REWRITE NOT-APP-P-APP-FUN))
 (1 1 (:REWRITE NOT-APP-P-APP-ARG))
 )
(LAM-MEASURE-DECR
 (98 4 (:REWRITE PRODUCT-TYPE-LAM-P))
 (54 2 (:REWRITE PRODUCT-TYPE-APP-P))
 (50 2 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (40 16 (:REWRITE DEFAULT-+-2))
 (24 16 (:REWRITE DEFAULT-+-1))
 (24 8 (:REWRITE VAR-P-PRODUCT-TYPE))
 (24 8 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (24 2 (:REWRITE |(+ y (+ x z))|))
 (21 7 (:REWRITE VN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE FUN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (20 8 (:REWRITE APP-P-PRODUCT-TYPE))
 (20 4 (:REWRITE |(+ y x)|))
 (16 16 (:TYPE-PRESCRIPTION VAR-P))
 (16 16 (:TYPE-PRESCRIPTION IFELSE-P))
 (14 14 (:TYPE-PRESCRIPTION VN-P))
 (14 14 (:TYPE-PRESCRIPTION TRUE-P))
 (14 14 (:TYPE-PRESCRIPTION FUN-P))
 (14 14 (:TYPE-PRESCRIPTION FALSE-P))
 (14 14 (:TYPE-PRESCRIPTION BOOL-P))
 (14 8 (:REWRITE LAM-P-PRODUCT-TYPE))
 (12 12 (:TYPE-PRESCRIPTION APP-P))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:REWRITE FOLD-CONSTS-IN-+))
 (5 5 (:REWRITE NOT-LAM-P-LAM-BODY))
 (2 2 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (2 2 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (2 2 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (2 2 (:REWRITE NOT-APP-P-APP-FUN))
 (2 2 (:REWRITE NOT-APP-P-APP-ARG))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(APP-MEASURE-DECR
 (199 9 (:REWRITE PRODUCT-TYPE-APP-P))
 (150 6 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (128 50 (:REWRITE DEFAULT-+-2))
 (78 50 (:REWRITE DEFAULT-+-1))
 (72 6 (:REWRITE |(+ y (+ x z))|))
 (65 23 (:REWRITE VAR-P-PRODUCT-TYPE))
 (65 23 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (57 19 (:REWRITE VN-P-PRODUCT-TYPE))
 (57 19 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (57 19 (:REWRITE FUN-P-PRODUCT-TYPE))
 (57 19 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (57 19 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (42 42 (:TYPE-PRESCRIPTION VAR-P))
 (42 42 (:TYPE-PRESCRIPTION IFELSE-P))
 (38 38 (:TYPE-PRESCRIPTION VN-P))
 (38 38 (:TYPE-PRESCRIPTION TRUE-P))
 (38 38 (:TYPE-PRESCRIPTION FUN-P))
 (38 38 (:TYPE-PRESCRIPTION FALSE-P))
 (38 38 (:TYPE-PRESCRIPTION BOOL-P))
 (33 19 (:REWRITE LAM-P-PRODUCT-TYPE))
 (22 22 (:REWRITE FOLD-CONSTS-IN-+))
 (19 19 (:REWRITE |(equal (- x) (- y))|))
 (14 14 (:TYPE-PRESCRIPTION LAM-P))
 (11 11 (:REWRITE NOT-APP-P-APP-FUN))
 (11 11 (:REWRITE NOT-APP-P-APP-ARG))
 (6 6 (:REWRITE NOT-LAM-P-LAM-BODY))
 (6 6 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (6 6 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (6 6 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (6 2 (:REWRITE DEFAULT-<-2))
 (6 2 (:REWRITE |(< d (+ c x))|))
 (4 2 (:REWRITE DEFAULT-<-1))
 (4 2 (:REWRITE |(< d (+ c x y))|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 )
(IFELSE-MEASURE-DECR
 (335 16 (:REWRITE PRODUCT-TYPE-IFELSE-P))
 (276 105 (:REWRITE DEFAULT-+-2))
 (168 105 (:REWRITE DEFAULT-+-1))
 (111 37 (:REWRITE VN-P-PRODUCT-TYPE))
 (111 37 (:REWRITE VAR-P-PRODUCT-TYPE))
 (111 37 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (111 37 (:REWRITE FUN-P-PRODUCT-TYPE))
 (111 37 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (111 37 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (87 37 (:REWRITE APP-P-PRODUCT-TYPE))
 (74 74 (:TYPE-PRESCRIPTION VN-P))
 (74 74 (:TYPE-PRESCRIPTION VAR-P))
 (74 74 (:TYPE-PRESCRIPTION TRUE-P))
 (74 74 (:TYPE-PRESCRIPTION FUN-P))
 (74 74 (:TYPE-PRESCRIPTION FALSE-P))
 (74 74 (:TYPE-PRESCRIPTION BOOL-P))
 (63 37 (:REWRITE LAM-P-PRODUCT-TYPE))
 (50 50 (:TYPE-PRESCRIPTION APP-P))
 (48 48 (:REWRITE FOLD-CONSTS-IN-+))
 (37 37 (:REWRITE |(equal (- x) (- y))|))
 (26 26 (:TYPE-PRESCRIPTION LAM-P))
 (19 19 (:REWRITE NOT-IFELSE-P-IFELSE-COND))
 (19 19 (:REWRITE NOT-IFELSE-P-IFELSE-CASE2))
 (19 19 (:REWRITE NOT-IFELSE-P-IFELSE-CASE1))
 (12 12 (:REWRITE NOT-LAM-P-LAM-BODY))
 (12 12 (:REWRITE NOT-APP-P-APP-FUN))
 (12 12 (:REWRITE NOT-APP-P-APP-ARG))
 (12 3 (:REWRITE DEFAULT-<-2))
 (12 3 (:REWRITE |(< d (+ c x))|))
 (6 3 (:REWRITE DEFAULT-<-1))
 (6 3 (:REWRITE |(< d (+ c x y))|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 )
(T-TRUE-P)
(T-TRUE)
(T-TRUE-P-COMPOUND-RECOGNIZER)
(T-TRUE-ACL2-COUNT)
(T-TRUE-P-T-TRUE)
(T-TRUE-UNIQUE
 (62 3 (:LINEAR ACL2-COUNT-0-LEN-0))
 (41 4 (:DEFINITION ACL2-COUNT))
 (25 12 (:REWRITE DEFAULT-+-2))
 (13 12 (:REWRITE DEFAULT-+-1))
 (12 12 (:REWRITE DEFAULT-CDR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (6 3 (:REWRITE |(+ 0 x)|))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE CAR-CONS))
 )
(T-TRUE-P-PRODUCT-TYPE)
(PRODUCT-TYPE-T-TRUE-P)
(T-TRUE-PRODUCT-TYPE)
(T-TRUE-EQUAL-PRODUCT-TYPE)
(T-FALSE-P)
(T-FALSE)
(T-FALSE-P-COMPOUND-RECOGNIZER)
(T-FALSE-ACL2-COUNT)
(T-FALSE-P-T-FALSE)
(T-FALSE-UNIQUE
 (62 3 (:LINEAR ACL2-COUNT-0-LEN-0))
 (41 4 (:DEFINITION ACL2-COUNT))
 (25 12 (:REWRITE DEFAULT-+-2))
 (13 12 (:REWRITE DEFAULT-+-1))
 (12 12 (:REWRITE DEFAULT-CDR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (6 3 (:REWRITE |(+ 0 x)|))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE CAR-CONS))
 )
(T-FALSE-P-PRODUCT-TYPE)
(PRODUCT-TYPE-T-FALSE-P)
(T-FALSE-PRODUCT-TYPE)
(T-FALSE-EQUAL-PRODUCT-TYPE)
(T-VAR-P)
(T-VAR)
(T-VAR-P-COMPOUND-RECOGNIZER)
(T-VAR-ACL2-COUNT)
(T-VAR-P-T-VAR)
(T-VAR-UNIQUE
 (62 3 (:LINEAR ACL2-COUNT-0-LEN-0))
 (41 4 (:DEFINITION ACL2-COUNT))
 (25 12 (:REWRITE DEFAULT-+-2))
 (13 12 (:REWRITE DEFAULT-+-1))
 (12 12 (:REWRITE DEFAULT-CDR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (6 3 (:REWRITE |(+ 0 x)|))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE CAR-CONS))
 )
(T-VAR-P-PRODUCT-TYPE)
(PRODUCT-TYPE-T-VAR-P)
(T-VAR-PRODUCT-TYPE)
(T-VAR-EQUAL-PRODUCT-TYPE)
(T-ABS-P)
(T-ABS)
(T-ABS-BODY)
(T-ABS-P-COMPOUND-RECOGNIZER)
(T-ABS-ACL2-COUNT
 (40 20 (:REWRITE DEFAULT-+-2))
 (24 20 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (16 2 (:DEFINITION LENGTH))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (10 2 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 )
(T-ABS-BODY-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-T-ABS-P-T-ABS-BODY
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(T-ABS-P-T-ABS
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:TYPE-PRESCRIPTION LEN))
 (1 1 (:REWRITE DEFAULT-+-1))
 )
(T-ABS-ELIM
 (341 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (259 18 (:DEFINITION ACL2-COUNT))
 (148 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (125 56 (:REWRITE DEFAULT-+-2))
 (71 56 (:REWRITE DEFAULT-+-1))
 (69 69 (:REWRITE DEFAULT-CDR))
 (43 43 (:REWRITE DEFAULT-CAR))
 (39 1 (:REWRITE NTH-WITH-LARGE-INDEX))
 (15 15 (:REWRITE FOLD-CONSTS-IN-+))
 (15 15 (:REWRITE |(equal (- x) (- y))|))
 (14 7 (:REWRITE |(+ 0 x)|))
 (12 2 (:DEFINITION INTEGER-ABS))
 (11 3 (:REWRITE |(+ y x)|))
 (10 1 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE |(equal (- x) 0)|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (3 2 (:REWRITE |(equal (if a b c) x)|))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (1 1 (:TYPE-PRESCRIPTION T-ABS-P))
 (1 1 (:TYPE-PRESCRIPTION NFIX))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(T-ABS-P-PRODUCT-TYPE)
(PRODUCT-TYPE-T-ABS-P)
(T-ABS-PRODUCT-TYPE)
(T-ABS-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(T-ABS-BODY-T-ABS
 (18 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (18 1 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (5 5 (:TYPE-PRESCRIPTION LEN))
 (4 2 (:REWRITE PRODUCT-TYPE-T-ABS-P))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:TYPE-PRESCRIPTION T-ABS-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 )
(T-ABS-NOT-EQUAL-BODY
 (281 3 (:REWRITE PRODUCT-TYPE-T-ABS-P))
 (242 10 (:LINEAR ACL2-COUNT-0-LEN-0))
 (212 14 (:DEFINITION ACL2-COUNT))
 (96 42 (:REWRITE DEFAULT-+-2))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 1 (:DEFINITION NTH))
 (62 1 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION T-VAR-P))
 (60 1 (:DEFINITION T-TRUE-P))
 (60 1 (:DEFINITION T-FALSE-P))
 (56 42 (:REWRITE DEFAULT-+-1))
 (50 10 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (26 26 (:REWRITE DEFAULT-CDR))
 (25 25 (:REWRITE |(equal (- x) (- y))|))
 (23 23 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE FOLD-CONSTS-IN-+))
 (11 3 (:REWRITE |(+ y x)|))
 (10 10 (:REWRITE |(equal (- x) 0)|))
 (10 10 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (3 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (3 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-ABS-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION T-VAR-P))
 (1 1 (:TYPE-PRESCRIPTION T-TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION T-FALSE-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(T-ABS-NOT-EQUAL-T-ABS-BODY
 (3 2 (:REWRITE DEFAULT-CDR))
 (3 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE PRODUCT-TYPE-T-ABS-P))
 (1 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (1 1 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 )
(DIFFERENCE-BODY-T-ABS
 (18 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (18 1 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (5 5 (:TYPE-PRESCRIPTION LEN))
 (4 2 (:REWRITE PRODUCT-TYPE-T-ABS-P))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:TYPE-PRESCRIPTION T-ABS-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 )
(T-APP-P)
(T-APP)
(T-APP-ARGTYPE)
(T-APP-FUN)
(T-APP-ARG)
(T-APP-P-COMPOUND-RECOGNIZER)
(T-APP-ACL2-COUNT
 (147 64 (:REWRITE DEFAULT-+-2))
 (84 64 (:REWRITE DEFAULT-+-1))
 (72 12 (:DEFINITION INTEGER-ABS))
 (48 6 (:DEFINITION LENGTH))
 (42 6 (:REWRITE |(+ (if a b c) x)|))
 (30 6 (:DEFINITION LEN))
 (16 16 (:REWRITE DEFAULT-CDR))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) 0)|))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (10 10 (:REWRITE DEFAULT-CAR))
 (6 6 (:TYPE-PRESCRIPTION LEN))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE DEFAULT-COERCE-2))
 (6 6 (:REWRITE DEFAULT-COERCE-1))
 )
(T-APP-ARGTYPE-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(T-APP-FUN-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(T-APP-ARG-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-T-APP-P-T-APP-ARGTYPE
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-T-APP-P-T-APP-FUN
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-T-APP-P-T-APP-ARG
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(T-APP-P-T-APP
 (6 3 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:TYPE-PRESCRIPTION LEN))
 (3 3 (:REWRITE DEFAULT-+-1))
 )
(T-APP-ELIM
 (2823 10 (:LINEAR ACL2-COUNT-0-LEN-0))
 (2536 78 (:DEFINITION ACL2-COUNT))
 (2115 10 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (950 402 (:REWRITE DEFAULT-+-2))
 (526 402 (:REWRITE DEFAULT-+-1))
 (346 346 (:REWRITE DEFAULT-CDR))
 (336 56 (:DEFINITION INTEGER-ABS))
 (314 86 (:REWRITE |(+ y x)|))
 (196 28 (:REWRITE |(+ (if a b c) x)|))
 (153 153 (:REWRITE DEFAULT-CAR))
 (127 10 (:REWRITE |(+ y (+ x z))|))
 (117 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (62 59 (:REWRITE DEFAULT-<-2))
 (59 59 (:REWRITE DEFAULT-<-1))
 (59 59 (:REWRITE |(< (- x) (- y))|))
 (56 56 (:REWRITE DEFAULT-UNARY-MINUS))
 (56 56 (:REWRITE |(< (- x) 0)|))
 (28 28 (:REWRITE DEFAULT-REALPART))
 (28 28 (:REWRITE DEFAULT-NUMERATOR))
 (28 28 (:REWRITE DEFAULT-IMAGPART))
 (28 28 (:REWRITE DEFAULT-DENOMINATOR))
 (28 28 (:REWRITE DEFAULT-COERCE-2))
 (28 28 (:REWRITE DEFAULT-COERCE-1))
 (22 9 (:REWRITE |(+ 0 x)|))
 (17 17 (:REWRITE |(equal (- x) (- y))|))
 (10 10 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (10 4 (:REWRITE |(equal (if a b c) x)|))
 (10 1 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (10 1 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (10 1 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (5 5 (:REWRITE |(equal (- x) 0)|))
 (3 3 (:TYPE-PRESCRIPTION T-APP-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (3 3 (:REWRITE |(< 0 (- x))|))
 )
(T-APP-P-PRODUCT-TYPE)
(PRODUCT-TYPE-T-APP-P)
(T-APP-PRODUCT-TYPE)
(T-APP-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(T-APP-ARGTYPE-T-APP
 (42 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (22 11 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-CDR))
 (13 13 (:TYPE-PRESCRIPTION LEN))
 (11 11 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 )
(T-APP-NOT-EQUAL-ARGTYPE
 (343 3 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (284 12 (:LINEAR ACL2-COUNT-0-LEN-0))
 (236 16 (:DEFINITION ACL2-COUNT))
 (108 47 (:REWRITE DEFAULT-+-2))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 1 (:DEFINITION NTH))
 (63 47 (:REWRITE DEFAULT-+-1))
 (62 1 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION T-VAR-P))
 (60 1 (:DEFINITION T-TRUE-P))
 (60 1 (:DEFINITION T-FALSE-P))
 (60 1 (:DEFINITION T-ABS-P))
 (55 11 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (29 29 (:REWRITE DEFAULT-CDR))
 (29 29 (:REWRITE |(equal (- x) (- y))|))
 (26 26 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (16 16 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE |(equal (- x) 0)|))
 (12 12 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (11 3 (:REWRITE |(+ y x)|))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (3 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (3 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION T-VAR-P))
 (1 1 (:TYPE-PRESCRIPTION T-TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION T-FALSE-P))
 (1 1 (:TYPE-PRESCRIPTION T-ABS-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(T-APP-NOT-EQUAL-T-APP-ARGTYPE
 (522 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (452 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (1 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 )
(DIFFERENCE-ARGTYPE-T-APP
 (42 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (22 11 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-CDR))
 (13 13 (:TYPE-PRESCRIPTION LEN))
 (11 11 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 )
(T-APP-FUN-T-APP
 (54 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (24 12 (:REWRITE DEFAULT-+-2))
 (17 17 (:REWRITE DEFAULT-CDR))
 (15 15 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 )
(T-APP-NOT-EQUAL-FUN
 (343 3 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (284 12 (:LINEAR ACL2-COUNT-0-LEN-0))
 (236 16 (:DEFINITION ACL2-COUNT))
 (108 47 (:REWRITE DEFAULT-+-2))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (71 1 (:DEFINITION NTH))
 (63 47 (:REWRITE DEFAULT-+-1))
 (62 1 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION T-VAR-P))
 (60 1 (:DEFINITION T-TRUE-P))
 (60 1 (:DEFINITION T-FALSE-P))
 (60 1 (:DEFINITION T-ABS-P))
 (55 11 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (29 29 (:REWRITE DEFAULT-CDR))
 (29 29 (:REWRITE |(equal (- x) (- y))|))
 (26 26 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (16 16 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE |(equal (- x) 0)|))
 (12 12 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (11 3 (:REWRITE |(+ y x)|))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (3 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (3 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION T-VAR-P))
 (1 1 (:TYPE-PRESCRIPTION T-TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION T-FALSE-P))
 (1 1 (:TYPE-PRESCRIPTION T-ABS-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(T-APP-NOT-EQUAL-T-APP-FUN
 (523 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (453 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (1 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-FUN-T-APP
 (54 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (24 12 (:REWRITE DEFAULT-+-2))
 (17 17 (:REWRITE DEFAULT-CDR))
 (15 15 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 )
(T-APP-ARG-T-APP
 (60 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (24 12 (:REWRITE DEFAULT-+-2))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 16 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 2 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 )
(T-APP-NOT-EQUAL-ARG
 (343 3 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (284 12 (:LINEAR ACL2-COUNT-0-LEN-0))
 (236 16 (:DEFINITION ACL2-COUNT))
 (108 47 (:REWRITE DEFAULT-+-2))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (71 1 (:DEFINITION NTH))
 (63 47 (:REWRITE DEFAULT-+-1))
 (62 1 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION T-VAR-P))
 (60 1 (:DEFINITION T-TRUE-P))
 (60 1 (:DEFINITION T-FALSE-P))
 (60 1 (:DEFINITION T-ABS-P))
 (55 11 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (29 29 (:REWRITE DEFAULT-CDR))
 (29 29 (:REWRITE |(equal (- x) (- y))|))
 (26 26 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (16 16 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE |(equal (- x) 0)|))
 (12 12 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (11 3 (:REWRITE |(+ y x)|))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (3 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (3 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION T-VAR-P))
 (1 1 (:TYPE-PRESCRIPTION T-TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION T-FALSE-P))
 (1 1 (:TYPE-PRESCRIPTION T-ABS-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(T-APP-NOT-EQUAL-T-APP-ARG
 (523 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (453 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (1 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-ARG-T-APP
 (60 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (24 12 (:REWRITE DEFAULT-+-2))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 16 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 2 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 )
(T-IF-P)
(T-IF)
(T-IF-COND)
(T-IF-CASE1)
(T-IF-CASE2)
(T-IF-P-COMPOUND-RECOGNIZER)
(T-IF-ACL2-COUNT
 (147 64 (:REWRITE DEFAULT-+-2))
 (84 64 (:REWRITE DEFAULT-+-1))
 (72 12 (:DEFINITION INTEGER-ABS))
 (48 6 (:DEFINITION LENGTH))
 (42 6 (:REWRITE |(+ (if a b c) x)|))
 (30 6 (:DEFINITION LEN))
 (16 16 (:REWRITE DEFAULT-CDR))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) 0)|))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (10 10 (:REWRITE DEFAULT-CAR))
 (6 6 (:TYPE-PRESCRIPTION LEN))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE DEFAULT-COERCE-2))
 (6 6 (:REWRITE DEFAULT-COERCE-1))
 )
(T-IF-COND-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(T-IF-CASE1-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(T-IF-CASE2-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-T-IF-P-T-IF-COND
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-T-IF-P-T-IF-CASE1
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(NOT-T-IF-P-T-IF-CASE2
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(T-IF-P-T-IF
 (6 3 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:TYPE-PRESCRIPTION LEN))
 (3 3 (:REWRITE DEFAULT-+-1))
 )
(T-IF-ELIM
 (2823 10 (:LINEAR ACL2-COUNT-0-LEN-0))
 (2536 78 (:DEFINITION ACL2-COUNT))
 (2115 10 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (950 402 (:REWRITE DEFAULT-+-2))
 (526 402 (:REWRITE DEFAULT-+-1))
 (346 346 (:REWRITE DEFAULT-CDR))
 (336 56 (:DEFINITION INTEGER-ABS))
 (314 86 (:REWRITE |(+ y x)|))
 (196 28 (:REWRITE |(+ (if a b c) x)|))
 (153 153 (:REWRITE DEFAULT-CAR))
 (127 10 (:REWRITE |(+ y (+ x z))|))
 (117 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (62 59 (:REWRITE DEFAULT-<-2))
 (59 59 (:REWRITE DEFAULT-<-1))
 (59 59 (:REWRITE |(< (- x) (- y))|))
 (56 56 (:REWRITE DEFAULT-UNARY-MINUS))
 (56 56 (:REWRITE |(< (- x) 0)|))
 (28 28 (:REWRITE DEFAULT-REALPART))
 (28 28 (:REWRITE DEFAULT-NUMERATOR))
 (28 28 (:REWRITE DEFAULT-IMAGPART))
 (28 28 (:REWRITE DEFAULT-DENOMINATOR))
 (28 28 (:REWRITE DEFAULT-COERCE-2))
 (28 28 (:REWRITE DEFAULT-COERCE-1))
 (22 9 (:REWRITE |(+ 0 x)|))
 (17 17 (:REWRITE |(equal (- x) (- y))|))
 (10 10 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (10 4 (:REWRITE |(equal (if a b c) x)|))
 (10 1 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (10 1 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (10 1 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (5 5 (:REWRITE |(equal (- x) 0)|))
 (3 3 (:TYPE-PRESCRIPTION T-IF-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (3 3 (:REWRITE |(< 0 (- x))|))
 )
(T-IF-P-PRODUCT-TYPE)
(PRODUCT-TYPE-T-IF-P)
(T-IF-PRODUCT-TYPE)
(T-IF-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(T-IF-COND-T-IF
 (42 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (22 11 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-CDR))
 (13 13 (:TYPE-PRESCRIPTION LEN))
 (11 11 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 )
(T-IF-NOT-EQUAL-COND
 (405 3 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (326 14 (:LINEAR ACL2-COUNT-0-LEN-0))
 (260 18 (:DEFINITION ACL2-COUNT))
 (120 52 (:REWRITE DEFAULT-+-2))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 1 (:DEFINITION NTH))
 (70 52 (:REWRITE DEFAULT-+-1))
 (62 1 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (60 12 (:DEFINITION LEN))
 (60 1 (:DEFINITION T-VAR-P))
 (60 1 (:DEFINITION T-TRUE-P))
 (60 1 (:DEFINITION T-FALSE-P))
 (60 1 (:DEFINITION T-APP-P))
 (60 1 (:DEFINITION T-ABS-P))
 (40 1 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (33 33 (:REWRITE |(equal (- x) (- y))|))
 (32 32 (:REWRITE DEFAULT-CDR))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (29 29 (:REWRITE DEFAULT-CAR))
 (18 18 (:REWRITE FOLD-CONSTS-IN-+))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE |(equal (- x) 0)|))
 (14 14 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (11 3 (:REWRITE |(+ y x)|))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (3 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (3 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION T-VAR-P))
 (1 1 (:TYPE-PRESCRIPTION T-TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION T-FALSE-P))
 (1 1 (:TYPE-PRESCRIPTION T-APP-P))
 (1 1 (:TYPE-PRESCRIPTION T-ABS-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(T-IF-NOT-EQUAL-T-IF-COND
 (522 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (452 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (1 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 )
(DIFFERENCE-COND-T-IF
 (42 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (22 11 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-CDR))
 (13 13 (:TYPE-PRESCRIPTION LEN))
 (11 11 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 )
(T-IF-CASE1-T-IF
 (54 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (24 12 (:REWRITE DEFAULT-+-2))
 (17 17 (:REWRITE DEFAULT-CDR))
 (15 15 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 )
(T-IF-NOT-EQUAL-CASE1
 (405 3 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (326 14 (:LINEAR ACL2-COUNT-0-LEN-0))
 (260 18 (:DEFINITION ACL2-COUNT))
 (120 52 (:REWRITE DEFAULT-+-2))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (71 1 (:DEFINITION NTH))
 (70 52 (:REWRITE DEFAULT-+-1))
 (62 1 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (60 12 (:DEFINITION LEN))
 (60 1 (:DEFINITION T-VAR-P))
 (60 1 (:DEFINITION T-TRUE-P))
 (60 1 (:DEFINITION T-FALSE-P))
 (60 1 (:DEFINITION T-APP-P))
 (60 1 (:DEFINITION T-ABS-P))
 (40 1 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (33 33 (:REWRITE |(equal (- x) (- y))|))
 (32 32 (:REWRITE DEFAULT-CDR))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (29 29 (:REWRITE DEFAULT-CAR))
 (18 18 (:REWRITE FOLD-CONSTS-IN-+))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE |(equal (- x) 0)|))
 (14 14 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (11 3 (:REWRITE |(+ y x)|))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (3 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (3 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION T-VAR-P))
 (1 1 (:TYPE-PRESCRIPTION T-TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION T-FALSE-P))
 (1 1 (:TYPE-PRESCRIPTION T-APP-P))
 (1 1 (:TYPE-PRESCRIPTION T-ABS-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(T-IF-NOT-EQUAL-T-IF-CASE1
 (523 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (453 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (1 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-CASE1-T-IF
 (54 3 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (24 12 (:REWRITE DEFAULT-+-2))
 (17 17 (:REWRITE DEFAULT-CDR))
 (15 15 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (3 3 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 )
(T-IF-CASE2-T-IF
 (60 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (24 12 (:REWRITE DEFAULT-+-2))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 16 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 2 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 )
(T-IF-NOT-EQUAL-CASE2
 (405 3 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (326 14 (:LINEAR ACL2-COUNT-0-LEN-0))
 (260 18 (:DEFINITION ACL2-COUNT))
 (120 52 (:REWRITE DEFAULT-+-2))
 (76 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (71 1 (:DEFINITION NTH))
 (70 52 (:REWRITE DEFAULT-+-1))
 (62 1 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (62 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (60 12 (:DEFINITION LEN))
 (60 1 (:DEFINITION T-VAR-P))
 (60 1 (:DEFINITION T-TRUE-P))
 (60 1 (:DEFINITION T-FALSE-P))
 (60 1 (:DEFINITION T-APP-P))
 (60 1 (:DEFINITION T-ABS-P))
 (40 1 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (33 33 (:REWRITE |(equal (- x) (- y))|))
 (32 32 (:REWRITE DEFAULT-CDR))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (29 29 (:REWRITE DEFAULT-CAR))
 (18 18 (:REWRITE FOLD-CONSTS-IN-+))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE |(equal (- x) 0)|))
 (14 14 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (11 3 (:REWRITE |(+ y x)|))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (3 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (3 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION T-VAR-P))
 (1 1 (:TYPE-PRESCRIPTION T-TRUE-P))
 (1 1 (:TYPE-PRESCRIPTION T-FALSE-P))
 (1 1 (:TYPE-PRESCRIPTION T-APP-P))
 (1 1 (:TYPE-PRESCRIPTION T-ABS-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 )
(T-IF-NOT-EQUAL-T-IF-CASE2
 (523 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (458 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (453 2 (:DEFINITION NTH))
 (374 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (356 16 (:DEFINITION ACL2-COUNT))
 (144 64 (:REWRITE DEFAULT-+-2))
 (138 138 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (88 64 (:REWRITE DEFAULT-+-1))
 (48 8 (:DEFINITION INTEGER-ABS))
 (44 12 (:REWRITE |(+ y x)|))
 (40 8 (:DEFINITION LEN))
 (33 32 (:REWRITE DEFAULT-CDR))
 (32 4 (:DEFINITION LENGTH))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 4 (:REWRITE |(+ (if a b c) x)|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (23 22 (:REWRITE DEFAULT-CAR))
 (16 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 8 (:REWRITE |(< (- x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 4 (:REWRITE DEFAULT-COERCE-2))
 (4 4 (:REWRITE DEFAULT-COERCE-1))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (1 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(DIFFERENCE-CASE2-T-IF
 (60 4 (:REWRITE NTH-WITH-LARGE-INDEX))
 (30 1 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (24 12 (:REWRITE DEFAULT-+-2))
 (18 18 (:REWRITE DEFAULT-CDR))
 (16 16 (:TYPE-PRESCRIPTION LEN))
 (12 12 (:REWRITE DEFAULT-+-1))
 (4 4 (:TYPE-PRESCRIPTION NFIX))
 (4 2 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 )
(TYPE-DERIV-P
 (5714 298 (:LINEAR ACL2-COUNT-0-LEN-0))
 (3601 359 (:DEFINITION ACL2-COUNT))
 (2079 38 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (1436 700 (:REWRITE DEFAULT-+-2))
 (1378 26 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (1376 36 (:REWRITE NTH-WITH-LARGE-INDEX))
 (1326 26 (:DEFINITION T-TRUE-P))
 (1286 18 (:DEFINITION NTH))
 (1109 32 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (1066 26 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (1020 20 (:DEFINITION T-FALSE-P))
 (762 700 (:REWRITE DEFAULT-+-1))
 (754 26 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (726 27 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (714 14 (:DEFINITION T-VAR-P))
 (656 328 (:REWRITE |(+ 0 x)|))
 (604 604 (:REWRITE DEFAULT-CDR))
 (576 18 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (549 549 (:REWRITE DEFAULT-CAR))
 (447 447 (:REWRITE |(equal (- x) (- y))|))
 (298 298 (:REWRITE |(equal (- x) 0)|))
 (298 298 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (156 26 (:DEFINITION INTEGER-ABS))
 (143 39 (:REWRITE |(+ y x)|))
 (91 13 (:REWRITE |(+ (if a b c) x)|))
 (78 26 (:REWRITE VN-P-PRODUCT-TYPE))
 (78 26 (:REWRITE VAR-P-PRODUCT-TYPE))
 (78 26 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (78 26 (:REWRITE LAM-P-PRODUCT-TYPE))
 (78 26 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (78 26 (:REWRITE FUN-P-PRODUCT-TYPE))
 (78 26 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (78 26 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (78 26 (:REWRITE APP-P-PRODUCT-TYPE))
 (74 50 (:REWRITE DEFAULT-<-2))
 (62 62 (:REWRITE FOLD-CONSTS-IN-+))
 (56 50 (:REWRITE DEFAULT-<-1))
 (52 52 (:TYPE-PRESCRIPTION VN-P))
 (52 52 (:TYPE-PRESCRIPTION VAR-P))
 (52 52 (:TYPE-PRESCRIPTION TRUE-P))
 (52 52 (:TYPE-PRESCRIPTION LAM-P))
 (52 52 (:TYPE-PRESCRIPTION IFELSE-P))
 (52 52 (:TYPE-PRESCRIPTION FALSE-P))
 (52 52 (:TYPE-PRESCRIPTION APP-P))
 (50 50 (:REWRITE |(< (- x) (- y))|))
 (46 2 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (46 2 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (39 3 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (31 1 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (26 26 (:REWRITE DEFAULT-UNARY-MINUS))
 (26 26 (:REWRITE |(< (- x) 0)|))
 (26 2 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (24 12 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (23 1 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (18 6 (:REWRITE |(< (+ d x) (+ c y))|))
 (18 6 (:REWRITE |(< (+ c x) (+ d y))|))
 (13 13 (:REWRITE DEFAULT-REALPART))
 (13 13 (:REWRITE DEFAULT-NUMERATOR))
 (13 13 (:REWRITE DEFAULT-IMAGPART))
 (13 13 (:REWRITE DEFAULT-DENOMINATOR))
 (13 13 (:REWRITE DEFAULT-COERCE-2))
 (13 13 (:REWRITE DEFAULT-COERCE-1))
 (13 1 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (12 6 (:REWRITE |(< d (+ c x))|))
 (12 6 (:REWRITE |(< (+ c x) d)|))
 (12 6 (:DEFINITION TRUE-LISTP))
 (8 8 (:REWRITE |(< 0 (- x))|))
 (6 2 (:REWRITE FUN-NOT-STYPE))
 )
(TYPE-DERIV-COMPOUND-RECOGNIZER)
(TYPE-DERIV-POSSIBILITIES
 (54 27 (:REWRITE DEFAULT-+-2))
 (51 2 (:REWRITE PRODUCT-TYPE-T-VAR-P))
 (37 1 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (37 1 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (37 1 (:REWRITE PRODUCT-TYPE-T-ABS-P))
 (36 12 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (33 33 (:REWRITE DEFAULT-CDR))
 (27 27 (:REWRITE DEFAULT-+-1))
 (24 24 (:REWRITE DEFAULT-CAR))
 (18 18 (:REWRITE |(equal (- x) (- y))|))
 (18 6 (:REWRITE VN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE VAR-P-PRODUCT-TYPE))
 (18 6 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE LAM-P-PRODUCT-TYPE))
 (18 6 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FUN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (18 6 (:REWRITE APP-P-PRODUCT-TYPE))
 (16 7 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (12 12 (:TYPE-PRESCRIPTION VN-P))
 (12 12 (:TYPE-PRESCRIPTION VAR-P))
 (12 12 (:TYPE-PRESCRIPTION TRUE-P))
 (12 12 (:TYPE-PRESCRIPTION LAM-P))
 (12 12 (:TYPE-PRESCRIPTION IFELSE-P))
 (12 12 (:TYPE-PRESCRIPTION FUN-P))
 (12 12 (:TYPE-PRESCRIPTION FALSE-P))
 (12 12 (:TYPE-PRESCRIPTION BOOL-P))
 (12 12 (:TYPE-PRESCRIPTION APP-P))
 (12 6 (:DEFINITION TRUE-LISTP))
 (12 6 (:DEFINITION PRODUCT-TYPE))
 (3 3 (:TYPE-PRESCRIPTION T-APP-P))
 (3 3 (:TYPE-PRESCRIPTION T-ABS-P))
 (1 1 (:TYPE-PRESCRIPTION T-TRUE-P))
 )
(TYPE-DERIV-T-ABS-ACCESSOR-TYPES
 (84 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (65 4 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (65 4 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION T-IF-P))
 (60 1 (:DEFINITION T-APP-P))
 (48 4 (:DEFINITION ACL2-COUNT))
 (40 40 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (24 10 (:REWRITE DEFAULT-+-2))
 (14 14 (:TYPE-PRESCRIPTION LEN))
 (14 10 (:REWRITE DEFAULT-+-1))
 (12 2 (:DEFINITION LENGTH))
 (10 2 (:DEFINITION LEN))
 (8 8 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE FOLD-CONSTS-IN-+))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 1 (:REWRITE PRODUCT-TYPE-T-ABS-P))
 (1 1 (:TYPE-PRESCRIPTION T-IF-P))
 (1 1 (:TYPE-PRESCRIPTION T-APP-P))
 (1 1 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 )
(TYPE-DERIV-T-APP-ACCESSOR-TYPES
 (66 5 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION T-IF-P))
 (42 2 (:LINEAR ACL2-COUNT-0-LEN-0))
 (24 2 (:DEFINITION ACL2-COUNT))
 (20 20 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (12 5 (:REWRITE DEFAULT-+-2))
 (7 7 (:TYPE-PRESCRIPTION LEN))
 (7 5 (:REWRITE DEFAULT-+-1))
 (6 1 (:DEFINITION LENGTH))
 (5 1 (:DEFINITION LEN))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (3 3 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE DEFAULT-CAR))
 (3 1 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (3 1 (:REWRITE FUN-NOT-STYPE))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (2 2 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (1 1 (:TYPE-PRESCRIPTION T-IF-P))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 )
(TYPE-DERIV-T-IF-ACCESSOR-TYPES
 (2 1 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 )
(T-ABS-NOT-TYPE-DERIV)
(T-APP-NOT-TYPE-DERIV)
(T-IF-NOT-TYPE-DERIV)
(TYPE-DERIV-P-T-TRUE)
(TYPE-DERIV-P-T-FALSE)
(TYPE-DERIV-P-T-VAR)
(TYPE-DERIV-P-T-ABS
 (10524 224 (:LINEAR ACL2-COUNT-0-LEN-0))
 (7641 16 (:REWRITE T-ABS-NOT-TYPE-DERIV))
 (5520 504 (:DEFINITION ACL2-COUNT))
 (5468 144 (:REWRITE NTH-WITH-LARGE-INDEX))
 (5321 44 (:DEFINITION T-IF-P))
 (5280 42 (:DEFINITION T-APP-P))
 (5108 72 (:DEFINITION NTH))
 (4448 40 (:LINEAR ACL2-COUNT-NTH-LEN-2))
 (4371 16 (:REWRITE T-IF-NOT-TYPE-DERIV))
 (4371 16 (:REWRITE T-APP-NOT-TYPE-DERIV))
 (3756 3756 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (2952 1290 (:REWRITE DEFAULT-+-2))
 (2284 72 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (2024 40 (:LINEAR ACL2-COUNT-NTH-MEASURE))
 (1662 1290 (:REWRITE DEFAULT-+-1))
 (1478 294 (:DEFINITION LEN))
 (1140 1140 (:TYPE-PRESCRIPTION LEN))
 (998 994 (:REWRITE DEFAULT-CDR))
 (875 20 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (855 18 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (702 698 (:REWRITE DEFAULT-CAR))
 (672 110 (:DEFINITION LENGTH))
 (555 10 (:DEFINITION T-VAR-P))
 (524 12 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (466 3 (:REWRITE PRODUCT-TYPE-T-ABS-P))
 (429 8 (:DEFINITION T-FALSE-P))
 (408 204 (:REWRITE |(+ 0 x)|))
 (396 396 (:REWRITE |(equal (- x) (- y))|))
 (396 12 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (372 372 (:REWRITE FOLD-CONSTS-IN-+))
 (366 14 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (346 14 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (303 6 (:DEFINITION T-TRUE-P))
 (268 12 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (245 52 (:DEFINITION TRUE-LISTP))
 (240 8 (:LINEAR T-ABS-BODY-ACL2-COUNT))
 (224 224 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (216 216 (:REWRITE |(equal (- x) 0)|))
 (188 188 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (178 2 (:DEFINITION T-IF-COND))
 (178 2 (:DEFINITION T-APP-ARGTYPE))
 (176 2 (:DEFINITION T-IF-CASE2))
 (176 2 (:DEFINITION T-IF-CASE1))
 (176 2 (:DEFINITION T-APP-FUN))
 (176 2 (:DEFINITION T-APP-ARG))
 (144 144 (:TYPE-PRESCRIPTION NFIX))
 (144 72 (:REWRITE DEFAULT-<-2))
 (128 8 (:REWRITE T-ABS-ACL2-COUNT))
 (72 72 (:REWRITE DEFAULT-<-1))
 (72 72 (:REWRITE |(< (- x) (- y))|))
 (46 2 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (36 12 (:REWRITE VN-P-PRODUCT-TYPE))
 (36 12 (:REWRITE VAR-P-PRODUCT-TYPE))
 (36 12 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE LAM-P-PRODUCT-TYPE))
 (36 12 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE FUN-P-PRODUCT-TYPE))
 (36 12 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (36 12 (:REWRITE APP-P-PRODUCT-TYPE))
 (28 28 (:TYPE-PRESCRIPTION FUN-P))
 (28 12 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (26 2 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (24 24 (:TYPE-PRESCRIPTION VN-P))
 (24 24 (:TYPE-PRESCRIPTION VAR-P))
 (24 24 (:TYPE-PRESCRIPTION TRUE-P))
 (24 24 (:TYPE-PRESCRIPTION LAM-P))
 (24 24 (:TYPE-PRESCRIPTION IFELSE-P))
 (24 24 (:TYPE-PRESCRIPTION FALSE-P))
 (24 24 (:TYPE-PRESCRIPTION BOOL-P))
 (24 24 (:TYPE-PRESCRIPTION APP-P))
 (24 12 (:DEFINITION PRODUCT-TYPE))
 (22 2 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (22 2 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (22 2 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (22 2 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (16 16 (:REWRITE |(< 0 (- x))|))
 (10 10 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (6 2 (:REWRITE FUN-NOT-STYPE))
 (5 2 (:REWRITE TYPE-DERIV-T-ABS-ACCESSOR-TYPES))
 (1 1 (:TYPE-PRESCRIPTION STYPE-P))
 )
(TYPE-DERIV-P-T-APP
 (18288 390 (:LINEAR ACL2-COUNT-0-LEN-0))
 (13118 31 (:REWRITE T-APP-NOT-TYPE-DERIV))
 (9752 882 (:DEFINITION ACL2-COUNT))
 (9600 86 (:DEFINITION T-IF-P))
 (9038 61 (:DEFINITION T-ABS-P))
 (8536 224 (:REWRITE NTH-WITH-LARGE-INDEX))
 (7976 112 (:DEFINITION NTH))
 (7724 31 (:REWRITE T-IF-NOT-TYPE-DERIV))
 (7724 31 (:REWRITE T-ABS-NOT-TYPE-DERIV))
 (7136 64 (:LINEAR ACL2-COUNT-NTH-LEN-2))
 (6652 6652 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (5170 2239 (:REWRITE DEFAULT-+-2))
 (3552 112 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (3248 64 (:LINEAR ACL2-COUNT-NTH-MEASURE))
 (2931 2239 (:REWRITE DEFAULT-+-1))
 (2421 483 (:DEFINITION LEN))
 (1937 1937 (:TYPE-PRESCRIPTION LEN))
 (1766 37 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (1694 1691 (:REWRITE DEFAULT-CDR))
 (1312 28 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (1212 1209 (:REWRITE DEFAULT-CAR))
 (1179 195 (:DEFINITION LENGTH))
 (1060 20 (:DEFINITION T-VAR-P))
 (1048 24 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (808 16 (:DEFINITION T-FALSE-P))
 (792 24 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (726 726 (:REWRITE |(equal (- x) (- y))|))
 (686 686 (:REWRITE FOLD-CONSTS-IN-+))
 (671 5 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (640 320 (:REWRITE |(+ 0 x)|))
 (556 12 (:DEFINITION T-TRUE-P))
 (536 24 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (480 102 (:DEFINITION TRUE-LISTP))
 (480 16 (:LINEAR T-APP-FUN-ACL2-COUNT))
 (480 16 (:LINEAR T-APP-ARG-ACL2-COUNT))
 (436 28 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (390 390 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (384 384 (:REWRITE |(equal (- x) 0)|))
 (368 368 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (356 4 (:DEFINITION T-IF-COND))
 (356 4 (:DEFINITION T-ABS-BODY))
 (354 6 (:REWRITE T-APP-ACL2-COUNT))
 (352 4 (:DEFINITION T-IF-CASE2))
 (352 4 (:DEFINITION T-IF-CASE1))
 (224 224 (:TYPE-PRESCRIPTION NFIX))
 (224 112 (:REWRITE DEFAULT-<-2))
 (112 112 (:REWRITE DEFAULT-<-1))
 (112 112 (:REWRITE |(< (- x) (- y))|))
 (100 4 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (76 28 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (72 24 (:REWRITE VN-P-PRODUCT-TYPE))
 (72 24 (:REWRITE VAR-P-PRODUCT-TYPE))
 (72 24 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (72 24 (:REWRITE LAM-P-PRODUCT-TYPE))
 (72 24 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (72 24 (:REWRITE FUN-P-PRODUCT-TYPE))
 (72 24 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (72 24 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (72 24 (:REWRITE APP-P-PRODUCT-TYPE))
 (66 6 (:REWRITE |(+ y (+ x z))|))
 (56 56 (:REWRITE |(< 0 (- x))|))
 (52 4 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (48 48 (:TYPE-PRESCRIPTION VN-P))
 (48 48 (:TYPE-PRESCRIPTION VAR-P))
 (48 48 (:TYPE-PRESCRIPTION TRUE-P))
 (48 48 (:TYPE-PRESCRIPTION LAM-P))
 (48 48 (:TYPE-PRESCRIPTION IFELSE-P))
 (48 48 (:TYPE-PRESCRIPTION FALSE-P))
 (48 48 (:TYPE-PRESCRIPTION APP-P))
 (48 24 (:DEFINITION PRODUCT-TYPE))
 (44 4 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (44 4 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (30 12 (:REWRITE TYPE-DERIV-T-APP-ACCESSOR-TYPES))
 (30 6 (:REWRITE |(+ y x)|))
 (20 20 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (20 20 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (13 5 (:REWRITE FUN-NOT-STYPE))
 (4 4 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 )
(TYPE-DERIV-P-T-IF
 (23920 544 (:LINEAR ACL2-COUNT-0-LEN-0))
 (17502 46 (:REWRITE T-IF-NOT-TYPE-DERIV))
 (13152 1176 (:DEFINITION ACL2-COUNT))
 (12496 127 (:DEFINITION T-APP-P))
 (11884 91 (:DEFINITION T-ABS-P))
 (10044 264 (:REWRITE NTH-WITH-LARGE-INDEX))
 (9911 46 (:REWRITE T-APP-NOT-TYPE-DERIV))
 (9911 46 (:REWRITE T-ABS-NOT-TYPE-DERIV))
 (9384 132 (:DEFINITION NTH))
 (8996 8996 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (8016 72 (:LINEAR ACL2-COUNT-NTH-LEN-2))
 (6864 2958 (:REWRITE DEFAULT-+-2))
 (4188 132 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (3906 2958 (:REWRITE DEFAULT-+-1))
 (3648 72 (:LINEAR ACL2-COUNT-NTH-MEASURE))
 (3134 626 (:DEFINITION LEN))
 (2612 2612 (:TYPE-PRESCRIPTION LEN))
 (2406 48 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (2221 2219 (:REWRITE DEFAULT-CDR))
 (1968 42 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (1746 290 (:DEFINITION LENGTH))
 (1630 1628 (:REWRITE DEFAULT-CAR))
 (1590 30 (:DEFINITION T-VAR-P))
 (1572 36 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (1212 24 (:DEFINITION T-FALSE-P))
 (1188 36 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (1048 1048 (:REWRITE |(equal (- x) (- y))|))
 (944 944 (:REWRITE FOLD-CONSTS-IN-+))
 (834 18 (:DEFINITION T-TRUE-P))
 (804 36 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (744 372 (:REWRITE |(+ 0 x)|))
 (720 153 (:DEFINITION TRUE-LISTP))
 (720 24 (:LINEAR T-IF-COND-ACL2-COUNT))
 (720 24 (:LINEAR T-IF-CASE2-ACL2-COUNT))
 (720 24 (:LINEAR T-IF-CASE1-ACL2-COUNT))
 (623 10 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (552 552 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (544 544 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (540 540 (:REWRITE |(equal (- x) 0)|))
 (534 6 (:DEFINITION T-APP-ARGTYPE))
 (534 6 (:DEFINITION T-ABS-BODY))
 (528 6 (:DEFINITION T-APP-FUN))
 (528 6 (:DEFINITION T-APP-ARG))
 (264 264 (:TYPE-PRESCRIPTION NFIX))
 (264 132 (:REWRITE DEFAULT-<-2))
 (236 4 (:REWRITE T-IF-ACL2-COUNT))
 (150 6 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (144 48 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (132 132 (:REWRITE DEFAULT-<-1))
 (132 132 (:REWRITE |(< (- x) (- y))|))
 (108 36 (:REWRITE VN-P-PRODUCT-TYPE))
 (108 36 (:REWRITE VAR-P-PRODUCT-TYPE))
 (108 36 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (108 36 (:REWRITE LAM-P-PRODUCT-TYPE))
 (108 36 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (108 36 (:REWRITE FUN-P-PRODUCT-TYPE))
 (108 36 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (108 36 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (108 36 (:REWRITE APP-P-PRODUCT-TYPE))
 (96 6 (:REWRITE NOT-T-APP-P-T-APP-ARGTYPE))
 (84 84 (:TYPE-PRESCRIPTION FUN-P))
 (72 72 (:TYPE-PRESCRIPTION VN-P))
 (72 72 (:TYPE-PRESCRIPTION VAR-P))
 (72 72 (:TYPE-PRESCRIPTION TRUE-P))
 (72 72 (:TYPE-PRESCRIPTION LAM-P))
 (72 72 (:TYPE-PRESCRIPTION IFELSE-P))
 (72 72 (:TYPE-PRESCRIPTION FALSE-P))
 (72 72 (:TYPE-PRESCRIPTION BOOL-P))
 (72 72 (:TYPE-PRESCRIPTION APP-P))
 (72 36 (:DEFINITION PRODUCT-TYPE))
 (66 6 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (66 6 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (48 48 (:REWRITE |(< 0 (- x))|))
 (48 4 (:REWRITE |(+ y (+ x z))|))
 (45 18 (:REWRITE TYPE-DERIV-T-IF-ACCESSOR-TYPES))
 (30 30 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (30 30 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (30 30 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (20 4 (:REWRITE |(+ y x)|))
 (18 6 (:REWRITE FUN-NOT-STYPE))
 )
(TYPE-DERIV-MEASURE
 (390 12 (:DEFINITION ACL2-COUNT))
 (141 3 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (114 54 (:REWRITE DEFAULT-+-2))
 (72 54 (:REWRITE DEFAULT-+-1))
 (72 12 (:DEFINITION INTEGER-ABS))
 (66 18 (:REWRITE |(+ y x)|))
 (48 6 (:DEFINITION LENGTH))
 (42 6 (:REWRITE |(+ (if a b c) x)|))
 (30 6 (:DEFINITION LEN))
 (18 18 (:REWRITE FOLD-CONSTS-IN-+))
 (18 18 (:REWRITE DEFAULT-CDR))
 (18 6 (:REWRITE VN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE VAR-P-PRODUCT-TYPE))
 (18 6 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (18 6 (:REWRITE LAM-P-PRODUCT-TYPE))
 (18 6 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FUN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (18 6 (:REWRITE APP-P-PRODUCT-TYPE))
 (12 12 (:TYPE-PRESCRIPTION VN-P))
 (12 12 (:TYPE-PRESCRIPTION VAR-P))
 (12 12 (:TYPE-PRESCRIPTION TRUE-P))
 (12 12 (:TYPE-PRESCRIPTION T-VAR-P))
 (12 12 (:TYPE-PRESCRIPTION T-TRUE-P))
 (12 12 (:TYPE-PRESCRIPTION T-FALSE-P))
 (12 12 (:TYPE-PRESCRIPTION LAM-P))
 (12 12 (:TYPE-PRESCRIPTION IFELSE-P))
 (12 12 (:TYPE-PRESCRIPTION FUN-P))
 (12 12 (:TYPE-PRESCRIPTION FALSE-P))
 (12 12 (:TYPE-PRESCRIPTION BOOL-P))
 (12 12 (:TYPE-PRESCRIPTION APP-P))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE |(< (- x) 0)|))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (6 6 (:TYPE-PRESCRIPTION LEN))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE DEFAULT-COERCE-2))
 (6 6 (:REWRITE DEFAULT-COERCE-1))
 (6 6 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (1 1 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (1 1 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (1 1 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 )
(T-ABS-MEASURE-DECR
 (149 4 (:REWRITE PRODUCT-TYPE-T-ABS-P))
 (90 2 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (86 2 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (40 16 (:REWRITE DEFAULT-+-2))
 (24 16 (:REWRITE DEFAULT-+-1))
 (24 8 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (24 2 (:REWRITE |(+ y (+ x z))|))
 (21 7 (:REWRITE VN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE VAR-P-PRODUCT-TYPE))
 (21 7 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE LAM-P-PRODUCT-TYPE))
 (21 7 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE FUN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (21 7 (:REWRITE APP-P-PRODUCT-TYPE))
 (20 8 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (20 4 (:REWRITE |(+ y x)|))
 (16 16 (:TYPE-PRESCRIPTION T-IF-P))
 (14 14 (:TYPE-PRESCRIPTION VN-P))
 (14 14 (:TYPE-PRESCRIPTION VAR-P))
 (14 14 (:TYPE-PRESCRIPTION TRUE-P))
 (14 14 (:TYPE-PRESCRIPTION T-VAR-P))
 (14 14 (:TYPE-PRESCRIPTION T-TRUE-P))
 (14 14 (:TYPE-PRESCRIPTION T-FALSE-P))
 (14 14 (:TYPE-PRESCRIPTION LAM-P))
 (14 14 (:TYPE-PRESCRIPTION IFELSE-P))
 (14 14 (:TYPE-PRESCRIPTION FUN-P))
 (14 14 (:TYPE-PRESCRIPTION FALSE-P))
 (14 14 (:TYPE-PRESCRIPTION BOOL-P))
 (14 14 (:TYPE-PRESCRIPTION APP-P))
 (14 8 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (12 12 (:TYPE-PRESCRIPTION T-APP-P))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:REWRITE FOLD-CONSTS-IN-+))
 (5 5 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (2 2 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (2 2 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (2 2 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (2 2 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (2 2 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(T-APP-MEASURE-DECR
 (323 9 (:REWRITE PRODUCT-TYPE-T-APP-P))
 (258 6 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (128 50 (:REWRITE DEFAULT-+-2))
 (78 50 (:REWRITE DEFAULT-+-1))
 (72 6 (:REWRITE |(+ y (+ x z))|))
 (65 23 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (57 19 (:REWRITE VN-P-PRODUCT-TYPE))
 (57 19 (:REWRITE VAR-P-PRODUCT-TYPE))
 (57 19 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (57 19 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (57 19 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (57 19 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (57 19 (:REWRITE LAM-P-PRODUCT-TYPE))
 (57 19 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (57 19 (:REWRITE FUN-P-PRODUCT-TYPE))
 (57 19 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (57 19 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (57 19 (:REWRITE APP-P-PRODUCT-TYPE))
 (42 42 (:TYPE-PRESCRIPTION T-IF-P))
 (38 38 (:TYPE-PRESCRIPTION VN-P))
 (38 38 (:TYPE-PRESCRIPTION VAR-P))
 (38 38 (:TYPE-PRESCRIPTION TRUE-P))
 (38 38 (:TYPE-PRESCRIPTION T-VAR-P))
 (38 38 (:TYPE-PRESCRIPTION T-TRUE-P))
 (38 38 (:TYPE-PRESCRIPTION T-FALSE-P))
 (38 38 (:TYPE-PRESCRIPTION LAM-P))
 (38 38 (:TYPE-PRESCRIPTION IFELSE-P))
 (38 38 (:TYPE-PRESCRIPTION FUN-P))
 (38 38 (:TYPE-PRESCRIPTION FALSE-P))
 (38 38 (:TYPE-PRESCRIPTION BOOL-P))
 (38 38 (:TYPE-PRESCRIPTION APP-P))
 (33 19 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (22 22 (:REWRITE FOLD-CONSTS-IN-+))
 (19 19 (:REWRITE |(equal (- x) (- y))|))
 (14 14 (:TYPE-PRESCRIPTION T-ABS-P))
 (11 11 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (11 11 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (6 6 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (6 6 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (6 6 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (6 6 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (6 2 (:REWRITE DEFAULT-<-2))
 (6 2 (:REWRITE |(< d (+ c x))|))
 (4 2 (:REWRITE DEFAULT-<-1))
 (4 2 (:REWRITE |(< d (+ c x y))|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 )
(T-IF-MEASURE-DECR
 (569 16 (:REWRITE PRODUCT-TYPE-T-IF-P))
 (276 105 (:REWRITE DEFAULT-+-2))
 (168 105 (:REWRITE DEFAULT-+-1))
 (111 37 (:REWRITE VN-P-PRODUCT-TYPE))
 (111 37 (:REWRITE VAR-P-PRODUCT-TYPE))
 (111 37 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (111 37 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (111 37 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (111 37 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (111 37 (:REWRITE LAM-P-PRODUCT-TYPE))
 (111 37 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (111 37 (:REWRITE FUN-P-PRODUCT-TYPE))
 (111 37 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (111 37 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (111 37 (:REWRITE APP-P-PRODUCT-TYPE))
 (87 37 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (74 74 (:TYPE-PRESCRIPTION VN-P))
 (74 74 (:TYPE-PRESCRIPTION VAR-P))
 (74 74 (:TYPE-PRESCRIPTION TRUE-P))
 (74 74 (:TYPE-PRESCRIPTION T-VAR-P))
 (74 74 (:TYPE-PRESCRIPTION T-TRUE-P))
 (74 74 (:TYPE-PRESCRIPTION T-FALSE-P))
 (74 74 (:TYPE-PRESCRIPTION LAM-P))
 (74 74 (:TYPE-PRESCRIPTION IFELSE-P))
 (74 74 (:TYPE-PRESCRIPTION FUN-P))
 (74 74 (:TYPE-PRESCRIPTION FALSE-P))
 (74 74 (:TYPE-PRESCRIPTION BOOL-P))
 (74 74 (:TYPE-PRESCRIPTION APP-P))
 (63 37 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (50 50 (:TYPE-PRESCRIPTION T-APP-P))
 (48 48 (:REWRITE FOLD-CONSTS-IN-+))
 (37 37 (:REWRITE |(equal (- x) (- y))|))
 (26 26 (:TYPE-PRESCRIPTION T-ABS-P))
 (19 19 (:REWRITE NOT-T-IF-P-T-IF-COND))
 (19 19 (:REWRITE NOT-T-IF-P-T-IF-CASE2))
 (19 19 (:REWRITE NOT-T-IF-P-T-IF-CASE1))
 (12 12 (:REWRITE NOT-T-APP-P-T-APP-FUN))
 (12 12 (:REWRITE NOT-T-APP-P-T-APP-ARG))
 (12 12 (:REWRITE NOT-T-ABS-P-T-ABS-BODY))
 (12 3 (:REWRITE DEFAULT-<-2))
 (12 3 (:REWRITE |(< d (+ c x))|))
 (6 3 (:REWRITE DEFAULT-<-1))
 (6 3 (:REWRITE |(< d (+ c x y))|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 )
(E-APPABS-P)
(E-APPABS)
(E-APPABS-P-COMPOUND-RECOGNIZER)
(E-APPABS-ACL2-COUNT)
(E-APPABS-P-E-APPABS)
(E-APPABS-UNIQUE
 (62 3 (:LINEAR ACL2-COUNT-0-LEN-0))
 (41 4 (:DEFINITION ACL2-COUNT))
 (25 12 (:REWRITE DEFAULT-+-2))
 (13 12 (:REWRITE DEFAULT-+-1))
 (12 12 (:REWRITE DEFAULT-CDR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (6 3 (:REWRITE |(+ 0 x)|))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE CAR-CONS))
 )
(E-APPABS-P-PRODUCT-TYPE)
(PRODUCT-TYPE-E-APPABS-P)
(E-APPABS-PRODUCT-TYPE)
(E-APPABS-EQUAL-PRODUCT-TYPE)
(E-APP1-P)
(E-APP1)
(E-APP1-FUN)
(E-APP1-P-COMPOUND-RECOGNIZER)
(E-APP1-ACL2-COUNT
 (40 20 (:REWRITE DEFAULT-+-2))
 (24 20 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (16 2 (:DEFINITION LENGTH))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (10 2 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 )
(E-APP1-FUN-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-E-APP1-P-E-APP1-FUN
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(E-APP1-P-E-APP1
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:TYPE-PRESCRIPTION LEN))
 (1 1 (:REWRITE DEFAULT-+-1))
 )
(E-APP1-ELIM
 (341 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (259 18 (:DEFINITION ACL2-COUNT))
 (148 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (125 56 (:REWRITE DEFAULT-+-2))
 (71 56 (:REWRITE DEFAULT-+-1))
 (69 69 (:REWRITE DEFAULT-CDR))
 (43 43 (:REWRITE DEFAULT-CAR))
 (39 1 (:REWRITE NTH-WITH-LARGE-INDEX))
 (15 15 (:REWRITE FOLD-CONSTS-IN-+))
 (15 15 (:REWRITE |(equal (- x) (- y))|))
 (14 7 (:REWRITE |(+ 0 x)|))
 (12 2 (:DEFINITION INTEGER-ABS))
 (11 3 (:REWRITE |(+ y x)|))
 (10 1 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE |(equal (- x) 0)|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (3 2 (:REWRITE |(equal (if a b c) x)|))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (1 1 (:TYPE-PRESCRIPTION NFIX))
 (1 1 (:TYPE-PRESCRIPTION E-APP1-P))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(E-APP1-P-PRODUCT-TYPE)
(PRODUCT-TYPE-E-APP1-P)
(E-APP1-PRODUCT-TYPE)
(E-APP1-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(E-APP1-FUN-E-APP1
 (18 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (18 1 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (5 5 (:TYPE-PRESCRIPTION LEN))
 (4 2 (:REWRITE PRODUCT-TYPE-E-APP1-P))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION E-APP1-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 )
(E-APP1-NOT-EQUAL-FUN
 (175 3 (:REWRITE PRODUCT-TYPE-E-APP1-P))
 (164 10 (:DEFINITION ACL2-COUNT))
 (158 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 32 (:REWRITE DEFAULT-+-2))
 (72 1 (:DEFINITION NTH))
 (62 1 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (62 1 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION E-APPABS-P))
 (42 32 (:REWRITE DEFAULT-+-1))
 (40 8 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (20 20 (:REWRITE DEFAULT-CDR))
 (17 17 (:REWRITE DEFAULT-CAR))
 (17 17 (:REWRITE |(equal (- x) (- y))|))
 (17 2 (:DEFINITION INTEGER-ABS))
 (11 3 (:REWRITE |(+ y x)|))
 (10 10 (:REWRITE FOLD-CONSTS-IN-+))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 6 (:REWRITE |(equal (- x) 0)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (3 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (3 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (3 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-VAR-P))
 (2 2 (:TYPE-PRESCRIPTION T-TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION T-FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION T-ABS-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION E-APP1-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION E-APPABS-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(E-APP1-NOT-EQUAL-E-APP1-FUN
 (3 2 (:REWRITE DEFAULT-CDR))
 (3 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE PRODUCT-TYPE-E-APP1-P))
 (1 1 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (1 1 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 )
(DIFFERENCE-FUN-E-APP1
 (18 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (18 1 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (5 5 (:TYPE-PRESCRIPTION LEN))
 (4 2 (:REWRITE PRODUCT-TYPE-E-APP1-P))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION E-APP1-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 )
(E-APP2-P)
(E-APP2)
(E-APP2-ARG)
(E-APP2-P-COMPOUND-RECOGNIZER)
(E-APP2-ACL2-COUNT
 (40 20 (:REWRITE DEFAULT-+-2))
 (24 20 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (16 2 (:DEFINITION LENGTH))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (10 2 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 )
(E-APP2-ARG-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-E-APP2-P-E-APP2-ARG
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(E-APP2-P-E-APP2
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:TYPE-PRESCRIPTION LEN))
 (1 1 (:REWRITE DEFAULT-+-1))
 )
(E-APP2-ELIM
 (341 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (259 18 (:DEFINITION ACL2-COUNT))
 (148 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (125 56 (:REWRITE DEFAULT-+-2))
 (71 56 (:REWRITE DEFAULT-+-1))
 (69 69 (:REWRITE DEFAULT-CDR))
 (43 43 (:REWRITE DEFAULT-CAR))
 (39 1 (:REWRITE NTH-WITH-LARGE-INDEX))
 (15 15 (:REWRITE FOLD-CONSTS-IN-+))
 (15 15 (:REWRITE |(equal (- x) (- y))|))
 (14 7 (:REWRITE |(+ 0 x)|))
 (12 2 (:DEFINITION INTEGER-ABS))
 (11 3 (:REWRITE |(+ y x)|))
 (10 1 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE |(equal (- x) 0)|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (3 2 (:REWRITE |(equal (if a b c) x)|))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (1 1 (:TYPE-PRESCRIPTION NFIX))
 (1 1 (:TYPE-PRESCRIPTION E-APP2-P))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(E-APP2-P-PRODUCT-TYPE)
(PRODUCT-TYPE-E-APP2-P)
(E-APP2-PRODUCT-TYPE)
(E-APP2-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(E-APP2-ARG-E-APP2
 (18 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (18 1 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (5 5 (:TYPE-PRESCRIPTION LEN))
 (4 2 (:REWRITE PRODUCT-TYPE-E-APP2-P))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION E-APP2-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 )
(E-APP2-NOT-EQUAL-ARG
 (237 3 (:REWRITE PRODUCT-TYPE-E-APP2-P))
 (200 8 (:LINEAR ACL2-COUNT-0-LEN-0))
 (188 12 (:DEFINITION ACL2-COUNT))
 (84 37 (:REWRITE DEFAULT-+-2))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 1 (:DEFINITION NTH))
 (62 1 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (62 1 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 (62 1 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION E-APPABS-P))
 (60 1 (:DEFINITION E-APP1-P))
 (49 37 (:REWRITE DEFAULT-+-1))
 (45 9 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (23 23 (:REWRITE DEFAULT-CDR))
 (21 21 (:REWRITE |(equal (- x) (- y))|))
 (20 20 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (11 3 (:REWRITE |(+ y x)|))
 (8 8 (:REWRITE |(equal (- x) 0)|))
 (8 8 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (3 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (3 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (3 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-VAR-P))
 (2 2 (:TYPE-PRESCRIPTION T-TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION T-FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION T-ABS-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION E-APP2-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION E-APPABS-P))
 (1 1 (:TYPE-PRESCRIPTION E-APP1-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(E-APP2-NOT-EQUAL-E-APP2-ARG
 (3 2 (:REWRITE DEFAULT-CDR))
 (3 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE PRODUCT-TYPE-E-APP2-P))
 (1 1 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (1 1 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 )
(DIFFERENCE-ARG-E-APP2
 (18 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (18 1 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (5 5 (:TYPE-PRESCRIPTION LEN))
 (4 2 (:REWRITE PRODUCT-TYPE-E-APP2-P))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION E-APP2-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 )
(E-IFCOND-P)
(E-IFCOND)
(E-IFCOND-COND)
(E-IFCOND-P-COMPOUND-RECOGNIZER)
(E-IFCOND-ACL2-COUNT
 (40 20 (:REWRITE DEFAULT-+-2))
 (24 20 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION INTEGER-ABS))
 (16 2 (:DEFINITION LENGTH))
 (14 2 (:REWRITE |(+ (if a b c) x)|))
 (10 2 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) 0)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:REWRITE DEFAULT-REALPART))
 (2 2 (:REWRITE DEFAULT-NUMERATOR))
 (2 2 (:REWRITE DEFAULT-IMAGPART))
 (2 2 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE DEFAULT-COERCE-2))
 (2 2 (:REWRITE DEFAULT-COERCE-1))
 )
(E-IFCOND-COND-ACL2-COUNT
 (14 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (12 6 (:REWRITE DEFAULT-+-2))
 (9 1 (:LINEAR ACL2-COUNT-0-LEN-0))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:DEFINITION TRUE-LISTP))
 (1 1 (:REWRITE ACL2-COUNT-NTH-MEASURE))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 )
(NOT-E-IFCOND-P-E-IFCOND-COND
 (15 3 (:DEFINITION LEN))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-CAR))
 )
(E-IFCOND-P-E-IFCOND
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:TYPE-PRESCRIPTION LEN))
 (1 1 (:REWRITE DEFAULT-+-1))
 )
(E-IFCOND-ELIM
 (341 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (259 18 (:DEFINITION ACL2-COUNT))
 (148 4 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (125 56 (:REWRITE DEFAULT-+-2))
 (71 56 (:REWRITE DEFAULT-+-1))
 (69 69 (:REWRITE DEFAULT-CDR))
 (43 43 (:REWRITE DEFAULT-CAR))
 (39 1 (:REWRITE NTH-WITH-LARGE-INDEX))
 (15 15 (:REWRITE FOLD-CONSTS-IN-+))
 (15 15 (:REWRITE |(equal (- x) (- y))|))
 (14 7 (:REWRITE |(+ 0 x)|))
 (12 2 (:DEFINITION INTEGER-ABS))
 (11 3 (:REWRITE |(+ y x)|))
 (10 1 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE |(equal (- x) 0)|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (3 2 (:REWRITE |(equal (if a b c) x)|))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (1 1 (:TYPE-PRESCRIPTION NFIX))
 (1 1 (:TYPE-PRESCRIPTION E-IFCOND-P))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(E-IFCOND-P-PRODUCT-TYPE)
(PRODUCT-TYPE-E-IFCOND-P)
(E-IFCOND-PRODUCT-TYPE)
(E-IFCOND-EQUAL-PRODUCT-TYPE
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(E-IFCOND-COND-E-IFCOND
 (18 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (18 1 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (5 5 (:TYPE-PRESCRIPTION LEN))
 (4 2 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION E-IFCOND-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 )
(E-IFCOND-NOT-EQUAL-COND
 (299 3 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (242 10 (:LINEAR ACL2-COUNT-0-LEN-0))
 (212 14 (:DEFINITION ACL2-COUNT))
 (96 42 (:REWRITE DEFAULT-+-2))
 (77 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (72 1 (:DEFINITION NTH))
 (62 1 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 (62 1 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (62 1 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 (62 1 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION E-APPABS-P))
 (60 1 (:DEFINITION E-APP2-P))
 (60 1 (:DEFINITION E-APP1-P))
 (56 42 (:REWRITE DEFAULT-+-1))
 (50 10 (:DEFINITION LEN))
 (40 1 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (32 1 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (26 26 (:REWRITE DEFAULT-CDR))
 (25 25 (:REWRITE |(equal (- x) (- y))|))
 (23 23 (:REWRITE DEFAULT-CAR))
 (17 2 (:DEFINITION INTEGER-ABS))
 (14 14 (:REWRITE FOLD-CONSTS-IN-+))
 (11 3 (:REWRITE |(+ y x)|))
 (10 10 (:REWRITE |(equal (- x) 0)|))
 (10 10 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (7 1 (:REWRITE |(< (if a b c) x)|))
 (7 1 (:REWRITE |(+ (if a b c) x)|))
 (6 4 (:REWRITE DEFAULT-<-2))
 (6 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE |(+ 0 x)|))
 (3 1 (:REWRITE VN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (3 1 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (3 1 (:REWRITE LAM-P-PRODUCT-TYPE))
 (3 1 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FUN-P-PRODUCT-TYPE))
 (3 1 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (3 1 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (3 1 (:REWRITE APP-P-PRODUCT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION VN-P))
 (2 2 (:TYPE-PRESCRIPTION VAR-P))
 (2 2 (:TYPE-PRESCRIPTION TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-VAR-P))
 (2 2 (:TYPE-PRESCRIPTION T-TRUE-P))
 (2 2 (:TYPE-PRESCRIPTION T-IF-P))
 (2 2 (:TYPE-PRESCRIPTION T-FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION T-APP-P))
 (2 2 (:TYPE-PRESCRIPTION T-ABS-P))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION LAM-P))
 (2 2 (:TYPE-PRESCRIPTION IFELSE-P))
 (2 2 (:TYPE-PRESCRIPTION FUN-P))
 (2 2 (:TYPE-PRESCRIPTION FALSE-P))
 (2 2 (:TYPE-PRESCRIPTION E-IFCOND-P))
 (2 2 (:TYPE-PRESCRIPTION BOOL-P))
 (2 2 (:TYPE-PRESCRIPTION APP-P))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(< (- x) 0)|))
 (2 1 (:REWRITE |(- (if a b c))|))
 (2 1 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION E-APPABS-P))
 (1 1 (:TYPE-PRESCRIPTION E-APP2-P))
 (1 1 (:TYPE-PRESCRIPTION E-APP1-P))
 (1 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (1 1 (:REWRITE DEFAULT-REALPART))
 (1 1 (:REWRITE DEFAULT-NUMERATOR))
 (1 1 (:REWRITE DEFAULT-IMAGPART))
 (1 1 (:REWRITE DEFAULT-DENOMINATOR))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(E-IFCOND-NOT-EQUAL-E-IFCOND-COND
 (3 2 (:REWRITE DEFAULT-CDR))
 (3 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (1 1 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (1 1 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 )
(DIFFERENCE-COND-E-IFCOND
 (18 2 (:REWRITE NTH-WITH-LARGE-INDEX))
 (18 1 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 3 (:REWRITE DEFAULT-+-2))
 (5 5 (:TYPE-PRESCRIPTION LEN))
 (4 2 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION E-IFCOND-P))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 )
(E-IFTRUE-P)
(E-IFTRUE)
(E-IFTRUE-P-COMPOUND-RECOGNIZER)
(E-IFTRUE-ACL2-COUNT)
(E-IFTRUE-P-E-IFTRUE)
(E-IFTRUE-UNIQUE
 (62 3 (:LINEAR ACL2-COUNT-0-LEN-0))
 (41 4 (:DEFINITION ACL2-COUNT))
 (25 12 (:REWRITE DEFAULT-+-2))
 (13 12 (:REWRITE DEFAULT-+-1))
 (12 12 (:REWRITE DEFAULT-CDR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (6 3 (:REWRITE |(+ 0 x)|))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE CAR-CONS))
 )
(E-IFTRUE-P-PRODUCT-TYPE)
(PRODUCT-TYPE-E-IFTRUE-P)
(E-IFTRUE-PRODUCT-TYPE)
(E-IFTRUE-EQUAL-PRODUCT-TYPE)
(E-IFFALSE-P)
(E-IFFALSE)
(E-IFFALSE-P-COMPOUND-RECOGNIZER)
(E-IFFALSE-ACL2-COUNT)
(E-IFFALSE-P-E-IFFALSE)
(E-IFFALSE-UNIQUE
 (62 3 (:LINEAR ACL2-COUNT-0-LEN-0))
 (41 4 (:DEFINITION ACL2-COUNT))
 (25 12 (:REWRITE DEFAULT-+-2))
 (13 12 (:REWRITE DEFAULT-+-1))
 (12 12 (:REWRITE DEFAULT-CDR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (6 3 (:REWRITE |(+ 0 x)|))
 (6 3 (:DEFINITION TRUE-LISTP))
 (3 3 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (2 2 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE CAR-CONS))
 )
(E-IFFALSE-P-PRODUCT-TYPE)
(PRODUCT-TYPE-E-IFFALSE-P)
(E-IFFALSE-PRODUCT-TYPE)
(E-IFFALSE-EQUAL-PRODUCT-TYPE)
(EVAL-DERIV-P
 (1661 85 (:LINEAR ACL2-COUNT-0-LEN-0))
 (1243 110 (:DEFINITION ACL2-COUNT))
 (502 245 (:REWRITE DEFAULT-+-2))
 (466 9 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 (462 12 (:REWRITE NTH-WITH-LARGE-INDEX))
 (432 6 (:DEFINITION NTH))
 (345 9 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (345 9 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (327 9 (:DEFINITION E-IFTRUE-P))
 (327 9 (:DEFINITION E-IFFALSE-P))
 (318 6 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (310 8 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 (306 6 (:DEFINITION E-APPABS-P))
 (271 245 (:REWRITE DEFAULT-+-1))
 (258 7 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (197 197 (:REWRITE DEFAULT-CDR))
 (194 97 (:REWRITE |(+ 0 x)|))
 (192 6 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (166 166 (:REWRITE DEFAULT-CAR))
 (129 129 (:REWRITE |(equal (- x) (- y))|))
 (85 85 (:REWRITE |(equal (- x) 0)|))
 (85 85 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (84 14 (:DEFINITION INTEGER-ABS))
 (77 21 (:REWRITE |(+ y x)|))
 (51 1 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (49 7 (:REWRITE |(+ (if a b c) x)|))
 (41 1 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (32 23 (:REWRITE DEFAULT-<-2))
 (31 1 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (26 26 (:REWRITE FOLD-CONSTS-IN-+))
 (26 23 (:REWRITE DEFAULT-<-1))
 (23 23 (:REWRITE |(< (- x) (- y))|))
 (22 2 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (18 6 (:REWRITE VN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE VAR-P-PRODUCT-TYPE))
 (18 6 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (18 6 (:REWRITE LAM-P-PRODUCT-TYPE))
 (18 6 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FUN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (18 6 (:REWRITE APP-P-PRODUCT-TYPE))
 (14 14 (:REWRITE DEFAULT-UNARY-MINUS))
 (14 14 (:REWRITE |(< (- x) 0)|))
 (12 12 (:TYPE-PRESCRIPTION VN-P))
 (12 12 (:TYPE-PRESCRIPTION VAR-P))
 (12 12 (:TYPE-PRESCRIPTION TRUE-P))
 (12 12 (:TYPE-PRESCRIPTION T-VAR-P))
 (12 12 (:TYPE-PRESCRIPTION T-TRUE-P))
 (12 12 (:TYPE-PRESCRIPTION T-IF-P))
 (12 12 (:TYPE-PRESCRIPTION T-FALSE-P))
 (12 12 (:TYPE-PRESCRIPTION T-APP-P))
 (12 12 (:TYPE-PRESCRIPTION T-ABS-P))
 (12 12 (:TYPE-PRESCRIPTION LAM-P))
 (12 12 (:TYPE-PRESCRIPTION IFELSE-P))
 (12 12 (:TYPE-PRESCRIPTION FUN-P))
 (12 12 (:TYPE-PRESCRIPTION FALSE-P))
 (12 12 (:TYPE-PRESCRIPTION BOOL-P))
 (12 12 (:TYPE-PRESCRIPTION APP-P))
 (9 3 (:REWRITE |(< (+ d x) (+ c y))|))
 (9 3 (:REWRITE |(< (+ c x) (+ d y))|))
 (7 7 (:REWRITE DEFAULT-REALPART))
 (7 7 (:REWRITE DEFAULT-NUMERATOR))
 (7 7 (:REWRITE DEFAULT-IMAGPART))
 (7 7 (:REWRITE DEFAULT-DENOMINATOR))
 (7 7 (:REWRITE DEFAULT-COERCE-2))
 (7 7 (:REWRITE DEFAULT-COERCE-1))
 (6 6 (:REWRITE |(< 0 (- x))|))
 (6 3 (:REWRITE |(< d (+ c x))|))
 (6 3 (:REWRITE |(< (+ c x) d)|))
 (6 3 (:DEFINITION TRUE-LISTP))
 )
(EVAL-DERIV-COMPOUND-RECOGNIZER)
(EVAL-DERIV-POSSIBILITIES
 (66 2 (:REWRITE PRODUCT-TYPE-E-IFFALSE-P))
 (54 27 (:REWRITE DEFAULT-+-2))
 (33 33 (:REWRITE DEFAULT-CDR))
 (30 30 (:REWRITE DEFAULT-CAR))
 (27 27 (:REWRITE DEFAULT-+-1))
 (18 18 (:REWRITE |(equal (- x) (- y))|))
 (18 6 (:REWRITE VN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE VAR-P-PRODUCT-TYPE))
 (18 6 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (18 6 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (18 6 (:REWRITE LAM-P-PRODUCT-TYPE))
 (18 6 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FUN-P-PRODUCT-TYPE))
 (18 6 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (18 6 (:REWRITE APP-P-PRODUCT-TYPE))
 (16 7 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (15 7 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 (15 7 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 (15 7 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (12 12 (:TYPE-PRESCRIPTION VN-P))
 (12 12 (:TYPE-PRESCRIPTION VAR-P))
 (12 12 (:TYPE-PRESCRIPTION TRUE-P))
 (12 12 (:TYPE-PRESCRIPTION T-VAR-P))
 (12 12 (:TYPE-PRESCRIPTION T-TRUE-P))
 (12 12 (:TYPE-PRESCRIPTION T-IF-P))
 (12 12 (:TYPE-PRESCRIPTION T-FALSE-P))
 (12 12 (:TYPE-PRESCRIPTION T-APP-P))
 (12 12 (:TYPE-PRESCRIPTION T-ABS-P))
 (12 12 (:TYPE-PRESCRIPTION LAM-P))
 (12 12 (:TYPE-PRESCRIPTION IFELSE-P))
 (12 12 (:TYPE-PRESCRIPTION FUN-P))
 (12 12 (:TYPE-PRESCRIPTION FALSE-P))
 (12 12 (:TYPE-PRESCRIPTION BOOL-P))
 (12 12 (:TYPE-PRESCRIPTION APP-P))
 (12 6 (:DEFINITION TRUE-LISTP))
 (12 6 (:DEFINITION PRODUCT-TYPE))
 (1 1 (:TYPE-PRESCRIPTION E-IFCOND-P))
 (1 1 (:TYPE-PRESCRIPTION E-APPABS-P))
 (1 1 (:TYPE-PRESCRIPTION E-APP2-P))
 (1 1 (:TYPE-PRESCRIPTION E-APP1-P))
 )
(EVAL-DERIV-E-APP1-ACCESSOR-TYPES
 (168 8 (:LINEAR ACL2-COUNT-0-LEN-0))
 (96 8 (:DEFINITION ACL2-COUNT))
 (80 80 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (63 2 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (63 2 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (63 2 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 (63 2 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION E-IFTRUE-P))
 (60 1 (:DEFINITION E-IFFALSE-P))
 (60 1 (:DEFINITION E-IFCOND-P))
 (60 1 (:DEFINITION E-APP2-P))
 (48 20 (:REWRITE DEFAULT-+-2))
 (28 28 (:TYPE-PRESCRIPTION LEN))
 (28 20 (:REWRITE DEFAULT-+-1))
 (24 4 (:DEFINITION LENGTH))
 (20 4 (:DEFINITION LEN))
 (16 16 (:REWRITE |(equal (- x) (- y))|))
 (12 12 (:REWRITE DEFAULT-CDR))
 (12 12 (:REWRITE DEFAULT-CAR))
 (8 8 (:REWRITE FOLD-CONSTS-IN-+))
 (8 8 (:REWRITE |(equal (- x) 0)|))
 (8 8 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (6 1 (:REWRITE PRODUCT-TYPE-E-APP1-P))
 (1 1 (:TYPE-PRESCRIPTION E-IFCOND-P))
 (1 1 (:TYPE-PRESCRIPTION E-APP2-P))
 (1 1 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 )
(EVAL-DERIV-E-APP2-ACCESSOR-TYPES
 (126 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (72 6 (:DEFINITION ACL2-COUNT))
 (64 3 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (64 3 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (64 3 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 (60 60 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (60 1 (:DEFINITION E-IFTRUE-P))
 (60 1 (:DEFINITION E-IFFALSE-P))
 (60 1 (:DEFINITION E-IFCOND-P))
 (36 15 (:REWRITE DEFAULT-+-2))
 (21 21 (:TYPE-PRESCRIPTION LEN))
 (21 15 (:REWRITE DEFAULT-+-1))
 (18 3 (:DEFINITION LENGTH))
 (15 3 (:DEFINITION LEN))
 (12 12 (:REWRITE |(equal (- x) (- y))|))
 (9 9 (:REWRITE DEFAULT-CDR))
 (9 9 (:REWRITE DEFAULT-CAR))
 (6 6 (:REWRITE FOLD-CONSTS-IN-+))
 (6 6 (:REWRITE |(equal (- x) 0)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (5 1 (:REWRITE PRODUCT-TYPE-E-APP2-P))
 (1 1 (:TYPE-PRESCRIPTION E-IFCOND-P))
 (1 1 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 )
(EVAL-DERIV-E-IFCOND-ACCESSOR-TYPES
 (84 4 (:LINEAR ACL2-COUNT-0-LEN-0))
 (65 4 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (65 4 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (60 1 (:DEFINITION E-IFTRUE-P))
 (60 1 (:DEFINITION E-IFFALSE-P))
 (48 4 (:DEFINITION ACL2-COUNT))
 (40 40 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (24 10 (:REWRITE DEFAULT-+-2))
 (14 14 (:TYPE-PRESCRIPTION LEN))
 (14 10 (:REWRITE DEFAULT-+-1))
 (12 2 (:DEFINITION LENGTH))
 (10 2 (:DEFINITION LEN))
 (8 8 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE FOLD-CONSTS-IN-+))
 (4 4 (:REWRITE |(equal (- x) 0)|))
 (4 4 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 1 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (1 1 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 )
(E-APP1-NOT-EVAL-DERIV)
(E-APP2-NOT-EVAL-DERIV)
(E-IFCOND-NOT-EVAL-DERIV)
(EVAL-DERIV-P-E-APPABS)
(EVAL-DERIV-P-E-APP1
 (5955 167 (:LINEAR ACL2-COUNT-0-LEN-0))
 (4521 10 (:REWRITE E-APP1-NOT-EVAL-DERIV))
 (3236 287 (:DEFINITION ACL2-COUNT))
 (2778 28 (:DEFINITION E-IFCOND-P))
 (2636 24 (:DEFINITION E-APP2-P))
 (2298 2298 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (2148 56 (:REWRITE NTH-WITH-LARGE-INDEX))
 (2031 10 (:REWRITE E-IFCOND-NOT-EVAL-DERIV))
 (2031 10 (:REWRITE E-APP2-NOT-EVAL-DERIV))
 (2008 28 (:DEFINITION NTH))
 (1792 16 (:LINEAR ACL2-COUNT-NTH-LEN-2))
 (1727 746 (:REWRITE DEFAULT-+-2))
 (981 746 (:REWRITE DEFAULT-+-1))
 (899 19 (:DEFINITION E-IFTRUE-P))
 (899 19 (:DEFINITION E-IFFALSE-P))
 (888 28 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (885 18 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (885 18 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (852 168 (:DEFINITION LEN))
 (816 16 (:LINEAR ACL2-COUNT-NTH-MEASURE))
 (760 3 (:REWRITE PRODUCT-TYPE-E-APP1-P))
 (753 753 (:TYPE-PRESCRIPTION LEN))
 (745 18 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 (686 6 (:REWRITE PRODUCT-TYPE-E-APP2-P))
 (666 6 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (597 16 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 (594 96 (:DEFINITION LENGTH))
 (559 553 (:REWRITE DEFAULT-CDR))
 (494 2 (:REWRITE PRODUCT-TYPE-E-IFTRUE-P))
 (421 415 (:REWRITE DEFAULT-CAR))
 (366 2 (:REWRITE PRODUCT-TYPE-E-IFFALSE-P))
 (323 323 (:REWRITE |(equal (- x) (- y))|))
 (303 6 (:DEFINITION E-APPABS-P))
 (268 12 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (240 8 (:LINEAR E-APP1-FUN-ACL2-COUNT))
 (235 235 (:REWRITE FOLD-CONSTS-IN-+))
 (195 42 (:DEFINITION TRUE-LISTP))
 (192 12 (:REWRITE E-APP1-ACL2-COUNT))
 (178 2 (:DEFINITION E-IFCOND-COND))
 (178 2 (:DEFINITION E-APP2-ARG))
 (167 167 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (160 80 (:REWRITE |(+ 0 x)|))
 (155 155 (:REWRITE |(equal (- x) 0)|))
 (148 148 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (82 2 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (62 2 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (56 56 (:TYPE-PRESCRIPTION NFIX))
 (56 28 (:REWRITE DEFAULT-<-2))
 (36 12 (:REWRITE VN-P-PRODUCT-TYPE))
 (36 12 (:REWRITE VAR-P-PRODUCT-TYPE))
 (36 12 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (36 12 (:REWRITE LAM-P-PRODUCT-TYPE))
 (36 12 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE FUN-P-PRODUCT-TYPE))
 (36 12 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (36 12 (:REWRITE APP-P-PRODUCT-TYPE))
 (28 28 (:REWRITE DEFAULT-<-1))
 (28 28 (:REWRITE |(< 0 (- x))|))
 (28 28 (:REWRITE |(< (- x) (- y))|))
 (24 24 (:TYPE-PRESCRIPTION VN-P))
 (24 24 (:TYPE-PRESCRIPTION VAR-P))
 (24 24 (:TYPE-PRESCRIPTION TRUE-P))
 (24 24 (:TYPE-PRESCRIPTION T-VAR-P))
 (24 24 (:TYPE-PRESCRIPTION T-TRUE-P))
 (24 24 (:TYPE-PRESCRIPTION T-IF-P))
 (24 24 (:TYPE-PRESCRIPTION T-FALSE-P))
 (24 24 (:TYPE-PRESCRIPTION T-APP-P))
 (24 24 (:TYPE-PRESCRIPTION T-ABS-P))
 (24 24 (:TYPE-PRESCRIPTION LAM-P))
 (24 24 (:TYPE-PRESCRIPTION IFELSE-P))
 (24 24 (:TYPE-PRESCRIPTION FUN-P))
 (24 24 (:TYPE-PRESCRIPTION FALSE-P))
 (24 24 (:TYPE-PRESCRIPTION BOOL-P))
 (24 24 (:TYPE-PRESCRIPTION APP-P))
 (24 12 (:DEFINITION PRODUCT-TYPE))
 (20 12 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (10 10 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (5 2 (:REWRITE EVAL-DERIV-E-APP1-ACCESSOR-TYPES))
 )
(EVAL-DERIV-P-E-APP2
 (5833 161 (:LINEAR ACL2-COUNT-0-LEN-0))
 (4465 10 (:REWRITE E-APP2-NOT-EVAL-DERIV))
 (3164 281 (:DEFINITION ACL2-COUNT))
 (2778 28 (:DEFINITION E-IFCOND-P))
 (2446 21 (:DEFINITION E-APP1-P))
 (2244 2244 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (2148 56 (:REWRITE NTH-WITH-LARGE-INDEX))
 (2031 10 (:REWRITE E-IFCOND-NOT-EVAL-DERIV))
 (2031 10 (:REWRITE E-APP1-NOT-EVAL-DERIV))
 (2008 28 (:DEFINITION NTH))
 (1792 16 (:LINEAR ACL2-COUNT-NTH-LEN-2))
 (1687 729 (:REWRITE DEFAULT-+-2))
 (958 729 (:REWRITE DEFAULT-+-1))
 (899 19 (:DEFINITION E-IFTRUE-P))
 (899 19 (:DEFINITION E-IFFALSE-P))
 (888 28 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (886 19 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (886 19 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (835 165 (:DEFINITION LEN))
 (816 16 (:LINEAR ACL2-COUNT-NTH-MEASURE))
 (746 19 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 (732 732 (:TYPE-PRESCRIPTION LEN))
 (631 3 (:REWRITE PRODUCT-TYPE-E-APP2-P))
 (573 93 (:DEFINITION LENGTH))
 (548 543 (:REWRITE DEFAULT-CDR))
 (538 6 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (494 2 (:REWRITE PRODUCT-TYPE-E-IFTRUE-P))
 (411 406 (:REWRITE DEFAULT-CAR))
 (400 14 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (366 2 (:REWRITE PRODUCT-TYPE-E-IFFALSE-P))
 (313 313 (:REWRITE |(equal (- x) (- y))|))
 (303 6 (:DEFINITION E-APPABS-P))
 (268 12 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (240 8 (:LINEAR E-APP2-ARG-ACL2-COUNT))
 (229 229 (:REWRITE FOLD-CONSTS-IN-+))
 (190 41 (:DEFINITION TRUE-LISTP))
 (178 2 (:DEFINITION E-IFCOND-COND))
 (178 2 (:DEFINITION E-APP1-FUN))
 (161 161 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (160 80 (:REWRITE |(+ 0 x)|))
 (160 10 (:REWRITE E-APP2-ACL2-COUNT))
 (151 151 (:REWRITE |(equal (- x) 0)|))
 (144 144 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (88 2 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (62 2 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (56 56 (:TYPE-PRESCRIPTION NFIX))
 (56 28 (:REWRITE DEFAULT-<-2))
 (36 12 (:REWRITE VN-P-PRODUCT-TYPE))
 (36 12 (:REWRITE VAR-P-PRODUCT-TYPE))
 (36 12 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (36 12 (:REWRITE LAM-P-PRODUCT-TYPE))
 (36 12 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE FUN-P-PRODUCT-TYPE))
 (36 12 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (36 12 (:REWRITE APP-P-PRODUCT-TYPE))
 (30 14 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 (28 28 (:REWRITE DEFAULT-<-1))
 (28 28 (:REWRITE |(< 0 (- x))|))
 (28 28 (:REWRITE |(< (- x) (- y))|))
 (24 24 (:TYPE-PRESCRIPTION VN-P))
 (24 24 (:TYPE-PRESCRIPTION VAR-P))
 (24 24 (:TYPE-PRESCRIPTION TRUE-P))
 (24 24 (:TYPE-PRESCRIPTION T-VAR-P))
 (24 24 (:TYPE-PRESCRIPTION T-TRUE-P))
 (24 24 (:TYPE-PRESCRIPTION T-IF-P))
 (24 24 (:TYPE-PRESCRIPTION T-FALSE-P))
 (24 24 (:TYPE-PRESCRIPTION T-APP-P))
 (24 24 (:TYPE-PRESCRIPTION T-ABS-P))
 (24 24 (:TYPE-PRESCRIPTION LAM-P))
 (24 24 (:TYPE-PRESCRIPTION IFELSE-P))
 (24 24 (:TYPE-PRESCRIPTION FUN-P))
 (24 24 (:TYPE-PRESCRIPTION FALSE-P))
 (24 24 (:TYPE-PRESCRIPTION BOOL-P))
 (24 24 (:TYPE-PRESCRIPTION APP-P))
 (24 12 (:DEFINITION PRODUCT-TYPE))
 (10 10 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (5 2 (:REWRITE EVAL-DERIV-E-APP2-ACCESSOR-TYPES))
 )
(EVAL-DERIV-P-E-IFCOND
 (5711 155 (:LINEAR ACL2-COUNT-0-LEN-0))
 (4409 10 (:REWRITE E-IFCOND-NOT-EVAL-DERIV))
 (3092 275 (:DEFINITION ACL2-COUNT))
 (2588 25 (:DEFINITION E-APP2-P))
 (2446 21 (:DEFINITION E-APP1-P))
 (2190 2190 (:TYPE-PRESCRIPTION ACL2-COUNT))
 (2148 56 (:REWRITE NTH-WITH-LARGE-INDEX))
 (2031 10 (:REWRITE E-APP2-NOT-EVAL-DERIV))
 (2031 10 (:REWRITE E-APP1-NOT-EVAL-DERIV))
 (2008 28 (:DEFINITION NTH))
 (1792 16 (:LINEAR ACL2-COUNT-NTH-LEN-2))
 (1647 712 (:REWRITE DEFAULT-+-2))
 (935 712 (:REWRITE DEFAULT-+-1))
 (899 19 (:DEFINITION E-IFTRUE-P))
 (899 19 (:DEFINITION E-IFFALSE-P))
 (888 28 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (887 20 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (887 20 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (818 162 (:DEFINITION LEN))
 (816 16 (:LINEAR ACL2-COUNT-NTH-MEASURE))
 (711 711 (:TYPE-PRESCRIPTION LEN))
 (552 90 (:DEFINITION LENGTH))
 (548 16 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 (537 533 (:REWRITE DEFAULT-CDR))
 (502 3 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (401 397 (:REWRITE DEFAULT-CAR))
 (400 14 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (366 2 (:REWRITE PRODUCT-TYPE-E-IFTRUE-P))
 (366 2 (:REWRITE PRODUCT-TYPE-E-IFFALSE-P))
 (303 303 (:REWRITE |(equal (- x) (- y))|))
 (303 6 (:DEFINITION E-APPABS-P))
 (268 12 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (240 8 (:LINEAR E-IFCOND-COND-ACL2-COUNT))
 (223 223 (:REWRITE FOLD-CONSTS-IN-+))
 (185 40 (:DEFINITION TRUE-LISTP))
 (178 2 (:DEFINITION E-APP2-ARG))
 (178 2 (:DEFINITION E-APP1-FUN))
 (160 80 (:REWRITE |(+ 0 x)|))
 (155 155 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (147 147 (:REWRITE |(equal (- x) 0)|))
 (140 140 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (128 8 (:REWRITE E-IFCOND-ACL2-COUNT))
 (88 2 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (68 2 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (56 56 (:TYPE-PRESCRIPTION NFIX))
 (56 28 (:REWRITE DEFAULT-<-2))
 (40 16 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 (36 12 (:REWRITE VN-P-PRODUCT-TYPE))
 (36 12 (:REWRITE VAR-P-PRODUCT-TYPE))
 (36 12 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (36 12 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (36 12 (:REWRITE LAM-P-PRODUCT-TYPE))
 (36 12 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE FUN-P-PRODUCT-TYPE))
 (36 12 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (36 12 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (36 12 (:REWRITE APP-P-PRODUCT-TYPE))
 (28 28 (:REWRITE DEFAULT-<-1))
 (28 28 (:REWRITE |(< 0 (- x))|))
 (28 28 (:REWRITE |(< (- x) (- y))|))
 (24 24 (:TYPE-PRESCRIPTION VN-P))
 (24 24 (:TYPE-PRESCRIPTION VAR-P))
 (24 24 (:TYPE-PRESCRIPTION TRUE-P))
 (24 24 (:TYPE-PRESCRIPTION T-VAR-P))
 (24 24 (:TYPE-PRESCRIPTION T-TRUE-P))
 (24 24 (:TYPE-PRESCRIPTION T-IF-P))
 (24 24 (:TYPE-PRESCRIPTION T-FALSE-P))
 (24 24 (:TYPE-PRESCRIPTION T-APP-P))
 (24 24 (:TYPE-PRESCRIPTION T-ABS-P))
 (24 24 (:TYPE-PRESCRIPTION LAM-P))
 (24 24 (:TYPE-PRESCRIPTION IFELSE-P))
 (24 24 (:TYPE-PRESCRIPTION FUN-P))
 (24 24 (:TYPE-PRESCRIPTION FALSE-P))
 (24 24 (:TYPE-PRESCRIPTION BOOL-P))
 (24 24 (:TYPE-PRESCRIPTION APP-P))
 (24 12 (:DEFINITION PRODUCT-TYPE))
 (10 10 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (5 2 (:REWRITE EVAL-DERIV-E-IFCOND-ACCESSOR-TYPES))
 )
(EVAL-DERIV-P-E-IFTRUE)
(EVAL-DERIV-P-E-IFFALSE)
(EVAL-DERIV-MEASURE
 (195 6 (:DEFINITION ACL2-COUNT))
 (65 1 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (57 27 (:REWRITE DEFAULT-+-2))
 (36 27 (:REWRITE DEFAULT-+-1))
 (36 6 (:DEFINITION INTEGER-ABS))
 (33 9 (:REWRITE |(+ y x)|))
 (24 3 (:DEFINITION LENGTH))
 (21 3 (:REWRITE |(+ (if a b c) x)|))
 (18 6 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (18 6 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (15 3 (:DEFINITION LEN))
 (12 12 (:TYPE-PRESCRIPTION E-IFTRUE-P))
 (12 12 (:TYPE-PRESCRIPTION E-IFFALSE-P))
 (9 9 (:REWRITE FOLD-CONSTS-IN-+))
 (9 9 (:REWRITE DEFAULT-CDR))
 (9 3 (:REWRITE VN-P-PRODUCT-TYPE))
 (9 3 (:REWRITE VAR-P-PRODUCT-TYPE))
 (9 3 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (9 3 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (9 3 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (9 3 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (9 3 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (9 3 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (9 3 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (9 3 (:REWRITE LAM-P-PRODUCT-TYPE))
 (9 3 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (9 3 (:REWRITE FUN-P-PRODUCT-TYPE))
 (9 3 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (9 3 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (9 3 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (9 3 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (9 3 (:REWRITE APP-P-PRODUCT-TYPE))
 (6 6 (:TYPE-PRESCRIPTION VN-P))
 (6 6 (:TYPE-PRESCRIPTION VAR-P))
 (6 6 (:TYPE-PRESCRIPTION TRUE-P))
 (6 6 (:TYPE-PRESCRIPTION T-VAR-P))
 (6 6 (:TYPE-PRESCRIPTION T-TRUE-P))
 (6 6 (:TYPE-PRESCRIPTION T-IF-P))
 (6 6 (:TYPE-PRESCRIPTION T-FALSE-P))
 (6 6 (:TYPE-PRESCRIPTION T-APP-P))
 (6 6 (:TYPE-PRESCRIPTION T-ABS-P))
 (6 6 (:TYPE-PRESCRIPTION LAM-P))
 (6 6 (:TYPE-PRESCRIPTION IFELSE-P))
 (6 6 (:TYPE-PRESCRIPTION FUN-P))
 (6 6 (:TYPE-PRESCRIPTION FALSE-P))
 (6 6 (:TYPE-PRESCRIPTION E-APPABS-P))
 (6 6 (:TYPE-PRESCRIPTION BOOL-P))
 (6 6 (:TYPE-PRESCRIPTION APP-P))
 (6 6 (:REWRITE DEFAULT-UNARY-MINUS))
 (6 6 (:REWRITE DEFAULT-CAR))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE |(< (- x) 0)|))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 (3 3 (:TYPE-PRESCRIPTION LEN))
 (3 3 (:REWRITE DEFAULT-REALPART))
 (3 3 (:REWRITE DEFAULT-NUMERATOR))
 (3 3 (:REWRITE DEFAULT-IMAGPART))
 (3 3 (:REWRITE DEFAULT-DENOMINATOR))
 (3 3 (:REWRITE DEFAULT-COERCE-2))
 (3 3 (:REWRITE DEFAULT-COERCE-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (1 1 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (1 1 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 )
(E-APP1-MEASURE-DECR
 (209 4 (:REWRITE PRODUCT-TYPE-E-APP1-P))
 (126 2 (:REWRITE PRODUCT-TYPE-E-APP2-P))
 (122 2 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (24 8 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (24 8 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (24 8 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 (21 7 (:REWRITE VN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE VAR-P-PRODUCT-TYPE))
 (21 7 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (21 7 (:REWRITE LAM-P-PRODUCT-TYPE))
 (21 7 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE FUN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (21 7 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (21 7 (:REWRITE APP-P-PRODUCT-TYPE))
 (20 8 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 (16 16 (:TYPE-PRESCRIPTION E-IFTRUE-P))
 (16 16 (:TYPE-PRESCRIPTION E-IFFALSE-P))
 (16 16 (:TYPE-PRESCRIPTION E-IFCOND-P))
 (16 8 (:REWRITE DEFAULT-+-2))
 (14 14 (:TYPE-PRESCRIPTION VN-P))
 (14 14 (:TYPE-PRESCRIPTION VAR-P))
 (14 14 (:TYPE-PRESCRIPTION TRUE-P))
 (14 14 (:TYPE-PRESCRIPTION T-VAR-P))
 (14 14 (:TYPE-PRESCRIPTION T-TRUE-P))
 (14 14 (:TYPE-PRESCRIPTION T-IF-P))
 (14 14 (:TYPE-PRESCRIPTION T-FALSE-P))
 (14 14 (:TYPE-PRESCRIPTION T-APP-P))
 (14 14 (:TYPE-PRESCRIPTION T-ABS-P))
 (14 14 (:TYPE-PRESCRIPTION LAM-P))
 (14 14 (:TYPE-PRESCRIPTION IFELSE-P))
 (14 14 (:TYPE-PRESCRIPTION FUN-P))
 (14 14 (:TYPE-PRESCRIPTION FALSE-P))
 (14 14 (:TYPE-PRESCRIPTION E-APPABS-P))
 (14 14 (:TYPE-PRESCRIPTION BOOL-P))
 (14 14 (:TYPE-PRESCRIPTION APP-P))
 (14 8 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (12 12 (:TYPE-PRESCRIPTION E-APP2-P))
 (8 8 (:REWRITE DEFAULT-+-1))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (5 5 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (2 2 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (2 2 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(E-APP2-MEASURE-DECR
 (196 4 (:REWRITE PRODUCT-TYPE-E-APP2-P))
 (122 2 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (25 9 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (25 9 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (25 9 (:REWRITE E-IFCOND-P-PRODUCT-TYPE))
 (21 7 (:REWRITE VN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE VAR-P-PRODUCT-TYPE))
 (21 7 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (21 7 (:REWRITE LAM-P-PRODUCT-TYPE))
 (21 7 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE FUN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (21 7 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (21 7 (:REWRITE APP-P-PRODUCT-TYPE))
 (16 16 (:TYPE-PRESCRIPTION E-IFTRUE-P))
 (16 16 (:TYPE-PRESCRIPTION E-IFFALSE-P))
 (16 16 (:TYPE-PRESCRIPTION E-IFCOND-P))
 (16 8 (:REWRITE DEFAULT-+-2))
 (14 14 (:TYPE-PRESCRIPTION VN-P))
 (14 14 (:TYPE-PRESCRIPTION VAR-P))
 (14 14 (:TYPE-PRESCRIPTION TRUE-P))
 (14 14 (:TYPE-PRESCRIPTION T-VAR-P))
 (14 14 (:TYPE-PRESCRIPTION T-TRUE-P))
 (14 14 (:TYPE-PRESCRIPTION T-IF-P))
 (14 14 (:TYPE-PRESCRIPTION T-FALSE-P))
 (14 14 (:TYPE-PRESCRIPTION T-APP-P))
 (14 14 (:TYPE-PRESCRIPTION T-ABS-P))
 (14 14 (:TYPE-PRESCRIPTION LAM-P))
 (14 14 (:TYPE-PRESCRIPTION IFELSE-P))
 (14 14 (:TYPE-PRESCRIPTION FUN-P))
 (14 14 (:TYPE-PRESCRIPTION FALSE-P))
 (14 14 (:TYPE-PRESCRIPTION E-APPABS-P))
 (14 14 (:TYPE-PRESCRIPTION BOOL-P))
 (14 14 (:TYPE-PRESCRIPTION APP-P))
 (13 7 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (8 8 (:REWRITE DEFAULT-+-1))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:TYPE-PRESCRIPTION E-APP1-P))
 (5 5 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (2 2 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (2 2 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(E-IFCOND-MEASURE-DECR
 (191 4 (:REWRITE PRODUCT-TYPE-E-IFCOND-P))
 (26 10 (:REWRITE E-IFTRUE-P-PRODUCT-TYPE))
 (26 10 (:REWRITE E-IFFALSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE VN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE VAR-P-PRODUCT-TYPE))
 (21 7 (:REWRITE TRUE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-VAR-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-TRUE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-IF-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-FALSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-APP-P-PRODUCT-TYPE))
 (21 7 (:REWRITE T-ABS-P-PRODUCT-TYPE))
 (21 7 (:REWRITE LAM-P-PRODUCT-TYPE))
 (21 7 (:REWRITE IFELSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE FUN-P-PRODUCT-TYPE))
 (21 7 (:REWRITE FALSE-P-PRODUCT-TYPE))
 (21 7 (:REWRITE E-APPABS-P-PRODUCT-TYPE))
 (21 7 (:REWRITE BOOL-P-PRODUCT-TYPE))
 (21 7 (:REWRITE APP-P-PRODUCT-TYPE))
 (17 7 (:REWRITE E-APP2-P-PRODUCT-TYPE))
 (16 16 (:TYPE-PRESCRIPTION E-IFTRUE-P))
 (16 16 (:TYPE-PRESCRIPTION E-IFFALSE-P))
 (16 8 (:REWRITE DEFAULT-+-2))
 (14 14 (:TYPE-PRESCRIPTION VN-P))
 (14 14 (:TYPE-PRESCRIPTION VAR-P))
 (14 14 (:TYPE-PRESCRIPTION TRUE-P))
 (14 14 (:TYPE-PRESCRIPTION T-VAR-P))
 (14 14 (:TYPE-PRESCRIPTION T-TRUE-P))
 (14 14 (:TYPE-PRESCRIPTION T-IF-P))
 (14 14 (:TYPE-PRESCRIPTION T-FALSE-P))
 (14 14 (:TYPE-PRESCRIPTION T-APP-P))
 (14 14 (:TYPE-PRESCRIPTION T-ABS-P))
 (14 14 (:TYPE-PRESCRIPTION LAM-P))
 (14 14 (:TYPE-PRESCRIPTION IFELSE-P))
 (14 14 (:TYPE-PRESCRIPTION FUN-P))
 (14 14 (:TYPE-PRESCRIPTION FALSE-P))
 (14 14 (:TYPE-PRESCRIPTION E-APPABS-P))
 (14 14 (:TYPE-PRESCRIPTION BOOL-P))
 (14 14 (:TYPE-PRESCRIPTION APP-P))
 (13 7 (:REWRITE E-APP1-P-PRODUCT-TYPE))
 (10 10 (:TYPE-PRESCRIPTION E-APP2-P))
 (8 8 (:REWRITE DEFAULT-+-1))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:TYPE-PRESCRIPTION E-APP1-P))
 (5 5 (:REWRITE NOT-E-IFCOND-P-E-IFCOND-COND))
 (2 2 (:REWRITE NOT-E-APP2-P-E-APP2-ARG))
 (2 2 (:REWRITE NOT-E-APP1-P-E-APP1-FUN))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(ENVIRONMENT-P)
(ENVIRONMENT-ASSOC
 (72 8 (:REWRITE VARNAME-LISTP-CAR))
 (56 4 (:DEFINITION VARNAME-LISTP))
 (28 28 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (27 27 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE DEFAULT-CDR))
 (12 4 (:REWRITE VN-NOT-VARNAME))
 (12 4 (:REWRITE FUN-NOT-STYPE))
 (8 8 (:TYPE-PRESCRIPTION VN-P))
 (8 8 (:TYPE-PRESCRIPTION FUN-P))
 (8 8 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (8 8 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (8 8 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 (8 4 (:REWRITE VARNAME-LISTP-CDR))
 (4 4 (:TYPE-PRESCRIPTION VARNAME-P))
 )
(ALISTP-ASSOC-CONS)
(ENVIRONMENT-P-ASSOC-TYPE
 (144 16 (:REWRITE VARNAME-LISTP-CAR))
 (112 8 (:DEFINITION VARNAME-LISTP))
 (81 29 (:REWRITE DEFAULT-CDR))
 (75 75 (:REWRITE DEFAULT-CAR))
 (56 56 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (56 4 (:REWRITE ALISTP-ASSOC-CONS))
 (41 5 (:REWRITE ENVIRONMENT-ASSOC))
 (41 1 (:DEFINITION ALISTP))
 (36 12 (:REWRITE FUN-NOT-STYPE))
 (21 7 (:REWRITE VN-NOT-VARNAME))
 (16 16 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (16 16 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (16 16 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 (16 8 (:REWRITE VARNAME-LISTP-CDR))
 (14 14 (:TYPE-PRESCRIPTION VN-P))
 (9 9 (:TYPE-PRESCRIPTION VARNAME-P))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 )
(IS-SUFFIX)
(IS-SUFFIX-LEN
 (641 6 (:LINEAR ACL2-COUNT-0-LEN-0))
 (554 12 (:DEFINITION ACL2-COUNT))
 (269 2 (:LINEAR ACL2-COUNT-CAR-CDR-LINEAR))
 (180 88 (:REWRITE DEFAULT-+-2))
 (120 20 (:DEFINITION INTEGER-ABS))
 (112 88 (:REWRITE DEFAULT-+-1))
 (110 30 (:REWRITE |(+ y x)|))
 (80 10 (:DEFINITION LENGTH))
 (70 10 (:REWRITE |(+ (if a b c) x)|))
 (34 34 (:REWRITE DEFAULT-CDR))
 (31 26 (:REWRITE DEFAULT-<-2))
 (31 26 (:REWRITE DEFAULT-<-1))
 (26 26 (:REWRITE |(< (- x) (- y))|))
 (24 24 (:REWRITE FOLD-CONSTS-IN-+))
 (20 20 (:REWRITE DEFAULT-UNARY-MINUS))
 (20 20 (:REWRITE |(< (- x) 0)|))
 (14 14 (:REWRITE DEFAULT-CAR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (10 10 (:REWRITE DEFAULT-REALPART))
 (10 10 (:REWRITE DEFAULT-NUMERATOR))
 (10 10 (:REWRITE DEFAULT-IMAGPART))
 (10 10 (:REWRITE DEFAULT-DENOMINATOR))
 (10 10 (:REWRITE DEFAULT-COERCE-2))
 (10 10 (:REWRITE DEFAULT-COERCE-1))
 (6 6 (:REWRITE |(equal (- x) 0)|))
 (6 6 (:LINEAR LEQ-POSITION-EQUAL-LEN))
 (4 2 (:REWRITE |(< (+ c x) d)|))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(IS-SUFFIX-NOT-EQUAL-CONS
 (8 4 (:REWRITE DEFAULT-+-2))
 (5 5 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE DEFAULT-+-1))
 (2 1 (:REWRITE DEFAULT-<-2))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(ENV-SUBST-UP-TO
 (133 3 (:REWRITE ENVIRONMENT-ASSOC))
 (126 4 (:DEFINITION ENVIRONMENT-P))
 (72 8 (:REWRITE VARNAME-LISTP-CAR))
 (56 4 (:DEFINITION VARNAME-LISTP))
 (28 28 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (23 23 (:REWRITE DEFAULT-CAR))
 (13 13 (:TYPE-PRESCRIPTION ENVIRONMENT-P))
 (13 13 (:REWRITE DEFAULT-CDR))
 (8 8 (:TYPE-PRESCRIPTION VARNAME-P))
 (8 8 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (8 8 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (8 8 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 (8 4 (:REWRITE VARNAME-LISTP-CDR))
 (4 4 (:TYPE-PRESCRIPTION STYPE-P))
 )
(ENV-SUBST-UP-TO-ASSOC-OTHER
 (165 146 (:REWRITE DEFAULT-CAR))
 (72 72 (:REWRITE |(equal (- x) (- y))|))
 (61 56 (:REWRITE DEFAULT-CDR))
 (48 48 (:TYPE-PRESCRIPTION ENV-SUBST-UP-TO))
 )
(INSERT-ASSOC
 (129 2 (:REWRITE ENVIRONMENT-ASSOC))
 (124 3 (:DEFINITION ENVIRONMENT-P))
 (72 8 (:REWRITE VARNAME-LISTP-CAR))
 (56 4 (:DEFINITION VARNAME-LISTP))
 (28 28 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (21 21 (:REWRITE DEFAULT-CAR))
 (13 13 (:REWRITE DEFAULT-CDR))
 (12 12 (:TYPE-PRESCRIPTION ENVIRONMENT-P))
 (8 8 (:TYPE-PRESCRIPTION VARNAME-P))
 (8 8 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (8 8 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (8 8 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 (8 4 (:REWRITE VARNAME-LISTP-CDR))
 (4 4 (:TYPE-PRESCRIPTION STYPE-P))
 )
(ASSOC-INSERT-ASSOC
 (104 104 (:REWRITE DEFAULT-CAR))
 (50 50 (:REWRITE |(equal (- x) (- y))|))
 (37 37 (:REWRITE DEFAULT-CDR))
 )
(CONS-INSERT-ASSOC
 (8 8 (:REWRITE DEFAULT-CDR))
 (8 8 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE DEFAULT-CAR))
 (3 1 (:DEFINITION IS-SUFFIX))
 )
(IS-BOUND-BEFORE-SUFFIX
 (133 3 (:REWRITE ENVIRONMENT-ASSOC))
 (126 4 (:DEFINITION ENVIRONMENT-P))
 (72 8 (:REWRITE VARNAME-LISTP-CAR))
 (56 4 (:DEFINITION VARNAME-LISTP))
 (28 28 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (23 23 (:REWRITE DEFAULT-CAR))
 (13 13 (:TYPE-PRESCRIPTION ENVIRONMENT-P))
 (13 13 (:REWRITE DEFAULT-CDR))
 (8 8 (:TYPE-PRESCRIPTION VARNAME-P))
 (8 8 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (8 8 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (8 8 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 (8 4 (:REWRITE VARNAME-LISTP-CDR))
 (4 4 (:TYPE-PRESCRIPTION STYPE-P))
 )
(IS-BOUND-BEFORE-SUFFIX-ENV-SUBST-UP-TO
 (816 104 (:REWRITE DEFAULT-CDR))
 (773 9 (:REWRITE ALISTP-ASSOC-CONS))
 (678 18 (:REWRITE ENVIRONMENT-ASSOC))
 (624 18 (:DEFINITION ENVIRONMENT-P))
 (400 9 (:DEFINITION ALISTP))
 (334 36 (:REWRITE VARNAME-LISTP-CAR))
 (262 18 (:DEFINITION VARNAME-LISTP))
 (209 197 (:REWRITE DEFAULT-CAR))
 (126 126 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (90 90 (:TYPE-PRESCRIPTION ENVIRONMENT-P))
 (85 85 (:TYPE-PRESCRIPTION ENV-SUBST-UP-TO))
 (45 45 (:REWRITE |(equal (- x) (- y))|))
 (36 36 (:TYPE-PRESCRIPTION VARNAME-P))
 (36 36 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (36 36 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (36 36 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 (36 18 (:REWRITE VARNAME-LISTP-CDR))
 (18 18 (:TYPE-PRESCRIPTION STYPE-P))
 (9 5 (:REWRITE ENV-SUBST-UP-TO-ASSOC-OTHER))
 )
(IS-BOUND-BEFORE-SUFFIX-ENV-SUBST-ASSOC1
 (126 109 (:REWRITE DEFAULT-CAR))
 (57 57 (:REWRITE |(equal (- x) (- y))|))
 (48 45 (:REWRITE DEFAULT-CDR))
 (40 40 (:TYPE-PRESCRIPTION ENV-SUBST-UP-TO))
 (9 5 (:REWRITE ENV-SUBST-UP-TO-ASSOC-OTHER))
 )
(ALPHA-SUBST-ENV-OKP)
(ALPHA-SUBST-ENV-OKP-BASE
 (4 4 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(ALPHA-SUBST-ENV-OKP-CONS
 (12 12 (:REWRITE DEFAULT-CAR))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (8 8 (:REWRITE DEFAULT-CDR))
 )
(ALPHA-SUBST-ENV-OKP-IMPLIES-ASSOC-ENV-SUBST-UP-TO
 (12 2 (:DEFINITION IS-BOUND-BEFORE-SUFFIX))
 (10 1 (:DEFINITION ENV-SUBST-UP-TO))
 (8 8 (:REWRITE DEFAULT-CAR))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:REWRITE DEFAULT-CDR))
 (3 1 (:DEFINITION IS-SUFFIX))
 )
(ALPHA-SUBST-ENV-OKP-CDR-ASSOCS-ENV-SUBST
 (90 18 (:REWRITE DEFAULT-CDR))
 (79 1 (:REWRITE ALISTP-ASSOC-CONS))
 (70 2 (:REWRITE ENVIRONMENT-ASSOC))
 (64 2 (:DEFINITION ENVIRONMENT-P))
 (41 1 (:DEFINITION ALISTP))
 (36 4 (:REWRITE VARNAME-LISTP-CAR))
 (28 28 (:REWRITE DEFAULT-CAR))
 (28 2 (:DEFINITION VARNAME-LISTP))
 (20 3 (:DEFINITION ASSOC-EQUAL))
 (14 14 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (12 2 (:DEFINITION IS-BOUND-BEFORE-SUFFIX))
 (11 11 (:REWRITE |(equal (- x) (- y))|))
 (10 10 (:TYPE-PRESCRIPTION ENVIRONMENT-P))
 (10 1 (:DEFINITION ENV-SUBST-UP-TO))
 (4 4 (:TYPE-PRESCRIPTION VARNAME-P))
 (4 4 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (4 4 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (4 4 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 (4 2 (:REWRITE VARNAME-LISTP-CDR))
 (3 1 (:DEFINITION IS-SUFFIX))
 (2 2 (:TYPE-PRESCRIPTION STYPE-P))
 (2 2 (:TYPE-PRESCRIPTION ENV-SUBST-UP-TO))
 (2 1 (:REWRITE ENV-SUBST-UP-TO-ASSOC-OTHER))
 )
(ALPHA-SUBST-ENV-OKP-SUFFIX-NOT-CONS)
(ENV-SAME-BINDINGS1
 (413 11 (:REWRITE ENVIRONMENT-ASSOC))
 (382 12 (:DEFINITION ENVIRONMENT-P))
 (216 24 (:REWRITE VARNAME-LISTP-CAR))
 (168 12 (:DEFINITION VARNAME-LISTP))
 (84 84 (:TYPE-PRESCRIPTION VARNAME-LISTP))
 (67 67 (:REWRITE DEFAULT-CAR))
 (53 53 (:TYPE-PRESCRIPTION ENVIRONMENT-P))
 (41 41 (:REWRITE DEFAULT-CDR))
 (24 24 (:TYPE-PRESCRIPTION VARNAME-P))
 (24 24 (:REWRITE VARNAME-LISTP-MEMBERP-EQUAL))
 (24 24 (:REWRITE VARNAME-LISTP-MEMBER-EQUAL))
 (24 24 (:REWRITE VARNAME-LISTP-INITIAL-SUBLISTP-EQUAL))
 (24 12 (:REWRITE VARNAME-LISTP-CDR))
 (12 12 (:TYPE-PRESCRIPTION STYPE-P))
 )
(ENV-SAME-BINDINGS1-ASSOC-EQUAL
 (74 74 (:REWRITE DEFAULT-CAR))
 (24 24 (:REWRITE |(equal (- x) (- y))|))
 (18 18 (:REWRITE DEFAULT-CDR))
 )
(ENV-SAME-BINDINGS1-CONS2
 (252 252 (:REWRITE DEFAULT-CAR))
 (78 48 (:REWRITE ENV-SAME-BINDINGS1-ASSOC-EQUAL))
 (62 62 (:REWRITE |(equal (- x) (- y))|))
 (45 45 (:REWRITE DEFAULT-CDR))
 )
(ENV-SAME-BINDINGS1-REFL
 (41 7 (:DEFINITION ASSOC-EQUAL))
 (32 32 (:REWRITE DEFAULT-CAR))
 (12 7 (:REWRITE ENV-SAME-BINDINGS1-ASSOC-EQUAL))
 (9 9 (:REWRITE DEFAULT-CDR))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 )
(ENV-SAME-BINDINGS1-CONS-TWICE
 (79 79 (:REWRITE |(equal (- x) (- y))|))
 (69 69 (:REWRITE DEFAULT-CDR))
 (60 55 (:REWRITE ENV-SAME-BINDINGS1-ASSOC-EQUAL))
 )
(ENV-SAME-BINDINGS1-CONS-REDUNDANT
 (264 264 (:REWRITE DEFAULT-CAR))
 (66 66 (:REWRITE |(equal (- x) (- y))|))
 (59 59 (:REWRITE DEFAULT-CDR))
 (58 48 (:REWRITE ENV-SAME-BINDINGS1-ASSOC-EQUAL))
 (10 5 (:REWRITE |(equal (if a b c) x)|))
 )
(ENV-SAME-BINDINGS)
(ENV-SAME-BINDINGS-ASSOC-EQUAL
 (33 6 (:DEFINITION ASSOC-EQUAL))
 (21 21 (:REWRITE DEFAULT-CAR))
 (19 1 (:DEFINITION ENV-SAME-BINDINGS1))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE |(equal (- x) (- y))|))
 )
(ENV-SAME-BINDINGS-CONS
 (32 32 (:REWRITE DEFAULT-CAR))
 (13 7 (:REWRITE ENV-SAME-BINDINGS1-ASSOC-EQUAL))
 (7 7 (:REWRITE ENV-SAME-BINDINGS-ASSOC-EQUAL))
 (7 7 (:REWRITE DEFAULT-CDR))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 )
(ENV-SAME-BINDINGS-CONS-TWICE
 (2 2 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(ENV-SAME-BINDINGS-CONS-REDUNDANT
 (100 1 (:REWRITE ENV-SAME-BINDINGS-CONS))
 (97 2 (:DEFINITION ENV-SAME-BINDINGS1))
 (60 8 (:DEFINITION ASSOC-EQUAL))
 (37 37 (:REWRITE DEFAULT-CAR))
 (9 9 (:REWRITE CAR-CONS))
 (9 9 (:REWRITE |(equal (- x) (- y))|))
 (8 8 (:REWRITE ENV-SAME-BINDINGS1-ASSOC-EQUAL))
 (8 8 (:REWRITE ENV-SAME-BINDINGS-ASSOC-EQUAL))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 6 (:TYPE-PRESCRIPTION ENV-SAME-BINDINGS1))
 (2 2 (:REWRITE CDR-CONS))
 (2 1 (:REWRITE |(equal (if a b c) x)|))
 )
(SAME-BINDINGS1-INSERT-ASSOC
 (97 97 (:REWRITE DEFAULT-CAR))
 (39 39 (:REWRITE |(equal (- x) (- y))|))
 (38 38 (:REWRITE DEFAULT-CDR))
 (28 7 (:DEFINITION INSERT-ASSOC))
 (25 19 (:REWRITE ENV-SAME-BINDINGS1-ASSOC-EQUAL))
 (19 19 (:REWRITE ENV-SAME-BINDINGS-ASSOC-EQUAL))
 )
(SAME-BINDINGS1-INSERT-ASSOC1
 (83 2 (:DEFINITION ENV-SAME-BINDINGS1))
 (58 6 (:DEFINITION ASSOC-EQUAL))
 (36 36 (:REWRITE DEFAULT-CAR))
 (17 17 (:REWRITE |(equal (- x) (- y))|))
 (13 13 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE ENV-SAME-BINDINGS1-ASSOC-EQUAL))
 (6 6 (:REWRITE ENV-SAME-BINDINGS-ASSOC-EQUAL))
 (5 2 (:REWRITE |(equal (if a b c) x)|))
 )
(SAME-BINDINGS-INSERT-ASSOC
 (92 2 (:DEFINITION ENV-SAME-BINDINGS1))
 (46 6 (:DEFINITION ASSOC-EQUAL))
 (34 34 (:REWRITE DEFAULT-CAR))
 (16 16 (:REWRITE |(equal (- x) (- y))|))
 (12 12 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE ENV-SAME-BINDINGS1-ASSOC-EQUAL))
 (6 6 (:REWRITE ENV-SAME-BINDINGS-ASSOC-EQUAL))
 (6 2 (:DEFINITION IS-SUFFIX))
 (3 1 (:REWRITE |(equal (if a b c) x)|))
 )
(FORCELIST-FN)
