(DAB-BASEP)
(BOOLEANP-OF-DAB-BASEP)
(POSP-WHEN-DAB-BASEP)
(DAB-BASEP-OF-EXPT
 (7 7 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (7 7 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (7 7 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (7 7 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (7 7 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (7 7 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (2 2 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 )
(DAB-BASE-FIX
 (3 3 (:REWRITE THE-FLOOR-BELOW))
 (3 3 (:REWRITE THE-FLOOR-ABOVE))
 (3 3 (:REWRITE SIMPLIFY-SUMS-<))
 (3 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (3 3 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (3 3 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (3 3 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (3 3 (:REWRITE INTEGERP-<-CONSTANT))
 (3 3 (:REWRITE DEFAULT-LESS-THAN-2))
 (3 3 (:REWRITE DEFAULT-LESS-THAN-1))
 (3 3 (:REWRITE CONSTANT-<-INTEGERP))
 (3 3 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (3 3 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (3 3 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (3 3 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (3 3 (:REWRITE |(< c (- x))|))
 (3 3 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (3 3 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (3 3 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (3 3 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (3 3 (:REWRITE |(< (/ x) (/ y))|))
 (3 3 (:REWRITE |(< (- x) c)|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(DAB-BASEP-OF-DAB-BASE-FIX
 (8 8 (:REWRITE THE-FLOOR-BELOW))
 (8 8 (:REWRITE THE-FLOOR-ABOVE))
 (8 8 (:REWRITE DEFAULT-LESS-THAN-2))
 (8 8 (:REWRITE DEFAULT-LESS-THAN-1))
 (3 3 (:REWRITE SIMPLIFY-SUMS-<))
 (3 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (3 3 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (3 3 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (3 3 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (3 3 (:REWRITE INTEGERP-<-CONSTANT))
 (3 3 (:REWRITE CONSTANT-<-INTEGERP))
 (3 3 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (3 3 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (3 3 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (3 3 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (3 3 (:REWRITE |(< c (- x))|))
 (3 3 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (3 3 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (3 3 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (3 3 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (3 3 (:REWRITE |(< (/ x) (/ y))|))
 (3 3 (:REWRITE |(< (- x) c)|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(POSP-OF-DAB-BASE-FIX
 (4 4 (:REWRITE THE-FLOOR-BELOW))
 (4 4 (:REWRITE THE-FLOOR-ABOVE))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-2))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-1))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (2 2 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (2 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE INTEGERP-<-CONSTANT))
 (2 2 (:REWRITE CONSTANT-<-INTEGERP))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (- x))|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) (/ y))|))
 (2 2 (:REWRITE |(< (- x) c)|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(DAB-BASE-FIX-WHEN-DAB-BASEP
 (3 3 (:REWRITE THE-FLOOR-BELOW))
 (3 3 (:REWRITE THE-FLOOR-ABOVE))
 (3 3 (:REWRITE SIMPLIFY-SUMS-<))
 (3 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (3 3 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (3 3 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (3 3 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (3 3 (:REWRITE INTEGERP-<-CONSTANT))
 (3 3 (:REWRITE DEFAULT-LESS-THAN-2))
 (3 3 (:REWRITE DEFAULT-LESS-THAN-1))
 (3 3 (:REWRITE CONSTANT-<-INTEGERP))
 (3 3 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (3 3 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (3 3 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (3 3 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (3 3 (:REWRITE |(< c (- x))|))
 (3 3 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (3 3 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (3 3 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (3 3 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (3 3 (:REWRITE |(< (/ x) (/ y))|))
 (3 3 (:REWRITE |(< (- x) c)|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(FTY::TMP-DEFFIXTYPE-IDEMPOTENT)
(DAB-BASE-EQUIV$INLINE)
(DAB-BASE-EQUIV-IS-AN-EQUIVALENCE)
(DAB-BASE-EQUIV-IMPLIES-EQUAL-DAB-BASE-FIX-1)
(DAB-BASE-FIX-UNDER-DAB-BASE-EQUIV)
(EQUAL-OF-DAB-BASE-FIX-1-FORWARD-TO-DAB-BASE-EQUIV)
(EQUAL-OF-DAB-BASE-FIX-2-FORWARD-TO-DAB-BASE-EQUIV)
(DAB-BASE-EQUIV-OF-DAB-BASE-FIX-1-FORWARD)
(DAB-BASE-EQUIV-OF-DAB-BASE-FIX-2-FORWARD)
(DAB-DIGITP)
(BOOLEANP-OF-DAB-DIGITP)
(NATP-WHEN-DAB-DIGITP)
(DAB-DIGITP-OF-0)
(DAB-DIGITP-OF-1)
(DAB-DIGITP-OF-DAB-BASE-FIX-BASE
 (6 4 (:REWRITE SIMPLIFY-SUMS-<))
 (6 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (6 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (6 4 (:REWRITE DEFAULT-LESS-THAN-2))
 (4 4 (:REWRITE THE-FLOOR-BELOW))
 (4 4 (:REWRITE THE-FLOOR-ABOVE))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 4 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (4 4 (:REWRITE INTEGERP-<-CONSTANT))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-1))
 (4 4 (:REWRITE CONSTANT-<-INTEGERP))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (- x))|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) (/ y))|))
 (4 4 (:REWRITE |(< (- x) c)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE |(< (/ x) 0)|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:META META-INTEGERP-CORRECT))
 )
(DAB-DIGITP-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(DAB-DIGIT-FIX)
(RETURN-TYPE-OF-DAB-DIGIT-FIX
 (48 48 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (17 11 (:REWRITE DEFAULT-LESS-THAN-2))
 (17 11 (:REWRITE DEFAULT-LESS-THAN-1))
 (14 9 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (14 9 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (13 9 (:REWRITE SIMPLIFY-SUMS-<))
 (12 4 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (11 11 (:REWRITE THE-FLOOR-BELOW))
 (11 11 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (9 9 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (9 9 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (9 9 (:REWRITE INTEGERP-<-CONSTANT))
 (9 9 (:REWRITE CONSTANT-<-INTEGERP))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (- x))|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) (/ y))|))
 (9 9 (:REWRITE |(< (- x) c)|))
 (9 9 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (4 4 (:REWRITE |(< (/ x) 0)|))
 (4 4 (:REWRITE |(< (* x y) 0)|))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:META META-INTEGERP-CORRECT))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 )
(NATP-OF-DAB-DIGIT-FIX
 (29 29 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (9 6 (:REWRITE DEFAULT-LESS-THAN-1))
 (8 6 (:REWRITE DEFAULT-LESS-THAN-2))
 (7 5 (:REWRITE SIMPLIFY-SUMS-<))
 (7 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (7 5 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (6 6 (:REWRITE THE-FLOOR-BELOW))
 (6 6 (:REWRITE THE-FLOOR-ABOVE))
 (6 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (5 5 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (5 5 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (5 5 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (5 5 (:REWRITE INTEGERP-<-CONSTANT))
 (5 5 (:REWRITE CONSTANT-<-INTEGERP))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (- x))|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) (/ y))|))
 (5 5 (:REWRITE |(< (- x) c)|))
 (5 5 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:TYPE-PRESCRIPTION DAB-BASEP))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (3 3 (:REWRITE |(< (/ x) 0)|))
 (3 3 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:META META-INTEGERP-CORRECT))
 )
(DAB-DIGIT-FIX-UPPER-BOUND
 (25 25 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (9 5 (:REWRITE DEFAULT-LESS-THAN-2))
 (8 5 (:REWRITE DEFAULT-LESS-THAN-1))
 (7 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (7 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (6 4 (:REWRITE SIMPLIFY-SUMS-<))
 (6 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (5 5 (:REWRITE THE-FLOOR-BELOW))
 (5 5 (:REWRITE THE-FLOOR-ABOVE))
 (4 4 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 4 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (4 4 (:REWRITE INTEGERP-<-CONSTANT))
 (4 4 (:REWRITE CONSTANT-<-INTEGERP))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (- x))|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) (/ y))|))
 (4 4 (:REWRITE |(< (- x) c)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(DAB-DIGIT-FIX-WHEN-DAB-DIGITP
 (18 6 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (12 12 (:TYPE-PRESCRIPTION DAB-BASEP))
 (10 5 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (9 5 (:REWRITE SIMPLIFY-SUMS-<))
 (9 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (9 5 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (9 5 (:REWRITE DEFAULT-LESS-THAN-2))
 (5 5 (:REWRITE THE-FLOOR-BELOW))
 (5 5 (:REWRITE THE-FLOOR-ABOVE))
 (5 5 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (5 5 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (5 5 (:REWRITE INTEGERP-<-CONSTANT))
 (5 5 (:REWRITE DEFAULT-LESS-THAN-1))
 (5 5 (:REWRITE CONSTANT-<-INTEGERP))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (- x))|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) (/ y))|))
 (5 5 (:REWRITE |(< (- x) c)|))
 (5 5 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(DAB-DIGIT-FIX-OF-DAB-BASE-FIX-BASE
 (363 5 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (30 20 (:REWRITE SIMPLIFY-SUMS-<))
 (30 20 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (30 20 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (30 20 (:REWRITE DEFAULT-LESS-THAN-2))
 (28 28 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (20 20 (:REWRITE THE-FLOOR-BELOW))
 (20 20 (:REWRITE THE-FLOOR-ABOVE))
 (20 20 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (20 20 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (20 20 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (20 20 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (20 20 (:REWRITE INTEGERP-<-CONSTANT))
 (20 20 (:REWRITE DEFAULT-LESS-THAN-1))
 (20 20 (:REWRITE CONSTANT-<-INTEGERP))
 (20 20 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (20 20 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (20 20 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (20 20 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (20 20 (:REWRITE |(< c (- x))|))
 (20 20 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (20 20 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (20 20 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (20 20 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (20 20 (:REWRITE |(< (/ x) (/ y))|))
 (20 20 (:REWRITE |(< (- x) c)|))
 (20 20 (:REWRITE |(< (- x) (- y))|))
 (15 15 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (10 10 (:REWRITE REDUCE-INTEGERP-+))
 (10 10 (:REWRITE INTEGERP-MINUS-X))
 (10 10 (:REWRITE |(< (/ x) 0)|))
 (10 10 (:REWRITE |(< (* x y) 0)|))
 (10 10 (:META META-INTEGERP-CORRECT))
 (5 5 (:TYPE-PRESCRIPTION DAB-DIGITP))
 )
(DAB-DIGIT-FIX-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(STD::DEFLIST-LOCAL-BOOLEANP-ELEMENT-THM)
(DAB-DIGIT-LISTP)
(DAB-DIGIT-LISTP-OF-CONS)
(DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP)
(DAB-DIGIT-LISTP-WHEN-NOT-CONSP)
(DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP)
(TRUE-LISTP-WHEN-DAB-DIGIT-LISTP)
(DAB-DIGIT-LISTP-OF-LIST-FIX)
(DAB-DIGIT-LISTP-OF-SFIX)
(DAB-DIGIT-LISTP-OF-INSERT)
(DAB-DIGIT-LISTP-OF-DELETE)
(DAB-DIGIT-LISTP-OF-MERGESORT)
(DAB-DIGIT-LISTP-OF-UNION)
(DAB-DIGIT-LISTP-OF-INTERSECT-1)
(DAB-DIGIT-LISTP-OF-INTERSECT-2)
(DAB-DIGIT-LISTP-OF-DIFFERENCE)
(DAB-DIGIT-LISTP-OF-DUPLICATED-MEMBERS)
(DAB-DIGIT-LISTP-OF-REV)
(DAB-DIGIT-LISTP-OF-APPEND)
(DAB-DIGIT-LISTP-OF-RCONS)
(DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP)
(DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL)
(DAB-DIGIT-LISTP-OF-SET-DIFFERENCE-EQUAL)
(DAB-DIGIT-LISTP-OF-INTERSECTION-EQUAL-1)
(DAB-DIGIT-LISTP-OF-INTERSECTION-EQUAL-2)
(DAB-DIGIT-LISTP-OF-UNION-EQUAL)
(DAB-DIGIT-LISTP-OF-TAKE)
(DAB-DIGIT-LISTP-OF-REPEAT)
(DAB-DIGITP-OF-NTH-WHEN-DAB-DIGIT-LISTP)
(DAB-DIGIT-LISTP-OF-UPDATE-NTH)
(DAB-DIGIT-LISTP-OF-BUTLAST)
(DAB-DIGIT-LISTP-OF-NTHCDR)
(DAB-DIGIT-LISTP-OF-LAST)
(DAB-DIGIT-LISTP-OF-REMOVE)
(DAB-DIGIT-LISTP-OF-REVAPPEND)
(NATP-LISTP-WHEN-DAB-DIGIT-LISTP
 (92 12 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (59 6 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (52 3 (:DEFINITION INTEGER-LISTP))
 (24 24 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (22 22 (:REWRITE DEFAULT-CAR))
 (22 22 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (8 4 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (6 6 (:REWRITE REDUCE-INTEGERP-+))
 (6 6 (:REWRITE INTEGERP-MINUS-X))
 (6 6 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (6 6 (:META META-INTEGERP-CORRECT))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE THE-FLOOR-BELOW))
 (2 2 (:REWRITE THE-FLOOR-ABOVE))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (2 2 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (2 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE INTEGERP-<-CONSTANT))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-1))
 (2 2 (:REWRITE CONSTANT-<-INTEGERP))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (- x))|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) 0)|))
 (2 2 (:REWRITE |(< (/ x) (/ y))|))
 (2 2 (:REWRITE |(< (- x) c)|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 )
(DAB-DIGIT-LISTP-OF-DAB-BASE-FIX-BASE
 (156 22 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (110 9 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (58 58 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (44 44 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (17 17 (:REWRITE DEFAULT-CAR))
 (13 5 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (8 8 (:TYPE-PRESCRIPTION DAB-BASEP))
 (7 7 (:REWRITE DEFAULT-CDR))
 (2 2 (:DEFINITION NULL))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(DAB-DIGIT-LISTP-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(DAB-DIGIT-LIST-FIX
 (64 8 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (44 42 (:REWRITE DEFAULT-CDR))
 (20 18 (:REWRITE DEFAULT-CAR))
 (16 16 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (16 8 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (16 8 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (8 8 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (8 8 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (8 8 (:REWRITE SET::IN-SET))
 (6 2 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (4 4 (:REWRITE SUBSETP-TRANS2))
 (4 4 (:REWRITE SUBSETP-TRANS))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (1 1 (:REWRITE SUBSETP-MEMBER . 2))
 (1 1 (:REWRITE SUBSETP-MEMBER . 1))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal x (if a b c))|))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (if a b c) x)|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:DEFINITION MEMBER-EQUAL))
 )
(RETURN-TYPE-OF-DAB-DIGIT-LIST-FIX
 (532 3 (:DEFINITION MEMBER-EQUAL))
 (429 4 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (428 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (353 14 (:REWRITE ACL2-NUMBERP-X))
 (313 1 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (198 13 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (185 14 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (176 7 (:DEFINITION RATIONAL-LISTP))
 (166 13 (:REWRITE RATIONALP-X))
 (164 4 (:DEFINITION ACL2-NUMBER-LISTP))
 (134 1 (:REWRITE SUBSETP-OF-CONS))
 (123 16 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (88 5 (:DEFINITION INTEGER-LISTP))
 (59 10 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (24 24 (:REWRITE DEFAULT-CDR))
 (24 24 (:REWRITE DEFAULT-CAR))
 (17 2 (:REWRITE SUBSETP-CAR-MEMBER))
 (16 16 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (16 16 (:REWRITE REDUCE-INTEGERP-+))
 (16 16 (:REWRITE INTEGERP-MINUS-X))
 (16 16 (:META META-INTEGERP-CORRECT))
 (14 14 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (14 7 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (14 5 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (13 13 (:REWRITE REDUCE-RATIONALP-+))
 (13 13 (:REWRITE REDUCE-RATIONALP-*))
 (13 13 (:REWRITE RATIONALP-MINUS-X))
 (13 13 (:META META-RATIONALP-CORRECT))
 (13 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (13 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (12 1 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (11 5 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (10 10 (:TYPE-PRESCRIPTION NATP-OF-DAB-DIGIT-FIX))
 (10 10 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (10 10 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (10 5 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (8 8 (:REWRITE SUBSETP-TRANS2))
 (8 8 (:REWRITE SUBSETP-TRANS))
 (8 8 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (6 6 (:REWRITE SUBSETP-MEMBER . 2))
 (6 6 (:REWRITE SUBSETP-MEMBER . 1))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (/ x) (/ y))|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGITP))
 )
(NAT-LISTP-OF-DAB-DIGIT-LIST-FIX
 (406 7 (:DEFINITION NATP))
 (168 14 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (126 7 (:DEFINITION INTEGER-LISTP))
 (56 32 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (32 32 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (17 17 (:REWRITE DEFAULT-CDR))
 (16 16 (:REWRITE DEFAULT-CAR))
 (14 14 (:REWRITE REDUCE-INTEGERP-+))
 (14 14 (:REWRITE INTEGERP-MINUS-X))
 (14 14 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (14 14 (:META META-INTEGERP-CORRECT))
 (14 7 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (11 1 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (7 7 (:REWRITE THE-FLOOR-BELOW))
 (7 7 (:REWRITE THE-FLOOR-ABOVE))
 (7 7 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (7 7 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (7 7 (:REWRITE SIMPLIFY-SUMS-<))
 (7 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (7 7 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (7 7 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (7 7 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (7 7 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (7 7 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (7 7 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (7 7 (:REWRITE INTEGERP-<-CONSTANT))
 (7 7 (:REWRITE DEFAULT-LESS-THAN-2))
 (7 7 (:REWRITE DEFAULT-LESS-THAN-1))
 (7 7 (:REWRITE CONSTANT-<-INTEGERP))
 (7 7 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (7 7 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (7 7 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (7 7 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (7 7 (:REWRITE |(< c (- x))|))
 (7 7 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (7 7 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (7 7 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (7 7 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (7 7 (:REWRITE |(< (/ x) 0)|))
 (7 7 (:REWRITE |(< (/ x) (/ y))|))
 (7 7 (:REWRITE |(< (- x) c)|))
 (7 7 (:REWRITE |(< (- x) (- y))|))
 (7 7 (:REWRITE |(< (* x y) 0)|))
 (6 1 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (1 1 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 )
(DAB-DIGIT-LIST-FIX-OF-TRUE-LIST-FIX
 (139 5 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (88 11 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (81 6 (:DEFINITION TRUE-LISTP))
 (39 3 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (24 3 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (23 23 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (22 22 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (22 11 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (22 11 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (15 15 (:REWRITE DEFAULT-CDR))
 (12 6 (:REWRITE DEFAULT-PLUS-2))
 (11 11 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (11 11 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (11 11 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (11 11 (:REWRITE SET::IN-SET))
 (8 8 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (8 8 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (8 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (7 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (6 6 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE NORMALIZE-ADDENDS))
 (6 6 (:REWRITE DEFAULT-PLUS-1))
 (6 6 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (6 1 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (5 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (3 3 (:REWRITE DEFAULT-CAR))
 )
(DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP
 (48 6 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (33 3 (:DEFINITION TRUE-LISTP))
 (12 12 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (12 6 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (12 6 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (10 9 (:REWRITE DEFAULT-CDR))
 (6 6 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (6 6 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (6 6 (:REWRITE SET::IN-SET))
 (5 4 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE SUBSETP-TRANS2))
 (2 2 (:REWRITE SUBSETP-TRANS))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(DAB-DIGIT-LIST-FIX-OF-NIL
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 )
(DAB-DIGIT-LIST-FIX-OF-CONS
 (56 6 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (37 5 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (22 22 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (20 20 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (12 12 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (12 12 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (12 2 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (12 2 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (11 11 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (9 1 (:REWRITE DAB-DIGIT-LISTP-OF-CONS))
 (3 3 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE DEFAULT-CAR))
 )
(DAB-DIGIT-LIST-FIX-OF-APPEND
 (481 14 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (356 4 (:REWRITE DAB-DIGIT-LISTP-OF-APPEND))
 (220 10 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (116 80 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (112 4 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (104 4 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (71 71 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (67 36 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (66 8 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (64 8 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (56 4 (:DEFINITION TRUE-LISTP))
 (48 4 (:REWRITE DAB-DIGIT-LISTP-OF-LIST-FIX))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 32 (:TYPE-PRESCRIPTION LEN))
 (30 16 (:REWRITE DEFAULT-CDR))
 (30 5 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (28 4 (:DEFINITION LEN))
 (16 16 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (16 16 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (16 8 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (16 8 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (16 4 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (14 14 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (14 14 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (12 12 (:REWRITE DEFAULT-CAR))
 (8 8 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (8 8 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (8 8 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (8 8 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (8 8 (:REWRITE SET::IN-SET))
 (8 8 (:REWRITE CONSP-OF-LIST-FIX))
 (8 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (8 5 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (8 4 (:REWRITE DEFAULT-PLUS-2))
 (6 5 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 2 (:REWRITE CAR-OF-APPEND))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (5 5 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (5 5 (:REWRITE |(equal c (/ x))|))
 (5 5 (:REWRITE |(equal c (- x))|))
 (5 5 (:REWRITE |(equal (/ x) c)|))
 (5 5 (:REWRITE |(equal (/ x) (/ y))|))
 (5 5 (:REWRITE |(equal (- x) c)|))
 (5 5 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (4 4 (:REWRITE SUBSETP-TRANS2))
 (4 4 (:REWRITE SUBSETP-TRANS))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (4 4 (:REWRITE DEFAULT-PLUS-1))
 (4 4 (:REWRITE CONSP-OF-APPEND))
 (2 2 (:REWRITE CDR-OF-APPEND-WHEN-CONSP))
 )
(LEN-OF-DAB-DIGIT-LIST-FIX
 (12 2 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (11 1 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (6 6 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (6 3 (:REWRITE DEFAULT-PLUS-2))
 (6 1 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (5 5 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (4 3 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (3 3 (:REWRITE DEFAULT-PLUS-1))
 (3 2 (:REWRITE DEFAULT-CDR))
 (3 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (2 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(CONSP-OF-DAB-DIGIT-LIST-FIX
 (12 2 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (11 1 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (6 6 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (6 1 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (5 5 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (4 3 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (2 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(CAR-OF-DAB-DIGIT-LIST-FIX
 (290 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (210 8 (:REWRITE ACL2-NUMBERP-X))
 (105 11 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (104 4 (:REWRITE RATIONALP-X))
 (104 4 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (84 2 (:DEFINITION RATIONAL-LISTP))
 (82 8 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (78 3 (:DEFINITION DAB-DIGIT-LIST-FIX))
 (76 6 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (58 58 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (58 2 (:DEFINITION ACL2-NUMBER-LISTP))
 (54 9 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (54 6 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (54 2 (:DEFINITION INTEGER-LISTP))
 (36 36 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (36 36 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (23 9 (:REWRITE DEFAULT-CDR))
 (21 14 (:REWRITE DEFAULT-CAR))
 (20 20 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (20 20 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (18 18 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (18 3 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (16 16 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (16 16 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (16 4 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (16 4 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (14 14 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (14 14 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (12 4 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (12 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (12 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (8 8 (:TYPE-PRESCRIPTION DAB-BASEP))
 (8 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (6 6 (:REWRITE REDUCE-INTEGERP-+))
 (6 6 (:REWRITE INTEGERP-MINUS-X))
 (6 6 (:META META-INTEGERP-CORRECT))
 (6 2 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (6 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (6 2 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:META META-RATIONALP-CORRECT))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 )
(CDR-OF-DAB-DIGIT-LIST-FIX
 (70 6 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (56 4 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (46 9 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (36 4 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (34 34 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (34 34 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (17 17 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (9 8 (:REWRITE DEFAULT-CDR))
 (8 8 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (8 8 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE DEFAULT-CAR))
 )
(REV-OF-DAB-DIGIT-LIST-FIX
 (628 12 (:REWRITE DAB-DIGIT-LISTP-OF-REV))
 (600 12 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (540 12 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (534 5 (:DEFINITION BINARY-APPEND))
 (356 14 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (326 32 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (226 12 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (212 12 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (144 144 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (128 16 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (119 119 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (112 8 (:DEFINITION TRUE-LISTP))
 (100 12 (:REWRITE DAB-DIGIT-LISTP-OF-LIST-FIX))
 (91 60 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (64 39 (:REWRITE DEFAULT-CDR))
 (62 62 (:TYPE-PRESCRIPTION LEN))
 (56 8 (:DEFINITION LEN))
 (47 10 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (45 29 (:REWRITE CONSP-OF-REV))
 (40 40 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (40 15 (:REWRITE DEFAULT-CAR))
 (32 32 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (32 16 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (32 16 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (24 24 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (24 24 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (16 16 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (16 16 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (16 16 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (16 16 (:REWRITE SET::IN-SET))
 (16 8 (:REWRITE DEFAULT-PLUS-2))
 (13 9 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (13 9 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (12 12 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (12 12 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (10 9 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (9 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (9 9 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (9 9 (:REWRITE |(equal c (/ x))|))
 (9 9 (:REWRITE |(equal c (- x))|))
 (9 9 (:REWRITE |(equal (/ x) c)|))
 (9 9 (:REWRITE |(equal (/ x) (/ y))|))
 (9 9 (:REWRITE |(equal (- x) c)|))
 (9 9 (:REWRITE |(equal (- x) (- y))|))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (8 8 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (8 8 (:REWRITE NORMALIZE-ADDENDS))
 (8 8 (:REWRITE DEFAULT-PLUS-1))
 (6 6 (:REWRITE CONSP-OF-LIST-FIX))
 (2 2 (:REWRITE APPEND-ATOM-UNDER-LIST-EQUIV))
 )
(NAT-LIST-FIX-OF-DAB-DIGIT-LIST-FIX
 (53 2 (:DEFINITION DAB-DIGIT-LIST-FIX))
 (31 4 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (22 2 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (14 14 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (14 14 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (12 2 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (12 2 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (7 7 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (4 4 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (4 4 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE-QUOTED-CONSTANT NAT-LIST-FIX-UNDER-NAT-LIST-EQUIV))
 )
(DAB-DIGIT-LIST-FIX-OF-DAB-BASE-FIX-BASE
 (67 7 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (45 5 (:REWRITE DAB-DIGIT-LISTP-OF-DAB-BASE-FIX-BASE))
 (39 3 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (28 28 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (26 26 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (26 5 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (24 3 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (16 14 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (9 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (6 6 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (6 6 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(DAB-DIGIT-LIST-FIX-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(DIGITS=>NAT-EXEC
 (1187 37 (:REWRITE ACL2-NUMBERP-X))
 (667 49 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (593 26 (:DEFINITION RATIONAL-LISTP))
 (581 34 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (548 50 (:REWRITE RATIONALP-X))
 (528 17 (:DEFINITION ACL2-NUMBER-LISTP))
 (459 65 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (338 22 (:DEFINITION INTEGER-LISTP))
 (187 35 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (94 94 (:REWRITE DEFAULT-CAR))
 (84 84 (:REWRITE DEFAULT-CDR))
 (82 82 (:REWRITE INTEGERP-MINUS-X))
 (81 81 (:META META-INTEGERP-CORRECT))
 (56 28 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (52 52 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (50 50 (:REWRITE REDUCE-RATIONALP-+))
 (50 50 (:REWRITE REDUCE-RATIONALP-*))
 (50 50 (:REWRITE RATIONALP-MINUS-X))
 (50 50 (:META META-RATIONALP-CORRECT))
 (48 6 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (44 44 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (40 20 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (37 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (34 34 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (33 3 (:DEFINITION TRUE-LISTP))
 (31 1 (:DEFINITION MEMBER-EQUAL))
 (21 21 (:REWRITE THE-FLOOR-BELOW))
 (21 21 (:REWRITE THE-FLOOR-ABOVE))
 (21 21 (:REWRITE DEFAULT-LESS-THAN-2))
 (21 21 (:REWRITE DEFAULT-LESS-THAN-1))
 (19 19 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (19 19 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (19 19 (:REWRITE SIMPLIFY-SUMS-<))
 (19 19 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (19 19 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (19 19 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (19 19 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (19 19 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (19 19 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (19 19 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (19 19 (:REWRITE INTEGERP-<-CONSTANT))
 (19 19 (:REWRITE CONSTANT-<-INTEGERP))
 (19 19 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (19 19 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (19 19 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (19 19 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (19 19 (:REWRITE |(< c (- x))|))
 (19 19 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (19 19 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (19 19 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (19 19 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (19 19 (:REWRITE |(< (/ x) 0)|))
 (19 19 (:REWRITE |(< (/ x) (/ y))|))
 (19 19 (:REWRITE |(< (- x) c)|))
 (19 19 (:REWRITE |(< (- x) (- y))|))
 (19 19 (:REWRITE |(< (* x y) 0)|))
 (12 12 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (12 6 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (12 6 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (10 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (7 7 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (7 7 (:REWRITE DEFAULT-TIMES-2))
 (7 7 (:REWRITE DEFAULT-TIMES-1))
 (6 6 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (6 6 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE SET::IN-SET))
 (5 5 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (4 4 (:REWRITE |(< (+ c/d x) y)|))
 (4 4 (:REWRITE |(< (+ (- c) x) y)|))
 (2 2 (:REWRITE SUBSETP-MEMBER . 2))
 (2 2 (:REWRITE SUBSETP-MEMBER . 1))
 (2 2 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE INTEGERP-+-REDUCE-CONSTANT))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(NATP-OF-DIGITS=>NAT-EXEC
 (6320 156 (:REWRITE ACL2-NUMBERP-X))
 (3960 286 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (3842 156 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (3672 78 (:DEFINITION ACL2-NUMBER-LISTP))
 (3608 156 (:DEFINITION RATIONAL-LISTP))
 (2660 286 (:REWRITE RATIONALP-X))
 (2266 328 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (1700 108 (:DEFINITION INTEGER-LISTP))
 (1458 222 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (551 551 (:REWRITE DEFAULT-CAR))
 (528 528 (:REWRITE DEFAULT-CDR))
 (449 449 (:REWRITE INTEGERP-MINUS-X))
 (447 447 (:META META-INTEGERP-CORRECT))
 (300 300 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (296 148 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (286 286 (:REWRITE REDUCE-RATIONALP-+))
 (286 286 (:REWRITE REDUCE-RATIONALP-*))
 (286 286 (:REWRITE RATIONALP-MINUS-X))
 (286 286 (:META META-RATIONALP-CORRECT))
 (272 34 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (204 204 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (187 17 (:DEFINITION TRUE-LISTP))
 (184 92 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (166 137 (:REWRITE DEFAULT-LESS-THAN-1))
 (162 133 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (162 133 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (144 144 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (137 137 (:REWRITE THE-FLOOR-BELOW))
 (137 137 (:REWRITE THE-FLOOR-ABOVE))
 (137 137 (:REWRITE DEFAULT-LESS-THAN-2))
 (136 136 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (136 136 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (136 136 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (136 136 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (136 136 (:REWRITE INTEGERP-<-CONSTANT))
 (136 136 (:REWRITE CONSTANT-<-INTEGERP))
 (136 136 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (136 136 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (136 136 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (136 136 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (136 136 (:REWRITE |(< c (- x))|))
 (136 136 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (136 136 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (136 136 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (136 136 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (136 136 (:REWRITE |(< (/ x) 0)|))
 (136 136 (:REWRITE |(< (/ x) (/ y))|))
 (136 136 (:REWRITE |(< (- x) c)|))
 (136 136 (:REWRITE |(< (- x) (- y))|))
 (136 136 (:REWRITE |(< (* x y) 0)|))
 (133 133 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (133 133 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (133 133 (:REWRITE SIMPLIFY-SUMS-<))
 (74 72 (:REWRITE DEFAULT-PLUS-1))
 (68 68 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (68 34 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (68 34 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (63 63 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (63 63 (:REWRITE DEFAULT-TIMES-2))
 (63 63 (:REWRITE DEFAULT-TIMES-1))
 (47 47 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (34 34 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (34 34 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (34 34 (:REWRITE SET::IN-SET))
 (13 13 (:REWRITE |(< (+ c/d x) y)|))
 (13 13 (:REWRITE |(< (+ (- c) x) y)|))
 (2 2 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (2 2 (:REWRITE INTEGERP-+-REDUCE-CONSTANT))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 )
(NAT=>DIGITS-EXEC
 (1177 1177 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (1177 1177 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (1177 1177 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (598 10 (:REWRITE DEFAULT-PLUS-1))
 (596 10 (:REWRITE DEFAULT-PLUS-2))
 (510 2 (:DEFINITION MEMBER-EQUAL))
 (481 37 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (333 37 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (333 37 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (333 37 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (264 1 (:REWRITE SUBSETP-OF-CONS))
 (261 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (204 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (194 2 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (185 37 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (185 37 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (185 37 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (185 37 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (185 37 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (185 37 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (185 37 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (185 37 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (185 37 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (180 36 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (176 36 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (176 36 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (176 36 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (176 36 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (158 2 (:REWRITE FLOOR-ZERO . 3))
 (111 26 (:REWRITE DEFAULT-LESS-THAN-1))
 (110 8 (:REWRITE ACL2-NUMBERP-X))
 (90 2 (:REWRITE CANCEL-FLOOR-+))
 (88 22 (:REWRITE SIMPLIFY-SUMS-<))
 (88 2 (:REWRITE |(< (/ x) y) with (< 0 x)|))
 (84 2 (:REWRITE CANCEL-MOD-+))
 (82 2 (:REWRITE |(<= x (/ y)) with (< 0 y)|))
 (77 22 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (73 46 (:REWRITE DEFAULT-TIMES-2))
 (72 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (72 2 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (71 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (69 2 (:REWRITE FLOOR-ZERO . 4))
 (67 4 (:REWRITE |(integerp (- x))|))
 (62 2 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (60 2 (:REWRITE MOD-X-Y-=-X . 3))
 (56 4 (:REWRITE RATIONALP-X))
 (51 4 (:REWRITE |(* (- x) y)|))
 (50 4 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (50 2 (:REWRITE FLOOR-=-X/Y . 3))
 (50 2 (:REWRITE FLOOR-=-X/Y . 2))
 (48 46 (:REWRITE DEFAULT-TIMES-1))
 (48 2 (:REWRITE MOD-ZERO . 3))
 (42 2 (:DEFINITION RATIONAL-LISTP))
 (40 6 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (36 36 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (36 36 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (36 36 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (36 36 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (36 36 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (36 36 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (36 36 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (36 36 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (36 36 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (36 8 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (34 26 (:REWRITE DEFAULT-LESS-THAN-2))
 (32 22 (:REWRITE DEFAULT-DIVIDE))
 (29 25 (:REWRITE |(< (/ x) (/ y))|))
 (28 28 (:REWRITE THE-FLOOR-BELOW))
 (28 2 (:DEFINITION INTEGER-LISTP))
 (26 26 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (26 26 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (26 26 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (26 2 (:REWRITE DEFAULT-MOD-RATIO))
 (26 2 (:REWRITE DEFAULT-FLOOR-RATIO))
 (25 25 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (25 25 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (25 25 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (25 25 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (25 25 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (25 25 (:REWRITE |(< (- x) (- y))|))
 (24 24 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (24 24 (:REWRITE INTEGERP-<-CONSTANT))
 (24 24 (:REWRITE CONSTANT-<-INTEGERP))
 (24 24 (:REWRITE |(< c (- x))|))
 (24 24 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (24 24 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (24 24 (:REWRITE |(< (- x) c)|))
 (24 2 (:DEFINITION ACL2-NUMBER-LISTP))
 (24 1 (:LINEAR MOD-BOUNDS-3))
 (21 4 (:REWRITE DEFAULT-MINUS))
 (20 20 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (20 20 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (18 18 (:REWRITE REDUCE-INTEGERP-+))
 (18 18 (:REWRITE INTEGERP-MINUS-X))
 (18 18 (:META META-INTEGERP-CORRECT))
 (16 16 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (14 14 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (14 14 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (12 12 (:REWRITE ZP-OPEN))
 (12 2 (:REWRITE FLOOR-ZERO . 2))
 (12 2 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (12 2 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (12 2 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (11 11 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (11 2 (:REWRITE FLOOR-ZERO . 5))
 (11 2 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (11 2 (:REWRITE FLOOR-CANCEL-*-CONST))
 (11 2 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (11 2 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (10 2 (:REWRITE MOD-ZERO . 4))
 (10 2 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (10 2 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (10 2 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (10 2 (:REWRITE MOD-X-Y-=-X . 4))
 (10 2 (:REWRITE MOD-X-Y-=-X . 2))
 (10 2 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (10 2 (:REWRITE MOD-CANCEL-*-CONST))
 (10 2 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (10 2 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (10 2 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (10 2 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (10 2 (:LINEAR MOD-BOUNDS-2))
 (8 8 (:REWRITE DEFAULT-CDR))
 (8 8 (:REWRITE DEFAULT-CAR))
 (8 4 (:REWRITE |(* 1 x)|))
 (6 2 (:REWRITE |(<= x (/ y)) with (< y 0)|))
 (6 2 (:REWRITE |(< (/ x) y) with (< x 0)|))
 (5 4 (:REWRITE |(< (/ x) 0)|))
 (4 4 (:REWRITE SUBSETP-MEMBER . 2))
 (4 4 (:REWRITE SUBSETP-MEMBER . 1))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE |(< (* x y) 0)|))
 (4 4 (:REWRITE |(- (* c x))|))
 (4 4 (:META META-RATIONALP-CORRECT))
 (4 2 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (4 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (4 2 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (4 1 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (3 3 (:REWRITE SUBSETP-TRANS2))
 (3 3 (:REWRITE SUBSETP-TRANS))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (/ x) (/ y))|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (3 2 (:REWRITE DEFAULT-FLOOR-2))
 (3 1 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (2 2 (:REWRITE MOD-X-Y-=-X-Y . 1))
 (2 2 (:REWRITE MOD-X-Y-=-X+Y . 1))
 (2 2 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE DEFAULT-MOD-2))
 (2 2 (:REWRITE DEFAULT-MOD-1))
 (2 2 (:REWRITE DEFAULT-FLOOR-1))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE |(mod x (- y))| . 3))
 (2 2 (:REWRITE |(mod x (- y))| . 2))
 (2 2 (:REWRITE |(mod x (- y))| . 1))
 (2 2 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(mod (- x) y)| . 3))
 (2 2 (:REWRITE |(mod (- x) y)| . 2))
 (2 2 (:REWRITE |(mod (- x) y)| . 1))
 (2 2 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor x (- y))| . 2))
 (2 2 (:REWRITE |(floor x (- y))| . 1))
 (2 2 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (- x) y)| . 2))
 (2 2 (:REWRITE |(floor (- x) y)| . 1))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(equal (mod (+ x y) z) x)|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE |(<= (/ x) y) with (< x 0)|))
 (1 1 (:REWRITE |(<= (/ x) y) with (< 0 x)|))
 (1 1 (:REWRITE |(< x (/ y)) with (< y 0)|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (1 1 (:REWRITE |(< (* x (/ y)) 0) rationalp (* x (/ y))|))
 (1 1 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (1 1 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 )
(RETURN-TYPE-OF-NAT=>DIGITS-EXEC
 (672 672 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (672 672 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (672 672 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (510 2 (:DEFINITION MEMBER-EQUAL))
 (360 5 (:REWRITE FLOOR-ZERO . 3))
 (280 56 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (264 1 (:REWRITE SUBSETP-OF-CONS))
 (261 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (252 6 (:REWRITE CANCEL-MOD-+))
 (210 5 (:REWRITE CANCEL-FLOOR-+))
 (202 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (192 56 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (192 56 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (192 56 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (192 56 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (186 6 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (180 6 (:REWRITE MOD-X-Y-=-X . 3))
 (176 44 (:REWRITE |(* y x)|))
 (176 11 (:REWRITE |(integerp (- x))|))
 (155 5 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (150 5 (:REWRITE FLOOR-ZERO . 4))
 (144 6 (:REWRITE MOD-ZERO . 3))
 (143 11 (:REWRITE |(* (- x) y)|))
 (135 135 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (135 135 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (135 135 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (135 135 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (120 5 (:REWRITE FLOOR-=-X/Y . 3))
 (120 5 (:REWRITE FLOOR-=-X/Y . 2))
 (115 31 (:REWRITE DEFAULT-LESS-THAN-1))
 (113 29 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (110 8 (:REWRITE ACL2-NUMBERP-X))
 (99 99 (:REWRITE DEFAULT-TIMES-2))
 (99 99 (:REWRITE DEFAULT-TIMES-1))
 (96 8 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (93 29 (:REWRITE SIMPLIFY-SUMS-<))
 (81 29 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (78 6 (:REWRITE DEFAULT-MOD-RATIO))
 (70 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (70 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (68 8 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (68 8 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (68 8 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (65 5 (:REWRITE DEFAULT-FLOOR-RATIO))
 (56 56 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (56 56 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (56 56 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (56 56 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (56 56 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (56 4 (:REWRITE RATIONALP-X))
 (55 11 (:REWRITE DEFAULT-MINUS))
 (50 4 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (49 22 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (48 22 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (44 44 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (44 44 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (44 44 (:REWRITE DEFAULT-DIVIDE))
 (42 2 (:DEFINITION RATIONAL-LISTP))
 (40 8 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (40 8 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (40 8 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (40 8 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (40 8 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (40 8 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (40 8 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (40 8 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (40 8 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (40 6 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (36 8 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (34 34 (:REWRITE REDUCE-INTEGERP-+))
 (34 34 (:REWRITE INTEGERP-MINUS-X))
 (34 34 (:META META-INTEGERP-CORRECT))
 (31 31 (:REWRITE THE-FLOOR-BELOW))
 (31 31 (:REWRITE THE-FLOOR-ABOVE))
 (31 31 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (31 31 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (31 31 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (31 31 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (31 31 (:REWRITE INTEGERP-<-CONSTANT))
 (31 31 (:REWRITE DEFAULT-LESS-THAN-2))
 (31 31 (:REWRITE CONSTANT-<-INTEGERP))
 (31 31 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (31 31 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (31 31 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (31 31 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (31 31 (:REWRITE |(< c (- x))|))
 (31 31 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (31 31 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (31 31 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (31 31 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (31 31 (:REWRITE |(< (/ x) (/ y))|))
 (31 31 (:REWRITE |(< (- x) c)|))
 (31 31 (:REWRITE |(< (- x) (- y))|))
 (31 22 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (30 6 (:REWRITE MOD-ZERO . 4))
 (30 6 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (30 6 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (30 6 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (30 6 (:REWRITE MOD-X-Y-=-X . 4))
 (30 6 (:REWRITE MOD-X-Y-=-X . 2))
 (30 6 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (30 6 (:REWRITE MOD-CANCEL-*-CONST))
 (30 6 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (30 6 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (30 6 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (30 6 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (28 2 (:DEFINITION INTEGER-LISTP))
 (27 27 (:REWRITE SUBSETP-TRANS2))
 (27 27 (:REWRITE SUBSETP-TRANS))
 (25 5 (:REWRITE FLOOR-ZERO . 5))
 (25 5 (:REWRITE FLOOR-ZERO . 2))
 (25 5 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (25 5 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (25 5 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (25 5 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (25 5 (:REWRITE FLOOR-CANCEL-*-CONST))
 (25 5 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (25 5 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (24 2 (:DEFINITION ACL2-NUMBER-LISTP))
 (24 1 (:LINEAR MOD-BOUNDS-3))
 (16 16 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (14 14 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (14 14 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (11 11 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (11 11 (:REWRITE |(- (* c x))|))
 (10 2 (:LINEAR MOD-BOUNDS-2))
 (8 8 (:REWRITE DEFAULT-CDR))
 (8 8 (:REWRITE DEFAULT-CAR))
 (6 6 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (6 6 (:REWRITE DEFAULT-MOD-2))
 (6 6 (:REWRITE DEFAULT-MOD-1))
 (6 6 (:REWRITE |(mod x (- y))| . 3))
 (6 6 (:REWRITE |(mod x (- y))| . 2))
 (6 6 (:REWRITE |(mod x (- y))| . 1))
 (6 6 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (6 6 (:REWRITE |(mod (- x) y)| . 3))
 (6 6 (:REWRITE |(mod (- x) y)| . 2))
 (6 6 (:REWRITE |(mod (- x) y)| . 1))
 (6 6 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (5 5 (:REWRITE ZP-OPEN))
 (5 5 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (5 5 (:REWRITE DEFAULT-FLOOR-2))
 (5 5 (:REWRITE DEFAULT-FLOOR-1))
 (5 5 (:REWRITE |(floor x (- y))| . 2))
 (5 5 (:REWRITE |(floor x (- y))| . 1))
 (5 5 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (5 5 (:REWRITE |(floor (- x) y)| . 2))
 (5 5 (:REWRITE |(floor (- x) y)| . 1))
 (5 5 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (5 5 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (5 5 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 (5 1 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (4 4 (:REWRITE SUBSETP-MEMBER . 2))
 (4 4 (:REWRITE SUBSETP-MEMBER . 1))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (4 4 (:META META-RATIONALP-CORRECT))
 (4 2 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (4 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (4 2 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE MOD-X-Y-=-X-Y . 1))
 (2 2 (:REWRITE MOD-X-Y-=-X+Y . 1))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (mod (+ x y) z) x)|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE |(< (/ x) 0)|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 )
(LENDIAN=>NAT
 (5 5 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 )
(NATP-OF-LENDIAN=>NAT)
(LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS
 (50 5 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (26 5 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (24 24 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (24 3 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (23 23 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (13 12 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (12 6 (:REWRITE DEFAULT-TIMES-2))
 (12 6 (:REWRITE DEFAULT-TIMES-1))
 (10 10 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (9 9 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (9 3 (:REWRITE DEFAULT-PLUS-2))
 (9 3 (:REWRITE DEFAULT-PLUS-1))
 (9 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:TYPE-PRESCRIPTION NATP-OF-DAB-DIGIT-FIX))
 (3 3 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (3 3 (:REWRITE DEFAULT-CAR))
 (3 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST)
(LENDIAN=>NAT-OF-TRUE-LIST-FIX
 (139 5 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (88 11 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (81 6 (:DEFINITION TRUE-LISTP))
 (39 3 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (24 3 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (23 23 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (22 22 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (22 11 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (22 11 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (21 9 (:REWRITE DEFAULT-PLUS-2))
 (15 15 (:REWRITE DEFAULT-CDR))
 (15 9 (:REWRITE DEFAULT-PLUS-1))
 (12 6 (:REWRITE DEFAULT-TIMES-2))
 (12 6 (:REWRITE DEFAULT-TIMES-1))
 (11 11 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (11 11 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (11 11 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (11 11 (:REWRITE SET::IN-SET))
 (9 9 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (9 9 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (9 9 (:REWRITE NORMALIZE-ADDENDS))
 (9 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (9 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (8 8 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (8 8 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (8 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (6 6 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (6 6 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (6 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 1 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (5 5 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (3 3 (:TYPE-PRESCRIPTION NATP-OF-DAB-DIGIT-FIX))
 (3 3 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (3 3 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (3 3 (:REWRITE DEFAULT-CAR))
 )
(LENDIAN=>NAT-OF-NAT-LIST-FIX
 (1585 5 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (1543 12 (:DEFINITION NAT-LISTP))
 (1052 12 (:DEFINITION NATP))
 (950 22 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (914 74 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (819 46 (:DEFINITION INTEGER-LISTP))
 (455 76 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (104 104 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (85 85 (:REWRITE DEFAULT-CDR))
 (83 83 (:REWRITE DEFAULT-CAR))
 (74 74 (:REWRITE REDUCE-INTEGERP-+))
 (74 74 (:REWRITE INTEGERP-MINUS-X))
 (74 74 (:META META-INTEGERP-CORRECT))
 (54 16 (:REWRITE DEFAULT-PLUS-2))
 (47 12 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (46 16 (:REWRITE DEFAULT-PLUS-1))
 (31 30 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (30 30 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (21 3 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (18 18 (:REWRITE THE-FLOOR-BELOW))
 (18 18 (:REWRITE THE-FLOOR-ABOVE))
 (18 18 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (18 18 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (18 18 (:REWRITE SIMPLIFY-SUMS-<))
 (18 18 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (18 18 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (18 18 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (18 18 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (18 18 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (18 18 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (18 18 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (18 18 (:REWRITE INTEGERP-<-CONSTANT))
 (18 18 (:REWRITE DEFAULT-LESS-THAN-2))
 (18 18 (:REWRITE DEFAULT-LESS-THAN-1))
 (18 18 (:REWRITE CONSTANT-<-INTEGERP))
 (18 18 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (18 18 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (18 18 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (18 18 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (18 18 (:REWRITE |(< c (- x))|))
 (18 18 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (18 18 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (18 18 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (18 18 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (18 18 (:REWRITE |(< (/ x) 0)|))
 (18 18 (:REWRITE |(< (/ x) (/ y))|))
 (18 18 (:REWRITE |(< (- x) c)|))
 (18 18 (:REWRITE |(< (- x) (- y))|))
 (18 18 (:REWRITE |(< (* x y) 0)|))
 (17 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (17 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (12 6 (:REWRITE DEFAULT-TIMES-2))
 (12 6 (:REWRITE DEFAULT-TIMES-1))
 (9 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (6 6 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (6 6 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (6 2 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (6 1 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (5 5 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (/ x) (/ y))|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE |(equal (+ (- c) x) y)|))
 (1 1 (:REWRITE |(+ c (+ d x))|))
 )
(LENDIAN=>NAT-OF-CONS
 (37 5 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (16 16 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (16 8 (:REWRITE DEFAULT-TIMES-2))
 (16 8 (:REWRITE DEFAULT-TIMES-1))
 (15 5 (:REWRITE DEFAULT-PLUS-2))
 (15 5 (:REWRITE DEFAULT-PLUS-1))
 (15 5 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (12 2 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (10 10 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (10 10 (:TYPE-PRESCRIPTION DAB-BASEP))
 (10 10 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (5 5 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (5 5 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (5 5 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (3 3 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 )
(LENDIAN=>NAT-OF-APPEND
 (214 32 (:REWRITE DEFAULT-PLUS-2))
 (150 32 (:REWRITE DEFAULT-TIMES-2))
 (92 92 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (92 92 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (92 92 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (92 92 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (92 92 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (87 9 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (82 32 (:REWRITE DEFAULT-PLUS-1))
 (65 32 (:REWRITE DEFAULT-TIMES-1))
 (42 7 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (38 38 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (36 12 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (36 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (24 24 (:TYPE-PRESCRIPTION DAB-BASEP))
 (24 7 (:REWRITE DEFAULT-CDR))
 (18 18 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (18 18 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (18 9 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (18 2 (:REWRITE |(+ y x)|))
 (17 17 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (15 12 (:REWRITE DEFAULT-CAR))
 (14 14 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (14 14 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (10 4 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (9 9 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (9 9 (:TYPE-PRESCRIPTION BINARY-APPEND))
 (9 9 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (8 4 (:REWRITE DEFAULT-EXPT-1))
 (7 7 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (7 4 (:REWRITE DEFAULT-EXPT-2))
 (6 2 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (6 2 (:REWRITE CAR-OF-APPEND))
 (4 4 (:REWRITE CONSP-OF-APPEND))
 (4 4 (:REWRITE |(expt 1/c n)|))
 (4 4 (:REWRITE |(expt (- x) n)|))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (/ x) (/ y))|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (3 3 (:REWRITE |(equal (+ (- c) x) y)|))
 (2 2 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (2 2 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (2 2 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE CDR-OF-APPEND-WHEN-CONSP))
 (1 1 (:REWRITE BUBBLE-DOWN-*-MATCH-3))
 (1 1 (:REWRITE |(* c (* d x))|))
 (1 1 (:REWRITE |(* (/ c) (expt d n))|))
 )
(DIGITS=>NAT-EXEC-TO-LENDIAN=>NAT
 (21763 399 (:REWRITE ACL2-NUMBERP-X))
 (13169 808 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (13031 396 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (11455 269 (:DEFINITION ACL2-NUMBER-LISTP))
 (11222 473 (:DEFINITION RATIONAL-LISTP))
 (11109 64 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (10607 32 (:DEFINITION MEMBER-EQUAL))
 (10285 370 (:REWRITE DEFAULT-PLUS-1))
 (9871 98 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (9191 79 (:REWRITE ACL2-NUMBER-LISTP-OF-REV))
 (9042 809 (:REWRITE RATIONALP-X))
 (6609 754 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (5245 710 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (4575 79 (:REWRITE RATIONAL-LISTP-OF-REV))
 (3979 242 (:DEFINITION INTEGER-LISTP))
 (2540 79 (:REWRITE INTEGER-LISTP-OF-REV))
 (2536 390 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (1643 1643 (:TYPE-PRESCRIPTION REV))
 (1563 1467 (:REWRITE DEFAULT-CDR))
 (1559 1559 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (1559 1559 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (1559 1559 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (1559 1559 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (1559 1559 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (1548 14 (:REWRITE ACL2-NUMBER-LISTP-OF-LIST-FIX))
 (1496 334 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (1389 1293 (:REWRITE DEFAULT-CAR))
 (1256 31 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (1249 166 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (1148 1106 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (1073 66 (:REWRITE CDR-OF-LIST-FIX))
 (1021 295 (:REWRITE DEFAULT-TIMES-2))
 (898 31 (:REWRITE DAB-DIGIT-LISTP-OF-REV))
 (809 809 (:REWRITE REDUCE-RATIONALP-+))
 (809 809 (:REWRITE REDUCE-RATIONALP-*))
 (809 809 (:REWRITE RATIONALP-MINUS-X))
 (809 809 (:META META-RATIONALP-CORRECT))
 (782 28 (:REWRITE BUBBLE-DOWN-*-MATCH-3))
 (781 781 (:REWRITE INTEGERP-MINUS-X))
 (780 780 (:META META-INTEGERP-CORRECT))
 (731 731 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (716 674 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (711 295 (:REWRITE DEFAULT-TIMES-1))
 (707 98 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (672 98 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (578 447 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (570 48 (:DEFINITION TRUE-LISTP))
 (554 277 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (551 96 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (527 62 (:REWRITE SUBSETP-CAR-MEMBER))
 (265 265 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (250 131 (:REWRITE INTEGER-LISTP-OF-LIST-FIX))
 (214 100 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (203 14 (:REWRITE RATIONAL-LISTP-OF-LIST-FIX))
 (200 200 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (200 200 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (200 200 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (186 93 (:REWRITE CAR-OF-LIST-FIX))
 (166 166 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (160 160 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (154 7 (:REWRITE DAB-DIGIT-LISTP-OF-LIST-FIX))
 (152 152 (:REWRITE CONSP-OF-REV))
 (150 150 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (135 135 (:REWRITE CONSP-OF-LIST-FIX))
 (130 26 (:REWRITE |(* x x)|))
 (124 124 (:REWRITE SUBSETP-TRANS2))
 (124 124 (:REWRITE SUBSETP-TRANS))
 (122 61 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (122 61 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (103 65 (:REWRITE DEFAULT-EXPT-2))
 (103 1 (:REWRITE |(+ (if a b c) x)|))
 (100 100 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (98 98 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (98 98 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (98 98 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (98 98 (:REWRITE |(equal c (/ x))|))
 (98 98 (:REWRITE |(equal c (- x))|))
 (98 98 (:REWRITE |(equal (/ x) c)|))
 (98 98 (:REWRITE |(equal (/ x) (/ y))|))
 (98 98 (:REWRITE |(equal (- x) c)|))
 (98 98 (:REWRITE |(equal (- x) (- y))|))
 (65 65 (:REWRITE DEFAULT-EXPT-1))
 (65 65 (:REWRITE |(expt 1/c n)|))
 (65 65 (:REWRITE |(expt (- x) n)|))
 (64 64 (:REWRITE SUBSETP-MEMBER . 2))
 (64 64 (:REWRITE SUBSETP-MEMBER . 1))
 (61 61 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (61 61 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (61 61 (:REWRITE SET::IN-SET))
 (35 35 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (34 34 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (31 31 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (31 31 (:REWRITE REV-WHEN-NOT-CONSP))
 (31 31 (:REWRITE |(equal (+ (- c) x) y)|))
 (30 30 (:REWRITE THE-FLOOR-BELOW))
 (30 30 (:REWRITE THE-FLOOR-ABOVE))
 (30 30 (:REWRITE DEFAULT-LESS-THAN-2))
 (30 30 (:REWRITE DEFAULT-LESS-THAN-1))
 (29 29 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (29 29 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (29 29 (:REWRITE SIMPLIFY-SUMS-<))
 (29 29 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (29 29 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (29 29 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (29 29 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (29 29 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (29 29 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (29 29 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (29 29 (:REWRITE INTEGERP-<-CONSTANT))
 (29 29 (:REWRITE CONSTANT-<-INTEGERP))
 (29 29 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (29 29 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (29 29 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (29 29 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (29 29 (:REWRITE |(< c (- x))|))
 (29 29 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (29 29 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (29 29 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (29 29 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (29 29 (:REWRITE |(< (/ x) 0)|))
 (29 29 (:REWRITE |(< (/ x) (/ y))|))
 (29 29 (:REWRITE |(< (- x) c)|))
 (29 29 (:REWRITE |(< (- x) (- y))|))
 (29 29 (:REWRITE |(< (* x y) 0)|))
 (28 28 (:REWRITE |(* c (* d x))|))
 (24 24 (:REWRITE SUBSETP-REFL))
 (23 23 (:REWRITE FOLD-CONSTS-IN-+))
 (23 23 (:REWRITE |(+ c (+ d x))|))
 (15 1 (:DEFINITION BINARY-APPEND))
 (14 7 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (8 2 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (7 7 (:TYPE-PRESCRIPTION NATP-OF-DAB-DIGIT-FIX))
 (4 4 (:REWRITE |(< (+ c/d x) y)|))
 (4 4 (:REWRITE |(< (+ (- c) x) y)|))
 (2 2 (:REWRITE |(* c (expt d n))|))
 (1 1 (:REWRITE INTEGERP-+-REDUCE-CONSTANT))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 )
(LENDIAN=>NAT
 (2255 40 (:REWRITE ACL2-NUMBERP-X))
 (1563 40 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (1506 26 (:DEFINITION ACL2-NUMBER-LISTP))
 (1410 95 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (1292 55 (:DEFINITION RATIONAL-LISTP))
 (990 95 (:REWRITE RATIONALP-X))
 (834 39 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (709 102 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (607 86 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (524 31 (:DEFINITION INTEGER-LISTP))
 (156 156 (:REWRITE DEFAULT-CDR))
 (155 155 (:REWRITE DEFAULT-CAR))
 (108 108 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (106 53 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (102 102 (:REWRITE REDUCE-INTEGERP-+))
 (102 102 (:REWRITE INTEGERP-MINUS-X))
 (102 102 (:META META-INTEGERP-CORRECT))
 (95 95 (:REWRITE REDUCE-RATIONALP-+))
 (95 95 (:REWRITE REDUCE-RATIONALP-*))
 (95 95 (:REWRITE RATIONALP-MINUS-X))
 (95 95 (:META META-RATIONALP-CORRECT))
 (62 62 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (54 54 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (32 16 (:REWRITE DEFAULT-PLUS-2))
 (31 14 (:REWRITE DEFAULT-TIMES-2))
 (29 14 (:REWRITE DEFAULT-TIMES-1))
 (9 9 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (9 9 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (9 9 (:REWRITE NORMALIZE-ADDENDS))
 (7 7 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (5 5 (:REWRITE SUBSETP-TRANS2))
 (5 5 (:REWRITE SUBSETP-TRANS))
 (4 4 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (4 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (4 1 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (3 3 (:REWRITE SUBSETP-OF-CDR))
 (2 2 (:TYPE-PRESCRIPTION REV))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (2 1 (:REWRITE DEFAULT-EXPT-2))
 (1 1 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (1 1 (:REWRITE REV-WHEN-NOT-CONSP))
 (1 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE CONSP-OF-REV))
 (1 1 (:REWRITE |(expt x (if a b c))|))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 (1 1 (:REWRITE |(+ x (if a b c))|))
 (1 1 (:REWRITE |(+ (if a b c) x)|))
 )
(LENDIAN=>NAT-OF-NIL
 (1 1 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 )
(LENDIAN=>NAT-OF-ALL-ZEROS
 (295 2 (:REWRITE DEFAULT-PLUS-1))
 (206 4 (:REWRITE ACL2-NUMBERP-X))
 (104 4 (:REWRITE RATIONALP-X))
 (104 4 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (85 18 (:REWRITE CONSP-OF-REPEAT))
 (84 2 (:DEFINITION RATIONAL-LISTP))
 (78 4 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (76 6 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (58 2 (:DEFINITION ACL2-NUMBER-LISTP))
 (54 2 (:DEFINITION INTEGER-LISTP))
 (36 3 (:REWRITE ZP-OPEN))
 (19 8 (:REWRITE DEFAULT-CDR))
 (19 8 (:REWRITE DEFAULT-CAR))
 (16 16 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (16 4 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (16 4 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (14 14 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (14 14 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (8 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (8 1 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (6 6 (:REWRITE REDUCE-INTEGERP-+))
 (6 6 (:REWRITE INTEGERP-MINUS-X))
 (6 6 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (6 6 (:META META-INTEGERP-CORRECT))
 (6 3 (:REWRITE DEFAULT-TIMES-2))
 (6 2 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (6 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (6 2 (:REWRITE DEFAULT-PLUS-2))
 (6 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (6 2 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (6 1 (:REWRITE |(* y x)|))
 (5 3 (:REWRITE DEFAULT-TIMES-1))
 (4 4 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:META META-RATIONALP-CORRECT))
 (4 1 (:REWRITE DAB-DIGIT-LISTP-OF-REPEAT))
 (2 2 (:REWRITE THE-FLOOR-BELOW))
 (2 2 (:REWRITE THE-FLOOR-ABOVE))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (2 2 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (2 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE INTEGERP-<-CONSTANT))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-1))
 (2 2 (:REWRITE CONSTANT-<-INTEGERP))
 (2 2 (:REWRITE |(< y (+ (- c) x))|))
 (2 2 (:REWRITE |(< x (+ c/d y))|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (- x))|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) (/ y))|))
 (2 2 (:REWRITE |(< (- x) c)|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT
 (152 2 (:REWRITE REPEAT-WHEN-ZP))
 (144 2 (:REWRITE ZP-OPEN))
 (70 2 (:DEFINITION LENDIAN=>NAT))
 (26 26 (:TYPE-PRESCRIPTION LEN))
 (24 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (22 6 (:REWRITE ACL2-NUMBERP-X))
 (22 2 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (14 2 (:DEFINITION LEN))
 (12 2 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (12 2 (:REWRITE |(* y x)|))
 (10 4 (:REWRITE DEFAULT-PLUS-2))
 (8 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (8 4 (:REWRITE DEFAULT-TIMES-2))
 (8 4 (:REWRITE DEFAULT-TIMES-1))
 (8 4 (:REWRITE DEFAULT-PLUS-1))
 (8 4 (:REWRITE DEFAULT-LESS-THAN-2))
 (8 2 (:REWRITE RATIONALP-X))
 (6 6 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (6 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (6 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (6 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (4 4 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (4 4 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (4 4 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE THE-FLOOR-BELOW))
 (4 4 (:REWRITE THE-FLOOR-ABOVE))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (4 4 (:REWRITE SIMPLIFY-SUMS-<))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 4 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE INTEGERP-<-CONSTANT))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-1))
 (4 4 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (4 4 (:REWRITE CONSTANT-<-INTEGERP))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (- x))|))
 (4 4 (:REWRITE |(< 0 (/ x))|))
 (4 4 (:REWRITE |(< 0 (* x y))|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) (/ y))|))
 (4 4 (:REWRITE |(< (- x) c)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION ZP))
 (2 2 (:TYPE-PRESCRIPTION NATP-OF-DAB-DIGIT-FIX))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (2 2 (:REWRITE REDUCE-RATIONALP-+))
 (2 2 (:REWRITE REDUCE-RATIONALP-*))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE RATIONALP-MINUS-X))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (2 2 (:META META-RATIONALP-CORRECT))
 (2 2 (:META META-INTEGERP-CORRECT))
 )
(LENDIAN=>NAT-OF-ALL-BASE-MINUS-1
 (898 20 (:REWRITE ZP-OPEN))
 (677 81 (:REWRITE DEFAULT-PLUS-1))
 (412 8 (:REWRITE ACL2-NUMBERP-X))
 (391 81 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (305 26 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (270 9 (:DEFINITION DAB-BASEP))
 (266 81 (:REWRITE DEFAULT-PLUS-2))
 (208 8 (:REWRITE RATIONALP-X))
 (208 8 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (195 195 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (195 195 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (195 195 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (195 195 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (195 195 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (170 36 (:REWRITE CONSP-OF-REPEAT))
 (168 4 (:DEFINITION RATIONAL-LISTP))
 (156 8 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (152 12 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (140 4 (:LINEAR EXPT->=-1-TWO))
 (140 4 (:LINEAR EXPT-<=-1-ONE))
 (136 4 (:LINEAR EXPT-X->=-X))
 (132 4 (:LINEAR EXPT-X->-X))
 (132 4 (:LINEAR EXPT->-1-ONE))
 (132 4 (:LINEAR EXPT-<-1-TWO))
 (116 4 (:DEFINITION ACL2-NUMBER-LISTP))
 (109 81 (:REWRITE DEFAULT-LESS-THAN-2))
 (108 4 (:DEFINITION INTEGER-LISTP))
 (99 71 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (99 71 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (88 4 (:LINEAR EXPT->=-1-ONE))
 (86 2 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (84 16 (:REWRITE DEFAULT-TIMES-2))
 (81 81 (:REWRITE THE-FLOOR-BELOW))
 (81 81 (:REWRITE THE-FLOOR-ABOVE))
 (81 81 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (81 81 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (81 81 (:REWRITE DEFAULT-LESS-THAN-1))
 (78 2 (:REWRITE DAB-DIGIT-LISTP-OF-REPEAT))
 (71 71 (:REWRITE SIMPLIFY-SUMS-<))
 (71 71 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (71 71 (:REWRITE INTEGERP-<-CONSTANT))
 (71 71 (:REWRITE CONSTANT-<-INTEGERP))
 (71 71 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (71 71 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (71 71 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (71 71 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (71 71 (:REWRITE |(< c (- x))|))
 (71 71 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (71 71 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (71 71 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (71 71 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (71 71 (:REWRITE |(< (/ x) (/ y))|))
 (71 71 (:REWRITE |(< (- x) c)|))
 (71 71 (:REWRITE |(< (- x) (- y))|))
 (55 55 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (50 16 (:REWRITE DEFAULT-TIMES-1))
 (38 16 (:REWRITE DEFAULT-CDR))
 (38 16 (:REWRITE DEFAULT-CAR))
 (37 37 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (32 32 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (32 8 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (32 8 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (28 28 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (28 28 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (28 14 (:REWRITE DEFAULT-EXPT-1))
 (24 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (24 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (24 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (23 23 (:REWRITE REDUCE-INTEGERP-+))
 (23 23 (:REWRITE INTEGERP-MINUS-X))
 (23 23 (:META META-INTEGERP-CORRECT))
 (22 22 (:REWRITE |(< 0 (* x y))|))
 (18 18 (:REWRITE |(< x (+ c/d y))|))
 (18 14 (:REWRITE DEFAULT-EXPT-2))
 (16 8 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (14 14 (:REWRITE |(expt 1/c n)|))
 (14 14 (:REWRITE |(expt (- x) n)|))
 (12 12 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (12 12 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (12 12 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (12 12 (:REWRITE |(< 0 (/ x))|))
 (12 4 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (12 4 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (12 4 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (12 4 (:LINEAR EXPT->-1-TWO))
 (12 4 (:LINEAR EXPT-<-1-ONE))
 (9 9 (:TYPE-PRESCRIPTION DAB-BASEP))
 (8 8 (:REWRITE REDUCE-RATIONALP-+))
 (8 8 (:REWRITE REDUCE-RATIONALP-*))
 (8 8 (:REWRITE RATIONALP-MINUS-X))
 (8 8 (:REWRITE |(< y (+ (- c) x))|))
 (8 8 (:META META-RATIONALP-CORRECT))
 (8 8 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (8 8 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (8 8 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (8 8 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (8 4 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (6 6 (:REWRITE |(< (/ x) 0)|))
 (6 6 (:REWRITE |(< (* x y) 0)|))
 (5 5 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (5 5 (:LINEAR EXPT-LINEAR-UPPER-<))
 (5 5 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (5 5 (:LINEAR EXPT-LINEAR-LOWER-<))
 (4 4 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (4 2 (:REWRITE DEFAULT-MINUS))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE |(equal (+ (- c) x) y)|))
 (2 2 (:REWRITE |(< (+ c/d x) y)|))
 (2 2 (:REWRITE |(< (+ (- c) x) y)|))
 (2 2 (:REWRITE |(* x (- y))|))
 (2 2 (:REWRITE |(* c (expt d n))|))
 (2 2 (:REWRITE |(* (- x) y)|))
 )
(LENDIAN=>NAT-OF-DAB-BASE-FIX-BASE
 (39 3 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (24 3 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (12 6 (:REWRITE DEFAULT-TIMES-2))
 (12 6 (:REWRITE DEFAULT-TIMES-1))
 (9 3 (:REWRITE DEFAULT-PLUS-2))
 (9 3 (:REWRITE DEFAULT-PLUS-1))
 (8 8 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (8 8 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (7 7 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (6 6 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (6 6 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (6 1 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (5 5 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (3 3 (:TYPE-PRESCRIPTION NATP-OF-DAB-DIGIT-FIX))
 (3 3 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (3 3 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE DEFAULT-CAR))
 (3 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (3 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(LENDIAN=>NAT-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(NAT=>LENDIAN*
 (598 10 (:REWRITE DEFAULT-PLUS-1))
 (596 10 (:REWRITE DEFAULT-PLUS-2))
 (554 554 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (554 554 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (554 554 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (286 22 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (198 22 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (198 22 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (198 22 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (194 2 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (110 22 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (110 22 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (110 22 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (110 22 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (110 22 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (110 22 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (110 22 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (110 22 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (110 22 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (88 2 (:REWRITE |(< (/ x) y) with (< 0 x)|))
 (86 1 (:REWRITE FLOOR-ZERO . 3))
 (82 2 (:REWRITE |(<= x (/ y)) with (< 0 y)|))
 (48 1 (:REWRITE CANCEL-FLOOR-+))
 (46 19 (:REWRITE DEFAULT-TIMES-2))
 (41 1 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (39 1 (:REWRITE FLOOR-ZERO . 4))
 (32 15 (:REWRITE DEFAULT-LESS-THAN-1))
 (31 12 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (26 1 (:REWRITE FLOOR-=-X/Y . 3))
 (26 1 (:REWRITE FLOOR-=-X/Y . 2))
 (23 15 (:REWRITE DEFAULT-LESS-THAN-2))
 (21 19 (:REWRITE DEFAULT-TIMES-1))
 (20 10 (:REWRITE DEFAULT-DIVIDE))
 (19 1 (:REWRITE |(integerp (- x))|))
 (18 14 (:REWRITE |(< (/ x) (/ y))|))
 (17 17 (:REWRITE THE-FLOOR-BELOW))
 (15 15 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (15 15 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (15 15 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (14 14 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (14 14 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (14 14 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (14 14 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (14 14 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (14 14 (:REWRITE |(< (- x) (- y))|))
 (14 12 (:REWRITE SIMPLIFY-SUMS-<))
 (13 13 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (13 13 (:REWRITE INTEGERP-<-CONSTANT))
 (13 13 (:REWRITE CONSTANT-<-INTEGERP))
 (13 13 (:REWRITE |(< c (- x))|))
 (13 13 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (13 13 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (13 13 (:REWRITE |(< (- x) c)|))
 (13 1 (:REWRITE DEFAULT-FLOOR-RATIO))
 (12 1 (:REWRITE |(* (- x) y)|))
 (9 9 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (9 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (8 8 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (8 8 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (8 4 (:REWRITE |(* 1 x)|))
 (7 1 (:REWRITE FLOOR-ZERO . 2))
 (7 1 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (7 1 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (7 1 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (6 2 (:REWRITE |(<= x (/ y)) with (< y 0)|))
 (6 2 (:REWRITE |(< (/ x) y) with (< x 0)|))
 (6 1 (:REWRITE FLOOR-ZERO . 5))
 (6 1 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (6 1 (:REWRITE FLOOR-CANCEL-*-CONST))
 (6 1 (:REWRITE DEFAULT-MINUS))
 (6 1 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (6 1 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (5 1 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (5 1 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (5 1 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (5 1 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (4 1 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (3 3 (:REWRITE ZP-OPEN))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:META META-INTEGERP-CORRECT))
 (3 2 (:REWRITE |(< (/ x) 0)|))
 (3 1 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 1 (:REWRITE DEFAULT-FLOOR-2))
 (1 1 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (1 1 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (1 1 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (1 1 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (1 1 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (1 1 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (1 1 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-FLOOR-1))
 (1 1 (:REWRITE |(floor x (- y))| . 2))
 (1 1 (:REWRITE |(floor x (- y))| . 1))
 (1 1 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor (- x) y)| . 2))
 (1 1 (:REWRITE |(floor (- x) y)| . 1))
 (1 1 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(<= (/ x) y) with (< x 0)|))
 (1 1 (:REWRITE |(<= (/ x) y) with (< 0 x)|))
 (1 1 (:REWRITE |(< x (/ y)) with (< y 0)|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (1 1 (:REWRITE |(< (* x (/ y)) 0) rationalp (* x (/ y))|))
 (1 1 (:REWRITE |(- (* c x))|))
 )
(RETURN-TYPE-OF-NAT=>LENDIAN*
 (568 2 (:DEFINITION MEMBER-EQUAL))
 (307 307 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (307 307 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (307 307 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (293 1 (:REWRITE SUBSETP-OF-CONS))
 (290 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (242 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (155 31 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (155 31 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (155 31 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (155 31 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (136 8 (:REWRITE ACL2-NUMBERP-X))
 (100 2 (:REWRITE CANCEL-MOD-+))
 (82 2 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (80 8 (:REWRITE SIMPLIFY-SUMS-<))
 (80 8 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (78 2 (:REWRITE MOD-X-Y-=-X . 3))
 (74 8 (:REWRITE DEFAULT-LESS-THAN-1))
 (72 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (72 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (70 4 (:REWRITE RATIONALP-X))
 (64 4 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (64 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (60 2 (:DEFINITION DAB-BASEP))
 (54 6 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (54 2 (:REWRITE MOD-ZERO . 3))
 (52 2 (:DEFINITION RATIONAL-LISTP))
 (48 8 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (46 8 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (38 2 (:REWRITE |(integerp (- x))|))
 (36 2 (:DEFINITION INTEGER-LISTP))
 (32 2 (:DEFINITION ACL2-NUMBER-LISTP))
 (31 31 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (31 31 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (31 31 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (31 31 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (31 31 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (27 1 (:LINEAR MOD-BOUNDS-3))
 (26 2 (:REWRITE DEFAULT-MOD-RATIO))
 (24 2 (:REWRITE |(* (- x) y)|))
 (18 9 (:REWRITE DEFAULT-TIMES-2))
 (16 16 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (16 2 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (16 2 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (14 14 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (14 14 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (14 8 (:REWRITE DEFAULT-LESS-THAN-2))
 (14 7 (:REWRITE DEFAULT-DIVIDE))
 (14 2 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (14 2 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (14 2 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (14 2 (:REWRITE MOD-X-Y-=-X . 2))
 (14 2 (:LINEAR MOD-BOUNDS-2))
 (13 13 (:REWRITE REDUCE-INTEGERP-+))
 (13 13 (:REWRITE INTEGERP-MINUS-X))
 (13 13 (:META META-INTEGERP-CORRECT))
 (12 2 (:REWRITE MOD-ZERO . 4))
 (12 2 (:REWRITE MOD-X-Y-=-X . 4))
 (12 2 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (12 2 (:REWRITE MOD-CANCEL-*-CONST))
 (12 2 (:REWRITE DEFAULT-MINUS))
 (12 2 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (12 2 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (11 11 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (9 9 (:REWRITE DEFAULT-TIMES-1))
 (8 8 (:REWRITE THE-FLOOR-BELOW))
 (8 8 (:REWRITE THE-FLOOR-ABOVE))
 (8 8 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (8 8 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (8 8 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (8 8 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (8 8 (:REWRITE INTEGERP-<-CONSTANT))
 (8 8 (:REWRITE DEFAULT-CDR))
 (8 8 (:REWRITE DEFAULT-CAR))
 (8 8 (:REWRITE CONSTANT-<-INTEGERP))
 (8 8 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (8 8 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (8 8 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (8 8 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (8 8 (:REWRITE |(< c (- x))|))
 (8 8 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (8 8 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (8 8 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (8 8 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (8 8 (:REWRITE |(< (/ x) (/ y))|))
 (8 8 (:REWRITE |(< (- x) c)|))
 (8 8 (:REWRITE |(< (- x) (- y))|))
 (7 7 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (7 7 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (6 6 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE SUBSETP-MEMBER . 2))
 (4 4 (:REWRITE SUBSETP-MEMBER . 1))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (4 4 (:META META-RATIONALP-CORRECT))
 (4 2 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (4 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (4 2 (:REWRITE DEFAULT-MOD-2))
 (4 2 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (4 2 (:REWRITE |(equal (mod (+ x y) z) x)|))
 (3 3 (:REWRITE SUBSETP-TRANS2))
 (3 3 (:REWRITE SUBSETP-TRANS))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE ZP-OPEN))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE MOD-X-Y-=-X-Y . 1))
 (2 2 (:REWRITE MOD-X-Y-=-X+Y . 1))
 (2 2 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE DEFAULT-MOD-1))
 (2 2 (:REWRITE |(mod x (- y))| . 3))
 (2 2 (:REWRITE |(mod x (- y))| . 2))
 (2 2 (:REWRITE |(mod x (- y))| . 1))
 (2 2 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(mod (- x) y)| . 3))
 (2 2 (:REWRITE |(mod (- x) y)| . 2))
 (2 2 (:REWRITE |(mod (- x) y)| . 1))
 (2 2 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE |(- (* c x))|))
 )
(NATP-LISTP-OF-NAT=>LENDIAN*
 (406 7 (:DEFINITION NATP))
 (214 214 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (214 214 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (214 214 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (172 2 (:REWRITE FLOOR-ZERO . 3))
 (168 14 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (126 7 (:DEFINITION INTEGER-LISTP))
 (96 2 (:REWRITE CANCEL-FLOOR-+))
 (82 2 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (78 2 (:REWRITE FLOOR-ZERO . 4))
 (57 3 (:REWRITE |(integerp (- x))|))
 (56 32 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (52 2 (:REWRITE FLOOR-=-X/Y . 3))
 (52 2 (:REWRITE FLOOR-=-X/Y . 2))
 (50 1 (:REWRITE CANCEL-MOD-+))
 (49 49 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (41 1 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (39 1 (:REWRITE MOD-X-Y-=-X . 3))
 (36 3 (:REWRITE |(* (- x) y)|))
 (32 32 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (32 16 (:REWRITE DEFAULT-TIMES-2))
 (31 15 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (31 15 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (27 1 (:REWRITE MOD-ZERO . 3))
 (26 13 (:REWRITE DEFAULT-DIVIDE))
 (26 2 (:REWRITE DEFAULT-FLOOR-RATIO))
 (25 15 (:REWRITE DEFAULT-LESS-THAN-1))
 (22 22 (:REWRITE REDUCE-INTEGERP-+))
 (22 22 (:REWRITE INTEGERP-MINUS-X))
 (22 22 (:META META-INTEGERP-CORRECT))
 (21 15 (:REWRITE SIMPLIFY-SUMS-<))
 (21 15 (:REWRITE DEFAULT-LESS-THAN-2))
 (18 3 (:REWRITE DEFAULT-MINUS))
 (16 16 (:REWRITE DEFAULT-TIMES-1))
 (15 15 (:REWRITE THE-FLOOR-BELOW))
 (15 15 (:REWRITE THE-FLOOR-ABOVE))
 (15 15 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (15 15 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (15 15 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (15 15 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (15 15 (:REWRITE INTEGERP-<-CONSTANT))
 (15 15 (:REWRITE DEFAULT-CDR))
 (15 15 (:REWRITE DEFAULT-CAR))
 (15 15 (:REWRITE CONSTANT-<-INTEGERP))
 (15 15 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (15 15 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (15 15 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (15 15 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (15 15 (:REWRITE |(< c (- x))|))
 (15 15 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (15 15 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (15 15 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (15 15 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (15 15 (:REWRITE |(< (/ x) (/ y))|))
 (15 15 (:REWRITE |(< (- x) c)|))
 (15 15 (:REWRITE |(< (- x) (- y))|))
 (14 14 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (14 7 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (14 2 (:REWRITE FLOOR-ZERO . 2))
 (14 2 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (14 2 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (14 2 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (13 13 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (13 13 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (13 1 (:REWRITE DEFAULT-MOD-RATIO))
 (12 2 (:REWRITE FLOOR-ZERO . 5))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (9 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (8 2 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (8 1 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (8 1 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (7 7 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (7 7 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (7 7 (:REWRITE |(< (/ x) 0)|))
 (7 7 (:REWRITE |(< (* x y) 0)|))
 (7 2 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (7 2 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (7 2 (:REWRITE FLOOR-CANCEL-*-CONST))
 (7 2 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (7 2 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (7 2 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (7 2 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (7 1 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (7 1 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (7 1 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (7 1 (:REWRITE MOD-X-Y-=-X . 2))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (6 6 (:REWRITE ZP-OPEN))
 (6 2 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (6 1 (:REWRITE MOD-ZERO . 4))
 (6 1 (:REWRITE MOD-X-Y-=-X . 4))
 (6 1 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (6 1 (:REWRITE MOD-CANCEL-*-CONST))
 (6 1 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (6 1 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (5 1 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (5 1 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (5 1 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (5 1 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (4 2 (:REWRITE DEFAULT-FLOOR-2))
 (3 3 (:REWRITE |(- (* c x))|))
 (2 2 (:REWRITE DEFAULT-FLOOR-1))
 (2 2 (:REWRITE |(floor x (- y))| . 2))
 (2 2 (:REWRITE |(floor x (- y))| . 1))
 (2 2 (:REWRITE |(floor (- x) y)| . 2))
 (2 2 (:REWRITE |(floor (- x) y)| . 1))
 (2 1 (:REWRITE DEFAULT-MOD-2))
 (1 1 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (1 1 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (1 1 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (1 1 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE DEFAULT-MOD-1))
 (1 1 (:REWRITE |(mod x (- y))| . 3))
 (1 1 (:REWRITE |(mod x (- y))| . 2))
 (1 1 (:REWRITE |(mod x (- y))| . 1))
 (1 1 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(mod (- x) y)| . 3))
 (1 1 (:REWRITE |(mod (- x) y)| . 2))
 (1 1 (:REWRITE |(mod (- x) y)| . 1))
 (1 1 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 )
(CONSP-OF-NAT=>LENDIAN*
 (2015 24 (:REWRITE THE-FLOOR-BELOW))
 (1141 2 (:LINEAR LINEAR-FLOOR-BOUNDS-1))
 (810 810 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (810 810 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (344 4 (:REWRITE FLOOR-ZERO . 3))
 (265 21 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (192 4 (:REWRITE CANCEL-FLOOR-+))
 (185 21 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (185 21 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (185 21 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (164 4 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (156 4 (:REWRITE FLOOR-ZERO . 4))
 (105 21 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (105 21 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (105 21 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (105 21 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (105 21 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (105 21 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (105 21 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (105 21 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (105 21 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (104 4 (:REWRITE FLOOR-=-X/Y . 3))
 (104 4 (:REWRITE FLOOR-=-X/Y . 2))
 (97 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (97 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (95 5 (:REWRITE |(integerp (- x))|))
 (65 33 (:REWRITE DEFAULT-TIMES-2))
 (60 23 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (60 5 (:REWRITE |(* (- x) y)|))
 (58 23 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (55 28 (:REWRITE DEFAULT-DIVIDE))
 (52 4 (:REWRITE DEFAULT-FLOOR-RATIO))
 (50 1 (:REWRITE CANCEL-MOD-+))
 (46 2 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (43 23 (:REWRITE DEFAULT-LESS-THAN-1))
 (41 23 (:REWRITE DEFAULT-LESS-THAN-2))
 (39 23 (:REWRITE SIMPLIFY-SUMS-<))
 (33 33 (:REWRITE DEFAULT-TIMES-1))
 (32 2 (:REWRITE MOD-ZERO . 3))
 (31 1 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (30 5 (:REWRITE DEFAULT-MINUS))
 (29 23 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (28 28 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (28 28 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (28 4 (:REWRITE FLOOR-ZERO . 2))
 (28 4 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (28 4 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (28 4 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (26 1 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (24 24 (:REWRITE THE-FLOOR-ABOVE))
 (24 4 (:REWRITE FLOOR-ZERO . 5))
 (24 4 (:REWRITE FLOOR-CANCEL-*-CONST))
 (23 23 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (23 23 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (23 23 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (23 23 (:REWRITE INTEGERP-<-CONSTANT))
 (23 23 (:REWRITE CONSTANT-<-INTEGERP))
 (23 23 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (23 23 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (23 23 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (23 23 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (23 23 (:REWRITE |(< c (- x))|))
 (23 23 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (23 23 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (23 23 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (23 23 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (23 23 (:REWRITE |(< (/ x) (/ y))|))
 (23 23 (:REWRITE |(< (- x) c)|))
 (23 23 (:REWRITE |(< (- x) (- y))|))
 (23 2 (:REWRITE DEFAULT-MOD-RATIO))
 (21 7 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (16 16 (:REWRITE REDUCE-INTEGERP-+))
 (16 16 (:REWRITE INTEGERP-MINUS-X))
 (16 16 (:META META-INTEGERP-CORRECT))
 (16 4 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (14 14 (:TYPE-PRESCRIPTION DAB-BASEP))
 (14 14 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (14 4 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (14 4 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (14 4 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (14 4 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (14 4 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (14 4 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (12 4 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (12 2 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (12 2 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (12 2 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (11 2 (:REWRITE MOD-ZERO . 4))
 (11 2 (:REWRITE MOD-X-Y-=-X . 4))
 (10 1 (:REWRITE |(+ y x)|))
 (8 4 (:REWRITE DEFAULT-FLOOR-2))
 (8 1 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (8 1 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (7 2 (:REWRITE DEFAULT-PLUS-2))
 (7 2 (:REWRITE DEFAULT-PLUS-1))
 (7 1 (:REWRITE MOD-X-Y-=-X . 2))
 (6 1 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (6 1 (:REWRITE MOD-CANCEL-*-CONST))
 (6 1 (:REWRITE FLOOR-=-X/Y . 4))
 (6 1 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (6 1 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (6 1 (:REWRITE |(equal (floor (+ x y) z) x)|))
 (5 5 (:REWRITE |(- (* c x))|))
 (5 1 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (4 4 (:REWRITE DEFAULT-FLOOR-1))
 (4 4 (:REWRITE |(floor x (- y))| . 2))
 (4 4 (:REWRITE |(floor x (- y))| . 1))
 (4 4 (:REWRITE |(floor (- x) y)| . 2))
 (4 4 (:REWRITE |(floor (- x) y)| . 1))
 (3 2 (:REWRITE DEFAULT-MOD-2))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE DEFAULT-MOD-1))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE FLOOR-ZERO . 1))
 (1 1 (:REWRITE FLOOR-POSITIVE . 4))
 (1 1 (:REWRITE FLOOR-POSITIVE . 3))
 (1 1 (:REWRITE FLOOR-POSITIVE . 2))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(mod x (- y))| . 3))
 (1 1 (:REWRITE |(mod x (- y))| . 2))
 (1 1 (:REWRITE |(mod x (- y))| . 1))
 (1 1 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(mod (- x) y)| . 3))
 (1 1 (:REWRITE |(mod (- x) y)| . 2))
 (1 1 (:REWRITE |(mod (- x) y)| . 1))
 (1 1 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 )
(CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP
 (132 132 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (114 57 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B))
 (86 1 (:REWRITE FLOOR-ZERO . 3))
 (57 57 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (57 57 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (57 57 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (50 1 (:REWRITE CANCEL-MOD-+))
 (48 1 (:REWRITE CANCEL-FLOOR-+))
 (41 1 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (41 1 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (39 1 (:REWRITE MOD-X-Y-=-X . 3))
 (39 1 (:REWRITE FLOOR-ZERO . 4))
 (38 2 (:REWRITE |(integerp (- x))|))
 (27 1 (:REWRITE MOD-ZERO . 3))
 (26 1 (:REWRITE FLOOR-=-X/Y . 3))
 (26 1 (:REWRITE FLOOR-=-X/Y . 2))
 (24 2 (:REWRITE |(* (- x) y)|))
 (20 10 (:REWRITE DEFAULT-TIMES-2))
 (16 8 (:REWRITE DEFAULT-DIVIDE))
 (14 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (14 5 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (13 1 (:REWRITE DEFAULT-MOD-RATIO))
 (13 1 (:REWRITE DEFAULT-FLOOR-RATIO))
 (12 2 (:REWRITE DEFAULT-MINUS))
 (10 10 (:REWRITE DEFAULT-TIMES-1))
 (10 5 (:REWRITE DEFAULT-LESS-THAN-1))
 (9 5 (:REWRITE SIMPLIFY-SUMS-<))
 (9 5 (:REWRITE DEFAULT-LESS-THAN-2))
 (8 8 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (8 8 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (8 1 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (8 1 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (7 1 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (7 1 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (7 1 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (7 1 (:REWRITE MOD-X-Y-=-X . 2))
 (7 1 (:REWRITE FLOOR-ZERO . 2))
 (7 1 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (7 1 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (7 1 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (6 1 (:REWRITE MOD-ZERO . 4))
 (6 1 (:REWRITE MOD-X-Y-=-X . 4))
 (6 1 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (6 1 (:REWRITE MOD-CANCEL-*-CONST))
 (6 1 (:REWRITE FLOOR-ZERO . 5))
 (6 1 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (6 1 (:REWRITE FLOOR-CANCEL-*-CONST))
 (6 1 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (6 1 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (6 1 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (6 1 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (5 5 (:REWRITE THE-FLOOR-BELOW))
 (5 5 (:REWRITE THE-FLOOR-ABOVE))
 (5 5 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (5 5 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-INTEGERP-+))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (5 5 (:REWRITE INTEGERP-MINUS-X))
 (5 5 (:REWRITE INTEGERP-<-CONSTANT))
 (5 5 (:REWRITE CONSTANT-<-INTEGERP))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (- x))|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) (/ y))|))
 (5 5 (:REWRITE |(< (- x) c)|))
 (5 5 (:REWRITE |(< (- x) (- y))|))
 (5 5 (:META META-INTEGERP-CORRECT))
 (4 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (4 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 1 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (3 3 (:REWRITE ZP-OPEN))
 (3 1 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (2 2 (:REWRITE |(- (* c x))|))
 (2 1 (:REWRITE DEFAULT-MOD-2))
 (2 1 (:REWRITE DEFAULT-FLOOR-2))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-MOD-1))
 (1 1 (:REWRITE DEFAULT-FLOOR-1))
 (1 1 (:REWRITE |(mod x (- y))| . 3))
 (1 1 (:REWRITE |(mod x (- y))| . 2))
 (1 1 (:REWRITE |(mod x (- y))| . 1))
 (1 1 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(mod (- x) y)| . 3))
 (1 1 (:REWRITE |(mod (- x) y)| . 2))
 (1 1 (:REWRITE |(mod (- x) y)| . 1))
 (1 1 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor x (- y))| . 2))
 (1 1 (:REWRITE |(floor x (- y))| . 1))
 (1 1 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor (- x) y)| . 2))
 (1 1 (:REWRITE |(floor (- x) y)| . 1))
 (1 1 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(equal x (if a b c))|))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (if a b c) x)|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(NAT=>DIGITS-EXEC-TO-NAT=>LENDIAN*
 (14955 3 (:REWRITE REV-WHEN-NOT-CONSP))
 (12461 22 (:LINEAR LINEAR-FLOOR-BOUNDS-1))
 (6129 156 (:REWRITE THE-FLOOR-BELOW))
 (5941 5941 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (5941 5941 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (5941 5941 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (5122 2 (:REWRITE CDR-OF-APPEND-WHEN-CONSP))
 (2878 222 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (1994 222 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (1994 222 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (1934 23 (:REWRITE FLOOR-ZERO . 3))
 (1886 210 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (1767 149 (:REWRITE DEFAULT-LESS-THAN-2))
 (1110 222 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (1110 222 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (1110 222 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (1110 222 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (1110 222 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (1110 222 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (1110 222 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (1110 222 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (1098 23 (:REWRITE CANCEL-FLOOR-+))
 (1050 210 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (933 23 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (888 23 (:REWRITE FLOOR-ZERO . 4))
 (695 146 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (656 146 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (596 23 (:REWRITE FLOOR-=-X/Y . 3))
 (596 23 (:REWRITE FLOOR-=-X/Y . 2))
 (595 19 (:REWRITE DEFAULT-CAR))
 (514 28 (:REWRITE |(integerp (- x))|))
 (510 2 (:DEFINITION MEMBER-EQUAL))
 (497 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (437 17 (:REWRITE DEFAULT-CDR))
 (404 225 (:REWRITE DEFAULT-TIMES-2))
 (365 7 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (342 149 (:REWRITE DEFAULT-LESS-THAN-1))
 (342 28 (:REWRITE |(* (- x) y)|))
 (341 11 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (334 177 (:REWRITE DEFAULT-DIVIDE))
 (310 62 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (299 23 (:REWRITE DEFAULT-FLOOR-RATIO))
 (287 23 (:REWRITE FLOOR-POSITIVE . 2))
 (286 11 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (278 146 (:REWRITE SIMPLIFY-SUMS-<))
 (264 1 (:REWRITE SUBSETP-OF-CONS))
 (261 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (225 225 (:REWRITE DEFAULT-TIMES-1))
 (214 62 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (210 62 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (210 62 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (210 62 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (210 5 (:REWRITE CANCEL-MOD-+))
 (177 177 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (177 177 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (162 28 (:REWRITE DEFAULT-MINUS))
 (159 23 (:REWRITE FLOOR-ZERO . 2))
 (159 23 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (159 23 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (159 23 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (156 156 (:REWRITE THE-FLOOR-ABOVE))
 (154 14 (:REWRITE FLOOR-NONPOSITIVE . 1))
 (149 149 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (149 149 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (149 149 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (149 149 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (149 149 (:REWRITE INTEGERP-<-CONSTANT))
 (149 149 (:REWRITE CONSTANT-<-INTEGERP))
 (149 149 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (149 149 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (149 149 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (149 149 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (149 149 (:REWRITE |(< c (- x))|))
 (149 149 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (149 149 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (149 149 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (149 149 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (149 149 (:REWRITE |(< (/ x) (/ y))|))
 (149 149 (:REWRITE |(< (- x) c)|))
 (149 149 (:REWRITE |(< (- x) (- y))|))
 (143 23 (:REWRITE FLOOR-POSITIVE . 3))
 (137 23 (:REWRITE FLOOR-ZERO . 5))
 (133 23 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (133 23 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (133 23 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (125 5 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (121 5 (:REWRITE MOD-X-Y-=-X . 3))
 (119 23 (:REWRITE FLOOR-POSITIVE . 4))
 (110 110 (:REWRITE REDUCE-INTEGERP-+))
 (110 110 (:REWRITE INTEGERP-MINUS-X))
 (110 110 (:META META-INTEGERP-CORRECT))
 (110 11 (:REWRITE |(+ y x)|))
 (110 8 (:REWRITE ACL2-NUMBERP-X))
 (107 23 (:REWRITE FLOOR-CANCEL-*-CONST))
 (100 25 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (98 14 (:REWRITE FLOOR-NONPOSITIVE . 3))
 (98 14 (:REWRITE FLOOR-NONPOSITIVE . 2))
 (97 5 (:REWRITE MOD-ZERO . 3))
 (80 20 (:REWRITE |(* y x)|))
 (77 22 (:REWRITE DEFAULT-PLUS-2))
 (77 22 (:REWRITE DEFAULT-PLUS-1))
 (77 7 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (75 25 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (65 5 (:REWRITE DEFAULT-MOD-RATIO))
 (62 62 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (62 62 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (62 62 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (62 62 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (62 62 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (57 57 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (57 57 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (57 57 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (57 57 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (56 4 (:REWRITE RATIONALP-X))
 (50 4 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (45 23 (:REWRITE DEFAULT-FLOOR-2))
 (42 2 (:DEFINITION RATIONAL-LISTP))
 (40 6 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (36 8 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (30 30 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (30 30 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (30 30 (:REWRITE |(< 0 (/ x))|))
 (30 30 (:REWRITE |(< 0 (* x y))|))
 (28 28 (:REWRITE |(- (* c x))|))
 (28 2 (:DEFINITION INTEGER-LISTP))
 (27 23 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (27 23 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (27 23 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (25 5 (:REWRITE MOD-ZERO . 4))
 (25 5 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (25 5 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (25 5 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (25 5 (:REWRITE MOD-X-Y-=-X . 4))
 (25 5 (:REWRITE MOD-X-Y-=-X . 2))
 (25 5 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (25 5 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (25 5 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (25 5 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (25 5 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (24 2 (:DEFINITION ACL2-NUMBER-LISTP))
 (24 1 (:LINEAR MOD-BOUNDS-3))
 (23 23 (:REWRITE DEFAULT-FLOOR-1))
 (23 23 (:REWRITE |(floor x (- y))| . 2))
 (23 23 (:REWRITE |(floor x (- y))| . 1))
 (23 23 (:REWRITE |(floor (- x) y)| . 2))
 (23 23 (:REWRITE |(floor (- x) y)| . 1))
 (21 5 (:REWRITE MOD-CANCEL-*-CONST))
 (18 3 (:REWRITE FLOOR-=-X/Y . 4))
 (18 3 (:REWRITE |(equal (floor (+ x y) z) x)|))
 (16 16 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (14 14 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (14 14 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (12 3 (:REWRITE |(<= 1 (* x (/ y))) with (< 0 y)|))
 (11 11 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (11 11 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (11 11 (:REWRITE NORMALIZE-ADDENDS))
 (10 2 (:LINEAR MOD-BOUNDS-2))
 (9 9 (:REWRITE |(< (/ x) 0)|))
 (9 9 (:REWRITE |(< (* x y) 0)|))
 (9 3 (:REWRITE |(<= 1 (* x (/ y))) with (< y 0)|))
 (7 7 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (7 7 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (7 7 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (7 7 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (7 7 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (7 7 (:REWRITE |(equal c (/ x))|))
 (7 7 (:REWRITE |(equal c (- x))|))
 (7 7 (:REWRITE |(equal (/ x) c)|))
 (7 7 (:REWRITE |(equal (/ x) (/ y))|))
 (7 7 (:REWRITE |(equal (- x) c)|))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (5 5 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (5 5 (:REWRITE DEFAULT-MOD-2))
 (5 5 (:REWRITE DEFAULT-MOD-1))
 (5 5 (:REWRITE |(mod x (- y))| . 3))
 (5 5 (:REWRITE |(mod x (- y))| . 2))
 (5 5 (:REWRITE |(mod x (- y))| . 1))
 (5 5 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (5 5 (:REWRITE |(mod (- x) y)| . 3))
 (5 5 (:REWRITE |(mod (- x) y)| . 2))
 (5 5 (:REWRITE |(mod (- x) y)| . 1))
 (5 5 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (5 1 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (4 4 (:REWRITE SUBSETP-MEMBER . 2))
 (4 4 (:REWRITE SUBSETP-MEMBER . 1))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE APPEND-ATOM-UNDER-LIST-EQUIV))
 (4 4 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (4 4 (:META META-RATIONALP-CORRECT))
 (4 2 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (4 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (4 2 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (3 3 (:REWRITE SUBSETP-TRANS2))
 (3 3 (:REWRITE SUBSETP-TRANS))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (3 3 (:REWRITE FLOOR-ZERO . 1))
 (2 2 (:REWRITE MOD-X-Y-=-X-Y . 1))
 (2 2 (:REWRITE MOD-X-Y-=-X+Y . 1))
 (2 2 (:REWRITE |(equal (mod (+ x y) z) x)|))
 (1 1 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (1 1 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 )
(NAT=>LENDIAN*-OF-0
 (14 14 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 )
(LEN-0-OF-NAT=>LENDIAN*
 (4012 30 (:REWRITE THE-FLOOR-BELOW))
 (2402 1 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (2282 4 (:LINEAR LINEAR-FLOOR-BOUNDS-1))
 (1424 1424 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (1424 1424 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (717 57 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (519 59 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (501 57 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (474 54 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (430 5 (:REWRITE FLOOR-ZERO . 3))
 (295 59 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (295 59 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (295 59 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (292 4 (:REWRITE DEFAULT-CDR))
 (285 57 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (285 57 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (285 57 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (260 52 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (240 5 (:REWRITE CANCEL-FLOOR-+))
 (205 5 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (196 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (196 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (195 5 (:REWRITE FLOOR-ZERO . 4))
 (130 5 (:REWRITE FLOOR-=-X/Y . 3))
 (130 5 (:REWRITE FLOOR-=-X/Y . 2))
 (114 6 (:REWRITE |(integerp (- x))|))
 (88 44 (:REWRITE DEFAULT-TIMES-2))
 (74 37 (:REWRITE DEFAULT-DIVIDE))
 (72 28 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (72 6 (:REWRITE |(* (- x) y)|))
 (68 28 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (65 5 (:REWRITE DEFAULT-FLOOR-RATIO))
 (62 2 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (53 28 (:REWRITE DEFAULT-LESS-THAN-1))
 (52 2 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (51 2 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (50 1 (:REWRITE CANCEL-MOD-+))
 (49 28 (:REWRITE DEFAULT-LESS-THAN-2))
 (45 28 (:REWRITE SIMPLIFY-SUMS-<))
 (44 44 (:REWRITE DEFAULT-TIMES-1))
 (38 38 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (37 37 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (36 6 (:REWRITE DEFAULT-MINUS))
 (35 5 (:REWRITE FLOOR-ZERO . 2))
 (35 5 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (35 5 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (35 5 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (34 2 (:REWRITE MOD-ZERO . 3))
 (30 30 (:REWRITE THE-FLOOR-ABOVE))
 (30 5 (:REWRITE FLOOR-ZERO . 5))
 (30 5 (:REWRITE FLOOR-CANCEL-*-CONST))
 (28 28 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (28 28 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (28 28 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (28 28 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (28 28 (:REWRITE INTEGERP-<-CONSTANT))
 (28 28 (:REWRITE CONSTANT-<-INTEGERP))
 (28 28 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (28 28 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (28 28 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (28 28 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (28 28 (:REWRITE |(< c (- x))|))
 (28 28 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (28 28 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (28 28 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (28 28 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (28 28 (:REWRITE |(< (/ x) (/ y))|))
 (28 28 (:REWRITE |(< (- x) c)|))
 (28 28 (:REWRITE |(< (- x) (- y))|))
 (26 2 (:REWRITE DEFAULT-MOD-RATIO))
 (25 5 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (25 5 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (25 5 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (21 21 (:REWRITE REDUCE-INTEGERP-+))
 (21 21 (:REWRITE INTEGERP-MINUS-X))
 (21 21 (:META META-INTEGERP-CORRECT))
 (20 8 (:REWRITE DEFAULT-PLUS-2))
 (20 5 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (20 2 (:REWRITE |(+ y x)|))
 (18 8 (:REWRITE DEFAULT-PLUS-1))
 (17 17 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (15 5 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (15 3 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (14 2 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (14 2 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (14 2 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (12 2 (:REWRITE MOD-ZERO . 4))
 (12 2 (:REWRITE MOD-X-Y-=-X . 4))
 (12 2 (:REWRITE FLOOR-=-X/Y . 4))
 (12 2 (:REWRITE |(equal (floor (+ x y) z) x)|))
 (10 5 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (10 5 (:REWRITE DEFAULT-FLOOR-2))
 (10 5 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (10 5 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (9 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (8 1 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (8 1 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (7 1 (:REWRITE MOD-X-Y-=-X . 2))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE NORMALIZE-ADDENDS))
 (6 6 (:REWRITE |(- (* c x))|))
 (6 1 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (6 1 (:REWRITE MOD-CANCEL-*-CONST))
 (6 1 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (6 1 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (5 5 (:REWRITE DEFAULT-FLOOR-1))
 (5 5 (:REWRITE |(floor x (- y))| . 2))
 (5 5 (:REWRITE |(floor x (- y))| . 1))
 (5 5 (:REWRITE |(floor (- x) y)| . 2))
 (5 5 (:REWRITE |(floor (- x) y)| . 1))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (4 4 (:REWRITE |(< 0 (/ x))|))
 (4 4 (:REWRITE |(< 0 (* x y))|))
 (4 2 (:REWRITE DEFAULT-MOD-2))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (3 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (/ x) (/ y))|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE FLOOR-ZERO . 1))
 (2 2 (:REWRITE FLOOR-POSITIVE . 4))
 (2 2 (:REWRITE FLOOR-POSITIVE . 3))
 (2 2 (:REWRITE FLOOR-POSITIVE . 2))
 (2 2 (:REWRITE DEFAULT-MOD-1))
 (2 2 (:REWRITE |(< (/ x) 0)|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE |(mod x (- y))| . 3))
 (1 1 (:REWRITE |(mod x (- y))| . 2))
 (1 1 (:REWRITE |(mod x (- y))| . 1))
 (1 1 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(mod (- x) y)| . 3))
 (1 1 (:REWRITE |(mod (- x) y)| . 2))
 (1 1 (:REWRITE |(mod (- x) y)| . 1))
 (1 1 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 )
(EXPT-OF-LEN-OF-NAT=>LENDIAN*-IS-UPPER-BOUND
 (14134 36 (:LINEAR LINEAR-FLOOR-BOUNDS-1))
 (12968 8 (:REWRITE ZP-OPEN))
 (11472 11472 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (11472 11472 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (11472 11472 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (11445 199 (:REWRITE THE-FLOOR-BELOW))
 (9669 3 (:REWRITE |(mod (floor x y) z)| . 1))
 (7768 594 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (7172 53 (:REWRITE FLOOR-ZERO . 4))
 (7093 53 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (6882 8 (:REWRITE MOD-X-Y-=-X . 3))
 (6862 3 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (6476 8 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (6431 731 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (6069 53 (:REWRITE FLOOR-ZERO . 3))
 (5378 594 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (5378 594 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (5262 53 (:REWRITE CANCEL-FLOOR-+))
 (3709 699 (:REWRITE DEFAULT-TIMES-2))
 (3707 117 (:REWRITE DEFAULT-PLUS-2))
 (3505 117 (:REWRITE DEFAULT-PLUS-1))
 (3192 8 (:REWRITE CANCEL-MOD-+))
 (3109 699 (:REWRITE DEFAULT-TIMES-1))
 (3031 58 (:REWRITE |(integerp (- x))|))
 (2988 594 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (2988 594 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (2988 594 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (2988 594 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (2988 594 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (2988 594 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (2988 594 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (2988 594 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (2444 61 (:REWRITE |(* (- x) y)|))
 (2292 53 (:REWRITE FLOOR-=-X/Y . 2))
 (2064 53 (:REWRITE FLOOR-=-X/Y . 3))
 (1650 165 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (1650 165 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (1637 53 (:REWRITE DEFAULT-FLOOR-RATIO))
 (1611 8 (:REWRITE MOD-ZERO . 3))
 (1521 3 (:REWRITE |(floor (floor x y) z)| . 1))
 (1429 64 (:REWRITE DEFAULT-MINUS))
 (1274 138 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (1120 1120 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (1120 1120 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (1120 1120 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (1120 1120 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (1120 1120 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (1080 154 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1042 35 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (999 180 (:REWRITE DEFAULT-LESS-THAN-1))
 (926 8 (:REWRITE DEFAULT-MOD-RATIO))
 (908 6 (:REWRITE FLOOR-POSITIVE . 1))
 (845 53 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (789 53 (:REWRITE FLOOR-ZERO . 5))
 (757 8 (:REWRITE MOD-X-Y-=-X . 4))
 (731 731 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (731 731 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (731 731 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (708 138 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (617 53 (:REWRITE FLOOR-ZERO . 2))
 (617 53 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (617 53 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (583 8 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (583 8 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (577 293 (:REWRITE DEFAULT-DIVIDE))
 (577 6 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (577 6 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (556 8 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (556 8 (:REWRITE MOD-X-Y-=-X . 2))
 (529 8 (:REWRITE MOD-ZERO . 4))
 (496 53 (:REWRITE FLOOR-CANCEL-*-CONST))
 (475 19 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 (433 5 (:REWRITE DEFAULT-CDR))
 (420 12 (:REWRITE BUBBLE-DOWN-*-MATCH-3))
 (415 53 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (409 15 (:LINEAR EXPT-X->=-X))
 (353 180 (:REWRITE DEFAULT-LESS-THAN-2))
 (328 8 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (328 8 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (321 321 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-2))
 (321 321 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (309 154 (:REWRITE SIMPLIFY-SUMS-<))
 (301 8 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (301 8 (:REWRITE MOD-CANCEL-*-CONST))
 (281 53 (:REWRITE DEFAULT-FLOOR-1))
 (279 18 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (263 263 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (247 19 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (236 8 (:REWRITE DEFAULT-MOD-1))
 (233 180 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (206 18 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (199 53 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (196 50 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (196 50 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (180 180 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (180 180 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (172 50 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (172 50 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (167 167 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (167 167 (:REWRITE INTEGERP-<-CONSTANT))
 (167 167 (:REWRITE CONSTANT-<-INTEGERP))
 (167 167 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (167 167 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (167 167 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (167 167 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (167 167 (:REWRITE |(< c (- x))|))
 (167 167 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (167 167 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (167 167 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (167 167 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (167 167 (:REWRITE |(< (/ x) (/ y))|))
 (167 167 (:REWRITE |(< (- x) c)|))
 (167 167 (:REWRITE |(< (- x) (- y))|))
 (165 165 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (165 165 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (165 21 (:REWRITE |(* x x)|))
 (150 30 (:REWRITE |(/ (expt x n))|))
 (124 124 (:REWRITE REDUCE-INTEGERP-+))
 (124 124 (:REWRITE INTEGERP-MINUS-X))
 (124 124 (:META META-INTEGERP-CORRECT))
 (109 53 (:REWRITE DEFAULT-FLOOR-2))
 (103 95 (:REWRITE DEFAULT-EXPT-2))
 (95 95 (:REWRITE DEFAULT-EXPT-1))
 (95 95 (:REWRITE |(expt 1/c n)|))
 (95 95 (:REWRITE |(expt (- x) n)|))
 (93 93 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (93 15 (:LINEAR EXPT->=-1-TWO))
 (93 15 (:LINEAR EXPT-<=-1-ONE))
 (90 15 (:LINEAR EXPT-X->-X))
 (90 15 (:LINEAR EXPT->-1-ONE))
 (90 15 (:LINEAR EXPT-<=-1-TWO))
 (90 15 (:LINEAR EXPT-<-1-TWO))
 (64 64 (:REWRITE |(- (* c x))|))
 (60 12 (:REWRITE |(expt (/ x) n)|))
 (58 5 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (58 5 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (50 50 (:REWRITE |(floor x (- y))| . 2))
 (50 50 (:REWRITE |(floor x (- y))| . 1))
 (50 50 (:REWRITE |(floor (- x) y)| . 2))
 (50 50 (:REWRITE |(floor (- x) y)| . 1))
 (49 49 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (49 49 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (49 49 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (48 3 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (35 8 (:REWRITE DEFAULT-MOD-2))
 (31 6 (:REWRITE FLOOR-=-X/Y . 4))
 (31 6 (:REWRITE |(equal (floor (+ x y) z) x)|))
 (30 30 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (30 30 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (30 30 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (30 30 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (30 30 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (28 28 (:REWRITE |(< 0 (* x y))|))
 (21 3 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (21 3 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (21 3 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (21 3 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (16 16 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (16 16 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (16 16 (:REWRITE |(< 0 (/ x))|))
 (15 15 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (15 15 (:LINEAR EXPT-LINEAR-UPPER-<))
 (15 15 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (15 15 (:LINEAR EXPT-LINEAR-LOWER-<))
 (15 15 (:LINEAR EXPT->-1-TWO))
 (15 15 (:LINEAR EXPT-<-1-ONE))
 (15 1 (:REWRITE |(+ y (+ x z))|))
 (14 14 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (14 14 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (14 14 (:REWRITE |(< (/ x) 0)|))
 (14 14 (:REWRITE |(< (* x y) 0)|))
 (12 12 (:REWRITE |(<= (/ x) y) with (< x 0)|))
 (12 12 (:REWRITE |(<= (/ x) y) with (< 0 x)|))
 (12 12 (:REWRITE |(< x (/ y)) with (< y 0)|))
 (12 12 (:REWRITE |(< x (/ y)) with (< 0 y)|))
 (12 12 (:REWRITE |(* c (* d x))|))
 (12 12 (:REWRITE |(* a (/ a))|))
 (9 3 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (8 8 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (8 2 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (6 6 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 6 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (6 6 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (6 6 (:REWRITE FLOOR-ZERO . 1))
 (6 6 (:REWRITE FLOOR-POSITIVE . 4))
 (6 6 (:REWRITE FLOOR-POSITIVE . 3))
 (6 6 (:REWRITE FLOOR-POSITIVE . 2))
 (6 6 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (6 6 (:REWRITE |(equal c (/ x))|))
 (6 6 (:REWRITE |(equal c (- x))|))
 (6 6 (:REWRITE |(equal (/ x) c)|))
 (6 6 (:REWRITE |(equal (/ x) (/ y))|))
 (6 6 (:REWRITE |(equal (- x) c)|))
 (6 6 (:REWRITE |(equal (- x) (- y))|))
 (6 2 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (6 1 (:REWRITE |(+ c (+ d x))|))
 (5 5 (:REWRITE |(mod x (- y))| . 3))
 (5 5 (:REWRITE |(mod x (- y))| . 2))
 (5 5 (:REWRITE |(mod x (- y))| . 1))
 (5 5 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (5 5 (:REWRITE |(mod (- x) y)| . 3))
 (5 5 (:REWRITE |(mod (- x) y)| . 2))
 (5 5 (:REWRITE |(mod (- x) y)| . 1))
 (5 5 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (5 1 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (3 3 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (3 3 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (3 3 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (3 3 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (3 3 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (3 3 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 (3 3 (:REWRITE |(mod (floor x y) z)| . 5))
 (3 3 (:REWRITE |(mod (floor x y) z)| . 4))
 (3 3 (:REWRITE |(mod (floor x y) z)| . 3))
 (3 3 (:REWRITE |(mod (floor x y) z)| . 2))
 (3 3 (:REWRITE |(floor (floor x y) z)| . 5))
 (3 3 (:REWRITE |(floor (floor x y) z)| . 4))
 (3 3 (:REWRITE |(floor (floor x y) z)| . 3))
 (3 3 (:REWRITE |(floor (floor x y) z)| . 2))
 (1 1 (:REWRITE |(< x (+ c/d y))|))
 (1 1 (:REWRITE |(* c (expt d n))|))
 )
(NAT=>LENDIAN*
 (11750 134 (:REWRITE THE-FLOOR-ABOVE))
 (10959 30 (:LINEAR LINEAR-FLOOR-BOUNDS-1))
 (9990 9990 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (9990 9990 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (9990 9990 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (9669 3 (:REWRITE |(mod (floor x y) z)| . 1))
 (6990 536 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (6974 47 (:REWRITE FLOOR-ZERO . 4))
 (6914 11 (:REWRITE MOD-X-Y-=-X . 3))
 (6887 47 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (6509 11 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (6404 8 (:REWRITE ZP-OPEN))
 (6357 657 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (5687 134 (:REWRITE THE-FLOOR-BELOW))
 (5609 47 (:REWRITE FLOOR-ZERO . 3))
 (4998 47 (:REWRITE CANCEL-FLOOR-+))
 (4959 39 (:REWRITE |(+ y x)|))
 (4844 536 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (4844 536 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (3998 107 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3605 635 (:REWRITE DEFAULT-TIMES-2))
 (3369 93 (:REWRITE DEFAULT-PLUS-2))
 (3318 11 (:REWRITE CANCEL-MOD-+))
 (3177 93 (:REWRITE DEFAULT-PLUS-1))
 (3044 635 (:REWRITE DEFAULT-TIMES-1))
 (2977 55 (:REWRITE |(integerp (- x))|))
 (2924 248 (:REWRITE |(* y x)|))
 (2838 30 (:REWRITE NORMALIZE-ADDENDS))
 (2698 536 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (2698 536 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (2698 536 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (2698 536 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (2698 536 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (2698 536 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (2698 536 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (2698 536 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (2407 58 (:REWRITE |(* (- x) y)|))
 (2144 47 (:REWRITE FLOOR-=-X/Y . 2))
 (1916 47 (:REWRITE FLOOR-=-X/Y . 3))
 (1650 165 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (1650 165 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (1637 11 (:REWRITE MOD-ZERO . 3))
 (1559 47 (:REWRITE DEFAULT-FLOOR-RATIO))
 (1521 3 (:REWRITE |(floor (floor x y) z)| . 1))
 (1412 61 (:REWRITE DEFAULT-MINUS))
 (965 11 (:REWRITE DEFAULT-MOD-RATIO))
 (957 45 (:DEFINITION FIX))
 (945 33 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (944 95 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (927 927 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (927 927 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (927 927 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (927 927 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (927 927 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (927 927 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (927 927 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (927 927 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (927 927 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (908 119 (:REWRITE DEFAULT-LESS-THAN-1))
 (890 296 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (811 47 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (772 11 (:REWRITE MOD-X-Y-=-X . 4))
 (767 83 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (757 47 (:REWRITE FLOOR-ZERO . 5))
 (657 657 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (657 657 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (657 657 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (598 11 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (598 11 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (583 47 (:REWRITE FLOOR-ZERO . 2))
 (583 47 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (583 47 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (571 11 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (571 11 (:REWRITE MOD-X-Y-=-X . 2))
 (544 11 (:REWRITE MOD-ZERO . 4))
 (527 257 (:REWRITE DEFAULT-DIVIDE))
 (471 15 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 (464 47 (:REWRITE FLOOR-CANCEL-*-CONST))
 (444 3 (:REWRITE FLOOR-POSITIVE . 1))
 (433 83 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (420 12 (:REWRITE BUBBLE-DOWN-*-MATCH-3))
 (409 47 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (387 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (387 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (343 11 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (343 11 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (321 321 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-2))
 (321 321 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (316 11 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (308 11 (:REWRITE MOD-CANCEL-*-CONST))
 (276 12 (:LINEAR EXPT-X->=-X))
 (275 47 (:REWRITE DEFAULT-FLOOR-1))
 (243 15 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (239 11 (:REWRITE DEFAULT-MOD-1))
 (227 227 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (227 119 (:REWRITE DEFAULT-LESS-THAN-2))
 (203 95 (:REWRITE SIMPLIFY-SUMS-<))
 (192 15 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (168 12 (:LINEAR EXPT->=-1-ONE))
 (167 47 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (166 44 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (166 44 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (165 165 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (165 165 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (165 21 (:REWRITE |(* x x)|))
 (164 44 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (164 44 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (150 30 (:REWRITE |(/ (expt x n))|))
 (132 15 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (119 119 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (119 119 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (119 119 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (107 107 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (107 107 (:REWRITE INTEGERP-<-CONSTANT))
 (107 107 (:REWRITE CONSTANT-<-INTEGERP))
 (107 107 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (107 107 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (107 107 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (107 107 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (107 107 (:REWRITE |(< c (- x))|))
 (107 107 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (107 107 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (107 107 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (107 107 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (107 107 (:REWRITE |(< (/ x) (/ y))|))
 (107 107 (:REWRITE |(< (- x) c)|))
 (107 107 (:REWRITE |(< (- x) (- y))|))
 (104 104 (:REWRITE REDUCE-INTEGERP-+))
 (104 104 (:REWRITE INTEGERP-MINUS-X))
 (104 104 (:META META-INTEGERP-CORRECT))
 (102 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (101 47 (:REWRITE DEFAULT-FLOOR-2))
 (87 87 (:REWRITE DEFAULT-EXPT-2))
 (87 87 (:REWRITE DEFAULT-EXPT-1))
 (87 87 (:REWRITE |(expt 1/c n)|))
 (87 87 (:REWRITE |(expt (- x) n)|))
 (73 8 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (73 8 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (61 61 (:REWRITE |(- (* c x))|))
 (60 12 (:REWRITE |(expt (/ x) n)|))
 (60 12 (:REWRITE |(+ 0 x)|))
 (56 56 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (54 9 (:REWRITE BUBBLE-DOWN-*-MATCH-1))
 (48 3 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (44 44 (:REWRITE |(floor x (- y))| . 2))
 (44 44 (:REWRITE |(floor x (- y))| . 1))
 (44 44 (:REWRITE |(floor (- x) y)| . 2))
 (44 44 (:REWRITE |(floor (- x) y)| . 1))
 (38 11 (:REWRITE DEFAULT-MOD-2))
 (24 24 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (24 24 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (24 24 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (24 24 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (24 12 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (21 3 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (21 3 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (21 3 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (21 3 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (20 4 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (18 18 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (18 18 (:REWRITE |(< 0 (* x y))|))
 (15 3 (:REWRITE FLOOR-=-X/Y . 4))
 (15 3 (:REWRITE |(equal (floor (+ x y) z) x)|))
 (12 12 (:REWRITE |(<= (/ x) y) with (< x 0)|))
 (12 12 (:REWRITE |(<= (/ x) y) with (< 0 x)|))
 (12 12 (:REWRITE |(< x (/ y)) with (< y 0)|))
 (12 12 (:REWRITE |(< x (/ y)) with (< 0 y)|))
 (12 12 (:REWRITE |(+ x (- x))|))
 (12 12 (:REWRITE |(* c (* d x))|))
 (12 12 (:REWRITE |(* a (/ a))|))
 (12 12 (:LINEAR EXPT-X->-X))
 (12 12 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (12 12 (:LINEAR EXPT-LINEAR-UPPER-<))
 (12 12 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (12 12 (:LINEAR EXPT-LINEAR-LOWER-<))
 (12 12 (:LINEAR EXPT->=-1-TWO))
 (12 12 (:LINEAR EXPT->-1-TWO))
 (12 12 (:LINEAR EXPT->-1-ONE))
 (12 12 (:LINEAR EXPT-<=-1-TWO))
 (12 12 (:LINEAR EXPT-<=-1-ONE))
 (12 12 (:LINEAR EXPT-<-1-TWO))
 (12 12 (:LINEAR EXPT-<-1-ONE))
 (12 1 (:REWRITE REV-WHEN-NOT-CONSP))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (11 11 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (11 11 (:REWRITE |(< (/ x) 0)|))
 (11 11 (:REWRITE |(< (* x y) 0)|))
 (9 3 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (8 8 (:REWRITE |(mod x (- y))| . 3))
 (8 8 (:REWRITE |(mod x (- y))| . 2))
 (8 8 (:REWRITE |(mod x (- y))| . 1))
 (8 8 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (8 8 (:REWRITE |(mod (- x) y)| . 3))
 (8 8 (:REWRITE |(mod (- x) y)| . 2))
 (8 8 (:REWRITE |(mod (- x) y)| . 1))
 (8 8 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (6 6 (:REWRITE |(< 0 (/ x))|))
 (5 1 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (3 3 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (3 3 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (3 3 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (3 3 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (3 3 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (3 3 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (3 3 (:REWRITE FLOOR-ZERO . 1))
 (3 3 (:REWRITE FLOOR-POSITIVE . 4))
 (3 3 (:REWRITE FLOOR-POSITIVE . 3))
 (3 3 (:REWRITE FLOOR-POSITIVE . 2))
 (3 3 (:REWRITE |(mod (floor x y) z)| . 5))
 (3 3 (:REWRITE |(mod (floor x y) z)| . 4))
 (3 3 (:REWRITE |(mod (floor x y) z)| . 3))
 (3 3 (:REWRITE |(mod (floor x y) z)| . 2))
 (3 3 (:REWRITE |(floor (floor x y) z)| . 5))
 (3 3 (:REWRITE |(floor (floor x y) z)| . 4))
 (3 3 (:REWRITE |(floor (floor x y) z)| . 3))
 (3 3 (:REWRITE |(floor (floor x y) z)| . 2))
 (1 1 (:REWRITE |(equal x (if a b c))|))
 (1 1 (:REWRITE |(equal (if a b c) x)|))
 )
(NAT=>LENDIAN*-DOES-NOT-END-WITH-0
 (18200 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (12685 6 (:REWRITE ACL2-NUMBERP-X))
 (10813 14 (:REWRITE DEFAULT-CDR))
 (6580 6580 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (6580 6580 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (6528 6 (:REWRITE RATIONALP-X))
 (6264 6 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (6190 6 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (5829 48 (:REWRITE THE-FLOOR-BELOW))
 (5675 10 (:LINEAR LINEAR-FLOOR-BOUNDS-1))
 (5214 9 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (4738 2 (:DEFINITION ACL2-NUMBER-LISTP))
 (4366 3 (:DEFINITION RATIONAL-LISTP))
 (3663 283 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (3196 356 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (3155 3 (:DEFINITION INTEGER-LISTP))
 (2539 283 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (2494 278 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (1780 356 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (1780 356 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (1780 356 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (1415 283 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (1415 283 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (1415 283 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (1092 5 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1034 10 (:REWRITE DEFAULT-CAR))
 (1030 6 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (1028 4 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (1025 205 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (850 10 (:REWRITE FLOOR-ZERO . 3))
 (480 10 (:REWRITE CANCEL-FLOOR-+))
 (468 6 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (461 47 (:REWRITE DEFAULT-LESS-THAN-2))
 (410 10 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (390 10 (:REWRITE FLOOR-ZERO . 4))
 (260 10 (:REWRITE FLOOR-=-X/Y . 3))
 (260 10 (:REWRITE FLOOR-=-X/Y . 2))
 (232 47 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (230 47 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (209 11 (:REWRITE |(integerp (- x))|))
 (181 5 (:REWRITE FLOOR-POSITIVE . 2))
 (173 87 (:REWRITE DEFAULT-TIMES-2))
 (155 5 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (151 76 (:REWRITE DEFAULT-DIVIDE))
 (139 3 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (139 3 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (137 2 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (132 11 (:REWRITE |(* (- x) y)|))
 (130 10 (:REWRITE DEFAULT-FLOOR-RATIO))
 (130 5 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (107 47 (:REWRITE DEFAULT-LESS-THAN-1))
 (87 87 (:REWRITE DEFAULT-TIMES-1))
 (85 5 (:REWRITE FLOOR-POSITIVE . 3))
 (76 76 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (76 76 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (75 47 (:REWRITE SIMPLIFY-SUMS-<))
 (70 10 (:REWRITE FLOOR-ZERO . 2))
 (70 10 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (70 10 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (70 10 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (66 11 (:REWRITE DEFAULT-MINUS))
 (60 10 (:REWRITE FLOOR-ZERO . 5))
 (60 10 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (60 10 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (60 10 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (51 51 (:REWRITE REDUCE-INTEGERP-+))
 (51 51 (:REWRITE INTEGERP-MINUS-X))
 (51 51 (:META META-INTEGERP-CORRECT))
 (50 10 (:REWRITE FLOOR-CANCEL-*-CONST))
 (50 5 (:REWRITE |(+ y x)|))
 (50 1 (:REWRITE CANCEL-MOD-+))
 (48 48 (:REWRITE THE-FLOOR-ABOVE))
 (48 12 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (47 47 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (47 47 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (47 47 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (47 47 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (47 47 (:REWRITE INTEGERP-<-CONSTANT))
 (47 47 (:REWRITE CONSTANT-<-INTEGERP))
 (47 47 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (47 47 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (47 47 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (47 47 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (47 47 (:REWRITE |(< c (- x))|))
 (47 47 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (47 47 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (47 47 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (47 47 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (47 47 (:REWRITE |(< (/ x) (/ y))|))
 (47 47 (:REWRITE |(< (- x) c)|))
 (47 47 (:REWRITE |(< (- x) (- y))|))
 (46 2 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (44 4 (:REWRITE FLOOR-NONPOSITIVE . 1))
 (36 12 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (35 10 (:REWRITE DEFAULT-PLUS-2))
 (35 10 (:REWRITE DEFAULT-PLUS-1))
 (32 2 (:REWRITE MOD-ZERO . 3))
 (29 5 (:REWRITE FLOOR-POSITIVE . 4))
 (28 4 (:REWRITE FLOOR-NONPOSITIVE . 3))
 (28 4 (:REWRITE FLOOR-NONPOSITIVE . 2))
 (26 26 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (24 24 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (23 2 (:REWRITE DEFAULT-MOD-RATIO))
 (21 21 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (20 10 (:REWRITE DEFAULT-FLOOR-2))
 (18 3 (:REWRITE FLOOR-=-X/Y . 4))
 (18 3 (:REWRITE |(equal (floor (+ x y) z) x)|))
 (14 14 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (12 2 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (12 2 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (12 2 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (11 11 (:REWRITE |(- (* c x))|))
 (11 2 (:REWRITE MOD-ZERO . 4))
 (11 2 (:REWRITE MOD-X-Y-=-X . 4))
 (10 10 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (10 10 (:REWRITE DEFAULT-FLOOR-1))
 (10 10 (:REWRITE |(floor x (- y))| . 2))
 (10 10 (:REWRITE |(floor x (- y))| . 1))
 (10 10 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (10 10 (:REWRITE |(floor (- x) y)| . 2))
 (10 10 (:REWRITE |(floor (- x) y)| . 1))
 (10 10 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (10 2 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (9 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (8 2 (:REWRITE |(<= 1 (* x (/ y))) with (< 0 y)|))
 (8 1 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (8 1 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (7 1 (:REWRITE MOD-X-Y-=-X . 2))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (6 6 (:REWRITE REDUCE-RATIONALP-+))
 (6 6 (:REWRITE REDUCE-RATIONALP-*))
 (6 6 (:REWRITE RATIONALP-MINUS-X))
 (6 6 (:REWRITE |(< 0 (/ x))|))
 (6 6 (:REWRITE |(< 0 (* x y))|))
 (6 6 (:META META-RATIONALP-CORRECT))
 (6 2 (:REWRITE |(<= 1 (* x (/ y))) with (< y 0)|))
 (6 1 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (6 1 (:REWRITE MOD-CANCEL-*-CONST))
 (6 1 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (6 1 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (5 5 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (5 5 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (5 5 (:REWRITE NORMALIZE-ADDENDS))
 (5 5 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (5 5 (:REWRITE |(equal c (/ x))|))
 (5 5 (:REWRITE |(equal c (- x))|))
 (5 5 (:REWRITE |(equal (/ x) c)|))
 (5 5 (:REWRITE |(equal (/ x) (/ y))|))
 (5 5 (:REWRITE |(equal (- x) c)|))
 (5 5 (:REWRITE |(equal (- x) (- y))|))
 (3 3 (:REWRITE FLOOR-ZERO . 1))
 (3 2 (:REWRITE DEFAULT-MOD-2))
 (2 2 (:REWRITE DEFAULT-MOD-1))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE |(mod x (- y))| . 3))
 (1 1 (:REWRITE |(mod x (- y))| . 2))
 (1 1 (:REWRITE |(mod x (- y))| . 1))
 (1 1 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(mod (- x) y)| . 3))
 (1 1 (:REWRITE |(mod (- x) y)| . 2))
 (1 1 (:REWRITE |(mod (- x) y)| . 1))
 (1 1 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 )
(UNIV-QUANT-WIDTH)
(UNIV-QUANT-WIDTH-NECC)
(INDUCTION-SCHEME
 (598 10 (:REWRITE DEFAULT-PLUS-1))
 (596 10 (:REWRITE DEFAULT-PLUS-2))
 (589 589 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (589 589 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (589 589 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (312 24 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (216 24 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (216 24 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (216 24 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (194 2 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (120 24 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (120 24 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (120 24 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (120 24 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (120 24 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (120 24 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (120 24 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (120 24 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (120 24 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (88 2 (:REWRITE |(< (/ x) y) with (< 0 x)|))
 (86 1 (:REWRITE FLOOR-ZERO . 3))
 (82 2 (:REWRITE |(<= x (/ y)) with (< 0 y)|))
 (48 1 (:REWRITE CANCEL-FLOOR-+))
 (46 19 (:REWRITE DEFAULT-TIMES-2))
 (41 1 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (39 1 (:REWRITE FLOOR-ZERO . 4))
 (32 15 (:REWRITE DEFAULT-LESS-THAN-1))
 (31 12 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (26 1 (:REWRITE FLOOR-=-X/Y . 3))
 (26 1 (:REWRITE FLOOR-=-X/Y . 2))
 (23 15 (:REWRITE DEFAULT-LESS-THAN-2))
 (21 19 (:REWRITE DEFAULT-TIMES-1))
 (20 10 (:REWRITE DEFAULT-DIVIDE))
 (19 1 (:REWRITE |(integerp (- x))|))
 (18 14 (:REWRITE |(< (/ x) (/ y))|))
 (17 17 (:REWRITE THE-FLOOR-BELOW))
 (15 15 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (15 15 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (15 15 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (14 14 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (14 14 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (14 14 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (14 14 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (14 14 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (14 14 (:REWRITE |(< (- x) (- y))|))
 (14 12 (:REWRITE SIMPLIFY-SUMS-<))
 (13 13 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (13 13 (:REWRITE INTEGERP-<-CONSTANT))
 (13 13 (:REWRITE CONSTANT-<-INTEGERP))
 (13 13 (:REWRITE |(< c (- x))|))
 (13 13 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (13 13 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (13 13 (:REWRITE |(< (- x) c)|))
 (13 1 (:REWRITE DEFAULT-FLOOR-RATIO))
 (12 1 (:REWRITE |(* (- x) y)|))
 (9 9 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (9 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (8 8 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (8 8 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (8 4 (:REWRITE |(* 1 x)|))
 (7 1 (:REWRITE FLOOR-ZERO . 2))
 (7 1 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (7 1 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (7 1 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (6 2 (:REWRITE |(<= x (/ y)) with (< y 0)|))
 (6 2 (:REWRITE |(< (/ x) y) with (< x 0)|))
 (6 1 (:REWRITE FLOOR-ZERO . 5))
 (6 1 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (6 1 (:REWRITE FLOOR-CANCEL-*-CONST))
 (6 1 (:REWRITE DEFAULT-MINUS))
 (6 1 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (6 1 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (4 1 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (3 3 (:REWRITE ZP-OPEN))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:META META-INTEGERP-CORRECT))
 (3 2 (:REWRITE |(< (/ x) 0)|))
 (3 1 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 1 (:REWRITE DEFAULT-FLOOR-2))
 (1 1 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (1 1 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (1 1 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (1 1 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-FLOOR-1))
 (1 1 (:REWRITE |(floor x (- y))| . 2))
 (1 1 (:REWRITE |(floor x (- y))| . 1))
 (1 1 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor (- x) y)| . 2))
 (1 1 (:REWRITE |(floor (- x) y)| . 1))
 (1 1 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(<= (/ x) y) with (< x 0)|))
 (1 1 (:REWRITE |(<= (/ x) y) with (< 0 x)|))
 (1 1 (:REWRITE |(< x (/ y)) with (< y 0)|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (1 1 (:REWRITE |(< (* x (/ y)) 0) rationalp (* x (/ y))|))
 (1 1 (:REWRITE |(- (* c x))|))
 )
(PROVE-THE-BASE-CASE
 (18 2 (:REWRITE ACL2-NUMBERP-X))
 (13 4 (:REWRITE DEFAULT-LESS-THAN-2))
 (12 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (12 3 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (8 2 (:REWRITE RATIONALP-X))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (4 4 (:REWRITE THE-FLOOR-BELOW))
 (4 4 (:REWRITE THE-FLOOR-ABOVE))
 (3 3 (:REWRITE SIMPLIFY-SUMS-<))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (3 3 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (3 3 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE INTEGERP-<-CONSTANT))
 (3 3 (:REWRITE CONSTANT-<-INTEGERP))
 (3 3 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (3 3 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (3 3 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (3 3 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (3 3 (:REWRITE |(< c (- x))|))
 (3 3 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (3 3 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (3 3 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (3 3 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (3 3 (:REWRITE |(< (/ x) (/ y))|))
 (3 3 (:REWRITE |(< (- x) c)|))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE REDUCE-RATIONALP-+))
 (2 2 (:REWRITE REDUCE-RATIONALP-*))
 (2 2 (:REWRITE RATIONALP-MINUS-X))
 (2 2 (:REWRITE |(< (/ x) 0)|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:META META-RATIONALP-CORRECT))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE DEFAULT-EXPT-2))
 (1 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 )
(ARITHMETIC-LEMMA
 (1298 4 (:LINEAR LINEAR-FLOOR-BOUNDS-1))
 (760 2 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (651 93 (:REWRITE DEFAULT-TIMES-2))
 (609 609 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (609 609 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (609 609 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (483 7 (:REWRITE DEFAULT-FLOOR-RATIO))
 (403 93 (:REWRITE DEFAULT-TIMES-1))
 (335 27 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (304 304 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (304 304 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (304 304 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (304 304 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (304 304 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (235 27 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (235 27 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (235 27 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (190 2 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (135 27 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (135 27 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (135 27 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (135 27 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (135 27 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (135 27 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (135 27 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (135 27 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (135 27 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (70 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (70 7 (:REWRITE DEFAULT-FLOOR-1))
 (58 40 (:REWRITE DEFAULT-PLUS-2))
 (58 40 (:REWRITE DEFAULT-PLUS-1))
 (42 1 (:LINEAR EXPT-<=-1-TWO))
 (40 1 (:LINEAR EXPT-X->=-X))
 (34 34 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (34 34 (:REWRITE NORMALIZE-ADDENDS))
 (34 34 (:REWRITE DEFAULT-EXPT-2))
 (34 34 (:REWRITE DEFAULT-EXPT-1))
 (34 34 (:REWRITE |(expt 1/c n)|))
 (34 34 (:REWRITE |(expt (- x) n)|))
 (31 31 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (31 31 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (31 31 (:REWRITE DEFAULT-DIVIDE))
 (31 31 (:REWRITE |(* (/ c) (expt d n))|))
 (28 2 (:REWRITE |(+ y x)|))
 (27 1 (:LINEAR EXPT->=-1-TWO))
 (27 1 (:LINEAR EXPT-<=-1-ONE))
 (26 1 (:LINEAR EXPT-X->-X))
 (26 1 (:LINEAR EXPT->-1-ONE))
 (26 1 (:LINEAR EXPT-<-1-TWO))
 (14 1 (:LINEAR EXPT->=-1-ONE))
 (10 2 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (9 9 (:REWRITE THE-FLOOR-BELOW))
 (9 9 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE DEFAULT-LESS-THAN-2))
 (9 9 (:REWRITE DEFAULT-LESS-THAN-1))
 (8 2 (:REWRITE |(+ c (+ d x))|))
 (7 7 (:REWRITE SIMPLIFY-SUMS-<))
 (7 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (7 7 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (7 7 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (7 7 (:REWRITE INTEGERP-<-CONSTANT))
 (7 7 (:REWRITE DEFAULT-FLOOR-2))
 (7 7 (:REWRITE CONSTANT-<-INTEGERP))
 (7 7 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (7 7 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (7 7 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (7 7 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (7 7 (:REWRITE |(< c (- x))|))
 (7 7 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (7 7 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (7 7 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (7 7 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (7 7 (:REWRITE |(< (/ x) (/ y))|))
 (7 7 (:REWRITE |(< (- x) c)|))
 (7 7 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (2 2 (:REWRITE ZP-OPEN))
 (2 2 (:REWRITE |(< x (+ c/d y))|))
 (2 2 (:REWRITE |(+ 0 x)|))
 (2 2 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (2 2 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (2 2 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (2 2 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (1 1 (:LINEAR EXPT-LINEAR-UPPER-<))
 (1 1 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (1 1 (:LINEAR EXPT-LINEAR-LOWER-<))
 (1 1 (:LINEAR EXPT->-1-TWO))
 (1 1 (:LINEAR EXPT-<-1-ONE))
 )
(PROVE-THE-INDUCTION-STEP
 (91327 91327 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (91327 91327 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (91327 91327 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (88151 1633 (:REWRITE THE-FLOOR-BELOW))
 (77229 24 (:REWRITE |(mod (floor x y) z)| . 1))
 (62213 4817 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (58603 446 (:REWRITE FLOOR-ZERO . 4))
 (57909 446 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (54597 69 (:REWRITE MOD-X-Y-=-X . 3))
 (52584 6509 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (51304 69 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (43205 4817 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (43205 4817 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (42975 444 (:REWRITE CANCEL-FLOOR-+))
 (30733 6192 (:REWRITE DEFAULT-TIMES-2))
 (29645 15 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (27934 953 (:REWRITE DEFAULT-PLUS-1))
 (26059 6192 (:REWRITE DEFAULT-TIMES-1))
 (25904 69 (:REWRITE CANCEL-MOD-+))
 (24644 489 (:REWRITE |(integerp (- x))|))
 (24197 4817 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (24197 4817 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (24197 4817 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (24197 4817 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (24197 4817 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (24197 4817 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (24197 4817 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (24197 4817 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (20051 513 (:REWRITE |(* (- x) y)|))
 (19383 446 (:REWRITE FLOOR-=-X/Y . 2))
 (13653 448 (:REWRITE DEFAULT-FLOOR-RATIO))
 (13200 1320 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (13200 1320 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (13095 69 (:REWRITE MOD-ZERO . 3))
 (12168 24 (:REWRITE |(floor (floor x y) z)| . 1))
 (11831 1331 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (11475 537 (:REWRITE DEFAULT-MINUS))
 (10165 1260 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (8330 293 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (8256 8256 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (8256 8256 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (8256 8256 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (8256 8256 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (8256 8256 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (7522 69 (:REWRITE DEFAULT-MOD-RATIO))
 (7250 446 (:REWRITE FLOOR-ZERO . 5))
 (6940 446 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (6880 69 (:REWRITE MOD-X-Y-=-X . 4))
 (6767 1331 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (6509 6509 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (6509 6509 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (6509 6509 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (5350 58 (:REWRITE FLOOR-POSITIVE . 1))
 (5061 446 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (5061 446 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (5051 444 (:REWRITE FLOOR-ZERO . 2))
 (4893 69 (:REWRITE MOD-ZERO . 4))
 (4727 69 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (4727 69 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (4717 2557 (:REWRITE DEFAULT-DIVIDE))
 (4624 1493 (:REWRITE DEFAULT-LESS-THAN-2))
 (4511 69 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (4511 69 (:REWRITE MOD-X-Y-=-X . 2))
 (4432 53 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4432 53 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4111 444 (:REWRITE FLOOR-CANCEL-*-CONST))
 (3953 217 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 (3725 25 (:REWRITE DEFAULT-CDR))
 (3360 96 (:REWRITE BUBBLE-DOWN-*-MATCH-3))
 (2668 69 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (2668 69 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (2568 2568 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-2))
 (2568 2568 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (2457 119 (:LINEAR EXPT-X->=-X))
 (2452 69 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (2452 69 (:REWRITE MOD-CANCEL-*-CONST))
 (2424 1260 (:REWRITE SIMPLIFY-SUMS-<))
 (2380 148 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (2345 448 (:REWRITE DEFAULT-FLOOR-1))
 (2315 2315 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (2060 217 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (1912 69 (:REWRITE DEFAULT-MOD-1))
 (1788 148 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (1688 1482 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1618 442 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1594 418 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (1594 418 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (1484 1482 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1484 1482 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1448 418 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (1434 418 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (1375 1374 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1374 1374 (:REWRITE INTEGERP-<-CONSTANT))
 (1374 1374 (:REWRITE CONSTANT-<-INTEGERP))
 (1374 1374 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1374 1374 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1374 1374 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1374 1374 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1374 1374 (:REWRITE |(< c (- x))|))
 (1374 1374 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1374 1374 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1374 1374 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1374 1374 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1374 1374 (:REWRITE |(< (/ x) (/ y))|))
 (1374 1374 (:REWRITE |(< (- x) c)|))
 (1374 1374 (:REWRITE |(< (- x) (- y))|))
 (1320 1320 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (1320 1320 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (1320 168 (:REWRITE |(* x x)|))
 (1200 240 (:REWRITE |(/ (expt x n))|))
 (1149 1149 (:REWRITE REDUCE-INTEGERP-+))
 (1149 1149 (:REWRITE INTEGERP-MINUS-X))
 (1149 1149 (:META META-INTEGERP-CORRECT))
 (1082 101 (:REWRITE |(< x (/ y)) with (< 0 y)|))
 (985 101 (:REWRITE |(<= (/ x) y) with (< 0 x)|))
 (880 448 (:REWRITE DEFAULT-FLOOR-2))
 (825 59 (:REWRITE FLOOR-POSITIVE . 2))
 (758 758 (:REWRITE DEFAULT-EXPT-1))
 (756 756 (:REWRITE |(expt 1/c n)|))
 (756 756 (:REWRITE |(expt (- x) n)|))
 (532 532 (:REWRITE |(- (* c x))|))
 (489 45 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (489 45 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (480 96 (:REWRITE |(expt (/ x) n)|))
 (465 93 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (418 418 (:REWRITE |(floor x (- y))| . 2))
 (418 418 (:REWRITE |(floor x (- y))| . 1))
 (418 418 (:REWRITE |(floor (- x) y)| . 2))
 (418 418 (:REWRITE |(floor (- x) y)| . 1))
 (397 59 (:REWRITE FLOOR-POSITIVE . 3))
 (384 24 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (368 238 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (313 238 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (301 119 (:LINEAR EXPT->=-1-TWO))
 (301 119 (:LINEAR EXPT-<=-1-ONE))
 (294 119 (:LINEAR EXPT-X->-X))
 (294 119 (:LINEAR EXPT->-1-ONE))
 (294 119 (:LINEAR EXPT-<-1-TWO))
 (285 69 (:REWRITE DEFAULT-MOD-2))
 (244 244 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (238 238 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (233 17 (:REWRITE |(integerp (expt x n))|))
 (230 46 (:REWRITE |(equal (floor (+ x y) z) x)|))
 (218 218 (:REWRITE |(< 0 (* x y))|))
 (198 22 (:REWRITE FLOOR-NONPOSITIVE . 1))
 (196 101 (:REWRITE |(<= (/ x) y) with (< x 0)|))
 (196 101 (:REWRITE |(< x (/ y)) with (< y 0)|))
 (168 24 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (168 24 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (168 24 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (168 24 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (151 59 (:REWRITE FLOOR-POSITIVE . 4))
 (134 134 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (134 134 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (134 134 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (122 18 (:REWRITE ACL2-NUMBERP-X))
 (121 121 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (121 121 (:LINEAR EXPT-LINEAR-UPPER-<))
 (121 121 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (121 121 (:LINEAR EXPT-LINEAR-LOWER-<))
 (119 119 (:LINEAR EXPT->-1-TWO))
 (119 119 (:LINEAR EXPT-<-1-ONE))
 (116 116 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (116 116 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (116 116 (:REWRITE |(< 0 (/ x))|))
 (110 22 (:REWRITE FLOOR-NONPOSITIVE . 3))
 (110 22 (:REWRITE FLOOR-NONPOSITIVE . 2))
 (104 104 (:REWRITE |(< (* x y) 0)|))
 (103 103 (:REWRITE |(< (/ x) 0)|))
 (96 96 (:REWRITE |(* c (* d x))|))
 (92 92 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (92 92 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (81 55 (:REWRITE |(equal (/ x) c)|))
 (72 24 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (69 69 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (65 13 (:REWRITE |(<= 1 (* (/ x) y)) with (< 0 x)|))
 (65 1 (:REWRITE |(* (if a b c) x)|))
 (64 2 (:REWRITE |(floor x 1)|))
 (55 55 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (55 55 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (55 55 (:REWRITE |(equal c (/ x))|))
 (55 55 (:REWRITE |(equal (/ x) (/ y))|))
 (55 55 (:REWRITE |(equal (- x) (- y))|))
 (53 53 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (53 53 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (53 53 (:REWRITE |(equal c (- x))|))
 (53 53 (:REWRITE |(equal (- x) c)|))
 (46 46 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (46 46 (:REWRITE FLOOR-ZERO . 1))
 (45 45 (:REWRITE |(mod x (- y))| . 3))
 (45 45 (:REWRITE |(mod x (- y))| . 2))
 (45 45 (:REWRITE |(mod x (- y))| . 1))
 (45 45 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (45 45 (:REWRITE |(mod (- x) y)| . 3))
 (45 45 (:REWRITE |(mod (- x) y)| . 2))
 (45 45 (:REWRITE |(mod (- x) y)| . 1))
 (45 45 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (40 16 (:REWRITE RATIONALP-X))
 (32 2 (:REWRITE |(equal x (/ y))|))
 (26 1 (:REWRITE |(floor (+ 1 x) y)|))
 (24 24 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (24 24 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (24 24 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (24 24 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (24 24 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (24 24 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 (24 24 (:REWRITE |(mod (floor x y) z)| . 5))
 (24 24 (:REWRITE |(mod (floor x y) z)| . 4))
 (24 24 (:REWRITE |(mod (floor x y) z)| . 3))
 (24 24 (:REWRITE |(mod (floor x y) z)| . 2))
 (24 24 (:REWRITE |(floor (floor x y) z)| . 5))
 (24 24 (:REWRITE |(floor (floor x y) z)| . 4))
 (24 24 (:REWRITE |(floor (floor x y) z)| . 3))
 (24 24 (:REWRITE |(floor (floor x y) z)| . 2))
 (21 21 (:REWRITE |(< x (+ c/d y))|))
 (20 20 (:REWRITE |(* (/ c) (expt d n))|))
 (16 16 (:REWRITE REDUCE-RATIONALP-+))
 (16 16 (:REWRITE REDUCE-RATIONALP-*))
 (16 16 (:REWRITE RATIONALP-MINUS-X))
 (16 16 (:REWRITE |(< y (+ (- c) x))|))
 (16 16 (:META META-RATIONALP-CORRECT))
 (13 13 (:REWRITE |(<= 1 (* (/ x) y)) with (< x 0)|))
 (5 5 (:REWRITE |(< (+ c/d x) y)|))
 (5 1 (:REWRITE |(equal (expt x n) 1)|))
 (4 4 (:TYPE-PRESCRIPTION ABS))
 (3 3 (:REWRITE |(< 0 (* x y)) rationalp (* x y)|))
 (2 2 (:REWRITE EXPT-X->=-X))
 (2 2 (:REWRITE |(/ (/ x))|))
 (2 2 (:REWRITE |(* c (expt d n))|))
 (2 1 (:REWRITE |(* -1 x)|))
 (1 1 (:REWRITE |(< (/ x) y) with (< x 0)|))
 (1 1 (:REWRITE |(< (/ x) y) with (< 0 x)|))
 )
(PROVE-THE-VARIANT
 (5559 114 (:REWRITE PROVE-THE-BASE-CASE))
 (2490 1152 (:REWRITE DEFAULT-LESS-THAN-2))
 (1470 1470 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (1470 1470 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (1470 1470 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (1470 1470 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (1470 1470 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (1470 1470 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (1210 82 (:REWRITE NATP-RW))
 (1121 1121 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (1121 1121 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (1121 1121 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (1093 1093 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1093 1093 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1093 1093 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1093 1093 (:REWRITE INTEGERP-<-CONSTANT))
 (1093 1093 (:REWRITE CONSTANT-<-INTEGERP))
 (1093 1093 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1093 1093 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1093 1093 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1093 1093 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1093 1093 (:REWRITE |(< c (- x))|))
 (1093 1093 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1093 1093 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1093 1093 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1093 1093 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1093 1093 (:REWRITE |(< (/ x) (/ y))|))
 (1093 1093 (:REWRITE |(< (- x) c)|))
 (1093 1093 (:REWRITE |(< (- x) (- y))|))
 (746 746 (:REWRITE |(< 0 (/ x))|))
 (746 746 (:REWRITE |(< 0 (* x y))|))
 (308 102 (:REWRITE DEFAULT-CDR))
 (240 240 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (240 240 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (240 240 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (208 208 (:REWRITE |(< (/ x) 0)|))
 (208 208 (:REWRITE |(< (* x y) 0)|))
 (206 103 (:REWRITE DEFAULT-PLUS-2))
 (105 105 (:REWRITE REDUCE-INTEGERP-+))
 (105 105 (:REWRITE INTEGERP-MINUS-X))
 (105 105 (:META META-INTEGERP-CORRECT))
 (103 103 (:REWRITE DEFAULT-PLUS-1))
 (55 55 (:REWRITE DEFAULT-EXPT-2))
 (55 55 (:REWRITE DEFAULT-EXPT-1))
 (55 55 (:REWRITE |(expt 1/c n)|))
 (55 55 (:REWRITE |(expt (- x) n)|))
 (22 1 (:LINEAR EXPT-<=-1-TWO))
 (21 2 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (20 2 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (20 1 (:LINEAR EXPT-X->=-X))
 (20 1 (:LINEAR EXPT-X->-X))
 (20 1 (:LINEAR EXPT->=-1-TWO))
 (20 1 (:LINEAR EXPT->-1-ONE))
 (20 1 (:LINEAR EXPT-<=-1-ONE))
 (20 1 (:LINEAR EXPT-<-1-TWO))
 (14 1 (:LINEAR EXPT->=-1-ONE))
 (2 2 (:REWRITE |(< y (+ (- c) x))|))
 (2 2 (:REWRITE |(< x (+ c/d y))|))
 (2 2 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (2 2 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (1 1 (:REWRITE |(expt x 0)|))
 (1 1 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (1 1 (:LINEAR EXPT-LINEAR-UPPER-<))
 (1 1 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (1 1 (:LINEAR EXPT-LINEAR-LOWER-<))
 (1 1 (:LINEAR EXPT->-1-TWO))
 (1 1 (:LINEAR EXPT-<-1-ONE))
 )
(LEN-OF-NAT=>LENDIAN*-LEQ-WIDTH
 (505 1 (:DEFINITION NAT=>LENDIAN*))
 (72 1 (:REWRITE FLOOR-ZERO . 3))
 (42 1 (:REWRITE CANCEL-MOD-+))
 (42 1 (:REWRITE CANCEL-FLOOR-+))
 (34 34 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (34 34 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (34 34 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (34 34 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (34 34 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (34 34 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (33 10 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (32 32 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B))
 (32 32 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (32 32 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (32 32 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (32 8 (:REWRITE |(* y x)|))
 (32 2 (:REWRITE |(integerp (- x))|))
 (31 1 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (31 1 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (30 1 (:REWRITE MOD-X-Y-=-X . 3))
 (30 1 (:REWRITE FLOOR-ZERO . 4))
 (29 10 (:REWRITE SIMPLIFY-SUMS-<))
 (29 10 (:REWRITE DEFAULT-LESS-THAN-2))
 (26 2 (:REWRITE |(* (- x) y)|))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (24 10 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (24 1 (:REWRITE MOD-ZERO . 3))
 (24 1 (:REWRITE FLOOR-=-X/Y . 3))
 (24 1 (:REWRITE FLOOR-=-X/Y . 2))
 (18 18 (:REWRITE DEFAULT-TIMES-2))
 (18 18 (:REWRITE DEFAULT-TIMES-1))
 (15 1 (:DEFINITION LEN))
 (14 10 (:REWRITE DEFAULT-LESS-THAN-1))
 (13 1 (:REWRITE DEFAULT-MOD-RATIO))
 (13 1 (:REWRITE DEFAULT-FLOOR-RATIO))
 (10 10 (:REWRITE THE-FLOOR-BELOW))
 (10 10 (:REWRITE THE-FLOOR-ABOVE))
 (10 10 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (10 10 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (10 10 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (10 10 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (10 10 (:REWRITE INTEGERP-<-CONSTANT))
 (10 10 (:REWRITE CONSTANT-<-INTEGERP))
 (10 10 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (10 10 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (10 10 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (10 10 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (10 10 (:REWRITE |(< c (- x))|))
 (10 10 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (10 10 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (10 10 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (10 10 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (10 10 (:REWRITE |(< (/ x) (/ y))|))
 (10 10 (:REWRITE |(< (- x) c)|))
 (10 10 (:REWRITE |(< (- x) (- y))|))
 (10 2 (:REWRITE DEFAULT-MINUS))
 (8 8 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (8 8 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (8 8 (:REWRITE DEFAULT-DIVIDE))
 (7 7 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (7 7 (:REWRITE REDUCE-INTEGERP-+))
 (7 7 (:REWRITE INTEGERP-MINUS-X))
 (7 7 (:META META-INTEGERP-CORRECT))
 (5 1 (:REWRITE MOD-ZERO . 4))
 (5 1 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (5 1 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (5 1 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (5 1 (:REWRITE MOD-X-Y-=-X . 4))
 (5 1 (:REWRITE MOD-X-Y-=-X . 2))
 (5 1 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (5 1 (:REWRITE MOD-CANCEL-*-CONST))
 (5 1 (:REWRITE FLOOR-ZERO . 5))
 (5 1 (:REWRITE FLOOR-ZERO . 2))
 (5 1 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (5 1 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (5 1 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (5 1 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (5 1 (:REWRITE FLOOR-CANCEL-*-CONST))
 (5 1 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (5 1 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (5 1 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (5 1 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (5 1 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (5 1 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (3 2 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (3 1 (:REWRITE DEFAULT-CDR))
 (3 1 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (2 2 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (2 2 (:TYPE-PRESCRIPTION NAT=>LENDIAN*))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (2 2 (:REWRITE ZP-OPEN))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE DEFAULT-EXPT-2))
 (2 2 (:REWRITE DEFAULT-EXPT-1))
 (2 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (2 2 (:REWRITE |(< (/ x) 0)|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:REWRITE |(- (* c x))|))
 (2 1 (:REWRITE DEFAULT-PLUS-2))
 (1 1 (:TYPE-PRESCRIPTION ZP))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE DEFAULT-PLUS-1))
 (1 1 (:REWRITE DEFAULT-MOD-2))
 (1 1 (:REWRITE DEFAULT-MOD-1))
 (1 1 (:REWRITE DEFAULT-FLOOR-2))
 (1 1 (:REWRITE DEFAULT-FLOOR-1))
 (1 1 (:REWRITE |(mod x (- y))| . 3))
 (1 1 (:REWRITE |(mod x (- y))| . 2))
 (1 1 (:REWRITE |(mod x (- y))| . 1))
 (1 1 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(mod (- x) y)| . 3))
 (1 1 (:REWRITE |(mod (- x) y)| . 2))
 (1 1 (:REWRITE |(mod (- x) y)| . 1))
 (1 1 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor x (- y))| . 2))
 (1 1 (:REWRITE |(floor x (- y))| . 1))
 (1 1 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor (- x) y)| . 2))
 (1 1 (:REWRITE |(floor (- x) y)| . 1))
 (1 1 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (1 1 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 )
(NAT=>LENDIAN*-OF-DIGIT-+-BASE-*-NAT
 (244 3 (:REWRITE FLOOR-ZERO . 3))
 (192 6 (:REWRITE |(* x (+ y z))|))
 (150 110 (:REWRITE DEFAULT-TIMES-2))
 (129 4 (:REWRITE MOD-ZERO . 3))
 (129 4 (:REWRITE FLOOR-=-X/Y . 3))
 (129 4 (:REWRITE FLOOR-=-X/Y . 2))
 (110 110 (:REWRITE DEFAULT-TIMES-1))
 (105 105 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (105 105 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (105 105 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (105 105 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (103 103 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B))
 (103 103 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (103 103 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (103 103 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (100 4 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (100 4 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (84 4 (:REWRITE DEFAULT-MOD-RATIO))
 (84 4 (:REWRITE DEFAULT-FLOOR-RATIO))
 (66 6 (:REWRITE |(* y (* x z))|))
 (54 28 (:REWRITE DEFAULT-PLUS-1))
 (52 28 (:REWRITE DEFAULT-PLUS-2))
 (50 4 (:REWRITE MOD-X-Y-=-X . 4))
 (50 4 (:REWRITE FLOOR-ZERO . 5))
 (47 47 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (35 23 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (35 23 (:REWRITE DEFAULT-LESS-THAN-1))
 (35 11 (:REWRITE DEFAULT-MINUS))
 (33 33 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (33 33 (:REWRITE DEFAULT-DIVIDE))
 (33 4 (:REWRITE MOD-ZERO . 4))
 (31 23 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (26 1 (:REWRITE |(floor (+ x r) i)|))
 (23 23 (:REWRITE THE-FLOOR-BELOW))
 (23 23 (:REWRITE THE-FLOOR-ABOVE))
 (23 23 (:REWRITE SIMPLIFY-SUMS-<))
 (23 23 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (23 23 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (23 23 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (23 23 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (23 23 (:REWRITE INTEGERP-<-CONSTANT))
 (23 23 (:REWRITE DEFAULT-LESS-THAN-2))
 (23 23 (:REWRITE CONSTANT-<-INTEGERP))
 (23 23 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (23 23 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (23 23 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (23 23 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (23 23 (:REWRITE |(< c (- x))|))
 (23 23 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (23 23 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (23 23 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (23 23 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (23 23 (:REWRITE |(< (/ x) (/ y))|))
 (23 23 (:REWRITE |(< (- x) c)|))
 (23 23 (:REWRITE |(< (- x) (- y))|))
 (20 20 (:REWRITE REDUCE-INTEGERP-+))
 (20 20 (:REWRITE INTEGERP-MINUS-X))
 (20 20 (:META META-INTEGERP-CORRECT))
 (20 4 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (20 4 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (20 4 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (20 4 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (20 4 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (20 4 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (15 3 (:REWRITE MOD-X-Y-=-X . 2))
 (15 3 (:REWRITE FLOOR-ZERO . 2))
 (15 3 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (15 3 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (13 13 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (10 2 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (10 2 (:REWRITE MOD-CANCEL-*-CONST))
 (10 2 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (10 2 (:REWRITE FLOOR-CANCEL-*-CONST))
 (10 2 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (10 2 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (10 2 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (10 2 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (8 8 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE |(- (* c x))|))
 (5 5 (:REWRITE |(< (+ c/d x) y)|))
 (5 5 (:REWRITE |(< (+ (- c) x) y)|))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (4 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE DEFAULT-MOD-2))
 (4 4 (:REWRITE DEFAULT-MOD-1))
 (4 4 (:REWRITE DEFAULT-FLOOR-2))
 (4 4 (:REWRITE DEFAULT-FLOOR-1))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE |(< 0 (/ x))|))
 (4 4 (:REWRITE |(< 0 (* x y))|))
 (4 2 (:REWRITE DEFAULT-CDR))
 (4 2 (:REWRITE DEFAULT-CAR))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (3 3 (:REWRITE INTEGERP-+-REDUCE-CONSTANT))
 (2 2 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE |(mod x (- y))| . 3))
 (2 2 (:REWRITE |(mod x (- y))| . 2))
 (2 2 (:REWRITE |(mod x (- y))| . 1))
 (2 2 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(mod (- x) y)| . 3))
 (2 2 (:REWRITE |(mod (- x) y)| . 2))
 (2 2 (:REWRITE |(mod (- x) y)| . 1))
 (2 2 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor x (- y))| . 2))
 (2 2 (:REWRITE |(floor x (- y))| . 1))
 (2 2 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (- x) y)| . 2))
 (2 2 (:REWRITE |(floor (- x) y)| . 1))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(< y (+ (- c) x))|))
 (2 2 (:REWRITE |(< x (+ c/d y))|))
 (2 2 (:REWRITE |(< (/ x) 0)|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (2 2 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 )
(NAT=>LENDIAN*-OF-DAB-BASE-FIX-BASE
 (4534 4534 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (4534 4534 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (4534 4534 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (4091 49 (:REWRITE THE-FLOOR-ABOVE))
 (4039 10 (:LINEAR LINEAR-FLOOR-BOUNDS-1))
 (3460 1 (:REWRITE |(mod (floor x y) z)| . 1))
 (2944 229 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (2543 16 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (2542 16 (:REWRITE FLOOR-ZERO . 4))
 (2503 4 (:REWRITE MOD-X-Y-=-X . 3))
 (2373 4 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (2303 3 (:REWRITE ZP-OPEN))
 (2058 16 (:REWRITE FLOOR-ZERO . 3))
 (2047 229 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (2047 229 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (2040 49 (:REWRITE THE-FLOOR-BELOW))
 (1975 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (1788 16 (:REWRITE CANCEL-FLOOR-+))
 (1686 13 (:REWRITE |(+ y x)|))
 (1470 40 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1300 150 (:REWRITE DEFAULT-TIMES-2))
 (1170 4 (:REWRITE CANCEL-MOD-+))
 (1166 31 (:REWRITE DEFAULT-PLUS-2))
 (1150 229 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (1150 229 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (1150 229 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (1150 229 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (1150 229 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (1150 229 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (1150 229 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (1150 229 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (1066 19 (:REWRITE |(integerp (- x))|))
 (1017 31 (:REWRITE DEFAULT-PLUS-1))
 (963 150 (:REWRITE DEFAULT-TIMES-1))
 (958 10 (:REWRITE NORMALIZE-ADDENDS))
 (813 20 (:REWRITE |(* (- x) y)|))
 (762 16 (:REWRITE FLOOR-=-X/Y . 2))
 (696 78 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (688 12 (:REWRITE |(* y x)|))
 (683 16 (:REWRITE FLOOR-=-X/Y . 3))
 (594 4 (:REWRITE MOD-ZERO . 3))
 (553 1 (:REWRITE |(floor (floor x y) z)| . 1))
 (550 55 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (550 55 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (538 16 (:REWRITE DEFAULT-FLOOR-RATIO))
 (517 21 (:REWRITE DEFAULT-MINUS))
 (445 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (399 78 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (354 36 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (337 4 (:REWRITE DEFAULT-MOD-RATIO))
 (334 15 (:DEFINITION FIX))
 (328 44 (:REWRITE DEFAULT-LESS-THAN-1))
 (326 11 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (302 16 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (293 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (293 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (270 90 (:REWRITE DEFAULT-DIVIDE))
 (268 16 (:REWRITE FLOOR-ZERO . 5))
 (266 4 (:REWRITE MOD-X-Y-=-X . 4))
 (225 103 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (225 16 (:REWRITE FLOOR-ZERO . 2))
 (225 16 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (225 16 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (215 4 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (215 4 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (214 107 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-2))
 (202 4 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (202 4 (:REWRITE MOD-X-Y-=-X . 2))
 (197 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (189 4 (:REWRITE MOD-ZERO . 4))
 (174 16 (:REWRITE FLOOR-CANCEL-*-CONST))
 (168 1 (:REWRITE FLOOR-POSITIVE . 1))
 (158 1 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 (156 4 (:REWRITE |(* y (* x z))|))
 (141 16 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (125 4 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (125 4 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (118 4 (:LINEAR EXPT-X->=-X))
 (112 4 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (112 4 (:REWRITE MOD-CANCEL-*-CONST))
 (110 55 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (110 44 (:REWRITE DEFAULT-LESS-THAN-2))
 (107 107 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (93 16 (:REWRITE DEFAULT-FLOOR-1))
 (92 36 (:REWRITE SIMPLIFY-SUMS-<))
 (81 4 (:REWRITE DEFAULT-MOD-1))
 (80 80 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (80 1 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (75 5 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (73 7 (:REWRITE BUBBLE-DOWN-*-MATCH-1))
 (72 4 (:LINEAR EXPT->=-1-ONE))
 (66 16 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (66 7 (:REWRITE |(* x x)|))
 (65 15 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (65 15 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (60 10 (:REWRITE |(/ (expt x n))|))
 (59 15 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (59 15 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (58 29 (:REWRITE DEFAULT-EXPT-1))
 (55 55 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (50 16 (:REWRITE DEFAULT-FLOOR-2))
 (50 5 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (44 44 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (44 44 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (44 44 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (40 40 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (40 40 (:REWRITE INTEGERP-<-CONSTANT))
 (40 40 (:REWRITE CONSTANT-<-INTEGERP))
 (40 40 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (40 40 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (40 40 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (40 40 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (40 40 (:REWRITE |(< c (- x))|))
 (40 40 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (40 40 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (40 40 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (40 40 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (40 40 (:REWRITE |(< (/ x) (/ y))|))
 (40 40 (:REWRITE |(< (- x) c)|))
 (40 40 (:REWRITE |(< (- x) (- y))|))
 (38 38 (:REWRITE REDUCE-INTEGERP-+))
 (38 38 (:REWRITE INTEGERP-MINUS-X))
 (38 38 (:META META-INTEGERP-CORRECT))
 (30 6 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (30 3 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (30 3 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (29 29 (:REWRITE DEFAULT-EXPT-2))
 (29 29 (:REWRITE |(expt 1/c n)|))
 (29 29 (:REWRITE |(expt (- x) n)|))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (24 4 (:REWRITE |(expt (/ x) n)|))
 (24 4 (:REWRITE |(+ 0 x)|))
 (21 21 (:REWRITE |(- (* c x))|))
 (20 20 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (19 5 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (18 1 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (17 4 (:REWRITE DEFAULT-MOD-2))
 (16 4 (:REWRITE |(<= (/ x) y) with (< 0 x)|))
 (16 4 (:REWRITE |(< x (/ y)) with (< 0 y)|))
 (15 15 (:REWRITE |(floor x (- y))| . 2))
 (15 15 (:REWRITE |(floor x (- y))| . 1))
 (15 15 (:REWRITE |(floor (- x) y)| . 2))
 (15 15 (:REWRITE |(floor (- x) y)| . 1))
 (15 5 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (12 4 (:REWRITE |(<= (/ x) y) with (< x 0)|))
 (12 4 (:REWRITE |(< x (/ y)) with (< y 0)|))
 (12 4 (:REWRITE |(* a (/ a))|))
 (12 4 (:LINEAR EXPT->=-1-TWO))
 (12 4 (:LINEAR EXPT->-1-TWO))
 (12 4 (:LINEAR EXPT-<=-1-ONE))
 (12 4 (:LINEAR EXPT-<-1-ONE))
 (8 8 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (8 8 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (8 8 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (8 8 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (8 4 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (8 4 (:LINEAR EXPT-X->-X))
 (8 4 (:LINEAR EXPT->-1-ONE))
 (8 4 (:LINEAR EXPT-<=-1-TWO))
 (8 4 (:LINEAR EXPT-<-1-TWO))
 (8 1 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (8 1 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (8 1 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (8 1 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE |(< 0 (* x y))|))
 (6 1 (:REWRITE FLOOR-=-X/Y . 4))
 (6 1 (:REWRITE |(equal (floor (+ x y) z) x)|))
 (4 4 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (4 4 (:REWRITE |(+ x (- x))|))
 (4 4 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (4 4 (:LINEAR EXPT-LINEAR-UPPER-<))
 (4 4 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (4 4 (:LINEAR EXPT-LINEAR-LOWER-<))
 (4 1 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (3 3 (:REWRITE |(mod x (- y))| . 3))
 (3 3 (:REWRITE |(mod x (- y))| . 2))
 (3 3 (:REWRITE |(mod x (- y))| . 1))
 (3 3 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (3 3 (:REWRITE |(mod (- x) y)| . 3))
 (3 3 (:REWRITE |(mod (- x) y)| . 2))
 (3 3 (:REWRITE |(mod (- x) y)| . 1))
 (3 3 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (3 3 (:REWRITE |(< (/ x) 0)|))
 (3 3 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (1 1 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (1 1 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (1 1 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (1 1 (:REWRITE FLOOR-ZERO . 1))
 (1 1 (:REWRITE FLOOR-POSITIVE . 4))
 (1 1 (:REWRITE FLOOR-POSITIVE . 3))
 (1 1 (:REWRITE FLOOR-POSITIVE . 2))
 (1 1 (:REWRITE |(mod (floor x y) z)| . 5))
 (1 1 (:REWRITE |(mod (floor x y) z)| . 4))
 (1 1 (:REWRITE |(mod (floor x y) z)| . 3))
 (1 1 (:REWRITE |(mod (floor x y) z)| . 2))
 (1 1 (:REWRITE |(floor (floor x y) z)| . 5))
 (1 1 (:REWRITE |(floor (floor x y) z)| . 4))
 (1 1 (:REWRITE |(floor (floor x y) z)| . 3))
 (1 1 (:REWRITE |(floor (floor x y) z)| . 2))
 )
(NAT=>LENDIAN*-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(NAT=>LENDIAN*-OF-NFIX-NAT
 (4039 10 (:LINEAR LINEAR-FLOOR-BOUNDS-1))
 (3901 3901 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (3901 3901 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (3901 3901 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (3460 1 (:REWRITE |(mod (floor x y) z)| . 1))
 (2565 198 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (2503 15 (:REWRITE FLOOR-ZERO . 4))
 (2503 4 (:REWRITE MOD-X-Y-=-X . 3))
 (2502 15 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (2373 4 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (2303 3 (:REWRITE ZP-OPEN))
 (2041 50 (:REWRITE THE-FLOOR-BELOW))
 (1975 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (1972 15 (:REWRITE FLOOR-ZERO . 3))
 (1780 198 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (1780 198 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (1740 15 (:REWRITE CANCEL-FLOOR-+))
 (1468 40 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1464 36 (:REWRITE DEFAULT-PLUS-2))
 (1316 36 (:REWRITE DEFAULT-PLUS-1))
 (1290 145 (:REWRITE DEFAULT-TIMES-2))
 (1170 4 (:REWRITE CANCEL-MOD-+))
 (1047 18 (:REWRITE |(integerp (- x))|))
 (995 198 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (995 198 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (995 198 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (995 198 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (995 198 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (995 198 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (995 198 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (995 198 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (958 145 (:REWRITE DEFAULT-TIMES-1))
 (801 19 (:REWRITE |(* (- x) y)|))
 (736 15 (:REWRITE FLOOR-=-X/Y . 2))
 (688 12 (:REWRITE |(* y x)|))
 (657 15 (:REWRITE FLOOR-=-X/Y . 3))
 (594 4 (:REWRITE MOD-ZERO . 3))
 (553 1 (:REWRITE |(floor (floor x y) z)| . 1))
 (550 55 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (550 55 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (525 15 (:REWRITE DEFAULT-FLOOR-RATIO))
 (511 20 (:REWRITE DEFAULT-MINUS))
 (445 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (429 47 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (423 12 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (352 36 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (337 4 (:REWRITE DEFAULT-MOD-RATIO))
 (328 44 (:REWRITE DEFAULT-LESS-THAN-1))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (305 305 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (295 15 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (266 4 (:REWRITE MOD-X-Y-=-X . 4))
 (262 86 (:REWRITE DEFAULT-DIVIDE))
 (262 15 (:REWRITE FLOOR-ZERO . 5))
 (244 47 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (221 99 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (218 15 (:REWRITE FLOOR-ZERO . 2))
 (218 15 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (218 15 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (215 4 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (215 4 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (214 107 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-2))
 (202 4 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (202 4 (:REWRITE MOD-X-Y-=-X . 2))
 (189 4 (:REWRITE MOD-ZERO . 4))
 (168 15 (:REWRITE FLOOR-CANCEL-*-CONST))
 (168 1 (:REWRITE FLOOR-POSITIVE . 1))
 (158 1 (:REWRITE |(< (* (/ x) y) 1) with (< 0 x)|))
 (156 4 (:REWRITE |(* y (* x z))|))
 (135 15 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (125 4 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (125 4 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (118 4 (:LINEAR EXPT-X->=-X))
 (112 4 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (112 4 (:REWRITE MOD-CANCEL-*-CONST))
 (110 55 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (108 44 (:REWRITE DEFAULT-LESS-THAN-2))
 (107 107 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (97 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (97 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (92 15 (:REWRITE DEFAULT-FLOOR-1))
 (90 36 (:REWRITE SIMPLIFY-SUMS-<))
 (81 4 (:REWRITE DEFAULT-MOD-1))
 (80 1 (:REWRITE |(< (* (/ x) y) 1) with (< x 0)|))
 (76 76 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (75 5 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (73 7 (:REWRITE BUBBLE-DOWN-*-MATCH-1))
 (72 4 (:LINEAR EXPT->=-1-ONE))
 (66 7 (:REWRITE |(* x x)|))
 (65 15 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (64 14 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (64 14 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (60 10 (:REWRITE |(/ (expt x n))|))
 (58 29 (:REWRITE DEFAULT-EXPT-1))
 (55 55 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (53 14 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (53 14 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (50 5 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (48 15 (:REWRITE DEFAULT-FLOOR-2))
 (44 44 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (44 44 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (44 44 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (41 40 (:REWRITE |(< (/ x) (/ y))|))
 (40 40 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (40 40 (:REWRITE INTEGERP-<-CONSTANT))
 (40 40 (:REWRITE CONSTANT-<-INTEGERP))
 (40 40 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (40 40 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (40 40 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (40 40 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (40 40 (:REWRITE |(< c (- x))|))
 (40 40 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (40 40 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (40 40 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (40 40 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (40 40 (:REWRITE |(< (- x) c)|))
 (40 40 (:REWRITE |(< (- x) (- y))|))
 (36 36 (:REWRITE REDUCE-INTEGERP-+))
 (36 36 (:REWRITE INTEGERP-MINUS-X))
 (36 36 (:META META-INTEGERP-CORRECT))
 (30 3 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (30 3 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (29 29 (:REWRITE DEFAULT-EXPT-2))
 (29 29 (:REWRITE |(expt 1/c n)|))
 (29 29 (:REWRITE |(expt (- x) n)|))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (24 4 (:REWRITE |(expt (/ x) n)|))
 (22 22 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (20 20 (:REWRITE |(- (* c x))|))
 (18 1 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (17 4 (:REWRITE DEFAULT-MOD-2))
 (16 4 (:REWRITE |(<= (/ x) y) with (< 0 x)|))
 (16 4 (:REWRITE |(< x (/ y)) with (< 0 y)|))
 (15 4 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (15 3 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 1))
 (14 14 (:REWRITE |(floor x (- y))| . 2))
 (14 14 (:REWRITE |(floor x (- y))| . 1))
 (14 14 (:REWRITE |(floor (- x) y)| . 2))
 (14 14 (:REWRITE |(floor (- x) y)| . 1))
 (13 5 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (12 4 (:REWRITE |(<= (/ x) y) with (< x 0)|))
 (12 4 (:REWRITE |(< x (/ y)) with (< y 0)|))
 (12 4 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (12 4 (:REWRITE |(* a (/ a))|))
 (12 4 (:LINEAR EXPT->=-1-TWO))
 (12 4 (:LINEAR EXPT->-1-TWO))
 (12 4 (:LINEAR EXPT-<=-1-ONE))
 (12 4 (:LINEAR EXPT-<-1-ONE))
 (8 8 (:TYPE-PRESCRIPTION DAB-BASEP))
 (8 8 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (8 8 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (8 8 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (8 8 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (8 4 (:LINEAR EXPT-X->-X))
 (8 4 (:LINEAR EXPT->-1-ONE))
 (8 4 (:LINEAR EXPT-<=-1-TWO))
 (8 4 (:LINEAR EXPT-<-1-TWO))
 (8 1 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (8 1 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (8 1 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (8 1 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (7 6 (:REWRITE |(< (/ x) 0)|))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE |(< 0 (* x y))|))
 (6 6 (:REWRITE |(< (* x y) 0)|))
 (6 1 (:REWRITE FLOOR-=-X/Y . 4))
 (6 1 (:REWRITE |(equal (floor (+ x y) z) x)|))
 (4 4 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (4 4 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (4 4 (:LINEAR EXPT-LINEAR-UPPER-<))
 (4 4 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (4 4 (:LINEAR EXPT-LINEAR-LOWER-<))
 (4 1 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (3 3 (:REWRITE |(mod x (- y))| . 3))
 (3 3 (:REWRITE |(mod x (- y))| . 2))
 (3 3 (:REWRITE |(mod x (- y))| . 1))
 (3 3 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (3 3 (:REWRITE |(mod (- x) y)| . 3))
 (3 3 (:REWRITE |(mod (- x) y)| . 2))
 (3 3 (:REWRITE |(mod (- x) y)| . 1))
 (3 3 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (1 1 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (1 1 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (1 1 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE FLOOR-ZERO . 1))
 (1 1 (:REWRITE FLOOR-POSITIVE . 4))
 (1 1 (:REWRITE FLOOR-POSITIVE . 3))
 (1 1 (:REWRITE FLOOR-POSITIVE . 2))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(mod (floor x y) z)| . 5))
 (1 1 (:REWRITE |(mod (floor x y) z)| . 4))
 (1 1 (:REWRITE |(mod (floor x y) z)| . 3))
 (1 1 (:REWRITE |(mod (floor x y) z)| . 2))
 (1 1 (:REWRITE |(floor (floor x y) z)| . 5))
 (1 1 (:REWRITE |(floor (floor x y) z)| . 4))
 (1 1 (:REWRITE |(floor (floor x y) z)| . 3))
 (1 1 (:REWRITE |(floor (floor x y) z)| . 2))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (1 1 (:REWRITE |(< (* x (/ y)) 0) rationalp (* x (/ y))|))
 )
(NAT=>LENDIAN*-NAT-EQUIV-CONGRUENCE-ON-NAT)
(NAT=>LENDIAN+
 (12 6 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (6 6 (:TYPE-PRESCRIPTION ZP))
 )
(RETURN-TYPE-OF-NAT=>LENDIAN+
 (20 10 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (10 10 (:TYPE-PRESCRIPTION ZP))
 (6 6 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 )
(NAT-LISTP-OF-NAT=>LENDIAN+
 (4 2 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (2 2 (:TYPE-PRESCRIPTION ZP))
 )
(NAT=>LENDIAN+-OF-0)
(NAT=>LENDIAN+-OF-DAB-BASE-FIX-BASE)
(NAT=>LENDIAN+-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(NAT=>LENDIAN+-OF-NFIX-NAT)
(NAT=>LENDIAN+-NAT-EQUIV-CONGRUENCE-ON-NAT)
(NAT=>LENDIAN
 (281 281 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (281 281 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (281 281 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (281 281 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (281 281 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (197 197 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (169 169 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (169 169 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (169 169 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (85 2 (:REWRITE MOD-ZERO . 3))
 (84 2 (:REWRITE DEFAULT-MOD-RATIO))
 (61 19 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (61 19 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (61 19 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (61 19 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (57 3 (:DEFINITION LEN))
 (50 50 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (50 2 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (50 2 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (50 2 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (50 2 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (47 2 (:REWRITE MOD-X-Y-=-X . 4))
 (45 18 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (37 37 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (37 19 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (36 26 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (36 18 (:REWRITE DEFAULT-LESS-THAN-2))
 (33 14 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (31 13 (:REWRITE SIMPLIFY-SUMS-<))
 (31 1 (:LINEAR EXPT-<=-1-TWO))
 (30 3 (:REWRITE DEFAULT-TIMES-2))
 (30 3 (:REWRITE DEFAULT-DIVIDE))
 (30 2 (:REWRITE MOD-ZERO . 4))
 (28 2 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (27 1 (:LINEAR EXPT->=-1-TWO))
 (27 1 (:LINEAR EXPT-<=-1-ONE))
 (26 1 (:LINEAR EXPT-X->=-X))
 (26 1 (:LINEAR EXPT-X->-X))
 (26 1 (:LINEAR EXPT->-1-ONE))
 (26 1 (:LINEAR EXPT-<-1-TWO))
 (20 2 (:REWRITE DEFAULT-MOD-2))
 (19 19 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (19 19 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (19 19 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (19 19 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (19 18 (:REWRITE DEFAULT-LESS-THAN-1))
 (19 18 (:REWRITE |(< (- x) c)|))
 (19 18 (:REWRITE |(< (- x) (- y))|))
 (19 11 (:REWRITE DEFAULT-PLUS-2))
 (18 18 (:REWRITE THE-FLOOR-BELOW))
 (18 18 (:REWRITE THE-FLOOR-ABOVE))
 (18 18 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (18 18 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (18 18 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (18 18 (:REWRITE INTEGERP-<-CONSTANT))
 (18 18 (:REWRITE CONSTANT-<-INTEGERP))
 (18 18 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (18 18 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (18 18 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (18 18 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (18 18 (:REWRITE |(< c (- x))|))
 (18 18 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (18 18 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (18 18 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (18 18 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (18 18 (:REWRITE |(< (/ x) (/ y))|))
 (18 3 (:REWRITE |(/ (expt x n))|))
 (16 11 (:REWRITE DEFAULT-PLUS-1))
 (10 10 (:TYPE-PRESCRIPTION ZP))
 (10 10 (:REWRITE DEFAULT-EXPT-2))
 (10 10 (:REWRITE DEFAULT-EXPT-1))
 (10 10 (:REWRITE |(expt 1/c n)|))
 (10 10 (:REWRITE |(expt (- x) n)|))
 (9 3 (:REWRITE DEFAULT-CDR))
 (9 3 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (7 7 (:REWRITE |(< (/ x) 0)|))
 (7 7 (:REWRITE |(< (* x y) 0)|))
 (7 5 (:REWRITE DEFAULT-MINUS))
 (6 6 (:REWRITE INTEGERP-WHEN-MEMBER-EQUAL-OF-INTEGER-LISTP))
 (6 6 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-CONS-LISTP))
 (6 6 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (4 4 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (4 4 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (4 4 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (4 4 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE ZP-OPEN))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE DEFAULT-TIMES-1))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE NATP-WHEN-MEMBER-EQUAL-OF-NAT-LISTP))
 (2 2 (:REWRITE DEFAULT-MOD-1))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (2 2 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (2 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< (+ c/d x) y)|))
 (1 1 (:REWRITE |(< (+ (- c) x) y)|))
 (1 1 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (1 1 (:LINEAR EXPT-LINEAR-UPPER-<))
 (1 1 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (1 1 (:LINEAR EXPT-LINEAR-LOWER-<))
 (1 1 (:LINEAR EXPT->-1-TWO))
 (1 1 (:LINEAR EXPT-<-1-ONE))
 )
(RETURN-TYPE-OF-NAT=>LENDIAN
 (4841 6 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (2223 2 (:LINEAR MOD-BOUNDS-1))
 (1549 1 (:DEFINITION BINARY-APPEND))
 (1491 9 (:REWRITE ZP-OPEN))
 (876 1 (:DEFINITION LEN))
 (818 2 (:REWRITE DEFAULT-CDR))
 (767 4 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (723 4 (:REWRITE MOD-X-Y-=-X . 3))
 (648 4 (:REWRITE CANCEL-MOD-+))
 (478 14 (:REWRITE DEFAULT-MOD-RATIO))
 (477 477 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (477 477 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (477 477 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (477 477 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (477 477 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (467 61 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (467 61 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (467 61 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (467 61 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (441 441 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (409 1 (:REWRITE DEFAULT-CAR))
 (381 51 (:REWRITE DEFAULT-TIMES-2))
 (373 373 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (373 373 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (373 373 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (368 4 (:REWRITE MOD-ZERO . 3))
 (338 4 (:REWRITE MOD-POSITIVE . 1))
 (330 7 (:REWRITE MOD-POSITIVE . 3))
 (263 38 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (253 40 (:REWRITE DEFAULT-LESS-THAN-2))
 (253 23 (:REWRITE DEFAULT-DIVIDE))
 (235 61 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (192 4 (:REWRITE MOD-X-Y-=-X . 4))
 (192 4 (:REWRITE |(integerp (- x))|))
 (175 14 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (161 23 (:REWRITE |(/ (expt x n))|))
 (152 4 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (152 4 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (149 3 (:REWRITE REPEAT-WHEN-ZP))
 (137 38 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (126 7 (:LINEAR EXPT->=-1-ONE))
 (124 4 (:REWRITE MOD-ZERO . 4))
 (120 4 (:REWRITE |(* (- x) y)|))
 (119 37 (:REWRITE SIMPLIFY-SUMS-<))
 (114 9 (:REWRITE |(* (if a b c) x)|))
 (112 4 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (112 4 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (112 4 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (112 4 (:REWRITE MOD-X-Y-=-X . 2))
 (100 50 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (96 48 (:REWRITE DEFAULT-EXPT-1))
 (94 14 (:REWRITE DEFAULT-MOD-2))
 (92 1 (:LINEAR MOD-BOUNDS-3))
 (85 28 (:REWRITE DEFAULT-MINUS))
 (72 4 (:REWRITE MOD-CANCEL-*-CONST))
 (66 66 (:REWRITE INTEGERP-WHEN-MEMBER-EQUAL-OF-INTEGER-LISTP))
 (61 61 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (61 61 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (61 61 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (61 61 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (60 14 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (56 2 (:REWRITE MOD-NONPOSITIVE))
 (56 2 (:LINEAR MOD-BOUNDS-2))
 (53 7 (:LINEAR EXPT->=-1-TWO))
 (53 7 (:LINEAR EXPT-<=-1-ONE))
 (52 4 (:REWRITE ACL2-NUMBERP-X))
 (51 51 (:REWRITE DEFAULT-TIMES-1))
 (50 50 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (50 50 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (50 50 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (48 48 (:REWRITE DEFAULT-EXPT-2))
 (48 48 (:REWRITE |(expt 1/c n)|))
 (48 48 (:REWRITE |(expt (- x) n)|))
 (45 45 (:REWRITE THE-FLOOR-BELOW))
 (45 45 (:REWRITE THE-FLOOR-ABOVE))
 (45 7 (:LINEAR EXPT-X->-X))
 (45 7 (:LINEAR EXPT->-1-ONE))
 (45 7 (:LINEAR EXPT-<-1-TWO))
 (44 7 (:LINEAR EXPT-<=-1-TWO))
 (39 38 (:REWRITE |(< c (- x))|))
 (39 7 (:LINEAR EXPT-X->=-X))
 (38 38 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (38 38 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (38 38 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (38 38 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (38 38 (:REWRITE INTEGERP-<-CONSTANT))
 (38 38 (:REWRITE CONSTANT-<-INTEGERP))
 (38 38 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (38 38 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (38 38 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (38 38 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (38 38 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (38 38 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (38 38 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (38 38 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (38 38 (:REWRITE |(< (/ x) (/ y))|))
 (38 38 (:REWRITE |(< (- x) c)|))
 (38 38 (:REWRITE |(< (- x) (- y))|))
 (38 4 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (38 4 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (38 4 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (38 4 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (38 4 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (38 4 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (34 34 (:TYPE-PRESCRIPTION LEN))
 (30 30 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (29 29 (:REWRITE REDUCE-INTEGERP-+))
 (29 29 (:REWRITE INTEGERP-MINUS-X))
 (29 29 (:META META-INTEGERP-CORRECT))
 (24 6 (:REWRITE |(* y x)|))
 (24 4 (:REWRITE RATIONALP-X))
 (24 4 (:REWRITE MOD-POSITIVE . 2))
 (21 21 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (21 7 (:LINEAR EXPT->-1-TWO))
 (21 7 (:LINEAR EXPT-<-1-ONE))
 (21 1 (:REWRITE |(+ y (+ x z))|))
 (19 13 (:REWRITE DEFAULT-PLUS-2))
 (18 18 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-CONS-LISTP))
 (18 18 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (18 13 (:REWRITE DEFAULT-PLUS-1))
 (14 14 (:REWRITE DEFAULT-MOD-1))
 (14 14 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (14 14 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (12 4 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (12 3 (:REWRITE NORMALIZE-ADDENDS))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (11 11 (:REWRITE |(< (/ x) 0)|))
 (11 11 (:REWRITE |(< (* x y) 0)|))
 (10 10 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (10 10 (:REWRITE |(< 0 (/ x))|))
 (10 10 (:REWRITE |(< 0 (* x y))|))
 (9 9 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (9 9 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (8 8 (:TYPE-PRESCRIPTION DAB-BASEP))
 (8 8 (:REWRITE RATIONALP-WHEN-MEMBER-EQUAL-OF-RATIONAL-LISTP))
 (8 8 (:REWRITE ACL2-NUMBERP-WHEN-MEMBER-EQUAL-OF-ACL2-NUMBER-LISTP))
 (7 7 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (7 7 (:LINEAR EXPT-LINEAR-UPPER-<))
 (7 7 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (7 7 (:LINEAR EXPT-LINEAR-LOWER-<))
 (6 6 (:TYPE-PRESCRIPTION REPEAT))
 (6 6 (:TYPE-PRESCRIPTION BINARY-APPEND))
 (6 6 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (6 6 (:REWRITE |(* 1 x)|))
 (5 5 (:REWRITE |(* 0 x)|))
 (4 4 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (4 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE |(mod x (- y))| . 3))
 (4 4 (:REWRITE |(mod x (- y))| . 2))
 (4 4 (:REWRITE |(mod x (- y))| . 1))
 (4 4 (:REWRITE |(mod (- x) y)| . 3))
 (4 4 (:REWRITE |(mod (- x) y)| . 2))
 (4 4 (:REWRITE |(mod (- x) y)| . 1))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE |(- (* c x))|))
 (4 4 (:META META-RATIONALP-CORRECT))
 (4 2 (:DEFINITION FIX))
 (3 3 (:TYPE-PRESCRIPTION RATIONALP-MOD))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (2 1 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (1 1 (:REWRITE |(< y (+ (- c) x))|))
 (1 1 (:REWRITE |(< x (+ c/d y))|))
 (1 1 (:REWRITE |(+ x (- x))|))
 )
(NAT-LISTP-OF-NAT=>LENDIAN
 (4841 6 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (2223 2 (:LINEAR MOD-BOUNDS-1))
 (1549 1 (:DEFINITION BINARY-APPEND))
 (1491 9 (:REWRITE ZP-OPEN))
 (876 1 (:DEFINITION LEN))
 (818 2 (:REWRITE DEFAULT-CDR))
 (767 4 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (723 4 (:REWRITE MOD-X-Y-=-X . 3))
 (657 118 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (657 118 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (648 4 (:REWRITE CANCEL-MOD-+))
 (643 118 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (643 118 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (534 534 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (534 534 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (534 534 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (534 534 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (534 534 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (530 530 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (478 14 (:REWRITE DEFAULT-MOD-RATIO))
 (445 445 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (445 445 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (445 445 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (409 1 (:REWRITE DEFAULT-CAR))
 (386 2 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (381 51 (:REWRITE DEFAULT-TIMES-2))
 (368 4 (:REWRITE MOD-ZERO . 3))
 (343 118 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (338 4 (:REWRITE MOD-POSITIVE . 1))
 (330 7 (:REWRITE MOD-POSITIVE . 3))
 (263 38 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (253 40 (:REWRITE DEFAULT-LESS-THAN-2))
 (253 23 (:REWRITE DEFAULT-DIVIDE))
 (192 4 (:REWRITE MOD-X-Y-=-X . 4))
 (192 4 (:REWRITE |(integerp (- x))|))
 (175 14 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (161 23 (:REWRITE |(/ (expt x n))|))
 (152 4 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (152 4 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (149 3 (:REWRITE REPEAT-WHEN-ZP))
 (137 38 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (126 7 (:LINEAR EXPT->=-1-ONE))
 (124 4 (:REWRITE MOD-ZERO . 4))
 (120 4 (:REWRITE |(* (- x) y)|))
 (119 37 (:REWRITE SIMPLIFY-SUMS-<))
 (118 118 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (118 118 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (118 118 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (118 118 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (114 9 (:REWRITE |(* (if a b c) x)|))
 (112 4 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (112 4 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (112 4 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (112 4 (:REWRITE MOD-X-Y-=-X . 2))
 (100 50 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (96 48 (:REWRITE DEFAULT-EXPT-1))
 (94 14 (:REWRITE DEFAULT-MOD-2))
 (92 1 (:LINEAR MOD-BOUNDS-3))
 (85 28 (:REWRITE DEFAULT-MINUS))
 (72 4 (:REWRITE MOD-CANCEL-*-CONST))
 (66 66 (:REWRITE INTEGERP-WHEN-MEMBER-EQUAL-OF-INTEGER-LISTP))
 (60 14 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (56 2 (:REWRITE MOD-NONPOSITIVE))
 (56 2 (:LINEAR MOD-BOUNDS-2))
 (53 7 (:LINEAR EXPT->=-1-TWO))
 (53 7 (:LINEAR EXPT-<=-1-ONE))
 (52 4 (:REWRITE ACL2-NUMBERP-X))
 (51 51 (:REWRITE DEFAULT-TIMES-1))
 (50 50 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (50 50 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (50 50 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (48 48 (:REWRITE DEFAULT-EXPT-2))
 (48 48 (:REWRITE |(expt 1/c n)|))
 (48 48 (:REWRITE |(expt (- x) n)|))
 (45 45 (:REWRITE THE-FLOOR-BELOW))
 (45 45 (:REWRITE THE-FLOOR-ABOVE))
 (45 7 (:LINEAR EXPT-X->-X))
 (45 7 (:LINEAR EXPT->-1-ONE))
 (45 7 (:LINEAR EXPT-<-1-TWO))
 (44 7 (:LINEAR EXPT-<=-1-TWO))
 (41 41 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (39 38 (:REWRITE |(< c (- x))|))
 (39 7 (:LINEAR EXPT-X->=-X))
 (38 38 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (38 38 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (38 38 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (38 38 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (38 38 (:REWRITE INTEGERP-<-CONSTANT))
 (38 38 (:REWRITE CONSTANT-<-INTEGERP))
 (38 38 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (38 38 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (38 38 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (38 38 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (38 38 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (38 38 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (38 38 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (38 38 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (38 38 (:REWRITE |(< (/ x) (/ y))|))
 (38 38 (:REWRITE |(< (- x) c)|))
 (38 38 (:REWRITE |(< (- x) (- y))|))
 (38 4 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (38 4 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (38 4 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (38 4 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (38 4 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (38 4 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (34 34 (:TYPE-PRESCRIPTION LEN))
 (30 30 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (29 29 (:REWRITE REDUCE-INTEGERP-+))
 (29 29 (:REWRITE INTEGERP-MINUS-X))
 (29 29 (:META META-INTEGERP-CORRECT))
 (24 6 (:REWRITE |(* y x)|))
 (24 4 (:REWRITE RATIONALP-X))
 (24 4 (:REWRITE MOD-POSITIVE . 2))
 (21 21 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (21 7 (:LINEAR EXPT->-1-TWO))
 (21 7 (:LINEAR EXPT-<-1-ONE))
 (21 1 (:REWRITE |(+ y (+ x z))|))
 (19 13 (:REWRITE DEFAULT-PLUS-2))
 (18 18 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-CONS-LISTP))
 (18 18 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (18 13 (:REWRITE DEFAULT-PLUS-1))
 (14 14 (:REWRITE DEFAULT-MOD-1))
 (14 14 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (14 14 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (12 4 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (12 3 (:REWRITE NORMALIZE-ADDENDS))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (11 11 (:REWRITE |(< (/ x) 0)|))
 (11 11 (:REWRITE |(< (* x y) 0)|))
 (10 10 (:REWRITE |(< 0 (/ x))|))
 (10 10 (:REWRITE |(< 0 (* x y))|))
 (9 9 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (9 9 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (8 8 (:TYPE-PRESCRIPTION DAB-BASEP))
 (8 8 (:REWRITE RATIONALP-WHEN-MEMBER-EQUAL-OF-RATIONAL-LISTP))
 (8 8 (:REWRITE NAT-LISTP-WHEN-SUBSETP-EQUAL))
 (8 8 (:REWRITE ACL2-NUMBERP-WHEN-MEMBER-EQUAL-OF-ACL2-NUMBER-LISTP))
 (7 7 (:REWRITE NAT-LISTP-WHEN-UNSIGNED-BYTE-LISTP))
 (7 7 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (7 7 (:LINEAR EXPT-LINEAR-UPPER-<))
 (7 7 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (7 7 (:LINEAR EXPT-LINEAR-LOWER-<))
 (6 6 (:REWRITE |(* 1 x)|))
 (5 5 (:REWRITE |(* 0 x)|))
 (4 4 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (4 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE |(mod x (- y))| . 3))
 (4 4 (:REWRITE |(mod x (- y))| . 2))
 (4 4 (:REWRITE |(mod x (- y))| . 1))
 (4 4 (:REWRITE |(mod (- x) y)| . 3))
 (4 4 (:REWRITE |(mod (- x) y)| . 2))
 (4 4 (:REWRITE |(mod (- x) y)| . 1))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE |(- (* c x))|))
 (4 4 (:META META-RATIONALP-CORRECT))
 (4 2 (:DEFINITION FIX))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (2 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (2 1 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (1 1 (:REWRITE |(< y (+ (- c) x))|))
 (1 1 (:REWRITE |(< x (+ c/d y))|))
 (1 1 (:REWRITE |(+ x (- x))|))
 )
(CONSP-OF-NAT=>LENDIAN
 (2173 2 (:LINEAR MOD-BOUNDS-1))
 (1698 1 (:DEFINITION BINARY-APPEND))
 (878 5 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (876 1 (:DEFINITION LEN))
 (818 2 (:REWRITE DEFAULT-CDR))
 (648 4 (:REWRITE MOD-X-Y-=-X . 3))
 (648 4 (:REWRITE CANCEL-MOD-+))
 (621 89 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (621 89 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (607 89 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (607 89 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (532 532 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (532 532 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (532 532 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (532 532 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (532 532 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (505 505 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (450 9 (:REWRITE DEFAULT-MOD-RATIO))
 (425 425 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (425 425 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (425 425 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (418 38 (:REWRITE DEFAULT-TIMES-2))
 (409 1 (:REWRITE DEFAULT-CAR))
 (332 9 (:REWRITE MOD-POSITIVE . 3))
 (311 89 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (298 2 (:REWRITE APPEND-ATOM-UNDER-LIST-EQUIV))
 (297 27 (:REWRITE DEFAULT-DIVIDE))
 (289 44 (:REWRITE DEFAULT-LESS-THAN-2))
 (192 4 (:REWRITE MOD-X-Y-=-X . 4))
 (192 4 (:REWRITE |(integerp (- x))|))
 (157 43 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (155 5 (:REWRITE MOD-ZERO . 4))
 (152 4 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (152 4 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (144 8 (:LINEAR EXPT->=-1-ONE))
 (143 3 (:REWRITE REPEAT-WHEN-ZP))
 (140 5 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (140 5 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (140 5 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (137 39 (:REWRITE SIMPLIFY-SUMS-<))
 (120 4 (:REWRITE |(* (- x) y)|))
 (112 4 (:REWRITE MOD-X-Y-=-X . 2))
 (99 9 (:REWRITE DEFAULT-MOD-2))
 (92 1 (:LINEAR MOD-BOUNDS-3))
 (90 33 (:REWRITE DEFAULT-MINUS))
 (89 89 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (89 89 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (89 89 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (89 89 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (80 3 (:REWRITE |(* (if a b c) x)|))
 (78 39 (:REWRITE DEFAULT-EXPT-1))
 (72 4 (:REWRITE MOD-CANCEL-*-CONST))
 (70 70 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (70 70 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (70 70 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (56 8 (:LINEAR EXPT->=-1-TWO))
 (56 8 (:LINEAR EXPT-<=-1-ONE))
 (56 2 (:REWRITE MOD-NONPOSITIVE))
 (56 2 (:LINEAR MOD-BOUNDS-2))
 (54 54 (:REWRITE INTEGERP-WHEN-MEMBER-EQUAL-OF-INTEGER-LISTP))
 (54 34 (:REWRITE DEFAULT-PLUS-1))
 (52 34 (:REWRITE DEFAULT-PLUS-2))
 (51 51 (:REWRITE THE-FLOOR-BELOW))
 (51 51 (:REWRITE THE-FLOOR-ABOVE))
 (47 43 (:REWRITE |(< c (- x))|))
 (47 8 (:LINEAR EXPT-X->-X))
 (47 8 (:LINEAR EXPT->-1-ONE))
 (47 8 (:LINEAR EXPT-<-1-TWO))
 (43 43 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (43 43 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (43 43 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (43 43 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (43 43 (:REWRITE INTEGERP-<-CONSTANT))
 (43 43 (:REWRITE CONSTANT-<-INTEGERP))
 (43 43 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (43 43 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (43 43 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (43 43 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (43 43 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (43 43 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (43 43 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (43 43 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (43 43 (:REWRITE |(< (/ x) (/ y))|))
 (43 43 (:REWRITE |(< (- x) c)|))
 (43 43 (:REWRITE |(< (- x) (- y))|))
 (41 8 (:LINEAR EXPT-X->=-X))
 (39 39 (:REWRITE DEFAULT-EXPT-2))
 (39 39 (:REWRITE |(expt 1/c n)|))
 (39 39 (:REWRITE |(expt (- x) n)|))
 (38 38 (:REWRITE DEFAULT-TIMES-1))
 (38 4 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (38 4 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (38 4 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (38 4 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (38 4 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (38 4 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (35 35 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (32 32 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-CONS-LISTP))
 (32 32 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (26 26 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (26 6 (:REWRITE MOD-POSITIVE . 2))
 (26 2 (:REWRITE ACL2-NUMBERP-X))
 (24 8 (:LINEAR EXPT->-1-TWO))
 (24 8 (:LINEAR EXPT-<-1-ONE))
 (23 23 (:REWRITE REDUCE-INTEGERP-+))
 (23 23 (:REWRITE INTEGERP-MINUS-X))
 (23 23 (:META META-INTEGERP-CORRECT))
 (16 16 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (16 16 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (16 16 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (16 16 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (16 8 (:LINEAR EXPT-<=-1-TWO))
 (15 15 (:REWRITE |(< 0 (/ x))|))
 (15 15 (:REWRITE |(< 0 (* x y))|))
 (13 13 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (12 4 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (12 2 (:REWRITE RATIONALP-X))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (9 9 (:REWRITE DEFAULT-MOD-1))
 (8 8 (:TYPE-PRESCRIPTION DAB-BASEP))
 (8 8 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (8 8 (:LINEAR EXPT-LINEAR-UPPER-<))
 (8 8 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (8 8 (:LINEAR EXPT-LINEAR-LOWER-<))
 (8 4 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (5 5 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (5 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (5 5 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (5 5 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (5 5 (:REWRITE |(equal c (/ x))|))
 (5 5 (:REWRITE |(equal c (- x))|))
 (5 5 (:REWRITE |(equal (/ x) c)|))
 (5 5 (:REWRITE |(equal (/ x) (/ y))|))
 (5 5 (:REWRITE |(equal (- x) c)|))
 (5 5 (:REWRITE |(equal (- x) (- y))|))
 (5 5 (:REWRITE |(< (/ x) 0)|))
 (5 5 (:REWRITE |(< (* x y) 0)|))
 (5 5 (:REWRITE |(* 0 x)|))
 (4 4 (:REWRITE RATIONALP-WHEN-MEMBER-EQUAL-OF-RATIONAL-LISTP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-MEMBER-EQUAL-OF-ACL2-NUMBER-LISTP))
 (4 4 (:REWRITE |(mod x (- y))| . 3))
 (4 4 (:REWRITE |(mod x (- y))| . 2))
 (4 4 (:REWRITE |(mod x (- y))| . 1))
 (4 4 (:REWRITE |(mod (- x) y)| . 3))
 (4 4 (:REWRITE |(mod (- x) y)| . 2))
 (4 4 (:REWRITE |(mod (- x) y)| . 1))
 (4 4 (:REWRITE |(< y (+ (- c) x))|))
 (4 4 (:REWRITE |(< x (+ c/d y))|))
 (4 4 (:REWRITE |(- (* c x))|))
 (3 3 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (2 2 (:REWRITE REDUCE-RATIONALP-+))
 (2 2 (:REWRITE REDUCE-RATIONALP-*))
 (2 2 (:REWRITE RATIONALP-MINUS-X))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:META META-RATIONALP-CORRECT))
 )
(NAT=>LENDIAN-OF-MOD
 (5417 11 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (3922 4 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (2782 2 (:DEFINITION BINARY-APPEND))
 (2582 12 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (2201 12 (:REWRITE MOD-X-Y-=-X . 4))
 (2187 12 (:REWRITE ZP-OPEN))
 (2143 12 (:REWRITE MOD-ZERO . 4))
 (1639 11 (:REWRITE CANCEL-MOD-+))
 (1573 2 (:DEFINITION LEN))
 (1460 4 (:REWRITE DEFAULT-CDR))
 (1179 213 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (1179 213 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (1155 213 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (1155 213 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (1040 1040 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (1001 1001 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (1001 1001 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (1001 1001 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (1001 1001 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (1001 1001 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (929 929 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (929 929 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (929 929 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (750 12 (:REWRITE MOD-ZERO . 3))
 (730 2 (:REWRITE DEFAULT-CAR))
 (657 12 (:REWRITE DEFAULT-MOD-RATIO))
 (616 7 (:REWRITE MOD-POSITIVE . 1))
 (596 52 (:REWRITE DEFAULT-TIMES-2))
 (534 13 (:REWRITE MOD-POSITIVE . 3))
 (515 213 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (495 11 (:REWRITE |(integerp (- x))|))
 (390 39 (:REWRITE DEFAULT-DIVIDE))
 (385 12 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (374 11 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (374 11 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (346 31 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (338 12 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (338 12 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (308 11 (:REWRITE |(* (- x) y)|))
 (275 34 (:REWRITE DEFAULT-LESS-THAN-2))
 (275 11 (:REWRITE MOD-X-Y-=-X . 2))
 (250 10 (:LINEAR MOD-BOUNDS-2))
 (234 39 (:REWRITE |(/ (expt x n))|))
 (213 213 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (213 213 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (213 213 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (213 213 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (209 31 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (197 52 (:REWRITE DEFAULT-MINUS))
 (184 5 (:LINEAR MOD-BOUNDS-3))
 (164 52 (:REWRITE DEFAULT-TIMES-1))
 (161 11 (:REWRITE MOD-CANCEL-*-CONST))
 (160 16 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (146 11 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (146 11 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (146 11 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (144 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A-EXPT))
 (142 30 (:REWRITE SIMPLIFY-SUMS-<))
 (142 2 (:REWRITE REPEAT-WHEN-ZP))
 (120 12 (:REWRITE DEFAULT-MOD-2))
 (120 2 (:REWRITE |(* y x)|))
 (112 8 (:LINEAR EXPT->=-1-ONE))
 (100 100 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (100 100 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (100 100 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (100 100 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (92 34 (:REWRITE DEFAULT-LESS-THAN-1))
 (76 76 (:REWRITE INTEGERP-WHEN-MEMBER-EQUAL-OF-INTEGER-LISTP))
 (75 3 (:REWRITE MOD-NONPOSITIVE))
 (66 66 (:REWRITE DEFAULT-EXPT-2))
 (66 66 (:REWRITE DEFAULT-EXPT-1))
 (66 66 (:REWRITE |(expt 1/c n)|))
 (66 66 (:REWRITE |(expt (- x) n)|))
 (59 12 (:REWRITE DEFAULT-MOD-1))
 (51 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (51 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (50 50 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (45 45 (:REWRITE THE-FLOOR-BELOW))
 (45 45 (:REWRITE THE-FLOOR-ABOVE))
 (42 16 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (41 11 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (41 11 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (41 11 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (40 1 (:REWRITE MOD-ZERO . 1))
 (39 39 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (38 8 (:LINEAR EXPT-<=-1-TWO))
 (37 37 (:TYPE-PRESCRIPTION LEN))
 (35 34 (:REWRITE |(< c (- x))|))
 (34 34 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (34 34 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (34 34 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (34 34 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (34 34 (:REWRITE INTEGERP-<-CONSTANT))
 (34 34 (:REWRITE CONSTANT-<-INTEGERP))
 (34 34 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (34 34 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (34 34 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (34 34 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (34 34 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (34 34 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (34 34 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (34 34 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (34 34 (:REWRITE |(< (/ x) (/ y))|))
 (34 34 (:REWRITE |(< (- x) c)|))
 (34 34 (:REWRITE |(< (- x) (- y))|))
 (34 8 (:LINEAR EXPT->=-1-TWO))
 (34 8 (:LINEAR EXPT-<=-1-ONE))
 (34 7 (:REWRITE MOD-POSITIVE . 2))
 (33 8 (:LINEAR EXPT-X->=-X))
 (33 8 (:LINEAR EXPT-X->-X))
 (33 8 (:LINEAR EXPT->-1-ONE))
 (33 8 (:LINEAR EXPT-<-1-TWO))
 (27 27 (:REWRITE REDUCE-INTEGERP-+))
 (27 27 (:REWRITE INTEGERP-MINUS-X))
 (27 27 (:META META-INTEGERP-CORRECT))
 (26 26 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-CONS-LISTP))
 (26 26 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (25 1 (:REWRITE MOD-ZERO . 2))
 (21 1 (:REWRITE |(+ y (+ x z))|))
 (19 11 (:REWRITE DEFAULT-PLUS-2))
 (16 16 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (16 16 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (16 11 (:REWRITE DEFAULT-PLUS-1))
 (14 5 (:REWRITE NORMALIZE-ADDENDS))
 (12 12 (:REWRITE |(< 0 (/ x))|))
 (12 12 (:REWRITE |(< 0 (* x y))|))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (11 11 (:REWRITE |(mod x (- y))| . 3))
 (11 11 (:REWRITE |(mod x (- y))| . 2))
 (11 11 (:REWRITE |(mod x (- y))| . 1))
 (11 11 (:REWRITE |(mod (- x) y)| . 3))
 (11 11 (:REWRITE |(mod (- x) y)| . 2))
 (11 11 (:REWRITE |(mod (- x) y)| . 1))
 (11 11 (:REWRITE |(- (* c x))|))
 (10 2 (:REWRITE |(+ y x)|))
 (10 1 (:REWRITE |(equal (mod (+ x y) z) x)|))
 (8 8 (:REWRITE |(expt x 0)|))
 (8 8 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (8 8 (:LINEAR EXPT-LINEAR-UPPER-<))
 (8 8 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (8 8 (:LINEAR EXPT-LINEAR-LOWER-<))
 (8 8 (:LINEAR EXPT->-1-TWO))
 (8 8 (:LINEAR EXPT-<-1-ONE))
 (6 6 (:REWRITE |(< (/ x) 0)|))
 (6 6 (:REWRITE |(< (* x y) 0)|))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (4 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 2 (:DEFINITION FIX))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A-EXPT))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A-EXPT))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A-EXPT))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (3 2 (:REWRITE |(+ 0 x)|))
 (2 2 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (2 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (2 1 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (1 1 (:REWRITE MOD-X-Y-=-X-Y . 1))
 (1 1 (:REWRITE MOD-X-Y-=-X+Y . 1))
 (1 1 (:REWRITE MOD-NEGATIVE . 3))
 (1 1 (:REWRITE MOD-NEGATIVE . 2))
 (1 1 (:REWRITE |(< y (+ (- c) x))|))
 (1 1 (:REWRITE |(< x (+ c/d y))|))
 (1 1 (:REWRITE |(+ x (- x))|))
 )
(LEN-OF-NAT=>LENDIAN
 (6252 34 (:REWRITE ZP-OPEN))
 (5207 40 (:REWRITE CANCEL-MOD-+))
 (4893 40 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (4822 649 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (4345 649 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (4225 670 (:REWRITE DEFAULT-TIMES-2))
 (4155 4155 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (4155 4155 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (4155 4155 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (4155 4155 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (4155 4155 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (4045 66 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (3499 23 (:REWRITE DEFAULT-CDR))
 (3496 649 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (3496 649 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (2959 40 (:REWRITE MOD-ZERO . 3))
 (2871 261 (:REWRITE DEFAULT-DIVIDE))
 (2524 2524 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (2433 40 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (2426 2426 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (2426 2426 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (2426 2426 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (2371 40 (:REWRITE MOD-X-Y-=-X . 3))
 (1819 40 (:REWRITE MOD-X-Y-=-X . 4))
 (1733 441 (:REWRITE DEFAULT-LESS-THAN-2))
 (1698 1 (:DEFINITION BINARY-APPEND))
 (1676 116 (:REWRITE RATIONALP-X))
 (1632 17 (:REWRITE MOD-POSITIVE . 1))
 (1509 400 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1299 40 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (1299 40 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (1184 396 (:REWRITE SIMPLIFY-SUMS-<))
 (1163 587 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (1109 40 (:REWRITE MOD-ZERO . 4))
 (1042 670 (:REWRITE DEFAULT-TIMES-1))
 (1009 649 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (1009 40 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (1009 40 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (1009 40 (:REWRITE MOD-X-Y-=-X . 2))
 (964 40 (:REWRITE |(* (- x) y)|))
 (868 25 (:REWRITE MOD-POSITIVE . 3))
 (830 830 (:REWRITE INTEGERP-WHEN-MEMBER-EQUAL-OF-INTEGER-LISTP))
 (800 400 (:REWRITE DEFAULT-EXPT-1))
 (798 16 (:LINEAR MOD-BOUNDS-2))
 (719 40 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (719 40 (:REWRITE MOD-CANCEL-*-CONST))
 (719 40 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (719 40 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (701 8 (:LINEAR MOD-BOUNDS-3))
 (695 587 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (649 649 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (649 649 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (646 646 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (646 646 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (640 110 (:REWRITE DEFAULT-MOD-2))
 (635 32 (:LINEAR EXPT-<=-1-TWO))
 (608 32 (:LINEAR EXPT->=-1-TWO))
 (608 32 (:LINEAR EXPT-<=-1-ONE))
 (587 587 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (560 64 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (560 32 (:LINEAR EXPT-X->-X))
 (560 32 (:LINEAR EXPT->-1-ONE))
 (560 32 (:LINEAR EXPT-<-1-TWO))
 (476 32 (:LINEAR EXPT-X->=-X))
 (464 464 (:REWRITE THE-FLOOR-BELOW))
 (464 464 (:REWRITE THE-FLOOR-ABOVE))
 (414 411 (:REWRITE |(< c (- x))|))
 (412 411 (:REWRITE |(< (- x) c)|))
 (412 411 (:REWRITE |(< (- x) (- y))|))
 (411 411 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (411 411 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (411 411 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (411 411 (:REWRITE INTEGERP-<-CONSTANT))
 (411 411 (:REWRITE CONSTANT-<-INTEGERP))
 (411 411 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (411 411 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (411 411 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (411 411 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (411 411 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (411 411 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (411 411 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (411 411 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (411 411 (:REWRITE |(< (/ x) (/ y))|))
 (409 1 (:REWRITE DEFAULT-CAR))
 (397 397 (:REWRITE |(expt 1/c n)|))
 (397 397 (:REWRITE |(expt (- x) n)|))
 (395 47 (:REWRITE |(* (if a b c) x)|))
 (383 39 (:REWRITE ACL2-NUMBERP-X))
 (355 355 (:REWRITE REDUCE-INTEGERP-+))
 (355 355 (:REWRITE INTEGERP-MINUS-X))
 (355 355 (:META META-INTEGERP-CORRECT))
 (298 2 (:REWRITE APPEND-ATOM-UNDER-LIST-EQUIV))
 (284 2 (:REWRITE CONSP-OF-REPEAT))
 (257 93 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (232 232 (:REWRITE RATIONALP-WHEN-MEMBER-EQUAL-OF-RATIONAL-LISTP))
 (190 190 (:TYPE-PRESCRIPTION RATIONALP-MOD))
 (173 9 (:REWRITE REPEAT-WHEN-ZP))
 (164 164 (:TYPE-PRESCRIPTION DAB-BASEP))
 (164 64 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (158 14 (:REWRITE INTEGERP-MOD-2))
 (154 29 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (140 140 (:REWRITE |(< (/ x) 0)|))
 (140 140 (:REWRITE |(< (* x y) 0)|))
 (138 96 (:REWRITE DEFAULT-PLUS-2))
 (132 96 (:REWRITE DEFAULT-PLUS-1))
 (131 131 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (131 131 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (116 116 (:REWRITE RATIONALP-MINUS-X))
 (105 14 (:REWRITE INTEGERP-MOD-1))
 (104 104 (:REWRITE REDUCE-RATIONALP-+))
 (104 104 (:META META-RATIONALP-CORRECT))
 (96 32 (:LINEAR EXPT->-1-TWO))
 (96 32 (:LINEAR EXPT-<-1-ONE))
 (85 62 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (85 62 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (85 4 (:REWRITE MOD-NONPOSITIVE))
 (82 82 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-CONS-LISTP))
 (82 82 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (78 78 (:REWRITE ACL2-NUMBERP-WHEN-MEMBER-EQUAL-OF-ACL2-NUMBER-LISTP))
 (78 64 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (75 75 (:REWRITE |(< 0 (/ x))|))
 (75 75 (:REWRITE |(< 0 (* x y))|))
 (72 72 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (72 72 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (72 62 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (62 62 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (62 62 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (62 62 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (62 62 (:REWRITE |(equal c (/ x))|))
 (62 62 (:REWRITE |(equal c (- x))|))
 (62 62 (:REWRITE |(equal (/ x) c)|))
 (62 62 (:REWRITE |(equal (/ x) (/ y))|))
 (62 62 (:REWRITE |(equal (- x) c)|))
 (62 62 (:REWRITE |(equal (- x) (- y))|))
 (55 55 (:TYPE-PRESCRIPTION ZP))
 (52 52 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (47 17 (:REWRITE MOD-POSITIVE . 2))
 (40 40 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (40 40 (:REWRITE |(mod x (- y))| . 3))
 (40 40 (:REWRITE |(mod x (- y))| . 2))
 (40 40 (:REWRITE |(mod x (- y))| . 1))
 (40 40 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (40 40 (:REWRITE |(mod (- x) y)| . 3))
 (40 40 (:REWRITE |(mod (- x) y)| . 2))
 (40 40 (:REWRITE |(mod (- x) y)| . 1))
 (40 40 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (40 20 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (35 2 (:REWRITE |(integerp (expt x n))|))
 (32 32 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (32 32 (:LINEAR EXPT-LINEAR-UPPER-<))
 (32 32 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (32 32 (:LINEAR EXPT-LINEAR-LOWER-<))
 (29 29 (:REWRITE |(- (* c x))|))
 (24 24 (:TYPE-PRESCRIPTION REPEAT))
 (24 24 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (23 23 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (20 20 (:TYPE-PRESCRIPTION BINARY-APPEND))
 (16 16 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (16 16 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (14 14 (:REWRITE |(* 0 x)|))
 (12 12 (:REWRITE |(* (expt c m) (expt d n))|))
 (4 4 (:REWRITE NATP-WHEN-MEMBER-EQUAL-OF-NAT-LISTP))
 (3 3 (:REWRITE |(< y (+ (- c) x))|))
 (3 3 (:REWRITE |(< x (+ c/d y))|))
 (2 2 (:REWRITE MOD-NEGATIVE . 3))
 (2 2 (:REWRITE MOD-NEGATIVE . 2))
 (1 1 (:REWRITE |(< (+ c/d x) y)|))
 (1 1 (:REWRITE |(< (+ (- c) x) y)|))
 )
(NAT=>LENDIAN-OF-DAB-BASE-FIX-BASE
 (680 22 (:REWRITE DEFAULT-MOD-RATIO))
 (422 2 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (405 405 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (405 405 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (405 405 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (405 405 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (405 405 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (400 2 (:REWRITE MOD-X-Y-=-X . 3))
 (344 64 (:REWRITE DEFAULT-TIMES-2))
 (324 2 (:REWRITE CANCEL-MOD-+))
 (228 18 (:REWRITE |(* (if a b c) x)|))
 (184 2 (:REWRITE MOD-ZERO . 3))
 (172 172 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (154 14 (:REWRITE DEFAULT-DIVIDE))
 (152 152 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (152 152 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (152 152 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (122 22 (:REWRITE DEFAULT-MOD-2))
 (100 8 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (98 14 (:REWRITE |(/ (expt x n))|))
 (97 97 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (97 97 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (97 97 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (97 97 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (97 97 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (97 97 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (97 97 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (97 97 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (97 97 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (97 97 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (97 97 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 (97 97 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (96 2 (:REWRITE MOD-X-Y-=-X . 4))
 (96 2 (:REWRITE |(integerp (- x))|))
 (76 2 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (76 2 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (72 4 (:LINEAR EXPT->=-1-ONE))
 (64 64 (:REWRITE DEFAULT-TIMES-1))
 (64 32 (:REWRITE DEFAULT-EXPT-1))
 (62 2 (:REWRITE MOD-ZERO . 4))
 (60 2 (:REWRITE |(* (- x) y)|))
 (57 17 (:REWRITE DEFAULT-LESS-THAN-2))
 (56 16 (:REWRITE SIMPLIFY-SUMS-<))
 (56 16 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (56 16 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (56 2 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (56 2 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (56 2 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (56 2 (:REWRITE MOD-X-Y-=-X . 2))
 (48 12 (:REWRITE |(* y x)|))
 (44 16 (:REWRITE DEFAULT-MINUS))
 (40 20 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (36 36 (:REWRITE INTEGERP-WHEN-MEMBER-EQUAL-OF-INTEGER-LISTP))
 (36 2 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (36 2 (:REWRITE MOD-CANCEL-*-CONST))
 (36 2 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (36 2 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (35 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (35 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (35 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (32 32 (:REWRITE DEFAULT-EXPT-2))
 (32 32 (:REWRITE |(expt 1/c n)|))
 (32 32 (:REWRITE |(expt (- x) n)|))
 (26 2 (:REWRITE ACL2-NUMBERP-X))
 (22 22 (:REWRITE DEFAULT-MOD-1))
 (20 20 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (20 20 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (20 20 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (17 17 (:REWRITE THE-FLOOR-BELOW))
 (17 17 (:REWRITE THE-FLOOR-ABOVE))
 (16 16 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (16 16 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (16 16 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (16 16 (:REWRITE REDUCE-INTEGERP-+))
 (16 16 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (16 16 (:REWRITE INTEGERP-MINUS-X))
 (16 16 (:REWRITE INTEGERP-<-CONSTANT))
 (16 16 (:REWRITE CONSTANT-<-INTEGERP))
 (16 16 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (16 16 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (16 16 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (16 16 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (16 16 (:REWRITE |(< c (- x))|))
 (16 16 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (16 16 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (16 16 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (16 16 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (16 16 (:REWRITE |(< (/ x) (/ y))|))
 (16 16 (:REWRITE |(< (- x) c)|))
 (16 16 (:REWRITE |(< (- x) (- y))|))
 (16 16 (:META META-INTEGERP-CORRECT))
 (16 8 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (14 14 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (12 12 (:REWRITE |(* 1 x)|))
 (12 4 (:LINEAR EXPT->=-1-TWO))
 (12 4 (:LINEAR EXPT->-1-TWO))
 (12 4 (:LINEAR EXPT-<=-1-ONE))
 (12 4 (:LINEAR EXPT-<-1-ONE))
 (12 2 (:REWRITE RATIONALP-X))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (10 10 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (10 10 (:REWRITE |(< (/ x) 0)|))
 (10 10 (:REWRITE |(< (* x y) 0)|))
 (10 10 (:REWRITE |(* 0 x)|))
 (8 8 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (8 8 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (8 8 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (8 4 (:LINEAR EXPT-X->=-X))
 (8 4 (:LINEAR EXPT-X->-X))
 (8 4 (:LINEAR EXPT->-1-ONE))
 (8 4 (:LINEAR EXPT-<=-1-TWO))
 (8 4 (:LINEAR EXPT-<-1-TWO))
 (4 4 (:REWRITE RATIONALP-WHEN-MEMBER-EQUAL-OF-RATIONAL-LISTP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-MEMBER-EQUAL-OF-ACL2-NUMBER-LISTP))
 (4 4 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (4 4 (:LINEAR EXPT-LINEAR-UPPER-<))
 (4 4 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (4 4 (:LINEAR EXPT-LINEAR-LOWER-<))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (/ x) (/ y))|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE REDUCE-RATIONALP-+))
 (2 2 (:REWRITE REDUCE-RATIONALP-*))
 (2 2 (:REWRITE RATIONALP-MINUS-X))
 (2 2 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE |(mod x (- y))| . 3))
 (2 2 (:REWRITE |(mod x (- y))| . 2))
 (2 2 (:REWRITE |(mod x (- y))| . 1))
 (2 2 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(mod (- x) y)| . 3))
 (2 2 (:REWRITE |(mod (- x) y)| . 2))
 (2 2 (:REWRITE |(mod (- x) y)| . 1))
 (2 2 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:REWRITE |(- (* c x))|))
 (2 2 (:META META-RATIONALP-CORRECT))
 )
(NAT=>LENDIAN-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(NAT=>LENDIAN-OF-NFIX-WIDTH
 (40 40 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (40 40 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (40 40 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (40 40 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (40 40 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 28 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (24 24 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (24 24 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (24 24 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (12 12 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (12 12 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (12 12 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (12 12 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (12 12 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (12 12 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (12 12 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (12 12 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (12 12 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (12 12 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (12 12 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 )
(NAT=>LENDIAN-NAT-EQUIV-CONGRUENCE-ON-WIDTH)
(NAT=>LENDIAN-OF-NFIX-NAT
 (421 421 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (421 421 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (421 421 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (421 421 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (421 421 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (224 224 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (192 192 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (192 192 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (192 192 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (185 185 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (185 185 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (185 185 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (185 185 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (185 185 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (185 185 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (185 185 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (185 185 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (185 185 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (185 185 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (185 185 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 (185 185 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (130 10 (:REWRITE ACL2-NUMBERP-X))
 (128 4 (:REWRITE DEFAULT-MOD-RATIO))
 (60 10 (:REWRITE RATIONALP-X))
 (46 46 (:REWRITE INTEGERP-WHEN-MEMBER-EQUAL-OF-INTEGER-LISTP))
 (44 4 (:REWRITE DEFAULT-TIMES-2))
 (44 4 (:REWRITE DEFAULT-MOD-2))
 (44 4 (:REWRITE DEFAULT-DIVIDE))
 (32 16 (:REWRITE DEFAULT-EXPT-1))
 (32 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (32 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (32 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (28 4 (:REWRITE |(/ (expt x n))|))
 (24 12 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (23 23 (:REWRITE REDUCE-INTEGERP-+))
 (23 23 (:REWRITE INTEGERP-MINUS-X))
 (23 23 (:META META-INTEGERP-CORRECT))
 (20 20 (:REWRITE RATIONALP-WHEN-MEMBER-EQUAL-OF-RATIONAL-LISTP))
 (20 20 (:REWRITE ACL2-NUMBERP-WHEN-MEMBER-EQUAL-OF-ACL2-NUMBER-LISTP))
 (18 18 (:REWRITE THE-FLOOR-BELOW))
 (18 18 (:REWRITE THE-FLOOR-ABOVE))
 (18 18 (:REWRITE DEFAULT-LESS-THAN-2))
 (16 16 (:REWRITE DEFAULT-EXPT-2))
 (16 16 (:REWRITE |(expt 1/c n)|))
 (16 16 (:REWRITE |(expt (- x) n)|))
 (13 13 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (13 13 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (13 13 (:REWRITE SIMPLIFY-SUMS-<))
 (13 13 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (13 13 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (13 13 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (13 13 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (13 13 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (13 13 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (13 13 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (13 13 (:REWRITE INTEGERP-<-CONSTANT))
 (13 13 (:REWRITE CONSTANT-<-INTEGERP))
 (13 13 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (13 13 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (13 13 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (13 13 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (13 13 (:REWRITE |(< c (- x))|))
 (13 13 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (13 13 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (13 13 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (13 13 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (13 13 (:REWRITE |(< (/ x) 0)|))
 (13 13 (:REWRITE |(< (/ x) (/ y))|))
 (13 13 (:REWRITE |(< (- x) c)|))
 (13 13 (:REWRITE |(< (- x) (- y))|))
 (13 13 (:REWRITE |(< (* x y) 0)|))
 (12 12 (:TYPE-PRESCRIPTION DAB-BASEP))
 (10 10 (:REWRITE REDUCE-RATIONALP-+))
 (10 10 (:REWRITE REDUCE-RATIONALP-*))
 (10 10 (:REWRITE RATIONALP-MINUS-X))
 (10 10 (:META META-RATIONALP-CORRECT))
 (10 4 (:REWRITE REPEAT-WHEN-ZP))
 (8 8 (:REWRITE DEFAULT-PLUS-2))
 (8 8 (:REWRITE DEFAULT-PLUS-1))
 (4 4 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (4 4 (:REWRITE DEFAULT-TIMES-1))
 (4 4 (:REWRITE DEFAULT-MOD-1))
 (4 4 (:REWRITE DEFAULT-MINUS))
 (4 4 (:REWRITE |(* 0 x)|))
 (2 2 (:REWRITE ZP-OPEN))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(NAT=>LENDIAN-NAT-EQUIV-CONGRUENCE-ON-NAT)
(BENDIAN=>NAT
 (12 2 (:REWRITE DEFAULT-TIMES-2))
 (12 2 (:REWRITE DEFAULT-TIMES-1))
 (7 1 (:DEFINITION LEN))
 (5 3 (:REWRITE DEFAULT-PLUS-2))
 (4 4 (:TYPE-PRESCRIPTION LEN))
 (4 3 (:REWRITE DEFAULT-PLUS-1))
 (4 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (2 2 (:REWRITE REV-WHEN-NOT-CONSP))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 1 (:REWRITE DEFAULT-EXPT-2))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 )
(NATP-OF-BENDIAN=>NAT)
(BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS)
(BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST)
(BENDIAN=>NAT-OF-TRUE-LIST-FIX)
(BENDIAN=>NAT-OF-NAT-LIST-FIX)
(BENDIAN=>NAT-OF-CONS
 (38 7 (:REWRITE DEFAULT-PLUS-2))
 (31 31 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (27 4 (:REWRITE DEFAULT-TIMES-2))
 (24 7 (:REWRITE DEFAULT-PLUS-1))
 (15 1 (:DEFINITION BINARY-APPEND))
 (14 2 (:DEFINITION LEN))
 (9 4 (:REWRITE DEFAULT-TIMES-1))
 (8 2 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (6 3 (:REWRITE DEFAULT-CDR))
 (6 2 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (5 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE CONSP-OF-REV))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE DEFAULT-EXPT-1))
 (4 1 (:REWRITE DEFAULT-CAR))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE REV-WHEN-NOT-CONSP))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 )
(BENDIAN=>NAT-OF-APPEND
 (32 5 (:REWRITE DEFAULT-PLUS-2))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (24 2 (:REWRITE DEFAULT-TIMES-2))
 (19 5 (:REWRITE DEFAULT-PLUS-1))
 (15 1 (:DEFINITION BINARY-APPEND))
 (14 2 (:DEFINITION LEN))
 (8 2 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (6 3 (:REWRITE DEFAULT-CDR))
 (5 5 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (4 4 (:REWRITE REV-WHEN-NOT-CONSP))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (4 4 (:REWRITE CONSP-OF-REV))
 (4 2 (:REWRITE DEFAULT-TIMES-1))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE DEFAULT-EXPT-1))
 (4 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (4 1 (:REWRITE DEFAULT-CAR))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 )
(BENDIAN=>NAT-OF-NIL)
(BENDIAN=>NAT-OF-ALL-ZEROS)
(BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT
 (152 2 (:REWRITE REPEAT-WHEN-ZP))
 (144 2 (:REWRITE ZP-OPEN))
 (26 26 (:TYPE-PRESCRIPTION LEN))
 (24 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (22 6 (:REWRITE ACL2-NUMBERP-X))
 (14 2 (:DEFINITION LEN))
 (8 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (8 4 (:REWRITE DEFAULT-LESS-THAN-2))
 (8 2 (:REWRITE RATIONALP-X))
 (6 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (6 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (4 4 (:REWRITE THE-FLOOR-BELOW))
 (4 4 (:REWRITE THE-FLOOR-ABOVE))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (4 4 (:REWRITE SIMPLIFY-SUMS-<))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 4 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (4 4 (:REWRITE INTEGERP-<-CONSTANT))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-1))
 (4 4 (:REWRITE CONSTANT-<-INTEGERP))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (- x))|))
 (4 4 (:REWRITE |(< 0 (/ x))|))
 (4 4 (:REWRITE |(< 0 (* x y))|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) (/ y))|))
 (4 4 (:REWRITE |(< (- x) c)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (2 2 (:TYPE-PRESCRIPTION ZP))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (2 2 (:REWRITE REV-WHEN-NOT-CONSP))
 (2 2 (:REWRITE REDUCE-RATIONALP-+))
 (2 2 (:REWRITE REDUCE-RATIONALP-*))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE RATIONALP-MINUS-X))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:META META-RATIONALP-CORRECT))
 (2 2 (:META META-INTEGERP-CORRECT))
 )
(BENDIAN=>NAT-OF-ALL-BASE-MINUS-1
 (138 15 (:REWRITE DEFAULT-PLUS-2))
 (77 77 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (77 77 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (77 77 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (77 77 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (77 77 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (70 2 (:LINEAR EXPT->=-1-TWO))
 (70 2 (:LINEAR EXPT-<=-1-ONE))
 (68 2 (:LINEAR EXPT-X->=-X))
 (66 2 (:LINEAR EXPT-X->-X))
 (66 2 (:LINEAR EXPT->-1-ONE))
 (66 2 (:LINEAR EXPT-<-1-TWO))
 (48 24 (:REWRITE DEFAULT-EXPT-1))
 (44 2 (:LINEAR EXPT->=-1-ONE))
 (32 18 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (32 18 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (32 18 (:REWRITE DEFAULT-LESS-THAN-2))
 (26 24 (:REWRITE DEFAULT-EXPT-2))
 (18 18 (:REWRITE THE-FLOOR-BELOW))
 (18 18 (:REWRITE THE-FLOOR-ABOVE))
 (18 18 (:REWRITE SIMPLIFY-SUMS-<))
 (18 18 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (18 18 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (18 18 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (18 18 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (18 18 (:REWRITE INTEGERP-<-CONSTANT))
 (18 18 (:REWRITE DEFAULT-LESS-THAN-1))
 (18 18 (:REWRITE CONSTANT-<-INTEGERP))
 (18 18 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (18 18 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (18 18 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (18 18 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (18 18 (:REWRITE |(< c (- x))|))
 (18 18 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (18 18 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (18 18 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (18 18 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (18 18 (:REWRITE |(< (/ x) (/ y))|))
 (18 18 (:REWRITE |(< (- x) c)|))
 (18 18 (:REWRITE |(< (- x) (- y))|))
 (16 16 (:REWRITE |(expt 1/c n)|))
 (16 16 (:REWRITE |(expt (- x) n)|))
 (15 15 (:REWRITE DEFAULT-PLUS-1))
 (14 8 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (7 7 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (7 7 (:REWRITE NORMALIZE-ADDENDS))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (6 2 (:LINEAR EXPT->-1-TWO))
 (6 2 (:LINEAR EXPT-<-1-ONE))
 (4 4 (:TYPE-PRESCRIPTION ZP))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (4 4 (:REWRITE REDUCE-INTEGERP-+))
 (4 4 (:REWRITE INTEGERP-MINUS-X))
 (4 4 (:REWRITE |(< (/ x) 0)|))
 (4 4 (:REWRITE |(< (* x y) 0)|))
 (4 4 (:META META-INTEGERP-CORRECT))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (4 4 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (3 3 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (3 3 (:LINEAR EXPT-LINEAR-UPPER-<))
 (3 3 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (3 3 (:LINEAR EXPT-LINEAR-LOWER-<))
 (2 2 (:REWRITE ZP-OPEN))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 )
(LENDIAN=>NAT-AS-BENDIAN=>NAT)
(BENDIAN=>NAT-OF-DAB-BASE-FIX-BASE)
(BENDIAN=>NAT-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(NAT=>BENDIAN*
 (13 2 (:REWRITE REV-WHEN-NOT-CONSP))
 (10 5 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (6 6 (:TYPE-PRESCRIPTION ZP))
 (5 1 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 2 (:REWRITE ZP-OPEN))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(RETURN-TYPE-OF-NAT=>BENDIAN*
 (2 1 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (1 1 (:TYPE-PRESCRIPTION ZP))
 )
(NATP-LISTP-OF-NAT=>BENDIAN*)
(CONSP-OF-NAT=>BENDIAN*)
(CONSP-OF-NAT=>BENDIAN*-IFF-NOT-ZP
 (30 15 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (6 3 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>BENDIAN*))
 (2 2 (:REWRITE ZP-OPEN))
 )
(NAT=>BENDIAN*-OF-0
 (3 3 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>BENDIAN*))
 )
(LEN-0-OF-NAT=>BENDIAN*)
(EXPT-OF-LEN-OF-NAT=>BENDIAN*-IS-UPPER-BOUND
 (33 33 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (33 33 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (33 33 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (33 33 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (33 33 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (11 1 (:DEFINITION LEN))
 (3 3 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (3 1 (:REWRITE DEFAULT-CDR))
 (2 2 (:TYPE-PRESCRIPTION NAT=>LENDIAN*))
 (2 2 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (2 1 (:REWRITE DEFAULT-PLUS-2))
 (2 1 (:REWRITE DEFAULT-EXPT-2))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE DEFAULT-PLUS-1))
 (1 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 )
(NAT=>BENDIAN*-DOES-NOT-START-WITH-0
 (6 3 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>BENDIAN*))
 (3 3 (:TYPE-PRESCRIPTION ZP))
 )
(LEN-OF-NAT=>BENDIAN*-LEQ-WIDTH
 (44 44 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (44 44 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (44 44 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (44 44 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (44 44 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (44 44 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (32 5 (:REWRITE SIMPLIFY-SUMS-<))
 (32 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (32 5 (:REWRITE DEFAULT-LESS-THAN-2))
 (15 1 (:DEFINITION LEN))
 (14 5 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (5 5 (:REWRITE THE-FLOOR-BELOW))
 (5 5 (:REWRITE THE-FLOOR-ABOVE))
 (5 5 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (5 5 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (5 5 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (5 5 (:REWRITE INTEGERP-<-CONSTANT))
 (5 5 (:REWRITE DEFAULT-LESS-THAN-1))
 (5 5 (:REWRITE CONSTANT-<-INTEGERP))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (- x))|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) (/ y))|))
 (5 5 (:REWRITE |(< (- x) c)|))
 (5 5 (:REWRITE |(< (- x) (- y))|))
 (3 2 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (3 1 (:REWRITE DEFAULT-CDR))
 (3 1 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (2 2 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (2 2 (:TYPE-PRESCRIPTION NAT=>LENDIAN*))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE DEFAULT-EXPT-2))
 (2 2 (:REWRITE DEFAULT-EXPT-1))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (2 2 (:REWRITE |(< (/ x) 0)|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:META META-INTEGERP-CORRECT))
 (2 1 (:REWRITE DEFAULT-PLUS-2))
 (1 1 (:TYPE-PRESCRIPTION ZP))
 (1 1 (:REWRITE ZP-OPEN))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE DEFAULT-PLUS-1))
 )
(NAT=>BENDIAN*-OF-DAB-BASE-FIX-BASE)
(NAT=>BENDIAN*-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(NAT=>BENDIAN*-OF-NFIX-NAT)
(NAT=>BENDIAN*-NAT-EQUIV-CONGRUENCE-ON-NAT)
(NAT=>BENDIAN+
 (12 6 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>BENDIAN*))
 (6 6 (:TYPE-PRESCRIPTION ZP))
 )
(RETURN-TYPE-OF-NAT=>BENDIAN+
 (20 10 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>BENDIAN*))
 (10 10 (:TYPE-PRESCRIPTION ZP))
 (6 6 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 2 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 )
(NAT-LISTP-OF-NAT=>BENDIAN+
 (4 2 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>BENDIAN*))
 (2 2 (:TYPE-PRESCRIPTION ZP))
 )
(NAT=>BENDIAN+-OF-0)
(NAT=>BENDIAN+-OF-DAB-BASE-FIX-BASE)
(NAT=>BENDIAN+-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(NAT=>BENDIAN+-OF-NFIX-NAT)
(NAT=>BENDIAN+-NAT-EQUIV-CONGRUENCE-ON-NAT)
(NAT=>BENDIAN
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (6 3 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN))
 (3 3 (:TYPE-PRESCRIPTION ZP))
 (3 3 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (3 3 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 )
(RETURN-TYPE-OF-NAT=>BENDIAN
 (2 1 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN))
 (1 1 (:TYPE-PRESCRIPTION ZP))
 )
(NAT-LISTP-OF-NAT=>BENDIAN)
(CONSP-OF-NAT=>BENDIAN)
(NAT=>BENDIAN-OF-MOD
 (176 1 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (172 28 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B))
 (166 1 (:REWRITE MOD-X-Y-=-X . 3))
 (145 1 (:REWRITE CANCEL-MOD-+))
 (84 84 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-ODD-EXPONENT))
 (84 84 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (84 84 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (84 84 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (84 84 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (84 84 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (82 1 (:REWRITE MOD-ZERO . 3))
 (46 1 (:REWRITE MOD-X-Y-=-X . 4))
 (43 1 (:REWRITE |(integerp (- x))|))
 (42 1 (:REWRITE DEFAULT-MOD-RATIO))
 (40 4 (:REWRITE DEFAULT-TIMES-2))
 (40 4 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (34 1 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (34 1 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (30 3 (:REWRITE DEFAULT-DIVIDE))
 (29 1 (:REWRITE MOD-ZERO . 4))
 (28 28 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (28 28 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (28 28 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (28 2 (:LINEAR EXPT->=-1-ONE))
 (28 1 (:REWRITE |(* (- x) y)|))
 (25 1 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (25 1 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (25 1 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (25 1 (:REWRITE MOD-X-Y-=-X . 2))
 (23 5 (:REWRITE SIMPLIFY-SUMS-<))
 (23 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (23 5 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (23 5 (:REWRITE DEFAULT-LESS-THAN-2))
 (18 3 (:REWRITE |(/ (expt x n))|))
 (17 4 (:REWRITE DEFAULT-MINUS))
 (16 16 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-2))
 (16 16 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (16 1 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (16 1 (:REWRITE MOD-CANCEL-*-CONST))
 (16 1 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (16 1 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (15 3 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (15 3 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (15 3 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (15 3 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (10 10 (:REWRITE DEFAULT-EXPT-2))
 (10 10 (:REWRITE DEFAULT-EXPT-1))
 (10 10 (:REWRITE |(expt 1/c n)|))
 (10 10 (:REWRITE |(expt (- x) n)|))
 (10 1 (:REWRITE DEFAULT-MOD-2))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (5 5 (:REWRITE THE-FLOOR-BELOW))
 (5 5 (:REWRITE THE-FLOOR-ABOVE))
 (5 5 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (5 5 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (5 5 (:REWRITE INTEGERP-<-CONSTANT))
 (5 5 (:REWRITE DEFAULT-LESS-THAN-1))
 (5 5 (:REWRITE CONSTANT-<-INTEGERP))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (- x))|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) (/ y))|))
 (5 5 (:REWRITE |(< (- x) c)|))
 (5 5 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE REDUCE-INTEGERP-+))
 (4 4 (:REWRITE INTEGERP-MINUS-X))
 (4 4 (:REWRITE DEFAULT-TIMES-1))
 (4 4 (:META META-INTEGERP-CORRECT))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (4 4 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (4 2 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN))
 (3 3 (:TYPE-PRESCRIPTION MOD-ZERO . 4))
 (3 3 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (3 3 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (3 3 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (3 3 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (3 3 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (3 3 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE |(expt x 0)|))
 (2 2 (:REWRITE |(< (/ x) 0)|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:LINEAR EXPT-X->=-X))
 (2 2 (:LINEAR EXPT-X->-X))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<))
 (2 2 (:LINEAR EXPT->=-1-TWO))
 (2 2 (:LINEAR EXPT->-1-TWO))
 (2 2 (:LINEAR EXPT->-1-ONE))
 (2 2 (:LINEAR EXPT-<=-1-TWO))
 (2 2 (:LINEAR EXPT-<=-1-ONE))
 (2 2 (:LINEAR EXPT-<-1-TWO))
 (2 2 (:LINEAR EXPT-<-1-ONE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-MOD-1))
 (1 1 (:REWRITE |(mod x (- y))| . 3))
 (1 1 (:REWRITE |(mod x (- y))| . 2))
 (1 1 (:REWRITE |(mod x (- y))| . 1))
 (1 1 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(mod (- x) y)| . 3))
 (1 1 (:REWRITE |(mod (- x) y)| . 2))
 (1 1 (:REWRITE |(mod (- x) y)| . 1))
 (1 1 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(- (* c x))|))
 )
(LEN-OF-NAT=>BENDIAN
 (8 1 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (8 1 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (4 2 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-2))
 (2 2 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B))
 (2 2 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (2 2 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (2 2 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (2 2 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (2 2 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (1 1 (:TYPE-PRESCRIPTION RATIONALP-MOD))
 (1 1 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (1 1 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (1 1 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (1 1 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (1 1 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (1 1 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (1 1 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 )
(NAT=>BENDIAN-OF-DAB-BASE-FIX-BASE)
(NAT=>BENDIAN-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(NAT=>BENDIAN-OF-NFIX-WIDTH)
(NAT=>BENDIAN-NAT-EQUIV-CONGRUENCE-ON-WIDTH)
(NAT=>BENDIAN-OF-NFIX-NAT)
(NAT=>BENDIAN-NAT-EQUIV-CONGRUENCE-ON-NAT)
(LENDIAN=>NAT-OF-NAT=>LENDIAN*
 (11037 9 (:REWRITE DEFAULT-PLUS-1))
 (7374 4 (:REWRITE ACL2-NUMBERP-X))
 (3848 4 (:REWRITE RATIONALP-X))
 (3684 4 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (3281 3281 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (3281 3281 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (3281 3281 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (3044 2 (:DEFINITION RATIONAL-LISTP))
 (3034 4 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (2884 6 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (2402 1 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (2394 2 (:DEFINITION ACL2-NUMBER-LISTP))
 (2314 178 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (2303 3 (:REWRITE ZP-OPEN))
 (2082 2 (:DEFINITION INTEGER-LISTP))
 (2015 24 (:REWRITE THE-FLOOR-BELOW))
 (1602 178 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (1602 178 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (1141 2 (:LINEAR LINEAR-FLOOR-BOUNDS-1))
 (890 178 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (890 178 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (890 178 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (890 178 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (890 178 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (890 178 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (890 178 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (890 178 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (756 8 (:REWRITE DEFAULT-CDR))
 (756 8 (:REWRITE DEFAULT-CAR))
 (636 4 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (636 4 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (369 41 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (320 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (311 9 (:REWRITE DEFAULT-PLUS-2))
 (258 3 (:REWRITE FLOOR-ZERO . 3))
 (205 41 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (202 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (202 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (169 37 (:REWRITE DEFAULT-TIMES-2))
 (168 1 (:REWRITE FLOOR-POSITIVE . 1))
 (162 2 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (162 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (162 2 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (144 3 (:REWRITE CANCEL-FLOOR-+))
 (136 37 (:REWRITE DEFAULT-TIMES-1))
 (123 3 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (117 3 (:REWRITE FLOOR-ZERO . 4))
 (106 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (100 2 (:REWRITE CANCEL-MOD-+))
 (97 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (95 5 (:REWRITE |(integerp (- x))|))
 (82 2 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (82 1 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (78 3 (:REWRITE FLOOR-=-X/Y . 3))
 (78 3 (:REWRITE FLOOR-=-X/Y . 2))
 (78 2 (:REWRITE MOD-X-Y-=-X . 3))
 (77 2 (:REWRITE FLOOR-=-X/Y . 4))
 (60 5 (:REWRITE |(* (- x) y)|))
 (56 28 (:REWRITE DEFAULT-DIVIDE))
 (56 22 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (54 22 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (54 2 (:REWRITE MOD-ZERO . 3))
 (42 22 (:REWRITE DEFAULT-LESS-THAN-1))
 (39 3 (:REWRITE DEFAULT-FLOOR-RATIO))
 (37 22 (:REWRITE DEFAULT-LESS-THAN-2))
 (35 22 (:REWRITE SIMPLIFY-SUMS-<))
 (31 1 (:LINEAR LINEAR-FLOOR-BOUNDS-3))
 (30 30 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (30 5 (:REWRITE DEFAULT-MINUS))
 (28 28 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (27 1 (:LINEAR MOD-BOUNDS-3))
 (26 2 (:REWRITE DEFAULT-MOD-RATIO))
 (26 1 (:LINEAR LINEAR-FLOOR-BOUNDS-2))
 (23 23 (:REWRITE REDUCE-INTEGERP-+))
 (23 23 (:REWRITE INTEGERP-MINUS-X))
 (23 23 (:META META-INTEGERP-CORRECT))
 (23 22 (:REWRITE |(< (/ x) (/ y))|))
 (22 22 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (22 22 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (22 22 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (22 22 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (22 22 (:REWRITE INTEGERP-<-CONSTANT))
 (22 22 (:REWRITE CONSTANT-<-INTEGERP))
 (22 22 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (22 22 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (22 22 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (22 22 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (22 22 (:REWRITE |(< c (- x))|))
 (22 22 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (22 22 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (22 22 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (22 22 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (22 22 (:REWRITE |(< (- x) c)|))
 (22 22 (:REWRITE |(< (- x) (- y))|))
 (21 3 (:REWRITE FLOOR-ZERO . 2))
 (21 3 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (21 3 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (21 3 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (20 4 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (20 4 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (20 4 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (20 4 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (18 3 (:REWRITE FLOOR-ZERO . 5))
 (18 3 (:REWRITE FLOOR-CANCEL-*-CONST))
 (16 16 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (16 2 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (16 2 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (14 14 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (14 14 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (14 14 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (14 2 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (14 2 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (14 2 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (14 2 (:REWRITE MOD-X-Y-=-X . 2))
 (14 2 (:LINEAR MOD-BOUNDS-2))
 (13 5 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (13 3 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (13 3 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (13 3 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (12 3 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (12 2 (:REWRITE MOD-ZERO . 4))
 (12 2 (:REWRITE MOD-X-Y-=-X . 4))
 (12 2 (:REWRITE MOD-CANCEL-*-CONST))
 (12 2 (:REWRITE |(equal (floor (+ x y) z) x)|))
 (9 3 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (8 8 (:TYPE-PRESCRIPTION DAB-BASEP))
 (8 3 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (8 3 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (8 3 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (7 2 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (7 2 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (7 2 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (7 2 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (7 2 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (7 2 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (6 3 (:REWRITE DEFAULT-FLOOR-2))
 (5 5 (:REWRITE |(- (* c x))|))
 (5 4 (:REWRITE |(< (/ x) 0)|))
 (4 4 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (4 4 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (4 4 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (4 4 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (4 4 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE |(< (* x y) 0)|))
 (4 4 (:META META-RATIONALP-CORRECT))
 (4 3 (:REWRITE |(equal (/ x) (/ y))|))
 (4 2 (:REWRITE DEFAULT-MOD-2))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE DEFAULT-FLOOR-1))
 (3 3 (:REWRITE |(floor x (- y))| . 2))
 (3 3 (:REWRITE |(floor x (- y))| . 1))
 (3 3 (:REWRITE |(floor (- x) y)| . 2))
 (3 3 (:REWRITE |(floor (- x) y)| . 1))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE DEFAULT-MOD-1))
 (2 2 (:REWRITE |(mod x (- y))| . 3))
 (2 2 (:REWRITE |(mod x (- y))| . 2))
 (2 2 (:REWRITE |(mod x (- y))| . 1))
 (2 2 (:REWRITE |(mod (- x) y)| . 3))
 (2 2 (:REWRITE |(mod (- x) y)| . 2))
 (2 2 (:REWRITE |(mod (- x) y)| . 1))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (1 1 (:REWRITE RETURN-TYPE-OF-NAT=>LENDIAN*))
 (1 1 (:REWRITE FLOOR-ZERO . 1))
 (1 1 (:REWRITE FLOOR-POSITIVE . 4))
 (1 1 (:REWRITE FLOOR-POSITIVE . 3))
 (1 1 (:REWRITE FLOOR-POSITIVE . 2))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (1 1 (:REWRITE |(< (* x (/ y)) 0) rationalp (* x (/ y))|))
 )
(LENDIAN=>NAT-OF-NAT=>LENDIAN+
 (39 39 (:TYPE-PRESCRIPTION ZP))
 (36 4 (:REWRITE ACL2-NUMBERP-X))
 (16 4 (:REWRITE RATIONALP-X))
 (10 10 (:REWRITE REDUCE-INTEGERP-+))
 (10 10 (:REWRITE INTEGERP-MINUS-X))
 (10 10 (:META META-INTEGERP-CORRECT))
 (9 9 (:REWRITE THE-FLOOR-BELOW))
 (9 9 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE DEFAULT-LESS-THAN-2))
 (7 7 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (7 7 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (7 7 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (7 7 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (7 7 (:REWRITE INTEGERP-<-CONSTANT))
 (7 7 (:REWRITE CONSTANT-<-INTEGERP))
 (7 7 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (7 7 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (7 7 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (7 7 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (7 7 (:REWRITE |(< c (- x))|))
 (7 7 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (7 7 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (7 7 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (7 7 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (7 7 (:REWRITE |(< (/ x) 0)|))
 (7 7 (:REWRITE |(< (/ x) (/ y))|))
 (7 7 (:REWRITE |(< (- x) c)|))
 (7 7 (:REWRITE |(< (- x) (- y))|))
 (7 7 (:REWRITE |(< (* x y) 0)|))
 (7 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (7 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (6 6 (:REWRITE SIMPLIFY-SUMS-<))
 (6 6 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (6 6 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (5 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:META META-RATIONALP-CORRECT))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 )
(LENDIAN=>NAT-OF-NAT=>LENDIAN
 (486 120 (:REWRITE DEFAULT-LESS-THAN-2))
 (283 283 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (283 283 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (283 283 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (283 283 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (283 283 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (274 97 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (245 7 (:LINEAR EXPT->=-1-TWO))
 (245 7 (:LINEAR EXPT-<=-1-ONE))
 (231 7 (:LINEAR EXPT-X->-X))
 (231 7 (:LINEAR EXPT->-1-ONE))
 (231 7 (:LINEAR EXPT-<-1-TWO))
 (211 97 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (209 7 (:LINEAR EXPT-<=-1-TWO))
 (186 26 (:REWRITE ACL2-NUMBERP-X))
 (176 7 (:LINEAR EXPT-X->=-X))
 (170 9 (:REWRITE DEFAULT-MOD-RATIO))
 (149 3 (:REWRITE REPEAT-WHEN-ZP))
 (144 8 (:REWRITE ZP-OPEN))
 (137 97 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (120 120 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (120 120 (:REWRITE THE-FLOOR-BELOW))
 (120 120 (:REWRITE THE-FLOOR-ABOVE))
 (108 96 (:REWRITE SIMPLIFY-SUMS-<))
 (104 104 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (104 104 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (104 104 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (98 97 (:REWRITE |(< c (- x))|))
 (97 97 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (97 97 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (97 97 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (97 97 (:REWRITE INTEGERP-<-CONSTANT))
 (97 97 (:REWRITE CONSTANT-<-INTEGERP))
 (97 97 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (97 97 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (97 97 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (97 97 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (97 97 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (97 97 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (97 97 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (97 97 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (97 97 (:REWRITE |(< (/ x) (/ y))|))
 (97 97 (:REWRITE |(< (- x) c)|))
 (97 97 (:REWRITE |(< (- x) (- y))|))
 (90 1 (:REWRITE MOD-ZERO . 3))
 (82 14 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (78 14 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (74 23 (:REWRITE DEFAULT-TIMES-2))
 (72 36 (:REWRITE DEFAULT-EXPT-1))
 (69 69 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (67 23 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (56 26 (:REWRITE RATIONALP-X))
 (48 1 (:REWRITE MOD-X-Y-=-X . 4))
 (44 44 (:TYPE-PRESCRIPTION DAB-BASEP))
 (44 44 (:REWRITE REDUCE-INTEGERP-+))
 (44 44 (:REWRITE INTEGERP-MINUS-X))
 (44 44 (:META META-INTEGERP-CORRECT))
 (44 4 (:REWRITE DEFAULT-DIVIDE))
 (39 9 (:REWRITE DEFAULT-MOD-2))
 (37 37 (:TYPE-PRESCRIPTION LEN))
 (35 35 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (35 35 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (35 35 (:REWRITE |(< (/ x) 0)|))
 (35 35 (:REWRITE |(< (* x y) 0)|))
 (34 34 (:REWRITE |(expt 1/c n)|))
 (34 34 (:REWRITE |(expt (- x) n)|))
 (34 6 (:REWRITE |(* (if a b c) x)|))
 (31 1 (:REWRITE MOD-ZERO . 4))
 (30 2 (:DEFINITION LEN))
 (28 4 (:REWRITE |(/ (expt x n))|))
 (28 1 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (28 1 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (28 1 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (28 1 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (26 26 (:REWRITE REDUCE-RATIONALP-+))
 (26 26 (:REWRITE REDUCE-RATIONALP-*))
 (26 26 (:REWRITE RATIONALP-MINUS-X))
 (26 26 (:META META-RATIONALP-CORRECT))
 (24 6 (:REWRITE |(* y x)|))
 (23 23 (:REWRITE DEFAULT-TIMES-1))
 (23 16 (:REWRITE DEFAULT-PLUS-2))
 (21 16 (:REWRITE DEFAULT-PLUS-1))
 (21 7 (:LINEAR EXPT->-1-TWO))
 (21 7 (:LINEAR EXPT-<-1-ONE))
 (21 1 (:REWRITE |(+ y (+ x z))|))
 (20 1 (:DEFINITION BINARY-APPEND))
 (18 14 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (14 4 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (13 13 (:REWRITE |(< 0 (/ x))|))
 (13 13 (:REWRITE |(< 0 (* x y))|))
 (13 4 (:REWRITE NORMALIZE-ADDENDS))
 (12 12 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (12 12 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (11 11 (:TYPE-PRESCRIPTION ZP))
 (9 9 (:REWRITE DEFAULT-MOD-1))
 (9 3 (:REWRITE DEFAULT-CDR))
 (8 8 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (8 8 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (8 8 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (8 8 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (8 8 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (8 8 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (8 8 (:TYPE-PRESCRIPTION MOD-NONNEGATIVE))
 (8 8 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (8 8 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (8 8 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (8 8 (:TYPE-PRESCRIPTION INTEGERP-MOD-1))
 (8 8 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (7 7 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (7 7 (:LINEAR EXPT-LINEAR-UPPER-<))
 (7 7 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (7 7 (:LINEAR EXPT-LINEAR-LOWER-<))
 (7 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (7 5 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (6 6 (:REWRITE |(* 1 x)|))
 (6 5 (:REWRITE DEFAULT-MINUS))
 (6 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (5 5 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (5 5 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (5 5 (:REWRITE |(equal c (/ x))|))
 (5 5 (:REWRITE |(equal c (- x))|))
 (5 5 (:REWRITE |(equal (/ x) c)|))
 (5 5 (:REWRITE |(equal (/ x) (/ y))|))
 (5 5 (:REWRITE |(equal (- x) c)|))
 (5 5 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (4 2 (:DEFINITION FIX))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (3 3 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 1 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (2 1 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (1 1 (:REWRITE |(< y (+ (- c) x))|))
 (1 1 (:REWRITE |(< x (+ c/d y))|))
 (1 1 (:REWRITE |(+ x (- x))|))
 )
(BENDIAN=>NAT-OF-NAT=>BENDIAN*)
(BENDIAN=>NAT-OF-NAT=>BENDIAN+
 (39 39 (:TYPE-PRESCRIPTION ZP))
 (36 4 (:REWRITE ACL2-NUMBERP-X))
 (16 4 (:REWRITE RATIONALP-X))
 (10 10 (:REWRITE REDUCE-INTEGERP-+))
 (10 10 (:REWRITE INTEGERP-MINUS-X))
 (10 10 (:META META-INTEGERP-CORRECT))
 (9 9 (:REWRITE THE-FLOOR-BELOW))
 (9 9 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE DEFAULT-LESS-THAN-2))
 (7 7 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (7 7 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (7 7 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (7 7 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (7 7 (:REWRITE INTEGERP-<-CONSTANT))
 (7 7 (:REWRITE CONSTANT-<-INTEGERP))
 (7 7 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (7 7 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (7 7 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (7 7 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (7 7 (:REWRITE |(< c (- x))|))
 (7 7 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (7 7 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (7 7 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (7 7 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (7 7 (:REWRITE |(< (/ x) 0)|))
 (7 7 (:REWRITE |(< (/ x) (/ y))|))
 (7 7 (:REWRITE |(< (- x) c)|))
 (7 7 (:REWRITE |(< (- x) (- y))|))
 (7 7 (:REWRITE |(< (* x y) 0)|))
 (7 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (7 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (6 6 (:REWRITE SIMPLIFY-SUMS-<))
 (6 6 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (6 6 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (5 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:META META-RATIONALP-CORRECT))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 )
(BENDIAN=>NAT-OF-NAT=>BENDIAN
 (194 61 (:REWRITE DEFAULT-LESS-THAN-2))
 (102 49 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (102 49 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (77 77 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (77 77 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (77 77 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (77 77 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (77 77 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (71 2 (:LINEAR EXPT-<=-1-TWO))
 (70 2 (:LINEAR EXPT->=-1-TWO))
 (70 2 (:LINEAR EXPT-<=-1-ONE))
 (69 49 (:REWRITE SIMPLIFY-SUMS-<))
 (66 2 (:LINEAR EXPT-X->-X))
 (66 2 (:LINEAR EXPT->-1-ONE))
 (66 2 (:LINEAR EXPT-<-1-TWO))
 (61 61 (:REWRITE THE-FLOOR-BELOW))
 (61 61 (:REWRITE THE-FLOOR-ABOVE))
 (61 61 (:REWRITE DEFAULT-LESS-THAN-1))
 (61 2 (:LINEAR EXPT-X->=-X))
 (52 26 (:REWRITE DEFAULT-EXPT-1))
 (49 49 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (49 49 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (49 49 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (49 49 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (49 49 (:REWRITE INTEGERP-<-CONSTANT))
 (49 49 (:REWRITE CONSTANT-<-INTEGERP))
 (49 49 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (49 49 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (49 49 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (49 49 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (49 49 (:REWRITE |(< c (- x))|))
 (49 49 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (49 49 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (49 49 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (49 49 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (49 49 (:REWRITE |(< (/ x) (/ y))|))
 (49 49 (:REWRITE |(< (- x) c)|))
 (49 49 (:REWRITE |(< (- x) (- y))|))
 (38 38 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (38 4 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (30 10 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (27 26 (:REWRITE DEFAULT-EXPT-2))
 (26 26 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (26 26 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (26 26 (:REWRITE |(< (/ x) 0)|))
 (26 26 (:REWRITE |(< (* x y) 0)|))
 (22 22 (:REWRITE REDUCE-INTEGERP-+))
 (22 22 (:REWRITE INTEGERP-MINUS-X))
 (22 22 (:META META-INTEGERP-CORRECT))
 (20 20 (:TYPE-PRESCRIPTION DAB-BASEP))
 (20 20 (:REWRITE |(expt 1/c n)|))
 (20 20 (:REWRITE |(expt (- x) n)|))
 (6 2 (:LINEAR EXPT->-1-TWO))
 (6 2 (:LINEAR EXPT-<-1-ONE))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (4 4 (:REWRITE |(< 0 (/ x))|))
 (4 4 (:REWRITE |(< 0 (* x y))|))
 (4 4 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (4 2 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN))
 (2 2 (:TYPE-PRESCRIPTION ZP))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<))
 )
(NAT=>LENDIAN*-INJECTIVITY
 (272 272 (:TYPE-PRESCRIPTION ZP))
 (105 51 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (105 51 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (93 51 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (72 8 (:REWRITE ACL2-NUMBERP-X))
 (56 56 (:REWRITE THE-FLOOR-BELOW))
 (56 56 (:REWRITE THE-FLOOR-ABOVE))
 (56 56 (:REWRITE DEFAULT-LESS-THAN-2))
 (52 52 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (52 52 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (52 52 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (52 52 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (52 52 (:REWRITE INTEGERP-<-CONSTANT))
 (52 52 (:REWRITE CONSTANT-<-INTEGERP))
 (52 52 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (52 52 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (52 52 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (52 52 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (52 52 (:REWRITE |(< c (- x))|))
 (52 52 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (52 52 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (52 52 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (52 52 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (52 52 (:REWRITE |(< (/ x) 0)|))
 (52 52 (:REWRITE |(< (/ x) (/ y))|))
 (52 52 (:REWRITE |(< (- x) c)|))
 (52 52 (:REWRITE |(< (- x) (- y))|))
 (52 52 (:REWRITE |(< (* x y) 0)|))
 (51 51 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (51 51 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (51 51 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (51 51 (:REWRITE |(equal c (/ x))|))
 (51 51 (:REWRITE |(equal c (- x))|))
 (51 51 (:REWRITE |(equal (/ x) c)|))
 (51 51 (:REWRITE |(equal (/ x) (/ y))|))
 (51 51 (:REWRITE |(equal (- x) c)|))
 (51 51 (:REWRITE |(equal (- x) (- y))|))
 (48 48 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (48 48 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (48 48 (:REWRITE SIMPLIFY-SUMS-<))
 (48 48 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (48 48 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (32 8 (:REWRITE RATIONALP-X))
 (30 30 (:REWRITE REDUCE-INTEGERP-+))
 (30 30 (:REWRITE INTEGERP-MINUS-X))
 (30 30 (:META META-INTEGERP-CORRECT))
 (24 24 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (24 24 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (24 24 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (8 8 (:REWRITE REDUCE-RATIONALP-+))
 (8 8 (:REWRITE REDUCE-RATIONALP-*))
 (8 8 (:REWRITE RATIONALP-MINUS-X))
 (8 8 (:META META-RATIONALP-CORRECT))
 )
(NAT=>LENDIAN+-INJECTIVITY
 (87 51 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (87 51 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (75 51 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (72 8 (:REWRITE ACL2-NUMBERP-X))
 (56 56 (:REWRITE THE-FLOOR-BELOW))
 (56 56 (:REWRITE THE-FLOOR-ABOVE))
 (56 56 (:REWRITE DEFAULT-LESS-THAN-2))
 (56 28 (:REWRITE DEFAULT-CDR))
 (56 28 (:REWRITE DEFAULT-CAR))
 (52 52 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (52 52 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (52 52 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (52 52 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (52 52 (:REWRITE INTEGERP-<-CONSTANT))
 (52 52 (:REWRITE CONSTANT-<-INTEGERP))
 (52 52 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (52 52 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (52 52 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (52 52 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (52 52 (:REWRITE |(< c (- x))|))
 (52 52 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (52 52 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (52 52 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (52 52 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (52 52 (:REWRITE |(< (/ x) 0)|))
 (52 52 (:REWRITE |(< (/ x) (/ y))|))
 (52 52 (:REWRITE |(< (- x) c)|))
 (52 52 (:REWRITE |(< (- x) (- y))|))
 (52 52 (:REWRITE |(< (* x y) 0)|))
 (51 51 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (51 51 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (51 51 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (51 51 (:REWRITE |(equal c (/ x))|))
 (51 51 (:REWRITE |(equal c (- x))|))
 (51 51 (:REWRITE |(equal (/ x) c)|))
 (51 51 (:REWRITE |(equal (/ x) (/ y))|))
 (51 51 (:REWRITE |(equal (- x) c)|))
 (51 51 (:REWRITE |(equal (- x) (- y))|))
 (48 48 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (48 48 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (48 48 (:REWRITE SIMPLIFY-SUMS-<))
 (48 48 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (48 48 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (32 8 (:REWRITE RATIONALP-X))
 (30 30 (:REWRITE REDUCE-INTEGERP-+))
 (30 30 (:REWRITE INTEGERP-MINUS-X))
 (30 30 (:META META-INTEGERP-CORRECT))
 (24 24 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (24 24 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (24 24 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (8 8 (:REWRITE REDUCE-RATIONALP-+))
 (8 8 (:REWRITE REDUCE-RATIONALP-*))
 (8 8 (:REWRITE RATIONALP-MINUS-X))
 (8 8 (:META META-RATIONALP-CORRECT))
 )
(NAT=>LENDIAN-INJECTIVITY
 (4206 2909 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN))
 (2754 771 (:REWRITE DEFAULT-LESS-THAN-2))
 (2123 2123 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (2123 2123 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (2123 2123 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (2123 2123 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (2123 2123 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (1376 655 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1376 655 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1297 1297 (:TYPE-PRESCRIPTION ZP))
 (945 655 (:REWRITE SIMPLIFY-SUMS-<))
 (771 771 (:REWRITE THE-FLOOR-BELOW))
 (771 771 (:REWRITE THE-FLOOR-ABOVE))
 (665 19 (:LINEAR EXPT->=-1-TWO))
 (665 19 (:LINEAR EXPT-<=-1-ONE))
 (661 661 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (661 661 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (661 661 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (661 661 (:REWRITE INTEGERP-<-CONSTANT))
 (661 661 (:REWRITE CONSTANT-<-INTEGERP))
 (661 661 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (661 661 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (661 661 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (661 661 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (661 661 (:REWRITE |(< c (- x))|))
 (661 661 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (661 661 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (661 661 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (661 661 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (661 661 (:REWRITE |(< (/ x) (/ y))|))
 (661 661 (:REWRITE |(< (- x) c)|))
 (661 661 (:REWRITE |(< (- x) (- y))|))
 (653 19 (:LINEAR EXPT-<=-1-TWO))
 (627 19 (:LINEAR EXPT-X->-X))
 (627 19 (:LINEAR EXPT->-1-ONE))
 (627 19 (:LINEAR EXPT-<-1-TWO))
 (592 296 (:REWRITE DEFAULT-EXPT-1))
 (560 19 (:LINEAR EXPT-X->=-X))
 (483 161 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (446 38 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (367 367 (:REWRITE |(< (/ x) 0)|))
 (367 367 (:REWRITE |(< (* x y) 0)|))
 (364 152 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (364 152 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (363 363 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (363 363 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (338 152 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (322 322 (:TYPE-PRESCRIPTION DAB-BASEP))
 (297 296 (:REWRITE DEFAULT-EXPT-2))
 (264 40 (:REWRITE ACL2-NUMBERP-X))
 (244 244 (:REWRITE |(expt 1/c n)|))
 (244 244 (:REWRITE |(expt (- x) n)|))
 (198 198 (:REWRITE REDUCE-INTEGERP-+))
 (198 198 (:REWRITE INTEGERP-MINUS-X))
 (198 198 (:META META-INTEGERP-CORRECT))
 (152 152 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (152 152 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (152 152 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (152 152 (:REWRITE |(equal c (/ x))|))
 (152 152 (:REWRITE |(equal c (- x))|))
 (152 152 (:REWRITE |(equal (/ x) c)|))
 (152 152 (:REWRITE |(equal (/ x) (/ y))|))
 (152 152 (:REWRITE |(equal (- x) c)|))
 (152 152 (:REWRITE |(equal (- x) (- y))|))
 (102 38 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (64 40 (:REWRITE RATIONALP-X))
 (57 57 (:REWRITE |(< 0 (/ x))|))
 (57 57 (:REWRITE |(< 0 (* x y))|))
 (57 19 (:LINEAR EXPT->-1-TWO))
 (57 19 (:LINEAR EXPT-<-1-ONE))
 (55 55 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (55 55 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (48 48 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (42 38 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (40 40 (:REWRITE REDUCE-RATIONALP-+))
 (40 40 (:REWRITE REDUCE-RATIONALP-*))
 (40 40 (:REWRITE RATIONALP-MINUS-X))
 (40 40 (:META META-RATIONALP-CORRECT))
 (31 31 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (31 31 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (19 19 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (19 19 (:LINEAR EXPT-LINEAR-UPPER-<))
 (19 19 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (19 19 (:LINEAR EXPT-LINEAR-LOWER-<))
 )
(NAT=>BENDIAN*-INJECTIVITY
 (272 272 (:TYPE-PRESCRIPTION ZP))
 (105 51 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (105 51 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (93 51 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (72 8 (:REWRITE ACL2-NUMBERP-X))
 (56 56 (:REWRITE THE-FLOOR-BELOW))
 (56 56 (:REWRITE THE-FLOOR-ABOVE))
 (56 56 (:REWRITE DEFAULT-LESS-THAN-2))
 (52 52 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (52 52 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (52 52 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (52 52 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (52 52 (:REWRITE INTEGERP-<-CONSTANT))
 (52 52 (:REWRITE CONSTANT-<-INTEGERP))
 (52 52 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (52 52 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (52 52 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (52 52 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (52 52 (:REWRITE |(< c (- x))|))
 (52 52 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (52 52 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (52 52 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (52 52 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (52 52 (:REWRITE |(< (/ x) 0)|))
 (52 52 (:REWRITE |(< (/ x) (/ y))|))
 (52 52 (:REWRITE |(< (- x) c)|))
 (52 52 (:REWRITE |(< (- x) (- y))|))
 (52 52 (:REWRITE |(< (* x y) 0)|))
 (51 51 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (51 51 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (51 51 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (51 51 (:REWRITE |(equal c (/ x))|))
 (51 51 (:REWRITE |(equal c (- x))|))
 (51 51 (:REWRITE |(equal (/ x) c)|))
 (51 51 (:REWRITE |(equal (/ x) (/ y))|))
 (51 51 (:REWRITE |(equal (- x) c)|))
 (51 51 (:REWRITE |(equal (- x) (- y))|))
 (48 48 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (48 48 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (48 48 (:REWRITE SIMPLIFY-SUMS-<))
 (48 48 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (48 48 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (32 8 (:REWRITE RATIONALP-X))
 (30 30 (:REWRITE REDUCE-INTEGERP-+))
 (30 30 (:REWRITE INTEGERP-MINUS-X))
 (30 30 (:META META-INTEGERP-CORRECT))
 (24 24 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (24 24 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (24 24 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (8 8 (:REWRITE REDUCE-RATIONALP-+))
 (8 8 (:REWRITE REDUCE-RATIONALP-*))
 (8 8 (:REWRITE RATIONALP-MINUS-X))
 (8 8 (:META META-RATIONALP-CORRECT))
 )
(NAT=>BENDIAN+-INJECTIVITY
 (87 51 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (87 51 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (75 51 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (72 8 (:REWRITE ACL2-NUMBERP-X))
 (56 56 (:REWRITE THE-FLOOR-BELOW))
 (56 56 (:REWRITE THE-FLOOR-ABOVE))
 (56 56 (:REWRITE DEFAULT-LESS-THAN-2))
 (56 28 (:REWRITE DEFAULT-CDR))
 (56 28 (:REWRITE DEFAULT-CAR))
 (52 52 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (52 52 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (52 52 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (52 52 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (52 52 (:REWRITE INTEGERP-<-CONSTANT))
 (52 52 (:REWRITE CONSTANT-<-INTEGERP))
 (52 52 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (52 52 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (52 52 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (52 52 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (52 52 (:REWRITE |(< c (- x))|))
 (52 52 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (52 52 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (52 52 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (52 52 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (52 52 (:REWRITE |(< (/ x) 0)|))
 (52 52 (:REWRITE |(< (/ x) (/ y))|))
 (52 52 (:REWRITE |(< (- x) c)|))
 (52 52 (:REWRITE |(< (- x) (- y))|))
 (52 52 (:REWRITE |(< (* x y) 0)|))
 (51 51 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (51 51 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (51 51 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (51 51 (:REWRITE |(equal c (/ x))|))
 (51 51 (:REWRITE |(equal c (- x))|))
 (51 51 (:REWRITE |(equal (/ x) c)|))
 (51 51 (:REWRITE |(equal (/ x) (/ y))|))
 (51 51 (:REWRITE |(equal (- x) c)|))
 (51 51 (:REWRITE |(equal (- x) (- y))|))
 (48 48 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (48 48 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (48 48 (:REWRITE SIMPLIFY-SUMS-<))
 (48 48 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (48 48 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (32 8 (:REWRITE RATIONALP-X))
 (30 30 (:REWRITE REDUCE-INTEGERP-+))
 (30 30 (:REWRITE INTEGERP-MINUS-X))
 (30 30 (:META META-INTEGERP-CORRECT))
 (24 24 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (24 24 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (24 24 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (8 8 (:REWRITE REDUCE-RATIONALP-+))
 (8 8 (:REWRITE REDUCE-RATIONALP-*))
 (8 8 (:REWRITE RATIONALP-MINUS-X))
 (8 8 (:META META-RATIONALP-CORRECT))
 )
(NAT=>BENDIAN-INJECTIVITY
 (4206 2909 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>BENDIAN))
 (2754 771 (:REWRITE DEFAULT-LESS-THAN-2))
 (2123 2123 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (2123 2123 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (2123 2123 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (2123 2123 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (2123 2123 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (1376 655 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1376 655 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1297 1297 (:TYPE-PRESCRIPTION ZP))
 (945 655 (:REWRITE SIMPLIFY-SUMS-<))
 (771 771 (:REWRITE THE-FLOOR-BELOW))
 (771 771 (:REWRITE THE-FLOOR-ABOVE))
 (665 19 (:LINEAR EXPT->=-1-TWO))
 (665 19 (:LINEAR EXPT-<=-1-ONE))
 (661 661 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (661 661 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (661 661 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (661 661 (:REWRITE INTEGERP-<-CONSTANT))
 (661 661 (:REWRITE CONSTANT-<-INTEGERP))
 (661 661 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (661 661 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (661 661 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (661 661 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (661 661 (:REWRITE |(< c (- x))|))
 (661 661 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (661 661 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (661 661 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (661 661 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (661 661 (:REWRITE |(< (/ x) (/ y))|))
 (661 661 (:REWRITE |(< (- x) c)|))
 (661 661 (:REWRITE |(< (- x) (- y))|))
 (653 19 (:LINEAR EXPT-<=-1-TWO))
 (627 19 (:LINEAR EXPT-X->-X))
 (627 19 (:LINEAR EXPT->-1-ONE))
 (627 19 (:LINEAR EXPT-<-1-TWO))
 (592 296 (:REWRITE DEFAULT-EXPT-1))
 (560 19 (:LINEAR EXPT-X->=-X))
 (483 161 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (446 38 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (367 367 (:REWRITE |(< (/ x) 0)|))
 (367 367 (:REWRITE |(< (* x y) 0)|))
 (364 152 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (364 152 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (363 363 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (363 363 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (338 152 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (322 322 (:TYPE-PRESCRIPTION DAB-BASEP))
 (297 296 (:REWRITE DEFAULT-EXPT-2))
 (264 40 (:REWRITE ACL2-NUMBERP-X))
 (244 244 (:REWRITE |(expt 1/c n)|))
 (244 244 (:REWRITE |(expt (- x) n)|))
 (198 198 (:REWRITE REDUCE-INTEGERP-+))
 (198 198 (:REWRITE INTEGERP-MINUS-X))
 (198 198 (:META META-INTEGERP-CORRECT))
 (152 152 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (152 152 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (152 152 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (152 152 (:REWRITE |(equal c (/ x))|))
 (152 152 (:REWRITE |(equal c (- x))|))
 (152 152 (:REWRITE |(equal (/ x) c)|))
 (152 152 (:REWRITE |(equal (/ x) (/ y))|))
 (152 152 (:REWRITE |(equal (- x) c)|))
 (152 152 (:REWRITE |(equal (- x) (- y))|))
 (102 38 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (64 40 (:REWRITE RATIONALP-X))
 (57 57 (:REWRITE |(< 0 (/ x))|))
 (57 57 (:REWRITE |(< 0 (* x y))|))
 (57 19 (:LINEAR EXPT->-1-TWO))
 (57 19 (:LINEAR EXPT-<-1-ONE))
 (55 55 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (55 55 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (48 48 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (42 38 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (40 40 (:REWRITE REDUCE-RATIONALP-+))
 (40 40 (:REWRITE REDUCE-RATIONALP-*))
 (40 40 (:REWRITE RATIONALP-MINUS-X))
 (40 40 (:META META-RATIONALP-CORRECT))
 (31 31 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (31 31 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (19 19 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (19 19 (:LINEAR EXPT-LINEAR-UPPER-<))
 (19 19 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (19 19 (:LINEAR EXPT-LINEAR-LOWER-<))
 )
(TRIM-BENDIAN*
 (130 11 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (117 7 (:DEFINITION INTEGER-LISTP))
 (44 11 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (20 20 (:REWRITE DEFAULT-CAR))
 (18 2 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (17 17 (:REWRITE DEFAULT-CDR))
 (16 16 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (16 16 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (14 14 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (11 11 (:REWRITE REDUCE-INTEGERP-+))
 (11 11 (:REWRITE INTEGERP-MINUS-X))
 (11 11 (:META META-INTEGERP-CORRECT))
 (9 9 (:REWRITE THE-FLOOR-BELOW))
 (9 9 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE SIMPLIFY-SUMS-<))
 (9 9 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (9 9 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (9 9 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (9 9 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (9 9 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (9 9 (:REWRITE INTEGERP-<-CONSTANT))
 (9 9 (:REWRITE DEFAULT-LESS-THAN-2))
 (9 9 (:REWRITE DEFAULT-LESS-THAN-1))
 (9 9 (:REWRITE CONSTANT-<-INTEGERP))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (- x))|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) (/ y))|))
 (9 9 (:REWRITE |(< (- x) c)|))
 (9 9 (:REWRITE |(< (- x) (- y))|))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (5 5 (:REWRITE |(< 0 (/ x))|))
 (5 5 (:REWRITE |(< 0 (* x y))|))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (4 4 (:REWRITE |(< (/ x) 0)|))
 (4 4 (:REWRITE |(< (* x y) 0)|))
 )
(NAT-LISTP-OF-TRIM-BENDIAN*
 (1392 24 (:DEFINITION NATP))
 (1290 24 (:REWRITE ACL2-NUMBERP-X))
 (1226 132 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (952 54 (:DEFINITION INTEGER-LISTP))
 (810 24 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (804 54 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (792 12 (:DEFINITION ACL2-NUMBER-LISTP))
 (744 30 (:DEFINITION RATIONAL-LISTP))
 (576 54 (:REWRITE RATIONALP-X))
 (330 48 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (185 107 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (170 170 (:REWRITE DEFAULT-CAR))
 (166 166 (:REWRITE DEFAULT-CDR))
 (140 70 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (132 132 (:REWRITE REDUCE-INTEGERP-+))
 (132 132 (:REWRITE INTEGERP-MINUS-X))
 (132 132 (:META META-INTEGERP-CORRECT))
 (108 108 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (108 108 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (60 60 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (54 54 (:REWRITE REDUCE-RATIONALP-+))
 (54 54 (:REWRITE REDUCE-RATIONALP-*))
 (54 54 (:REWRITE RATIONALP-MINUS-X))
 (54 54 (:META META-RATIONALP-CORRECT))
 (36 18 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (35 35 (:REWRITE THE-FLOOR-BELOW))
 (35 35 (:REWRITE THE-FLOOR-ABOVE))
 (32 32 (:REWRITE SIMPLIFY-SUMS-<))
 (32 32 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (32 32 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (32 32 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (32 32 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (32 32 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (32 32 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (32 32 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (32 32 (:REWRITE INTEGERP-<-CONSTANT))
 (32 32 (:REWRITE DEFAULT-LESS-THAN-1))
 (32 32 (:REWRITE CONSTANT-<-INTEGERP))
 (32 32 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (32 32 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (32 32 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (32 32 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (32 32 (:REWRITE |(< c (- x))|))
 (32 32 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (32 32 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (32 32 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (32 32 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (32 32 (:REWRITE |(< (/ x) (/ y))|))
 (32 32 (:REWRITE |(< (- x) c)|))
 (32 32 (:REWRITE |(< (- x) (- y))|))
 (24 24 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (24 24 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (24 24 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (24 24 (:REWRITE |(< (/ x) 0)|))
 (24 24 (:REWRITE |(< (* x y) 0)|))
 (15 1 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (8 8 (:REWRITE |(< 0 (/ x))|))
 (8 8 (:REWRITE |(< 0 (* x y))|))
 )
(TRIM-BENDIAN*-OF-TRUE-LIST-FIX
 (679 8 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (607 15 (:DEFINITION NAT-LISTP))
 (573 4 (:DEFINITION NAT-LIST-FIX$INLINE))
 (388 29 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (375 5 (:DEFINITION NATP))
 (323 22 (:DEFINITION INTEGER-LISTP))
 (292 10 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (262 23 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (184 23 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (181 34 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (175 12 (:DEFINITION TRUE-LISTP))
 (124 4 (:DEFINITION NFIX))
 (81 81 (:REWRITE DEFAULT-CDR))
 (58 58 (:REWRITE DEFAULT-CAR))
 (50 50 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (47 47 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (46 46 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (46 23 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (46 23 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (30 30 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (30 30 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (29 29 (:REWRITE REDUCE-INTEGERP-+))
 (29 29 (:REWRITE INTEGERP-MINUS-X))
 (29 29 (:META META-INTEGERP-CORRECT))
 (26 13 (:REWRITE DEFAULT-PLUS-2))
 (23 23 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (23 23 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (23 23 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (23 23 (:REWRITE SET::IN-SET))
 (18 9 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (16 9 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (14 14 (:REWRITE THE-FLOOR-BELOW))
 (14 14 (:REWRITE THE-FLOOR-ABOVE))
 (14 14 (:REWRITE SIMPLIFY-SUMS-<))
 (14 14 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (14 14 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (14 14 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (14 14 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (14 14 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (14 14 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (14 14 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (14 14 (:REWRITE INTEGERP-<-CONSTANT))
 (14 14 (:REWRITE DEFAULT-LESS-THAN-2))
 (14 14 (:REWRITE DEFAULT-LESS-THAN-1))
 (14 14 (:REWRITE CONSTANT-<-INTEGERP))
 (14 14 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (14 14 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (14 14 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (14 14 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (14 14 (:REWRITE |(< c (- x))|))
 (14 14 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (14 14 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (14 14 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (14 14 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (14 14 (:REWRITE |(< (/ x) (/ y))|))
 (14 14 (:REWRITE |(< (- x) c)|))
 (14 14 (:REWRITE |(< (- x) (- y))|))
 (14 5 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (13 13 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (13 13 (:REWRITE NORMALIZE-ADDENDS))
 (13 13 (:REWRITE DEFAULT-PLUS-1))
 (11 9 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (10 10 (:REWRITE |(< (/ x) 0)|))
 (10 10 (:REWRITE |(< (* x y) 0)|))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (9 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (9 9 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (9 9 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (9 9 (:REWRITE |(equal c (/ x))|))
 (9 9 (:REWRITE |(equal c (- x))|))
 (9 9 (:REWRITE |(equal (/ x) c)|))
 (9 9 (:REWRITE |(equal (/ x) (/ y))|))
 (9 9 (:REWRITE |(equal (- x) c)|))
 (9 9 (:REWRITE |(equal (- x) (- y))|))
 (7 7 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (4 4 (:REWRITE |(< 0 (/ x))|))
 (4 4 (:REWRITE |(< 0 (* x y))|))
 )
(TRIM-BENDIAN*-WHEN-ZP-LISTP
 (41 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (38 2 (:DEFINITION INTEGER-LISTP))
 (6 6 (:REWRITE DEFAULT-CAR))
 (6 3 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (5 5 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE REDUCE-INTEGERP-+))
 (4 4 (:REWRITE INTEGERP-MINUS-X))
 (4 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (4 4 (:META META-INTEGERP-CORRECT))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(TRIM-BENDIAN*-OF-APPEND-ZEROS
 (2336 14 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (2224 29 (:DEFINITION NAT-LISTP))
 (1671 20 (:DEFINITION NATP))
 (1406 105 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (1370 50 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (1250 3 (:REWRITE CDR-OF-NAT-LIST-FIX))
 (1215 77 (:DEFINITION INTEGER-LISTP))
 (780 128 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (361 14 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (269 3 (:REWRITE CAR-OF-NAT-LIST-FIX-WHEN-CONSP))
 (168 168 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (164 154 (:REWRITE DEFAULT-CDR))
 (138 135 (:REWRITE DEFAULT-CAR))
 (106 106 (:REWRITE REDUCE-INTEGERP-+))
 (106 106 (:REWRITE INTEGERP-MINUS-X))
 (106 106 (:META META-INTEGERP-CORRECT))
 (81 20 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (81 6 (:REWRITE ZP-LISTP-OF-CDR-WHEN-ZP-LISTP))
 (66 66 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (66 66 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (60 4 (:REWRITE ZP-LISTP-OF-APPEND))
 (42 6 (:REWRITE SUBSETP-APPEND1))
 (36 1 (:REWRITE ZP-LISTP-OF-CONS))
 (34 34 (:REWRITE THE-FLOOR-BELOW))
 (34 34 (:REWRITE THE-FLOOR-ABOVE))
 (34 34 (:REWRITE SIMPLIFY-SUMS-<))
 (34 34 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (34 34 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (34 34 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (34 34 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (34 34 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (34 34 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (34 34 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (34 34 (:REWRITE INTEGERP-<-CONSTANT))
 (34 34 (:REWRITE DEFAULT-LESS-THAN-2))
 (34 34 (:REWRITE DEFAULT-LESS-THAN-1))
 (34 34 (:REWRITE CONSTANT-<-INTEGERP))
 (34 34 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (34 34 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (34 34 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (34 34 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (34 34 (:REWRITE |(< c (- x))|))
 (34 34 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (34 34 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (34 34 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (34 34 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (34 34 (:REWRITE |(< (/ x) (/ y))|))
 (34 34 (:REWRITE |(< (- x) c)|))
 (34 34 (:REWRITE |(< (- x) (- y))|))
 (30 21 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (30 4 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (26 26 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (26 26 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (26 26 (:REWRITE |(< (/ x) 0)|))
 (26 26 (:REWRITE |(< (* x y) 0)|))
 (24 24 (:REWRITE SUBSETP-TRANS2))
 (24 24 (:REWRITE SUBSETP-TRANS))
 (21 21 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (13 1 (:REWRITE SUBSETP-OF-CONS))
 (10 2 (:REWRITE SUBSETP-CAR-MEMBER))
 (9 9 (:REWRITE CONSP-OF-NAT-LIST-FIX))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (8 8 (:REWRITE |(< 0 (/ x))|))
 (8 8 (:REWRITE |(< 0 (* x y))|))
 (7 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (7 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (7 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (7 1 (:REWRITE POSP-WHEN-MEMBER-EQUAL-OF-ZP-LISTP))
 (4 4 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (3 1 (:REWRITE CAR-OF-APPEND))
 (2 2 (:REWRITE SUBSETP-REFL))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE CONSP-OF-APPEND))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (1 1 (:REWRITE CDR-OF-APPEND-WHEN-CONSP))
 (1 1 (:REWRITE |(< x (if a b c))|))
 )
(TRIM-BENDIAN*-WHEN-NO-STARTING-0
 (30 2 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (20 2 (:DEFINITION NAT-LISTP))
 (18 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (14 1 (:DEFINITION INTEGER-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 (7 7 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (6 1 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (5 5 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (4 2 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (3 3 (:REWRITE DEFAULT-CDR))
 (2 2 (:TYPE-PRESCRIPTION ZP-LISTP))
 (2 2 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (2 2 (:META META-INTEGERP-CORRECT))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 1 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (1 1 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(equal x (if a b c))|))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (if a b c) x)|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(TRIM-BENDIAN*-OF-NAT=>BENDIAN*
 (397 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (315 3 (:REWRITE ACL2-NUMBERP-X))
 (210 3 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (189 1 (:DEFINITION ACL2-NUMBER-LISTP))
 (173 9 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (163 4 (:REWRITE RATIONALP-X))
 (154 4 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (152 7 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (124 3 (:DEFINITION INTEGER-LISTP))
 (122 2 (:DEFINITION RATIONAL-LISTP))
 (45 10 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (42 3 (:REWRITE ZP-LISTP-OF-CDR-WHEN-ZP-LISTP))
 (27 9 (:REWRITE DEFAULT-CDR))
 (25 4 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (23 23 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (23 6 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (20 20 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (20 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (19 19 (:TYPE-PRESCRIPTION ZP-LISTP))
 (15 2 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (14 14 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 3 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (9 9 (:REWRITE REDUCE-INTEGERP-+))
 (9 9 (:REWRITE INTEGERP-MINUS-X))
 (9 9 (:META META-INTEGERP-CORRECT))
 (9 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (8 2 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (7 7 (:TYPE-PRESCRIPTION ACL2-NUMBER-LISTP))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:META META-RATIONALP-CORRECT))
 (4 1 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (2 2 (:REWRITE THE-FLOOR-BELOW))
 (2 2 (:REWRITE THE-FLOOR-ABOVE))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (2 2 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (2 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE INTEGERP-<-CONSTANT))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-1))
 (2 2 (:REWRITE CONSTANT-<-INTEGERP))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (- x))|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) (/ y))|))
 (2 2 (:REWRITE |(< (- x) c)|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (1 1 (:REWRITE |(equal x (if a b c))|))
 (1 1 (:REWRITE |(equal (if a b c) x)|))
 )
(BENDIAN=>NAT-OF-TRIM-BENDIAN*
 (6725 105 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (6297 101 (:REWRITE DAB-DIGIT-LISTP-OF-REV))
 (3511 339 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (2844 178 (:DEFINITION INTEGER-LISTP))
 (2795 52 (:REWRITE ACL2-NUMBERP-X))
 (2563 103 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (2202 82 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (1755 52 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (1742 117 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (1716 26 (:DEFINITION ACL2-NUMBER-LISTP))
 (1612 65 (:DEFINITION RATIONAL-LISTP))
 (1600 200 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (1600 100 (:DEFINITION TRUE-LISTP))
 (1446 310 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (1437 19 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (1248 117 (:REWRITE RATIONALP-X))
 (1189 43 (:DEFINITION NAT-LISTP))
 (848 104 (:DEFINITION LEN))
 (834 80 (:REWRITE DAB-DIGIT-LISTP-OF-LIST-FIX))
 (834 53 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (715 104 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (690 690 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (669 266 (:REWRITE DEFAULT-PLUS-2))
 (663 266 (:REWRITE DEFAULT-PLUS-1))
 (545 37 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (532 246 (:REWRITE DEFAULT-TIMES-2))
 (492 246 (:REWRITE DEFAULT-TIMES-1))
 (488 488 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (484 244 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (444 6 (:DEFINITION NATP))
 (440 440 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (400 400 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (400 200 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (400 200 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (388 388 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (381 127 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (354 59 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (339 339 (:REWRITE REDUCE-INTEGERP-+))
 (339 339 (:REWRITE INTEGERP-MINUS-X))
 (339 339 (:META META-INTEGERP-CORRECT))
 (323 51 (:REWRITE ZP-LISTP-OF-CDR-WHEN-ZP-LISTP))
 (311 115 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (311 115 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (282 1 (:REWRITE NAT-LISTP-OF-REV))
 (255 17 (:DEFINITION BINARY-APPEND))
 (254 254 (:TYPE-PRESCRIPTION DAB-BASEP))
 (250 250 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (247 115 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (244 244 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (244 244 (:REWRITE NORMALIZE-ADDENDS))
 (200 200 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (200 200 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (200 200 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (200 200 (:REWRITE SET::IN-SET))
 (176 176 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (171 171 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (153 153 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (153 153 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (153 153 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (153 153 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (153 153 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (130 130 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (125 2 (:REWRITE NAT-LISTP-OF-LIST-FIX))
 (122 122 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (117 117 (:REWRITE REDUCE-RATIONALP-+))
 (117 117 (:REWRITE REDUCE-RATIONALP-*))
 (117 117 (:REWRITE RATIONALP-MINUS-X))
 (117 117 (:META META-RATIONALP-CORRECT))
 (115 115 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (115 115 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (115 115 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (115 115 (:REWRITE |(equal c (/ x))|))
 (115 115 (:REWRITE |(equal c (- x))|))
 (115 115 (:REWRITE |(equal (/ x) c)|))
 (115 115 (:REWRITE |(equal (/ x) (/ y))|))
 (115 115 (:REWRITE |(equal (- x) c)|))
 (115 115 (:REWRITE |(equal (- x) (- y))|))
 (105 105 (:REWRITE THE-FLOOR-BELOW))
 (105 105 (:REWRITE THE-FLOOR-ABOVE))
 (101 101 (:REWRITE SIMPLIFY-SUMS-<))
 (101 101 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (101 101 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (101 101 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (101 101 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (101 101 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (101 101 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (101 101 (:REWRITE INTEGERP-<-CONSTANT))
 (101 101 (:REWRITE DEFAULT-LESS-THAN-1))
 (101 101 (:REWRITE CONSTANT-<-INTEGERP))
 (101 101 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (101 101 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (101 101 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (101 101 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (101 101 (:REWRITE |(< c (- x))|))
 (101 101 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (101 101 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (101 101 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (101 101 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (101 101 (:REWRITE |(< (/ x) (/ y))|))
 (101 101 (:REWRITE |(< (- x) c)|))
 (101 101 (:REWRITE |(< (- x) (- y))|))
 (91 91 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (91 91 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (91 91 (:REWRITE |(< 0 (/ x))|))
 (91 91 (:REWRITE |(< 0 (* x y))|))
 (89 88 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (85 79 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (83 83 (:REWRITE CONSP-OF-LIST-FIX))
 (82 82 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (80 80 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (78 39 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (68 17 (:REWRITE CDR-OF-APPEND-WHEN-CONSP))
 (67 67 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (60 60 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (58 1 (:REWRITE CDR-OF-LIST-FIX))
 (52 52 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (28 6 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (10 10 (:REWRITE |(< (/ x) 0)|))
 (10 10 (:REWRITE |(< (* x y) 0)|))
 (10 5 (:REWRITE DEFAULT-EXPT-1))
 (9 5 (:REWRITE DEFAULT-EXPT-2))
 (5 5 (:REWRITE |(expt 1/c n)|))
 (5 5 (:REWRITE |(expt (- x) n)|))
 (4 4 (:REWRITE |(equal (+ (- c) x) y)|))
 (2 1 (:REWRITE CAR-OF-LIST-FIX))
 )
(LEN-OF-TRIM-BENDIAN*-UPPER-BOUND
 (59 6 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (52 3 (:DEFINITION INTEGER-LISTP))
 (36 18 (:REWRITE DEFAULT-PLUS-2))
 (28 18 (:REWRITE DEFAULT-PLUS-1))
 (18 3 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (17 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (17 7 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (15 1 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (13 7 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (12 7 (:REWRITE DEFAULT-LESS-THAN-2))
 (12 7 (:REWRITE DEFAULT-LESS-THAN-1))
 (10 10 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (10 1 (:DEFINITION NAT-LISTP))
 (9 9 (:REWRITE DEFAULT-CDR))
 (9 9 (:REWRITE DEFAULT-CAR))
 (8 8 (:TYPE-PRESCRIPTION TRIM-BENDIAN*))
 (8 4 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (7 7 (:REWRITE THE-FLOOR-BELOW))
 (7 7 (:REWRITE THE-FLOOR-ABOVE))
 (7 7 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (7 7 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (7 7 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (7 7 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (7 7 (:REWRITE INTEGERP-<-CONSTANT))
 (7 7 (:REWRITE CONSTANT-<-INTEGERP))
 (7 7 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (7 7 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (7 7 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (7 7 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (7 7 (:REWRITE |(< c (- x))|))
 (7 7 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (7 7 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (7 7 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (7 7 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (7 7 (:REWRITE |(< (/ x) (/ y))|))
 (7 7 (:REWRITE |(< (- x) c)|))
 (7 7 (:REWRITE |(< (- x) (- y))|))
 (6 6 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (6 6 (:REWRITE REDUCE-INTEGERP-+))
 (6 6 (:REWRITE INTEGERP-MINUS-X))
 (6 6 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (6 6 (:META META-INTEGERP-CORRECT))
 (4 3 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (4 2 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (3 3 (:REWRITE |(< (+ c/d x) y)|))
 (3 3 (:REWRITE |(< (+ (- c) x) y)|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (2 2 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 1 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (1 1 (:REWRITE |(< y (+ (- c) x))|))
 (1 1 (:REWRITE |(< x (+ c/d y))|))
 )
(APPEND-OF-REPEAT-AND-TRIM-BENDIAN*
 (15310 134 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (14218 258 (:DEFINITION NAT-LISTP))
 (13697 1125 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (11468 697 (:DEFINITION INTEGER-LISTP))
 (10044 28 (:REWRITE TAKE-OF-TOO-MANY))
 (8918 372 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (6876 1194 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (4708 28 (:REWRITE TAKE-OF-LEN-FREE))
 (4445 31 (:REWRITE REPEAT-WHEN-ZP))
 (4062 2117 (:REWRITE DEFAULT-PLUS-2))
 (3640 2117 (:REWRITE DEFAULT-PLUS-1))
 (3522 110 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (3416 16 (:REWRITE |(< (if a b c) x)|))
 (3049 933 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (3007 1653 (:REWRITE DEFAULT-CDR))
 (2822 1417 (:REWRITE DEFAULT-CAR))
 (2463 729 (:REWRITE SIMPLIFY-SUMS-<))
 (2254 74 (:REWRITE |(< (+ (- c) x) y)|))
 (1720 70 (:REWRITE |(equal (+ (- c) x) y)|))
 (1680 148 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (1622 1622 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (1494 897 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1346 949 (:REWRITE DEFAULT-LESS-THAN-1))
 (1304 82 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1129 1129 (:REWRITE REDUCE-INTEGERP-+))
 (1129 1129 (:REWRITE INTEGERP-MINUS-X))
 (1129 1129 (:META META-INTEGERP-CORRECT))
 (1009 897 (:REWRITE |(< c (- x))|))
 (953 897 (:REWRITE |(< (- x) (- y))|))
 (952 952 (:REWRITE THE-FLOOR-BELOW))
 (952 952 (:REWRITE THE-FLOOR-ABOVE))
 (942 149 (:REWRITE ZP-LISTP-OF-CDR-WHEN-ZP-LISTP))
 (933 933 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (933 933 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (925 897 (:REWRITE |(< (- x) c)|))
 (915 897 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (897 897 (:REWRITE INTEGERP-<-CONSTANT))
 (897 897 (:REWRITE CONSTANT-<-INTEGERP))
 (897 897 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (897 897 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (897 897 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (897 897 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (897 897 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (897 897 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (897 897 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (897 897 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (897 897 (:REWRITE |(< (/ x) (/ y))|))
 (878 18 (:REWRITE ACL2-NUMBERP-X))
 (782 782 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (554 124 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (541 540 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (540 540 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (540 16 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (536 36 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (534 534 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (528 8 (:DEFINITION ACL2-NUMBER-LISTP))
 (506 253 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (505 505 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (496 20 (:DEFINITION RATIONAL-LISTP))
 (448 448 (:REWRITE |(< 0 (* x y))|))
 (444 444 (:REWRITE |(< 0 (/ x))|))
 (392 38 (:REWRITE RATIONALP-X))
 (352 110 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (336 336 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (336 336 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (268 267 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (220 32 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (206 108 (:REWRITE |(+ c (+ d x))|))
 (196 28 (:REWRITE BUBBLE-DOWN-+-MATCH-3))
 (195 195 (:REWRITE |(< x (+ c/d y))|))
 (191 191 (:REWRITE |(< y (+ (- c) x))|))
 (184 184 (:REWRITE |(< (* x y) 0)|))
 (170 170 (:REWRITE |(< (/ x) 0)|))
 (156 156 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (156 156 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (138 110 (:REWRITE |(equal (- x) (- y))|))
 (124 124 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (124 124 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (112 28 (:REWRITE TAKE-WHEN-ATOM))
 (110 110 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (110 110 (:REWRITE |(equal c (/ x))|))
 (110 110 (:REWRITE |(equal c (- x))|))
 (110 110 (:REWRITE |(equal (/ x) c)|))
 (110 110 (:REWRITE |(equal (/ x) (/ y))|))
 (110 110 (:REWRITE |(equal (- x) c)|))
 (88 88 (:REWRITE |(< (+ c/d x) y)|))
 (88 44 (:REWRITE DEFAULT-MINUS))
 (62 62 (:REWRITE FOLD-CONSTS-IN-+))
 (42 42 (:REWRITE CONSP-OF-NAT-LIST-FIX))
 (40 40 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (38 38 (:REWRITE REDUCE-RATIONALP-+))
 (38 38 (:REWRITE REDUCE-RATIONALP-*))
 (38 38 (:REWRITE RATIONALP-MINUS-X))
 (38 38 (:META META-RATIONALP-CORRECT))
 (28 28 (:TYPE-PRESCRIPTION NFIX))
 (24 12 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (16 16 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (14 14 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (14 14 (:REWRITE CAR-OF-NAT-LIST-FIX-WHEN-CONSP))
 )
(TRIM-BENDIAN*-OF-APPEND
 (19058 160 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (17873 266 (:DEFINITION NAT-LISTP))
 (16942 1235 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (13322 815 (:DEFINITION INTEGER-LISTP))
 (13088 182 (:DEFINITION NATP))
 (10292 154 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (9215 407 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (8183 1225 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (4186 58 (:REWRITE ZP-LISTP-OF-APPEND))
 (4048 161 (:REWRITE ZP-LISTP-OF-CDR-WHEN-ZP-LISTP))
 (2741 99 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (2371 1746 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (2137 52 (:REWRITE ACL2-NUMBERP-X))
 (2061 1874 (:REWRITE DEFAULT-CDR))
 (2026 1774 (:REWRITE DEFAULT-CAR))
 (1823 1823 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (1696 219 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (1661 110 (:DEFINITION TRUE-LISTP))
 (1462 67 (:REWRITE SUBSETP-APPEND1))
 (1360 191 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (1354 44 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (1330 90 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (1320 20 (:DEFINITION ACL2-NUMBER-LISTP))
 (1318 1318 (:REWRITE REDUCE-INTEGERP-+))
 (1318 1318 (:REWRITE INTEGERP-MINUS-X))
 (1318 1318 (:META META-INTEGERP-CORRECT))
 (1230 50 (:DEFINITION RATIONAL-LISTP))
 (988 653 (:REWRITE SUBSETP-TRANS2))
 (920 73 (:REWRITE ZP-LISTP-OF-LIST-FIX))
 (919 94 (:REWRITE RATIONALP-X))
 (899 620 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (845 620 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (838 432 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (718 5 (:REWRITE SUBSETP-OF-CONS))
 (674 25 (:REWRITE TRIM-BENDIAN*-OF-APPEND-ZEROS))
 (663 182 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (658 112 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (653 653 (:REWRITE SUBSETP-TRANS))
 (611 611 (:REWRITE THE-FLOOR-BELOW))
 (611 611 (:REWRITE THE-FLOOR-ABOVE))
 (611 5 (:DEFINITION MEMBER-EQUAL))
 (606 606 (:REWRITE SIMPLIFY-SUMS-<))
 (606 606 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (606 606 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (606 606 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (606 606 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (606 606 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (606 606 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (606 606 (:REWRITE INTEGERP-<-CONSTANT))
 (606 606 (:REWRITE DEFAULT-LESS-THAN-1))
 (606 606 (:REWRITE CONSTANT-<-INTEGERP))
 (606 606 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (606 606 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (606 606 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (606 606 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (606 606 (:REWRITE |(< c (- x))|))
 (606 606 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (606 606 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (606 606 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (606 606 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (606 606 (:REWRITE |(< (/ x) (/ y))|))
 (606 606 (:REWRITE |(< (- x) c)|))
 (606 606 (:REWRITE |(< (- x) (- y))|))
 (572 572 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (572 572 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (550 80 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (461 461 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (422 422 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (422 211 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (422 211 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (371 371 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (371 371 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (371 371 (:REWRITE |(< 0 (/ x))|))
 (371 371 (:REWRITE |(< 0 (* x y))|))
 (256 128 (:REWRITE DEFAULT-PLUS-2))
 (237 237 (:REWRITE CONSP-OF-LIST-FIX))
 (237 79 (:REWRITE CAR-OF-APPEND))
 (235 235 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (235 235 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (235 235 (:REWRITE |(< (/ x) 0)|))
 (235 235 (:REWRITE |(< (* x y) 0)|))
 (219 219 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (211 211 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (211 211 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (211 211 (:REWRITE SET::IN-SET))
 (209 112 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (163 112 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (128 128 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (128 128 (:REWRITE NORMALIZE-ADDENDS))
 (128 128 (:REWRITE DEFAULT-PLUS-1))
 (112 112 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (112 112 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (112 112 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (112 112 (:REWRITE |(equal c (/ x))|))
 (112 112 (:REWRITE |(equal c (- x))|))
 (112 112 (:REWRITE |(equal (/ x) c)|))
 (112 112 (:REWRITE |(equal (/ x) (/ y))|))
 (112 112 (:REWRITE |(equal (- x) c)|))
 (112 112 (:REWRITE |(equal (- x) (- y))|))
 (100 100 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (100 100 (:REWRITE CONSP-OF-APPEND))
 (98 98 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (94 94 (:REWRITE REDUCE-RATIONALP-+))
 (94 94 (:REWRITE REDUCE-RATIONALP-*))
 (94 94 (:REWRITE RATIONALP-MINUS-X))
 (94 94 (:META META-RATIONALP-CORRECT))
 (83 83 (:REWRITE |(< x (if a b c))|))
 (71 71 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (60 30 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (50 50 (:REWRITE CDR-OF-APPEND-WHEN-CONSP))
 (40 40 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (30 4 (:REWRITE SUBSETP-CAR-MEMBER))
 (28 28 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (15 5 (:REWRITE CDR-OF-LIST-FIX))
 (10 10 (:REWRITE SUBSETP-MEMBER . 2))
 (10 10 (:REWRITE SUBSETP-MEMBER . 1))
 (10 5 (:REWRITE CAR-OF-LIST-FIX))
 (7 7 (:REWRITE |(equal x (if a b c))|))
 (7 7 (:REWRITE |(equal (if a b c) x)|))
 (5 5 (:REWRITE LIST-FIX-UNDER-LIST-EQUIV))
 (5 5 (:REWRITE LIST-FIX-UNDER-IFF))
 )
(TRIM-BENDIAN*-OF-CONS
 (562 11 (:REWRITE ZP-OPEN))
 (473 6 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (237 5 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (222 22 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (212 5 (:DEFINITION NAT-LISTP))
 (174 12 (:DEFINITION INTEGER-LISTP))
 (156 3 (:DEFINITION NATP))
 (153 8 (:DEFINITION NOT))
 (89 6 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (88 88 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (62 14 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (42 1 (:REWRITE ZP-LISTP-OF-CONS))
 (34 1 (:DEFINITION POSP))
 (33 33 (:TYPE-PRESCRIPTION NAT-LISTP))
 (26 26 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (26 26 (:REWRITE DEFAULT-CAR))
 (23 23 (:REWRITE REDUCE-INTEGERP-+))
 (23 23 (:REWRITE INTEGERP-MINUS-X))
 (23 23 (:META META-INTEGERP-CORRECT))
 (20 20 (:REWRITE DEFAULT-CDR))
 (18 18 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (18 18 (:REWRITE THE-FLOOR-BELOW))
 (18 18 (:REWRITE THE-FLOOR-ABOVE))
 (18 18 (:REWRITE SIMPLIFY-SUMS-<))
 (18 18 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (18 18 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (18 18 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (18 18 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (18 18 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (18 18 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (18 18 (:REWRITE INTEGERP-<-CONSTANT))
 (18 18 (:REWRITE DEFAULT-LESS-THAN-2))
 (18 18 (:REWRITE DEFAULT-LESS-THAN-1))
 (18 18 (:REWRITE CONSTANT-<-INTEGERP))
 (18 18 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (18 18 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (18 18 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (18 18 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (18 18 (:REWRITE |(< c (- x))|))
 (18 18 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (18 18 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (18 18 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (18 18 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (18 18 (:REWRITE |(< (/ x) (/ y))|))
 (18 18 (:REWRITE |(< (- x) c)|))
 (18 18 (:REWRITE |(< (- x) (- y))|))
 (16 16 (:TYPE-PRESCRIPTION ZP-LISTP))
 (13 13 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (13 13 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (13 13 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (13 13 (:REWRITE |(< 0 (/ x))|))
 (13 13 (:REWRITE |(< 0 (* x y))|))
 (12 2 (:REWRITE ZP-LISTP-OF-CDR-WHEN-ZP-LISTP))
 (10 10 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (10 10 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (10 5 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (9 9 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (7 7 (:TYPE-PRESCRIPTION ZP))
 (6 3 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (5 5 (:REWRITE |(< (/ x) 0)|))
 (5 5 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:REWRITE POSP-WHEN-MEMBER-EQUAL-OF-ZP-LISTP))
 )
(TRIM-BENDIAN*-IFF-NOT-ZP-LISTP
 (2196 49 (:REWRITE ACL2-NUMBERP-X))
 (1415 161 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (1350 40 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (1340 90 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (1320 20 (:DEFINITION ACL2-NUMBER-LISTP))
 (1240 50 (:DEFINITION RATIONAL-LISTP))
 (1135 68 (:DEFINITION INTEGER-LISTP))
 (977 95 (:REWRITE RATIONALP-X))
 (550 80 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (442 112 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (220 220 (:REWRITE DEFAULT-CDR))
 (219 219 (:REWRITE DEFAULT-CAR))
 (166 166 (:REWRITE REDUCE-INTEGERP-+))
 (166 166 (:REWRITE INTEGERP-MINUS-X))
 (166 166 (:META META-INTEGERP-CORRECT))
 (144 144 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (135 4 (:REWRITE SUBSETP-OF-CONS))
 (100 100 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (99 4 (:DEFINITION MEMBER-EQUAL))
 (95 95 (:REWRITE REDUCE-RATIONALP-+))
 (95 95 (:REWRITE REDUCE-RATIONALP-*))
 (95 95 (:REWRITE RATIONALP-MINUS-X))
 (95 95 (:META META-RATIONALP-CORRECT))
 (81 17 (:REWRITE ZP-LISTP-OF-CDR-WHEN-ZP-LISTP))
 (64 8 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (62 62 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (60 30 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (40 40 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (33 33 (:REWRITE THE-FLOOR-BELOW))
 (33 33 (:REWRITE THE-FLOOR-ABOVE))
 (28 28 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (28 28 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (28 28 (:REWRITE SIMPLIFY-SUMS-<))
 (28 28 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (28 28 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (28 28 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (28 28 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (28 28 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (28 28 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (28 28 (:REWRITE INTEGERP-<-CONSTANT))
 (28 28 (:REWRITE DEFAULT-LESS-THAN-1))
 (28 28 (:REWRITE CONSTANT-<-INTEGERP))
 (28 28 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (28 28 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (28 28 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (28 28 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (28 28 (:REWRITE |(< c (- x))|))
 (28 28 (:REWRITE |(< 0 (/ x))|))
 (28 28 (:REWRITE |(< 0 (* x y))|))
 (28 28 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (28 28 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (28 28 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (28 28 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (28 28 (:REWRITE |(< (/ x) (/ y))|))
 (28 28 (:REWRITE |(< (- x) c)|))
 (28 28 (:REWRITE |(< (- x) (- y))|))
 (25 25 (:REWRITE SUBSETP-TRANS2))
 (25 25 (:REWRITE SUBSETP-TRANS))
 (24 24 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (19 19 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (19 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (16 16 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (16 8 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (16 8 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (13 13 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (13 13 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (8 8 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (8 8 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (8 8 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (8 8 (:REWRITE SUBSETP-MEMBER . 2))
 (8 8 (:REWRITE SUBSETP-MEMBER . 1))
 (8 8 (:REWRITE SET::IN-SET))
 (6 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 )
(TRIM-BENDIAN*-OF-NAT-LIST-FIX-DIGITS
 (3137 40 (:DEFINITION NAT-LISTP))
 (2971 130 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (2766 68 (:DEFINITION INTEGER-LISTP))
 (2132 36 (:DEFINITION NATP))
 (2114 80 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (636 117 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (224 188 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (177 156 (:REWRITE DEFAULT-CAR))
 (170 36 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (151 151 (:REWRITE DEFAULT-CDR))
 (130 130 (:REWRITE REDUCE-INTEGERP-+))
 (130 130 (:REWRITE INTEGERP-MINUS-X))
 (130 130 (:META META-INTEGERP-CORRECT))
 (101 101 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (99 98 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (74 74 (:REWRITE THE-FLOOR-BELOW))
 (74 74 (:REWRITE THE-FLOOR-ABOVE))
 (74 74 (:REWRITE DEFAULT-LESS-THAN-2))
 (74 74 (:REWRITE DEFAULT-LESS-THAN-1))
 (72 4 (:REWRITE |(< x (if a b c))|))
 (70 70 (:REWRITE SIMPLIFY-SUMS-<))
 (70 70 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (70 70 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (70 70 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (70 70 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (70 70 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (70 70 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (70 70 (:REWRITE INTEGERP-<-CONSTANT))
 (70 70 (:REWRITE CONSTANT-<-INTEGERP))
 (70 70 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (70 70 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (70 70 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (70 70 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (70 70 (:REWRITE |(< c (- x))|))
 (70 70 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (70 70 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (70 70 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (70 70 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (70 70 (:REWRITE |(< (/ x) (/ y))|))
 (70 70 (:REWRITE |(< (- x) c)|))
 (70 70 (:REWRITE |(< (- x) (- y))|))
 (64 64 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (54 54 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (54 54 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (54 54 (:REWRITE |(< (/ x) 0)|))
 (54 54 (:REWRITE |(< (* x y) 0)|))
 (24 24 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (16 16 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (16 16 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (16 16 (:REWRITE |(< 0 (/ x))|))
 (16 16 (:REWRITE |(< 0 (* x y))|))
 (4 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 )
(TRIM-BENDIAN*-NAT-LIST-EQUIV-CONGRUENCE-ON-DIGITS)
(TRIM-LENDIAN*)
(NAT-LISTP-OF-TRIM-LENDIAN*)
(TRIM-LENDIAN*-OF-TRUE-LIST-FIX)
(TRIM-LENDIAN*-WHEN-ZP-LISTP
 (104 1 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (96 1 (:REWRITE ZP-OPEN))
 (28 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (24 1 (:REWRITE INTEGER-LISTP-OF-REV))
 (20 1 (:DEFINITION INTEGER-LISTP))
 (11 11 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (5 2 (:REWRITE DEFAULT-CAR))
 (5 1 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (4 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (4 1 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (2 2 (:REWRITE THE-FLOOR-BELOW))
 (2 2 (:REWRITE THE-FLOOR-ABOVE))
 (2 2 (:REWRITE SUBSETP-TRANS2))
 (2 2 (:REWRITE SUBSETP-TRANS))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 2 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (2 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE INTEGERP-<-CONSTANT))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-1))
 (2 2 (:REWRITE CONSTANT-<-INTEGERP))
 (2 2 (:REWRITE CONSP-OF-REV))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (- x))|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) (/ y))|))
 (2 2 (:REWRITE |(< (- x) c)|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:META META-INTEGERP-CORRECT))
 (1 1 (:TYPE-PRESCRIPTION ZP))
 (1 1 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (1 1 (:REWRITE REV-WHEN-NOT-CONSP))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE DEFAULT-CDR))
 )
(TRIM-LENDIAN*-OF-APPEND-ZEROS
 (345 3 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (320 2 (:REWRITE ZP-OPEN))
 (178 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (174 1 (:REWRITE INTEGER-LISTP-OF-REV))
 (106 2 (:DEFINITION INTEGER-LISTP))
 (58 3 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (57 1 (:REWRITE CDR-OF-LIST-FIX))
 (50 2 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (32 4 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (28 2 (:REWRITE INTEGER-LISTP-OF-LIST-FIX))
 (28 2 (:DEFINITION TRUE-LISTP))
 (21 21 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (19 1 (:DEFINITION BINARY-APPEND))
 (15 6 (:REWRITE DEFAULT-CAR))
 (14 2 (:DEFINITION LEN))
 (13 7 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (13 4 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (12 1 (:REWRITE ZP-LISTP-OF-LIST-FIX))
 (11 11 (:REWRITE CONSP-OF-REV))
 (11 1 (:REWRITE CAR-OF-APPEND))
 (10 10 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (10 7 (:REWRITE DEFAULT-CDR))
 (8 8 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (8 4 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (8 4 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (8 2 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (8 2 (:REWRITE APPEND-ATOM-UNDER-LIST-EQUIV))
 (7 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (6 3 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (5 5 (:REWRITE SUBSETP-TRANS2))
 (5 5 (:REWRITE SUBSETP-TRANS))
 (5 5 (:REWRITE CONSP-OF-LIST-FIX))
 (4 4 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (4 4 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE THE-FLOOR-BELOW))
 (4 4 (:REWRITE THE-FLOOR-ABOVE))
 (4 4 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (4 4 (:REWRITE SIMPLIFY-SUMS-<))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (4 4 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 4 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-INTEGERP-+))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (4 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (4 4 (:REWRITE INTEGERP-MINUS-X))
 (4 4 (:REWRITE INTEGERP-<-CONSTANT))
 (4 4 (:REWRITE SET::IN-SET))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-2))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-1))
 (4 4 (:REWRITE CONSTANT-<-INTEGERP))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (- x))|))
 (4 4 (:REWRITE |(< 0 (/ x))|))
 (4 4 (:REWRITE |(< 0 (* x y))|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) (/ y))|))
 (4 4 (:REWRITE |(< (- x) c)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:META META-INTEGERP-CORRECT))
 (4 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (3 3 (:REWRITE REV-WHEN-NOT-CONSP))
 (3 3 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (3 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 1 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (2 2 (:TYPE-PRESCRIPTION ZP))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (2 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE |(< x (if a b c))|))
 (2 1 (:REWRITE CAR-OF-LIST-FIX))
 (1 1 (:TYPE-PRESCRIPTION BINARY-APPEND))
 )
(TRIM-LENDIAN*-WHEN-NO-ENDING-0
 (354 3 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (279 1 (:REWRITE NAT-LISTP-OF-REV))
 (273 3 (:DEFINITION NAT-LISTP))
 (232 9 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (174 1 (:REWRITE INTEGER-LISTP-OF-REV))
 (156 3 (:DEFINITION NATP))
 (148 5 (:DEFINITION INTEGER-LISTP))
 (114 4 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (114 2 (:REWRITE CDR-OF-LIST-FIX))
 (104 4 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (81 2 (:REWRITE NAT-LISTP-OF-LIST-FIX))
 (64 8 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (56 4 (:DEFINITION TRUE-LISTP))
 (42 42 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (34 34 (:TYPE-PRESCRIPTION LEN))
 (28 28 (:TYPE-PRESCRIPTION NAT-LISTP))
 (28 4 (:DEFINITION LEN))
 (28 2 (:REWRITE INTEGER-LISTP-OF-LIST-FIX))
 (24 24 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (20 20 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (19 13 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (16 16 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (16 16 (:REWRITE DEFAULT-CDR))
 (16 8 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (16 8 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (15 9 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (13 5 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (12 9 (:REWRITE DEFAULT-CAR))
 (10 10 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (10 3 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (10 3 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (9 9 (:REWRITE REDUCE-INTEGERP-+))
 (9 9 (:REWRITE INTEGERP-MINUS-X))
 (9 9 (:META META-INTEGERP-CORRECT))
 (8 8 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (8 8 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (8 8 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (8 8 (:REWRITE SET::IN-SET))
 (8 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (8 4 (:REWRITE DEFAULT-PLUS-2))
 (6 6 (:REWRITE CONSP-OF-LIST-FIX))
 (6 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 4 (:REWRITE THE-FLOOR-BELOW))
 (4 4 (:REWRITE THE-FLOOR-ABOVE))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (4 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 4 (:REWRITE SIMPLIFY-SUMS-<))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (4 4 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (4 4 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (4 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (4 4 (:REWRITE INTEGERP-<-CONSTANT))
 (4 4 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (4 4 (:REWRITE DEFAULT-PLUS-1))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-2))
 (4 4 (:REWRITE DEFAULT-LESS-THAN-1))
 (4 4 (:REWRITE CONSTANT-<-INTEGERP))
 (4 4 (:REWRITE |(equal c (/ x))|))
 (4 4 (:REWRITE |(equal c (- x))|))
 (4 4 (:REWRITE |(equal (/ x) c)|))
 (4 4 (:REWRITE |(equal (/ x) (/ y))|))
 (4 4 (:REWRITE |(equal (- x) c)|))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (4 4 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< c (- x))|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (4 4 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (4 4 (:REWRITE |(< (/ x) (/ y))|))
 (4 4 (:REWRITE |(< (- x) c)|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 2 (:REWRITE CAR-OF-LIST-FIX))
 (3 3 (:TYPE-PRESCRIPTION LAST))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (3 3 (:REWRITE |(< (/ x) 0)|))
 (3 3 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:REWRITE REV-WHEN-NOT-CONSP))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE CONSP-OF-REV))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 )
(TRIM-LENDIAN*-OF-NAT=>LENDIAN*
 (146 73 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>BENDIAN*))
 (133 133 (:TYPE-PRESCRIPTION ZP))
 (106 53 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN*))
 (84 7 (:REWRITE REV-WHEN-NOT-CONSP))
 (20 4 (:REWRITE CONSP-OF-NAT=>LENDIAN*-IFF-NOT-ZP))
 (18 6 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (18 6 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (18 6 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (15 3 (:REWRITE CONSP-OF-NAT=>BENDIAN*-IFF-NOT-ZP))
 (14 14 (:REWRITE ZP-OPEN))
 (6 6 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (6 6 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (6 6 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (6 6 (:REWRITE |(equal c (/ x))|))
 (6 6 (:REWRITE |(equal c (- x))|))
 (6 6 (:REWRITE |(equal (/ x) c)|))
 (6 6 (:REWRITE |(equal (/ x) (/ y))|))
 (6 6 (:REWRITE |(equal (- x) c)|))
 (6 6 (:REWRITE |(equal (- x) (- y))|))
 )
(LENDIAN=>NAT-OF-TRIM-LENDIAN*)
(LEN-OF-TRIM-LENDIAN*-UPPER-BOUND
 (254 1 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (246 1 (:REWRITE ZP-OPEN))
 (178 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (174 1 (:REWRITE INTEGER-LISTP-OF-REV))
 (106 2 (:DEFINITION INTEGER-LISTP))
 (58 3 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (57 1 (:REWRITE CDR-OF-LIST-FIX))
 (53 3 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (32 4 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (30 4 (:DEFINITION LEN))
 (28 2 (:REWRITE INTEGER-LISTP-OF-LIST-FIX))
 (28 2 (:DEFINITION TRUE-LISTP))
 (25 1 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (21 21 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (19 1 (:REWRITE ZP-LISTP-OF-REV))
 (16 16 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (13 7 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (12 12 (:TYPE-PRESCRIPTION REV))
 (10 10 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (8 8 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (8 8 (:REWRITE DEFAULT-CDR))
 (8 4 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (8 4 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (8 4 (:REWRITE DEFAULT-PLUS-2))
 (7 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (6 6 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (6 3 (:REWRITE DEFAULT-CAR))
 (6 1 (:REWRITE ZP-LISTP-OF-LIST-FIX))
 (5 2 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (4 4 (:TYPE-PRESCRIPTION ZP-LISTP))
 (4 4 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (4 4 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE SET::IN-SET))
 (4 4 (:REWRITE DEFAULT-PLUS-1))
 (4 4 (:REWRITE CONSP-OF-LIST-FIX))
 (4 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:META META-INTEGERP-CORRECT))
 (3 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 2 (:TYPE-PRESCRIPTION TRIM-BENDIAN*))
 (2 2 (:REWRITE THE-FLOOR-BELOW))
 (2 2 (:REWRITE THE-FLOOR-ABOVE))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 2 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (2 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE INTEGERP-<-CONSTANT))
 (2 2 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-1))
 (2 2 (:REWRITE CONSTANT-<-INTEGERP))
 (2 2 (:REWRITE |(equal c (/ x))|))
 (2 2 (:REWRITE |(equal c (- x))|))
 (2 2 (:REWRITE |(equal (/ x) c)|))
 (2 2 (:REWRITE |(equal (/ x) (/ y))|))
 (2 2 (:REWRITE |(equal (- x) c)|))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (- x))|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) (/ y))|))
 (2 2 (:REWRITE |(< (- x) c)|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 1 (:REWRITE CAR-OF-LIST-FIX))
 (1 1 (:TYPE-PRESCRIPTION ZP))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE CONSP-OF-REV))
 )
(APPLY-REV-TO-BOTH-SIDES-OF-APPEND-OF-REPEAT-AND-TRIM-BENDIAN*)
(APPEND-OF-REPEAT-AND-TRIM-LENDIAN*)
(TRIM-LENDIAN*-OF-APPEND
 (1000 4 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (968 4 (:REWRITE ZP-OPEN))
 (825 25 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (680 4 (:REWRITE INTEGER-LISTP-OF-REV))
 (521 15 (:DEFINITION INTEGER-LISTP))
 (515 3 (:REWRITE NAT-LIST-FIX-WHEN-NAT-LISTP))
 (426 5 (:DEFINITION NAT-LISTP))
 (312 16 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (285 5 (:REWRITE CDR-OF-LIST-FIX))
 (281 5 (:DEFINITION NATP))
 (278 1 (:REWRITE NAT-LISTP-OF-REV))
 (251 3 (:DEFINITION BINARY-APPEND))
 (176 22 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (165 1 (:REWRITE CDR-OF-NAT-LIST-FIX))
 (154 11 (:DEFINITION TRUE-LISTP))
 (142 4 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (135 135 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (124 4 (:DEFINITION NOT))
 (112 8 (:REWRITE INTEGER-LISTP-OF-LIST-FIX))
 (85 6 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (82 32 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (81 2 (:REWRITE NAT-LISTP-OF-LIST-FIX))
 (77 11 (:DEFINITION LEN))
 (63 43 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (61 16 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (55 55 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (54 1 (:REWRITE CAR-OF-NAT-LIST-FIX-WHEN-CONSP))
 (52 1 (:DEFINITION NFIX))
 (48 45 (:REWRITE DEFAULT-CDR))
 (44 44 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (44 44 (:TYPE-PRESCRIPTION NAT-LISTP))
 (44 22 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (44 22 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (43 6 (:REWRITE ZP-LISTP-OF-LIST-FIX))
 (42 27 (:REWRITE DEFAULT-CAR))
 (31 7 (:REWRITE REV-WHEN-NOT-CONSP))
 (25 25 (:REWRITE REDUCE-INTEGERP-+))
 (25 25 (:REWRITE INTEGERP-MINUS-X))
 (25 25 (:META META-INTEGERP-CORRECT))
 (24 24 (:REWRITE CONSP-OF-LIST-FIX))
 (22 22 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (22 22 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (22 22 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (22 22 (:REWRITE SET::IN-SET))
 (22 12 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (22 11 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (22 11 (:REWRITE DEFAULT-PLUS-2))
 (21 6 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (20 14 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (18 6 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (18 5 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (17 17 (:TYPE-PRESCRIPTION TRIM-BENDIAN*))
 (16 16 (:TYPE-PRESCRIPTION ZP-LISTP))
 (16 16 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (15 15 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (14 14 (:REWRITE THE-FLOOR-BELOW))
 (14 14 (:REWRITE THE-FLOOR-ABOVE))
 (14 14 (:REWRITE SIMPLIFY-SUMS-<))
 (14 14 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (14 14 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (14 14 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (14 14 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (14 14 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (14 14 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (14 14 (:REWRITE INTEGERP-<-CONSTANT))
 (14 14 (:REWRITE DEFAULT-LESS-THAN-2))
 (14 14 (:REWRITE DEFAULT-LESS-THAN-1))
 (14 14 (:REWRITE CONSTANT-<-INTEGERP))
 (14 14 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (14 14 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (14 14 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (14 14 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (14 14 (:REWRITE |(< c (- x))|))
 (14 14 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (14 14 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (14 14 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (14 14 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (14 14 (:REWRITE |(< (/ x) (/ y))|))
 (14 14 (:REWRITE |(< (- x) c)|))
 (14 14 (:REWRITE |(< (- x) (- y))|))
 (14 12 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (13 12 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (12 12 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (12 12 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (12 12 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (12 12 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (12 12 (:REWRITE CONSP-OF-REV))
 (12 12 (:REWRITE |(equal c (/ x))|))
 (12 12 (:REWRITE |(equal c (- x))|))
 (12 12 (:REWRITE |(equal (/ x) c)|))
 (12 12 (:REWRITE |(equal (/ x) (/ y))|))
 (12 12 (:REWRITE |(equal (- x) c)|))
 (12 12 (:REWRITE |(equal (- x) (- y))|))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (11 11 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (11 11 (:REWRITE NORMALIZE-ADDENDS))
 (11 11 (:REWRITE DEFAULT-PLUS-1))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (10 5 (:REWRITE CAR-OF-LIST-FIX))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (8 8 (:REWRITE |(< 0 (/ x))|))
 (8 8 (:REWRITE |(< 0 (* x y))|))
 (8 6 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (8 2 (:REWRITE APPEND-ATOM-UNDER-LIST-EQUIV))
 (6 6 (:REWRITE SUBSETP-TRANS2))
 (6 6 (:REWRITE SUBSETP-TRANS))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (6 6 (:REWRITE |(< (/ x) 0)|))
 (6 6 (:REWRITE |(< (* x y) 0)|))
 (4 4 (:TYPE-PRESCRIPTION ZP))
 (3 3 (:REWRITE CONSP-OF-NAT-LIST-FIX))
 (1 1 (:REWRITE |(equal x (if a b c))|))
 (1 1 (:REWRITE |(equal (if a b c) x)|))
 )
(TRIM-LENDIAN*-OF-CONS
 (783 6 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (713 7 (:REWRITE ZP-OPEN))
 (276 14 (:REWRITE ACL2-NUMBERP-X))
 (268 32 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (246 14 (:REWRITE RATIONALP-X))
 (225 4 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (207 3 (:DEFINITION NAT-LISTP))
 (183 2 (:REWRITE ZP-LISTP-OF-APPEND))
 (160 13 (:DEFINITION INTEGER-LISTP))
 (148 10 (:REWRITE INTEGER-LISTP-OF-REV))
 (147 23 (:REWRITE DEFAULT-LESS-THAN-2))
 (107 1 (:REWRITE ZP-LISTP-OF-CONS))
 (84 20 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (84 20 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (76 2 (:DEFINITION MEMBER-EQUAL))
 (64 4 (:DEFINITION BINARY-APPEND))
 (58 31 (:REWRITE DEFAULT-CAR))
 (57 57 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (47 1 (:REWRITE SUBSETP-OF-CONS))
 (44 2 (:REWRITE POSP-WHEN-MEMBER-EQUAL-OF-ZP-LISTP))
 (38 38 (:REWRITE REDUCE-INTEGERP-+))
 (38 38 (:REWRITE INTEGERP-MINUS-X))
 (38 38 (:META META-INTEGERP-CORRECT))
 (37 37 (:REWRITE CONSP-OF-REV))
 (34 22 (:REWRITE DEFAULT-CDR))
 (34 4 (:REWRITE CAR-OF-APPEND))
 (31 1 (:DEFINITION POSP))
 (28 28 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (28 13 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (23 23 (:REWRITE THE-FLOOR-BELOW))
 (23 23 (:REWRITE THE-FLOOR-ABOVE))
 (23 23 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (23 23 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (23 23 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (23 23 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (23 23 (:REWRITE INTEGERP-<-CONSTANT))
 (23 23 (:REWRITE DEFAULT-LESS-THAN-1))
 (23 23 (:REWRITE CONSTANT-<-INTEGERP))
 (23 23 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (23 23 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (23 23 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (23 23 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (23 23 (:REWRITE |(< c (- x))|))
 (23 23 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (23 23 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (23 23 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (23 23 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (23 23 (:REWRITE |(< (/ x) (/ y))|))
 (23 23 (:REWRITE |(< (- x) c)|))
 (23 23 (:REWRITE |(< (- x) (- y))|))
 (23 11 (:REWRITE REV-WHEN-NOT-CONSP))
 (20 20 (:REWRITE SIMPLIFY-SUMS-<))
 (18 3 (:REWRITE NATP-OF-CAR-WHEN-NAT-LISTP))
 (18 3 (:REWRITE NAT-LISTP-OF-CDR-WHEN-NAT-LISTP))
 (16 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (16 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (16 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (14 14 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (14 14 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (14 14 (:REWRITE |(< 0 (/ x))|))
 (14 14 (:REWRITE |(< 0 (* x y))|))
 (12 12 (:TYPE-PRESCRIPTION TRIM-BENDIAN*))
 (12 12 (:REWRITE NATP-LISTP-WHEN-DAB-DIGIT-LISTP))
 (12 12 (:REWRITE NAT-LISTP-WHEN-NOT-CONSP))
 (11 11 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (9 9 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (9 9 (:REWRITE |(< (/ x) 0)|))
 (9 9 (:REWRITE |(< (* x y) 0)|))
 (8 8 (:REWRITE SUBSETP-TRANS2))
 (8 8 (:REWRITE SUBSETP-TRANS))
 (8 8 (:REWRITE APPEND-ATOM-UNDER-LIST-EQUIV))
 (8 8 (:REWRITE |(< x (if a b c))|))
 (8 2 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (6 6 (:TYPE-PRESCRIPTION ZP))
 (6 6 (:REWRITE-QUOTED-CONSTANT NAT-LIST-FIX-UNDER-NAT-LIST-EQUIV))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (4 4 (:REWRITE SUBSETP-MEMBER . 2))
 (4 4 (:REWRITE SUBSETP-MEMBER . 1))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE CAR-CONS))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (/ x) (/ y))|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (1 1 (:REWRITE SUBSETP-NIL))
 (1 1 (:REWRITE |(equal x (if a b c))|))
 (1 1 (:REWRITE |(equal (if a b c) x)|))
 )
(TRIM-LENDIAN*-IFF-NOT-ZP-LISTP
 (104 1 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (96 1 (:REWRITE ZP-OPEN))
 (28 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (24 1 (:REWRITE INTEGER-LISTP-OF-REV))
 (20 1 (:DEFINITION INTEGER-LISTP))
 (12 1 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (11 11 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (10 10 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (5 2 (:REWRITE DEFAULT-CAR))
 (5 1 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (4 4 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE THE-FLOOR-BELOW))
 (2 2 (:REWRITE THE-FLOOR-ABOVE))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 2 (:REWRITE REV-WHEN-NOT-CONSP))
 (2 2 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (2 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE INTEGERP-<-CONSTANT))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-1))
 (2 2 (:REWRITE CONSTANT-<-INTEGERP))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (- x))|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) (/ y))|))
 (2 2 (:REWRITE |(< (- x) c)|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:META META-INTEGERP-CORRECT))
 (1 1 (:TYPE-PRESCRIPTION ZP))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE CONSP-OF-REV))
 )
(TRIM-LENDIAN*-OF-NAT-LIST-FIX-DIGITS)
(TRIM-LENDIAN*-NAT-LIST-EQUIV-CONGRUENCE-ON-DIGITS)
(TRIM-BENDIAN+)
(NAT-LISTP-OF-TRIM-BENDIAN+)
(TRIM-BENDIAN+-OF-TRUE-LIST-FIX)
(TRIM-BENDIAN+-WHEN-ZP-LISTP)
(BENDIAN=>NAT-OF-TRIM-BENDIAN+
 (340 4 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (328 4 (:REWRITE ZP-OPEN))
 (72 8 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (56 4 (:DEFINITION INTEGER-LISTP))
 (28 28 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (24 4 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (8 8 (:TYPE-PRESCRIPTION ZP-LISTP))
 (8 8 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (8 8 (:REWRITE THE-FLOOR-BELOW))
 (8 8 (:REWRITE THE-FLOOR-ABOVE))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (8 8 (:REWRITE SIMPLIFY-SUMS-<))
 (8 8 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (8 8 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (8 8 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (8 8 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (8 8 (:REWRITE REDUCE-INTEGERP-+))
 (8 8 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (8 8 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (8 8 (:REWRITE INTEGERP-MINUS-X))
 (8 8 (:REWRITE INTEGERP-<-CONSTANT))
 (8 8 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (8 8 (:REWRITE DEFAULT-LESS-THAN-2))
 (8 8 (:REWRITE DEFAULT-LESS-THAN-1))
 (8 8 (:REWRITE DEFAULT-CAR))
 (8 8 (:REWRITE CONSTANT-<-INTEGERP))
 (8 8 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (8 8 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (8 8 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (8 8 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (8 8 (:REWRITE |(< c (- x))|))
 (8 8 (:REWRITE |(< 0 (/ x))|))
 (8 8 (:REWRITE |(< 0 (* x y))|))
 (8 8 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (8 8 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (8 8 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (8 8 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (8 8 (:REWRITE |(< (/ x) (/ y))|))
 (8 8 (:REWRITE |(< (- x) c)|))
 (8 8 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:META META-INTEGERP-CORRECT))
 (8 4 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (8 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (8 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (7 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (5 5 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (4 4 (:TYPE-PRESCRIPTION ZP))
 (4 4 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (/ x) (/ y))|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 )
(TRIM-BENDIAN+-OF-NAT-LIST-FIX-DIGITS)
(TRIM-BENDIAN+-NAT-LIST-EQUIV-CONGRUENCE-ON-DIGITS)
(TRIM-LENDIAN+)
(NAT-LISTP-OF-TRIM-LENDIAN+)
(TRIM-LENDIAN+-OF-TRUE-LIST-FIX)
(TRIM-LENDIAN+-WHEN-ZP-LISTP)
(LENDIAN=>NAT-OF-TRIM-LENDIAN+
 (434 4 (:REWRITE TRIM-LENDIAN*-WHEN-NO-ENDING-0))
 (390 4 (:REWRITE ZP-OPEN))
 (118 8 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (82 82 (:TYPE-PRESCRIPTION LAST))
 (78 4 (:DEFINITION INTEGER-LISTP))
 (28 28 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (24 4 (:REWRITE TRIM-LENDIAN*-WHEN-ZP-LISTP))
 (20 8 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (20 8 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE DEFAULT-CDR))
 (12 4 (:DEFINITION LAST))
 (8 8 (:TYPE-PRESCRIPTION ZP-LISTP))
 (8 8 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (8 8 (:REWRITE THE-FLOOR-BELOW))
 (8 8 (:REWRITE THE-FLOOR-ABOVE))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (8 8 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (8 8 (:REWRITE SIMPLIFY-SUMS-<))
 (8 8 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (8 8 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (8 8 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (8 8 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (8 8 (:REWRITE REDUCE-INTEGERP-+))
 (8 8 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (8 8 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (8 8 (:REWRITE INTEGERP-MINUS-X))
 (8 8 (:REWRITE INTEGERP-<-CONSTANT))
 (8 8 (:REWRITE DEFAULT-LESS-THAN-2))
 (8 8 (:REWRITE DEFAULT-LESS-THAN-1))
 (8 8 (:REWRITE CONSTANT-<-INTEGERP))
 (8 8 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (8 8 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (8 8 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (8 8 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (8 8 (:REWRITE |(< c (- x))|))
 (8 8 (:REWRITE |(< 0 (/ x))|))
 (8 8 (:REWRITE |(< 0 (* x y))|))
 (8 8 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (8 8 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (8 8 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (8 8 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (8 8 (:REWRITE |(< (/ x) (/ y))|))
 (8 8 (:REWRITE |(< (- x) c)|))
 (8 8 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:META META-INTEGERP-CORRECT))
 (8 4 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (8 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (8 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (7 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (5 5 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (4 4 (:TYPE-PRESCRIPTION ZP))
 (4 4 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (/ x) (/ y))|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 )
(TRIM-LENDIAN+-OF-NAT-LIST-FIX-DIGITS)
(TRIM-LENDIAN+-NAT-LIST-EQUIV-CONGRUENCE-ON-DIGITS)
(LEMMA
 (6784 221 (:REWRITE ACL2-NUMBERP-X))
 (3957 300 (:REWRITE RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP))
 (3865 34 (:REWRITE TRIM-LENDIAN*-WHEN-NO-ENDING-0))
 (3507 169 (:DEFINITION RATIONAL-LISTP))
 (3444 35 (:REWRITE ZP-OPEN))
 (3138 218 (:REWRITE ACL2-NUMBERP-OF-CAR-WHEN-ACL2-NUMBER-LISTP))
 (3099 383 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (2902 301 (:REWRITE RATIONALP-X))
 (2762 133 (:DEFINITION ACL2-NUMBER-LISTP))
 (2173 127 (:DEFINITION INTEGER-LISTP))
 (1734 237 (:REWRITE RATIONAL-LISTP-OF-CDR-WHEN-RATIONAL-LISTP))
 (1239 63 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (818 177 (:REWRITE ACL2-NUMBER-LISTP-OF-CDR-WHEN-ACL2-NUMBER-LISTP))
 (793 793 (:TYPE-PRESCRIPTION LAST))
 (757 741 (:REWRITE DEFAULT-CDR))
 (686 600 (:REWRITE DEFAULT-CAR))
 (384 384 (:REWRITE REDUCE-INTEGERP-+))
 (384 384 (:REWRITE INTEGERP-MINUS-X))
 (384 384 (:META META-INTEGERP-CORRECT))
 (360 242 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (354 169 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (318 318 (:REWRITE RATIONAL-LISTP-WHEN-NOT-CONSP))
 (305 4 (:DEFINITION MEMBER-EQUAL))
 (301 301 (:REWRITE REDUCE-RATIONALP-+))
 (301 301 (:REWRITE REDUCE-RATIONALP-*))
 (301 301 (:REWRITE RATIONALP-MINUS-X))
 (301 301 (:META META-RATIONALP-CORRECT))
 (256 32 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (246 246 (:REWRITE ACL2-NUMBER-LISTP-WHEN-NOT-CONSP))
 (191 16 (:DEFINITION TRUE-LISTP))
 (182 50 (:DEFINITION LAST))
 (163 63 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (144 72 (:REWRITE DEFAULT-PLUS-2))
 (128 63 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (117 76 (:REWRITE DEFAULT-TIMES-2))
 (111 76 (:REWRITE DEFAULT-TIMES-1))
 (100 1 (:REWRITE SUBSETP-OF-CONS))
 (76 13 (:REWRITE ZP-LISTP-OF-CDR-WHEN-ZP-LISTP))
 (68 68 (:REWRITE THE-FLOOR-BELOW))
 (68 68 (:REWRITE THE-FLOOR-ABOVE))
 (68 68 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (68 68 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (68 68 (:REWRITE SIMPLIFY-SUMS-<))
 (68 68 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (68 68 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (68 68 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (68 68 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (68 68 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (68 68 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (68 68 (:REWRITE INTEGERP-<-CONSTANT))
 (68 68 (:REWRITE DEFAULT-LESS-THAN-2))
 (68 68 (:REWRITE DEFAULT-LESS-THAN-1))
 (68 68 (:REWRITE CONSTANT-<-INTEGERP))
 (68 68 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (68 68 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (68 68 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (68 68 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (68 68 (:REWRITE |(< c (- x))|))
 (68 68 (:REWRITE |(< 0 (/ x))|))
 (68 68 (:REWRITE |(< 0 (* x y))|))
 (68 68 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (68 68 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (68 68 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (68 68 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (68 68 (:REWRITE |(< (/ x) (/ y))|))
 (68 68 (:REWRITE |(< (- x) c)|))
 (68 68 (:REWRITE |(< (- x) (- y))|))
 (64 64 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (64 32 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (64 32 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (63 63 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (63 63 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (63 63 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (63 63 (:REWRITE |(equal c (/ x))|))
 (63 63 (:REWRITE |(equal c (- x))|))
 (63 63 (:REWRITE |(equal (/ x) c)|))
 (63 63 (:REWRITE |(equal (/ x) (/ y))|))
 (63 63 (:REWRITE |(equal (- x) c)|))
 (63 63 (:REWRITE |(equal (- x) (- y))|))
 (54 54 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (41 41 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (37 37 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (37 37 (:REWRITE NORMALIZE-ADDENDS))
 (35 35 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (35 35 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (34 34 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (32 32 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (32 32 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (32 32 (:REWRITE SET::IN-SET))
 (14 14 (:REWRITE SUBSETP-TRANS2))
 (14 14 (:REWRITE SUBSETP-TRANS))
 (11 11 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (8 8 (:REWRITE SUBSETP-MEMBER . 2))
 (8 8 (:REWRITE SUBSETP-MEMBER . 1))
 (1 1 (:REWRITE |(equal x (if a b c))|))
 )
(NAT=>LENDIAN*-OF-LENDIAN=>NAT)
(NAT=>LENDIAN+-OF-LENDIAN=>NAT)
(LEMMA
 (1615 1 (:REWRITE MOD-X-Y-=-X-Y . 1))
 (1138 5 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (984 5 (:REWRITE CANCEL-MOD-+))
 (965 5 (:REWRITE MOD-X-Y-=-X . 3))
 (935 7 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (825 1 (:REWRITE MOD-X-Y-=-X+Y . 1))
 (572 572 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (572 572 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (572 572 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (572 572 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (572 572 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (453 5 (:REWRITE MOD-ZERO . 3))
 (447 23 (:LINEAR EXPT-<=-1-TWO))
 (420 3 (:REWRITE TRIM-LENDIAN*-WHEN-NO-ENDING-0))
 (354 22 (:LINEAR EXPT-X->=-X))
 (342 3 (:REWRITE ZP-OPEN))
 (332 46 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (317 5 (:REWRITE |(integerp (- x))|))
 (309 23 (:LINEAR EXPT->=-1-TWO))
 (309 23 (:LINEAR EXPT-<=-1-ONE))
 (298 23 (:LINEAR EXPT->-1-ONE))
 (298 23 (:LINEAR EXPT-<-1-TWO))
 (296 37 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (296 37 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (283 283 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (282 37 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (282 37 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (281 5 (:REWRITE DEFAULT-MOD-RATIO))
 (272 22 (:LINEAR EXPT-X->-X))
 (271 111 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (268 6 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (260 111 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (257 111 (:REWRITE DEFAULT-LESS-THAN-2))
 (245 111 (:REWRITE SIMPLIFY-SUMS-<))
 (244 244 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (244 244 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (244 244 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (231 21 (:REWRITE DEFAULT-TIMES-2))
 (229 5 (:REWRITE MOD-X-Y-=-X . 4))
 (226 2 (:LINEAR MOD-BOUNDS-3))
 (217 3 (:REWRITE |(+ y (+ x z))|))
 (212 31 (:REWRITE DEFAULT-PLUS-2))
 (200 5 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (200 5 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (196 5 (:REWRITE |(* (- x) y)|))
 (186 42 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (186 42 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (176 16 (:REWRITE DEFAULT-DIVIDE))
 (174 87 (:REWRITE DEFAULT-EXPT-2))
 (159 22 (:REWRITE DEFAULT-MINUS))
 (159 5 (:REWRITE MOD-ZERO . 4))
 (154 16 (:REWRITE NORMALIZE-ADDENDS))
 (150 5 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (150 5 (:REWRITE MOD-X-Y-=-X . 2))
 (148 37 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (145 5 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (145 5 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (128 16 (:REWRITE |(/ (expt x n))|))
 (126 63 (:TYPE-PRESCRIPTION LAST))
 (126 42 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (126 6 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (125 111 (:REWRITE DEFAULT-LESS-THAN-1))
 (116 4 (:LINEAR MOD-BOUNDS-2))
 (111 111 (:REWRITE THE-FLOOR-BELOW))
 (111 111 (:REWRITE THE-FLOOR-ABOVE))
 (111 111 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (111 111 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (111 111 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (111 111 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (111 111 (:REWRITE INTEGERP-<-CONSTANT))
 (111 111 (:REWRITE CONSTANT-<-INTEGERP))
 (111 111 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (111 111 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (111 111 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (111 111 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (111 111 (:REWRITE |(< c (- x))|))
 (111 111 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (111 111 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (111 111 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (111 111 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (111 111 (:REWRITE |(< (/ x) (/ y))|))
 (111 111 (:REWRITE |(< (- x) c)|))
 (111 111 (:REWRITE |(< (- x) (- y))|))
 (96 96 (:TYPE-PRESCRIPTION DAB-DIGIT-LIST-FIX))
 (95 5 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (95 5 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (95 5 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (94 31 (:REWRITE DEFAULT-PLUS-1))
 (87 87 (:REWRITE DEFAULT-EXPT-1))
 (87 87 (:REWRITE |(expt 1/c n)|))
 (87 87 (:REWRITE |(expt (- x) n)|))
 (78 3 (:DEFINITION INTEGER-LISTP))
 (77 5 (:REWRITE MOD-CANCEL-*-CONST))
 (64 62 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (55 5 (:REWRITE DEFAULT-MOD-2))
 (52 4 (:REWRITE |(+ y x)|))
 (50 2 (:REWRITE BUBBLE-DOWN-+-MATCH-3))
 (48 6 (:DEFINITION LEN))
 (47 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (44 44 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (44 44 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (42 42 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (42 21 (:REWRITE DEFAULT-TIMES-1))
 (39 3 (:DEFINITION LAST))
 (37 37 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (37 37 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (37 37 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (37 37 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (36 3 (:REWRITE TRIM-LENDIAN*-WHEN-ZP-LISTP))
 (34 8 (:DEFINITION FIX))
 (33 15 (:REWRITE DEFAULT-CDR))
 (24 6 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (24 6 (:REWRITE DEFAULT-CAR))
 (24 3 (:REWRITE |(+ 0 x)|))
 (23 23 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (23 23 (:LINEAR EXPT-LINEAR-UPPER-<))
 (23 23 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (23 23 (:LINEAR EXPT-LINEAR-LOWER-<))
 (23 23 (:LINEAR EXPT->-1-TWO))
 (23 23 (:LINEAR EXPT-<-1-ONE))
 (22 22 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (22 22 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (22 22 (:REWRITE |(< 0 (/ x))|))
 (22 22 (:REWRITE |(< 0 (* x y))|))
 (21 21 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (19 5 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (17 17 (:REWRITE REDUCE-INTEGERP-+))
 (17 17 (:REWRITE INTEGERP-MINUS-X))
 (17 17 (:META META-INTEGERP-CORRECT))
 (17 7 (:REWRITE |(equal (- x) (- y))|))
 (16 16 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (15 15 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (15 15 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-RATIONALP-BASE))
 (15 15 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (12 3 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (12 2 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (11 11 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (10 5 (:REWRITE DEFAULT-MOD-1))
 (9 9 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (7 7 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (7 7 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (7 7 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (7 7 (:REWRITE |(equal c (/ x))|))
 (7 7 (:REWRITE |(equal c (- x))|))
 (7 7 (:REWRITE |(equal (/ x) c)|))
 (7 7 (:REWRITE |(equal (/ x) (/ y))|))
 (7 7 (:REWRITE |(equal (- x) c)|))
 (6 6 (:TYPE-PRESCRIPTION ZP-LISTP))
 (6 6 (:TYPE-PRESCRIPTION TRIM-LENDIAN*))
 (6 6 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (6 6 (:REWRITE CDR-OF-DAB-DIGIT-LIST-FIX))
 (6 3 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (6 3 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (5 5 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (5 5 (:REWRITE |(mod x (- y))| . 3))
 (5 5 (:REWRITE |(mod x (- y))| . 2))
 (5 5 (:REWRITE |(mod x (- y))| . 1))
 (5 5 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (5 5 (:REWRITE |(mod (- x) y)| . 3))
 (5 5 (:REWRITE |(mod (- x) y)| . 2))
 (5 5 (:REWRITE |(mod (- x) y)| . 1))
 (5 5 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (5 5 (:REWRITE |(- (* c x))|))
 (5 5 (:REWRITE |(+ x (- x))|))
 (4 4 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (3 3 (:TYPE-PRESCRIPTION ZP))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (3 3 (:REWRITE |(equal (+ (- c) x) y)|))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE |(+ c (+ d x))|))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 )
(NAT=>LENDIAN-OF-LENDIAN=>NAT
 (1102 1 (:REWRITE MOD-X-Y-=-X-Y . 1))
 (884 6 (:REWRITE ZP-OPEN))
 (687 6 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (668 2 (:REWRITE REPEAT-WHEN-ZP))
 (569 1 (:REWRITE MOD-X-Y-=-X+Y . 1))
 (561 5 (:REWRITE TRIM-LENDIAN*-WHEN-NO-ENDING-0))
 (344 2 (:LINEAR LEN-OF-TRIM-LENDIAN*-UPPER-BOUND))
 (287 5 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (280 5 (:REWRITE |(+ y (+ x z))|))
 (264 50 (:REWRITE DEFAULT-PLUS-2))
 (257 45 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (243 2 (:REWRITE MOD-X-Y-=-X-Y . 2))
 (241 241 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (241 241 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (241 241 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (241 241 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (241 241 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (206 2 (:REWRITE MOD-ZERO . 3))
 (188 37 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (188 37 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (188 37 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (188 37 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (188 23 (:REWRITE NORMALIZE-ADDENDS))
 (181 1 (:REWRITE CANCEL-MOD-+))
 (168 84 (:TYPE-PRESCRIPTION LAST))
 (168 8 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (164 164 (:TYPE-PRESCRIPTION INTEGERP-/-EXPT-1))
 (139 139 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (139 139 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (139 139 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (131 50 (:REWRITE DEFAULT-PLUS-1))
 (127 45 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (123 5 (:LINEAR EXPT-<=-1-TWO))
 (120 45 (:REWRITE DEFAULT-LESS-THAN-2))
 (118 2 (:REWRITE MOD-X-Y-=-X . 4))
 (112 37 (:TYPE-PRESCRIPTION INTEGERP-MOD-2))
 (111 5 (:LINEAR EXPT->=-1-TWO))
 (111 5 (:LINEAR EXPT-<=-1-ONE))
 (110 5 (:LINEAR EXPT->=-1-ONE))
 (108 5 (:LINEAR EXPT-X->=-X))
 (106 2 (:REWRITE DEFAULT-MOD-RATIO))
 (104 4 (:DEFINITION INTEGER-LISTP))
 (103 5 (:LINEAR EXPT-X->-X))
 (103 5 (:LINEAR EXPT->-1-ONE))
 (103 5 (:LINEAR EXPT-<-1-TWO))
 (99 43 (:REWRITE SIMPLIFY-SUMS-<))
 (84 2 (:REWRITE MOD-ZERO . 4))
 (77 8 (:REWRITE |(+ y x)|))
 (72 9 (:DEFINITION LEN))
 (72 6 (:REWRITE DEFAULT-TIMES-2))
 (66 2 (:REWRITE MOD-X-Y-=-X+Y . 2))
 (64 2 (:REWRITE MOD-X-Y-=-X-Y . 3))
 (64 2 (:REWRITE MOD-X-Y-=-X+Y . 3))
 (60 5 (:REWRITE DEFAULT-DIVIDE))
 (56 45 (:REWRITE DEFAULT-LESS-THAN-1))
 (54 2 (:REWRITE BUBBLE-DOWN-+-MATCH-3))
 (52 4 (:DEFINITION LAST))
 (52 1 (:REWRITE |(integerp (- x))|))
 (51 6 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (49 5 (:REWRITE TRIM-LENDIAN*-WHEN-ZP-LISTP))
 (47 45 (:REWRITE |(< c (- x))|))
 (47 23 (:REWRITE DEFAULT-CDR))
 (45 45 (:REWRITE THE-FLOOR-BELOW))
 (45 45 (:REWRITE THE-FLOOR-ABOVE))
 (45 45 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (45 45 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (45 45 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (45 45 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (45 45 (:REWRITE INTEGERP-<-CONSTANT))
 (45 45 (:REWRITE CONSTANT-<-INTEGERP))
 (45 45 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (45 45 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (45 45 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (45 45 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (45 45 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (45 45 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (45 45 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (45 45 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (45 45 (:REWRITE |(< (/ x) (/ y))|))
 (45 45 (:REWRITE |(< (- x) c)|))
 (45 45 (:REWRITE |(< (- x) (- y))|))
 (45 5 (:REWRITE |(/ (expt x n))|))
 (44 12 (:DEFINITION FIX))
 (44 11 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B-EXPT))
 (44 1 (:REWRITE |(mod (+ x (mod a b)) y)|))
 (44 1 (:REWRITE |(mod (+ x (- (mod a b))) y)|))
 (43 9 (:REWRITE DEFAULT-MINUS))
 (37 37 (:TYPE-PRESCRIPTION MOD-ZERO . 3))
 (37 37 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (37 37 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (37 37 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (34 10 (:REWRITE DEFAULT-CAR))
 (34 7 (:REWRITE |(+ 0 x)|))
 (34 1 (:REWRITE |(* (- x) y)|))
 (33 1 (:REWRITE MOD-X-Y-=-X . 2))
 (32 8 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (28 28 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (28 28 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (24 12 (:REWRITE DEFAULT-EXPT-2))
 (24 12 (:REWRITE DEFAULT-EXPT-1))
 (24 7 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (24 2 (:REWRITE DEFAULT-MOD-2))
 (21 1 (:REWRITE MOD-CANCEL-*-REWRITING-GOAL-LITERAL))
 (21 1 (:REWRITE MOD-CANCEL-*-CONST))
 (21 1 (:REWRITE |(mod x (* y (/ z))) rewriting-goal-literal|))
 (21 1 (:REWRITE |(mod (* x (/ y)) z) rewriting-goal-literal|))
 (18 18 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (17 6 (:REWRITE |(equal (- x) (- y))|))
 (16 16 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (16 16 (:REWRITE |(< 0 (/ x))|))
 (16 16 (:REWRITE |(< 0 (* x y))|))
 (16 4 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (15 5 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (15 5 (:LINEAR EXPT->-1-TWO))
 (15 5 (:LINEAR EXPT-<-1-ONE))
 (14 14 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (14 14 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (12 12 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (12 12 (:REWRITE |(expt 1/c n)|))
 (12 12 (:REWRITE |(expt (- x) n)|))
 (12 6 (:REWRITE DEFAULT-TIMES-1))
 (11 11 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B-EXPT))
 (11 11 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B-EXPT))
 (11 11 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B-EXPT))
 (11 11 (:REWRITE REDUCE-INTEGERP-+))
 (11 11 (:REWRITE INTEGERP-MINUS-X))
 (11 11 (:META META-INTEGERP-CORRECT))
 (10 10 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (10 10 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (10 10 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (10 10 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (10 5 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (10 4 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (8 8 (:TYPE-PRESCRIPTION ZP-LISTP))
 (8 8 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (8 8 (:REWRITE CDR-OF-DAB-DIGIT-LIST-FIX))
 (8 4 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (7 7 (:REWRITE |(+ x (- x))|))
 (6 6 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (6 6 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (6 6 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (6 6 (:REWRITE |(equal c (/ x))|))
 (6 6 (:REWRITE |(equal c (- x))|))
 (6 6 (:REWRITE |(equal (/ x) c)|))
 (6 6 (:REWRITE |(equal (/ x) (/ y))|))
 (6 6 (:REWRITE |(equal (- x) c)|))
 (6 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (5 5 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (5 5 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (5 5 (:LINEAR EXPT-LINEAR-UPPER-<))
 (5 5 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (5 5 (:LINEAR EXPT-LINEAR-LOWER-<))
 (4 4 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (4 4 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (4 2 (:REWRITE DEFAULT-MOD-1))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (3 3 (:REWRITE |(equal (+ (- c) x) y)|))
 (3 3 (:REWRITE |(< (/ x) 0)|))
 (3 3 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE |(< y (+ (- c) x))|))
 (2 2 (:REWRITE |(< x (+ c/d y))|))
 (2 2 (:REWRITE |(+ c (+ d x))|))
 (1 1 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (1 1 (:REWRITE MOD-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE |(mod x (- y))| . 3))
 (1 1 (:REWRITE |(mod x (- y))| . 2))
 (1 1 (:REWRITE |(mod x (- y))| . 1))
 (1 1 (:REWRITE |(mod x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(mod (- x) y)| . 3))
 (1 1 (:REWRITE |(mod (- x) y)| . 2))
 (1 1 (:REWRITE |(mod (- x) y)| . 1))
 (1 1 (:REWRITE |(mod (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(- (* c x))|))
 )
(NAT=>BENDIAN*-OF-BENDIAN=>NAT)
(NAT=>BENDIAN+-OF-BENDIAN=>NAT)
(NAT=>BENDIAN-OF-BENDIAN=>NAT
 (96 4 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (70 1 (:REWRITE DAB-DIGIT-LISTP-OF-REV))
 (58 2 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (52 2 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (32 4 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (30 4 (:DEFINITION LEN))
 (28 2 (:DEFINITION TRUE-LISTP))
 (12 12 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (12 2 (:REWRITE DAB-DIGIT-LISTP-OF-LIST-FIX))
 (11 5 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (11 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (11 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (10 10 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (10 10 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (9 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (8 8 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (8 4 (:REWRITE OMAP::SETP-WHEN-MAPP))
 (8 4 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (8 4 (:REWRITE DEFAULT-PLUS-2))
 (6 6 (:REWRITE DEFAULT-CDR))
 (4 4 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (4 4 (:TYPE-PRESCRIPTION OMAP::MAPP))
 (4 4 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE SET::IN-SET))
 (4 4 (:REWRITE DEFAULT-PLUS-1))
 (3 3 (:REWRITE REV-WHEN-NOT-CONSP))
 (3 3 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (3 3 (:REWRITE |(equal c (/ x))|))
 (3 3 (:REWRITE |(equal c (- x))|))
 (3 3 (:REWRITE |(equal (/ x) c)|))
 (3 3 (:REWRITE |(equal (/ x) (/ y))|))
 (3 3 (:REWRITE |(equal (- x) c)|))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-=-0))
 (2 2 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 2 (:REWRITE CONSP-OF-LIST-FIX))
 )
(LENDIAN=>NAT-UPPER-BOUND
 (280 2 (:REWRITE TRIM-LENDIAN*-WHEN-NO-ENDING-0))
 (228 2 (:REWRITE ZP-OPEN))
 (84 42 (:TYPE-PRESCRIPTION LAST))
 (84 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (78 2 (:LINEAR EXPT-<=-1-TWO))
 (70 2 (:LINEAR EXPT->=-1-TWO))
 (70 2 (:LINEAR EXPT-<=-1-ONE))
 (68 2 (:LINEAR EXPT-X->=-X))
 (66 2 (:LINEAR EXPT-X->-X))
 (66 2 (:LINEAR EXPT->-1-ONE))
 (66 2 (:LINEAR EXPT-<-1-TWO))
 (64 64 (:TYPE-PRESCRIPTION DAB-DIGIT-LIST-FIX))
 (62 22 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (62 22 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (60 22 (:REWRITE DEFAULT-LESS-THAN-2))
 (56 56 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (56 56 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (56 56 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (56 56 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (56 56 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (53 7 (:DEFINITION LEN))
 (52 2 (:DEFINITION INTEGER-LISTP))
 (47 22 (:REWRITE SIMPLIFY-SUMS-<))
 (36 4 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (26 2 (:DEFINITION LAST))
 (25 13 (:REWRITE DEFAULT-CDR))
 (24 22 (:REWRITE DEFAULT-LESS-THAN-1))
 (24 2 (:REWRITE TRIM-LENDIAN*-WHEN-ZP-LISTP))
 (22 22 (:REWRITE THE-FLOOR-BELOW))
 (22 22 (:REWRITE THE-FLOOR-ABOVE))
 (22 22 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (22 22 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (22 22 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (22 22 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (22 22 (:REWRITE INTEGERP-<-CONSTANT))
 (22 22 (:REWRITE CONSTANT-<-INTEGERP))
 (22 22 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (22 22 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (22 22 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (22 22 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (22 22 (:REWRITE |(< c (- x))|))
 (22 22 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (22 22 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (22 22 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (22 22 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (22 22 (:REWRITE |(< (/ x) (/ y))|))
 (22 22 (:REWRITE |(< (- x) c)|))
 (22 22 (:REWRITE |(< (- x) (- y))|))
 (16 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (16 4 (:REWRITE DEFAULT-CAR))
 (14 14 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (14 7 (:REWRITE DEFAULT-PLUS-2))
 (11 11 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (8 4 (:REWRITE DEFAULT-EXPT-2))
 (8 4 (:REWRITE DEFAULT-EXPT-1))
 (8 2 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (7 7 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (7 7 (:REWRITE NORMALIZE-ADDENDS))
 (7 7 (:REWRITE DEFAULT-PLUS-1))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (6 6 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (6 6 (:REWRITE |(< 0 (/ x))|))
 (6 6 (:REWRITE |(< 0 (* x y))|))
 (6 4 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (6 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (6 2 (:LINEAR EXPT->-1-TWO))
 (6 2 (:LINEAR EXPT-<-1-ONE))
 (6 1 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (4 4 (:TYPE-PRESCRIPTION ZP-LISTP))
 (4 4 (:TYPE-PRESCRIPTION TRIM-LENDIAN*))
 (4 4 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (4 4 (:REWRITE REDUCE-INTEGERP-+))
 (4 4 (:REWRITE INTEGERP-MINUS-X))
 (4 4 (:REWRITE CDR-OF-DAB-DIGIT-LIST-FIX))
 (4 4 (:REWRITE |(expt 1/c n)|))
 (4 4 (:REWRITE |(expt (- x) n)|))
 (4 4 (:META META-INTEGERP-CORRECT))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (4 2 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (2 2 (:TYPE-PRESCRIPTION ZP))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 )
(BENDIAN=>NAT-UPPER-BOUND
 (262 2 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (244 2 (:REWRITE ZP-OPEN))
 (108 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (88 2 (:DEFINITION INTEGER-LISTP))
 (78 2 (:LINEAR EXPT-<=-1-TWO))
 (70 2 (:LINEAR EXPT->=-1-TWO))
 (70 2 (:LINEAR EXPT-<=-1-ONE))
 (68 2 (:LINEAR EXPT-X->=-X))
 (66 2 (:LINEAR EXPT-X->-X))
 (66 2 (:LINEAR EXPT->-1-ONE))
 (66 2 (:LINEAR EXPT-<-1-TWO))
 (62 22 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (62 22 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (60 22 (:REWRITE DEFAULT-LESS-THAN-2))
 (56 56 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (56 56 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (56 56 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (56 56 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (56 56 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (53 7 (:DEFINITION LEN))
 (52 52 (:TYPE-PRESCRIPTION DAB-DIGIT-LIST-FIX))
 (47 22 (:REWRITE SIMPLIFY-SUMS-<))
 (36 4 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (30 3 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (28 4 (:REWRITE CAR-OF-DAB-DIGIT-LIST-FIX))
 (28 2 (:REWRITE CDR-OF-DAB-DIGIT-LIST-FIX))
 (24 22 (:REWRITE DEFAULT-LESS-THAN-1))
 (24 2 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (22 22 (:REWRITE THE-FLOOR-BELOW))
 (22 22 (:REWRITE THE-FLOOR-ABOVE))
 (22 22 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (22 22 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (22 22 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (22 22 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (22 22 (:REWRITE INTEGERP-<-CONSTANT))
 (22 22 (:REWRITE CONSTANT-<-INTEGERP))
 (22 22 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (22 22 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (22 22 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (22 22 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (22 22 (:REWRITE |(< c (- x))|))
 (22 22 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (22 22 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (22 22 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (22 22 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (22 22 (:REWRITE |(< (/ x) (/ y))|))
 (22 22 (:REWRITE |(< (- x) c)|))
 (22 22 (:REWRITE |(< (- x) (- y))|))
 (22 2 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (16 4 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (14 14 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (14 14 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (14 7 (:REWRITE DEFAULT-PLUS-2))
 (12 2 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (12 2 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (11 11 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (10 10 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (10 10 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (10 4 (:REWRITE DEFAULT-CAR))
 (9 9 (:REWRITE DEFAULT-CDR))
 (8 4 (:REWRITE DEFAULT-EXPT-2))
 (8 4 (:REWRITE DEFAULT-EXPT-1))
 (8 2 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (7 7 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (7 7 (:REWRITE NORMALIZE-ADDENDS))
 (7 7 (:REWRITE DEFAULT-PLUS-1))
 (7 7 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (6 6 (:REWRITE |(< 0 (/ x))|))
 (6 6 (:REWRITE |(< 0 (* x y))|))
 (6 4 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (6 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (6 2 (:LINEAR EXPT->-1-TWO))
 (6 2 (:LINEAR EXPT-<-1-ONE))
 (4 4 (:TYPE-PRESCRIPTION ZP-LISTP))
 (4 4 (:TYPE-PRESCRIPTION TRIM-BENDIAN*))
 (4 4 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (4 4 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (4 4 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE |(expt 1/c n)|))
 (4 4 (:REWRITE |(expt (- x) n)|))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (2 2 (:TYPE-PRESCRIPTION ZP))
 (2 2 (:TYPE-PRESCRIPTION NATP-OF-DAB-DIGIT-FIX))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 2 (:META META-INTEGERP-CORRECT))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<))
 )
(LENDIAN=>NAT-INJECTIVITY*
 (560 4 (:REWRITE TRIM-LENDIAN*-WHEN-NO-ENDING-0))
 (456 4 (:REWRITE ZP-OPEN))
 (168 84 (:TYPE-PRESCRIPTION LAST))
 (168 8 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (128 128 (:TYPE-PRESCRIPTION DAB-DIGIT-LIST-FIX))
 (104 4 (:DEFINITION INTEGER-LISTP))
 (78 2 (:LINEAR EXPT-<=-1-TWO))
 (70 2 (:LINEAR EXPT->=-1-TWO))
 (70 2 (:LINEAR EXPT-<=-1-ONE))
 (68 2 (:LINEAR EXPT-X->=-X))
 (66 2 (:LINEAR EXPT-X->-X))
 (66 2 (:LINEAR EXPT->-1-ONE))
 (66 2 (:LINEAR EXPT-<-1-TWO))
 (52 4 (:DEFINITION LAST))
 (48 4 (:REWRITE TRIM-LENDIAN*-WHEN-ZP-LISTP))
 (38 14 (:REWRITE DEFAULT-CDR))
 (36 22 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (36 22 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (36 22 (:REWRITE DEFAULT-LESS-THAN-2))
 (32 8 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (32 8 (:REWRITE DEFAULT-CAR))
 (28 28 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (26 7 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (26 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (26 7 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (24 4 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (22 22 (:REWRITE THE-FLOOR-BELOW))
 (22 22 (:REWRITE THE-FLOOR-ABOVE))
 (22 22 (:REWRITE SIMPLIFY-SUMS-<))
 (22 22 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (22 22 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (22 22 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (22 22 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (22 22 (:REWRITE INTEGERP-<-CONSTANT))
 (22 22 (:REWRITE DEFAULT-LESS-THAN-1))
 (22 22 (:REWRITE CONSTANT-<-INTEGERP))
 (22 22 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (22 22 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (22 22 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (22 22 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (22 22 (:REWRITE |(< c (- x))|))
 (22 22 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (22 22 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (22 22 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (22 22 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (22 22 (:REWRITE |(< (/ x) (/ y))|))
 (22 22 (:REWRITE |(< (- x) c)|))
 (22 22 (:REWRITE |(< (- x) (- y))|))
 (16 4 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (14 2 (:DEFINITION LEN))
 (12 12 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (10 10 (:REWRITE |(< 0 (/ x))|))
 (10 10 (:REWRITE |(< 0 (* x y))|))
 (8 8 (:TYPE-PRESCRIPTION ZP-LISTP))
 (8 8 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (8 8 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (8 8 (:REWRITE REDUCE-INTEGERP-+))
 (8 8 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (8 8 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (8 8 (:REWRITE INTEGERP-MINUS-X))
 (8 8 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (8 8 (:REWRITE CDR-OF-DAB-DIGIT-LIST-FIX))
 (8 8 (:META META-INTEGERP-CORRECT))
 (8 4 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (8 4 (:REWRITE DEFAULT-EXPT-2))
 (8 4 (:REWRITE DEFAULT-EXPT-1))
 (7 7 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (7 7 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (7 7 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (7 7 (:REWRITE |(equal c (/ x))|))
 (7 7 (:REWRITE |(equal c (- x))|))
 (7 7 (:REWRITE |(equal (/ x) c)|))
 (7 7 (:REWRITE |(equal (/ x) (/ y))|))
 (7 7 (:REWRITE |(equal (- x) c)|))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (6 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (6 2 (:LINEAR EXPT->-1-TWO))
 (6 2 (:LINEAR EXPT-<-1-ONE))
 (4 4 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (4 4 (:REWRITE |(expt 1/c n)|))
 (4 4 (:REWRITE |(expt (- x) n)|))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (4 4 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<))
 )
(LENDIAN=>NAT-INJECTIVITY+
 (196 1 (:REWRITE LENDIAN=>NAT-INJECTIVITY*))
 (158 1 (:REWRITE TRIM-LENDIAN*-WHEN-NO-ENDING-0))
 (114 1 (:REWRITE ZP-OPEN))
 (78 2 (:LINEAR EXPT-<=-1-TWO))
 (70 2 (:LINEAR EXPT->=-1-TWO))
 (70 2 (:LINEAR EXPT-<=-1-ONE))
 (68 2 (:LINEAR EXPT-X->=-X))
 (66 2 (:LINEAR EXPT-X->-X))
 (66 2 (:LINEAR EXPT->-1-ONE))
 (66 2 (:LINEAR EXPT-<-1-TWO))
 (54 7 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (48 4 (:REWRITE TRIM-LENDIAN+-WHEN-ZP-LISTP))
 (47 47 (:TYPE-PRESCRIPTION DAB-DIGIT-LIST-FIX))
 (42 21 (:TYPE-PRESCRIPTION LAST))
 (42 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (31 1 (:DEFINITION LAST))
 (30 16 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (30 16 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (30 16 (:REWRITE DEFAULT-LESS-THAN-2))
 (28 2 (:REWRITE CDR-OF-DAB-DIGIT-LIST-FIX))
 (26 1 (:DEFINITION INTEGER-LISTP))
 (25 14 (:REWRITE DEFAULT-CAR))
 (22 17 (:REWRITE DEFAULT-CDR))
 (20 5 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (18 18 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (18 18 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (16 16 (:REWRITE THE-FLOOR-BELOW))
 (16 16 (:REWRITE THE-FLOOR-ABOVE))
 (16 16 (:REWRITE SIMPLIFY-SUMS-<))
 (16 16 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (16 16 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (16 16 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (16 16 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (16 16 (:REWRITE INTEGERP-<-CONSTANT))
 (16 16 (:REWRITE DEFAULT-LESS-THAN-1))
 (16 16 (:REWRITE CONSTANT-<-INTEGERP))
 (16 16 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (16 16 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (16 16 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (16 16 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (16 16 (:REWRITE |(< c (- x))|))
 (16 16 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (16 16 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (16 16 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (16 16 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (16 16 (:REWRITE |(< (/ x) (/ y))|))
 (16 16 (:REWRITE |(< (- x) c)|))
 (16 16 (:REWRITE |(< (- x) (- y))|))
 (16 8 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (16 8 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (16 8 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (14 2 (:DEFINITION LEN))
 (12 2 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (12 1 (:REWRITE TRIM-LENDIAN*-WHEN-ZP-LISTP))
 (10 10 (:TYPE-PRESCRIPTION ZP-LISTP))
 (10 10 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (9 9 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (8 8 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (8 8 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (8 8 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (8 8 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (8 8 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (8 8 (:REWRITE |(equal c (/ x))|))
 (8 8 (:REWRITE |(equal c (- x))|))
 (8 8 (:REWRITE |(equal (/ x) c)|))
 (8 8 (:REWRITE |(equal (/ x) (/ y))|))
 (8 8 (:REWRITE |(equal (- x) c)|))
 (8 8 (:REWRITE |(equal (- x) (- y))|))
 (8 4 (:REWRITE DEFAULT-EXPT-2))
 (8 4 (:REWRITE DEFAULT-EXPT-1))
 (8 2 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (7 7 (:TYPE-PRESCRIPTION TRIM-LENDIAN*))
 (7 7 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (7 7 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (6 6 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (6 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (6 2 (:LINEAR EXPT->-1-TWO))
 (6 2 (:LINEAR EXPT-<-1-ONE))
 (4 4 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (4 4 (:REWRITE |(expt 1/c n)|))
 (4 4 (:REWRITE |(expt (- x) n)|))
 (4 4 (:REWRITE |(< 0 (/ x))|))
 (4 4 (:REWRITE |(< 0 (* x y))|))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (4 4 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:META META-INTEGERP-CORRECT))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<))
 (2 1 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (1 1 (:TYPE-PRESCRIPTION ZP))
 )
(LENDIAN=>NAT-INJECTIVITY
 (698 4 (:REWRITE LENDIAN=>NAT-INJECTIVITY*))
 (560 4 (:REWRITE TRIM-LENDIAN*-WHEN-NO-ENDING-0))
 (456 4 (:REWRITE ZP-OPEN))
 (168 84 (:TYPE-PRESCRIPTION LAST))
 (168 8 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (155 4 (:REWRITE LENDIAN=>NAT-INJECTIVITY+))
 (117 3 (:LINEAR EXPT-<=-1-TWO))
 (105 3 (:LINEAR EXPT->=-1-TWO))
 (105 3 (:LINEAR EXPT-<=-1-ONE))
 (104 4 (:DEFINITION INTEGER-LISTP))
 (102 3 (:LINEAR EXPT-X->=-X))
 (99 3 (:LINEAR EXPT-X->-X))
 (99 3 (:LINEAR EXPT->-1-ONE))
 (99 3 (:LINEAR EXPT-<-1-TWO))
 (92 20 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (68 19 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (68 19 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (68 19 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (56 32 (:REWRITE DEFAULT-CDR))
 (52 4 (:DEFINITION LAST))
 (50 29 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (50 29 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (50 29 (:REWRITE DEFAULT-LESS-THAN-2))
 (48 4 (:REWRITE TRIM-LENDIAN+-WHEN-ZP-LISTP))
 (40 20 (:REWRITE DEFAULT-PLUS-2))
 (36 12 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (36 4 (:REWRITE TRIM-LENDIAN*-WHEN-ZP-LISTP))
 (32 8 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (32 8 (:REWRITE DEFAULT-CAR))
 (30 30 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (30 15 (:REWRITE DEFAULT-EXPT-2))
 (30 15 (:REWRITE DEFAULT-EXPT-1))
 (29 29 (:REWRITE THE-FLOOR-BELOW))
 (29 29 (:REWRITE THE-FLOOR-ABOVE))
 (29 29 (:REWRITE SIMPLIFY-SUMS-<))
 (29 29 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (29 29 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (29 29 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (29 29 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (29 29 (:REWRITE INTEGERP-<-CONSTANT))
 (29 29 (:REWRITE DEFAULT-LESS-THAN-1))
 (29 29 (:REWRITE CONSTANT-<-INTEGERP))
 (29 29 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (29 29 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (29 29 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (29 29 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (29 29 (:REWRITE |(< c (- x))|))
 (29 29 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (29 29 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (29 29 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (29 29 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (29 29 (:REWRITE |(< (/ x) (/ y))|))
 (29 29 (:REWRITE |(< (- x) c)|))
 (29 29 (:REWRITE |(< (- x) (- y))|))
 (28 28 (:TYPE-PRESCRIPTION TRIM-LENDIAN+))
 (28 28 (:TYPE-PRESCRIPTION TRIM-LENDIAN*))
 (28 28 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (28 28 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (28 28 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (24 24 (:TYPE-PRESCRIPTION DAB-BASEP))
 (24 24 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (20 20 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (20 20 (:REWRITE NORMALIZE-ADDENDS))
 (20 20 (:REWRITE DEFAULT-PLUS-1))
 (20 8 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (19 19 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (19 19 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (19 19 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (19 19 (:REWRITE |(equal c (/ x))|))
 (19 19 (:REWRITE |(equal c (- x))|))
 (19 19 (:REWRITE |(equal (/ x) c)|))
 (19 19 (:REWRITE |(equal (/ x) (/ y))|))
 (19 19 (:REWRITE |(equal (- x) c)|))
 (19 19 (:REWRITE |(equal (- x) (- y))|))
 (16 16 (:TYPE-PRESCRIPTION ZP-LISTP))
 (16 16 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (15 15 (:REWRITE |(expt 1/c n)|))
 (15 15 (:REWRITE |(expt (- x) n)|))
 (13 13 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (12 12 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (12 12 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (11 11 (:REWRITE |(< 0 (/ x))|))
 (11 11 (:REWRITE |(< 0 (* x y))|))
 (9 3 (:LINEAR EXPT->-1-TWO))
 (9 3 (:LINEAR EXPT-<-1-ONE))
 (8 8 (:REWRITE REDUCE-INTEGERP-+))
 (8 8 (:REWRITE INTEGERP-MINUS-X))
 (8 8 (:REWRITE CDR-OF-DAB-DIGIT-LIST-FIX))
 (8 8 (:META META-INTEGERP-CORRECT))
 (8 4 (:REWRITE INTEGER-LISTP-OF-CDR-WHEN-INTEGER-LISTP))
 (6 6 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (6 6 (:REWRITE RETURN-TYPE-OF-DAB-DIGIT-LIST-FIX))
 (6 6 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (6 6 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (6 6 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (6 6 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (3 3 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (3 3 (:LINEAR EXPT-LINEAR-UPPER-<))
 (3 3 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (3 3 (:LINEAR EXPT-LINEAR-LOWER-<))
 )
(BENDIAN=>NAT-INJECTIVITY*
 (524 4 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (488 4 (:REWRITE ZP-OPEN))
 (216 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (176 4 (:DEFINITION INTEGER-LISTP))
 (104 104 (:TYPE-PRESCRIPTION DAB-DIGIT-LIST-FIX))
 (78 2 (:LINEAR EXPT-<=-1-TWO))
 (72 8 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (70 2 (:LINEAR EXPT->=-1-TWO))
 (70 2 (:LINEAR EXPT-<=-1-ONE))
 (68 2 (:LINEAR EXPT-X->=-X))
 (66 2 (:LINEAR EXPT-X->-X))
 (66 2 (:LINEAR EXPT->-1-ONE))
 (66 2 (:LINEAR EXPT-<-1-TWO))
 (56 8 (:REWRITE CAR-OF-DAB-DIGIT-LIST-FIX))
 (56 4 (:REWRITE CDR-OF-DAB-DIGIT-LIST-FIX))
 (48 4 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (44 4 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (36 22 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (36 22 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (36 22 (:REWRITE DEFAULT-LESS-THAN-2))
 (32 32 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (32 32 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (32 8 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (26 7 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (26 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (26 7 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (24 4 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (24 4 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (22 22 (:REWRITE THE-FLOOR-BELOW))
 (22 22 (:REWRITE THE-FLOOR-ABOVE))
 (22 22 (:REWRITE SIMPLIFY-SUMS-<))
 (22 22 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (22 22 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (22 22 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (22 22 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (22 22 (:REWRITE INTEGERP-<-CONSTANT))
 (22 22 (:REWRITE DEFAULT-LESS-THAN-1))
 (22 22 (:REWRITE CONSTANT-<-INTEGERP))
 (22 22 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (22 22 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (22 22 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (22 22 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (22 22 (:REWRITE |(< c (- x))|))
 (22 22 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (22 22 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (22 22 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (22 22 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (22 22 (:REWRITE |(< (/ x) (/ y))|))
 (22 22 (:REWRITE |(< (- x) c)|))
 (22 22 (:REWRITE |(< (- x) (- y))|))
 (20 20 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (20 20 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (20 8 (:REWRITE DEFAULT-CAR))
 (16 16 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (16 4 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (14 2 (:DEFINITION LEN))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (10 10 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (10 10 (:REWRITE |(< 0 (/ x))|))
 (10 10 (:REWRITE |(< 0 (* x y))|))
 (8 8 (:TYPE-PRESCRIPTION ZP-LISTP))
 (8 8 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (8 8 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (8 8 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (8 8 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (8 8 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (8 4 (:REWRITE DEFAULT-EXPT-2))
 (8 4 (:REWRITE DEFAULT-EXPT-1))
 (7 7 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (7 7 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (7 7 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (7 7 (:REWRITE |(equal c (/ x))|))
 (7 7 (:REWRITE |(equal c (- x))|))
 (7 7 (:REWRITE |(equal (/ x) c)|))
 (7 7 (:REWRITE |(equal (/ x) (/ y))|))
 (7 7 (:REWRITE |(equal (- x) c)|))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (6 2 (:LINEAR EXPT->-1-TWO))
 (6 2 (:LINEAR EXPT-<-1-ONE))
 (4 4 (:TYPE-PRESCRIPTION NATP-OF-DAB-DIGIT-FIX))
 (4 4 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (4 4 (:TYPE-PRESCRIPTION DAB-BASEP))
 (4 4 (:REWRITE REDUCE-INTEGERP-+))
 (4 4 (:REWRITE INTEGERP-MINUS-X))
 (4 4 (:REWRITE |(expt 1/c n)|))
 (4 4 (:REWRITE |(expt (- x) n)|))
 (4 4 (:META META-INTEGERP-CORRECT))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (4 4 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<))
 )
(BENDIAN=>NAT-INJECTIVITY+
 (158 1 (:REWRITE BENDIAN=>NAT-INJECTIVITY*))
 (120 1 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (102 1 (:REWRITE ZP-OPEN))
 (78 2 (:LINEAR EXPT-<=-1-TWO))
 (70 2 (:LINEAR EXPT->=-1-TWO))
 (70 2 (:LINEAR EXPT-<=-1-ONE))
 (68 2 (:LINEAR EXPT-X->=-X))
 (66 2 (:LINEAR EXPT-X->-X))
 (66 2 (:LINEAR EXPT->-1-ONE))
 (66 2 (:LINEAR EXPT-<-1-TWO))
 (48 4 (:REWRITE TRIM-BENDIAN+-WHEN-ZP-LISTP))
 (34 16 (:REWRITE DEFAULT-LESS-THAN-2))
 (32 16 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (32 16 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (30 5 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (26 26 (:TYPE-PRESCRIPTION DAB-DIGIT-LIST-FIX))
 (22 2 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (21 1 (:LINEAR DAB-DIGIT-FIX-UPPER-BOUND))
 (20 5 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (19 14 (:REWRITE DEFAULT-CDR))
 (18 13 (:REWRITE DEFAULT-CAR))
 (16 16 (:REWRITE THE-FLOOR-BELOW))
 (16 16 (:REWRITE THE-FLOOR-ABOVE))
 (16 16 (:REWRITE SIMPLIFY-SUMS-<))
 (16 16 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (16 16 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (16 16 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (16 16 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (16 16 (:REWRITE INTEGERP-<-CONSTANT))
 (16 16 (:REWRITE DEFAULT-LESS-THAN-1))
 (16 16 (:REWRITE CONSTANT-<-INTEGERP))
 (16 16 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (16 16 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (16 16 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (16 16 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (16 16 (:REWRITE |(< c (- x))|))
 (16 16 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (16 16 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (16 16 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (16 16 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (16 16 (:REWRITE |(< (/ x) (/ y))|))
 (16 16 (:REWRITE |(< (- x) c)|))
 (16 16 (:REWRITE |(< (- x) (- y))|))
 (16 8 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (16 8 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (16 8 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (14 14 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (14 14 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (14 2 (:DEFINITION LEN))
 (13 13 (:TYPE-PRESCRIPTION NATP-OF-DAB-DIGIT-FIX))
 (13 13 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (13 1 (:REWRITE CAR-OF-DAB-DIGIT-LIST-FIX))
 (12 2 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (12 1 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (10 10 (:TYPE-PRESCRIPTION ZP-LISTP))
 (10 10 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (9 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (8 8 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (8 8 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (8 8 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (8 8 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (8 8 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (8 8 (:REWRITE |(equal c (/ x))|))
 (8 8 (:REWRITE |(equal c (- x))|))
 (8 8 (:REWRITE |(equal (/ x) c)|))
 (8 8 (:REWRITE |(equal (/ x) (/ y))|))
 (8 8 (:REWRITE |(equal (- x) c)|))
 (8 8 (:REWRITE |(equal (- x) (- y))|))
 (8 4 (:REWRITE DEFAULT-EXPT-2))
 (8 4 (:REWRITE DEFAULT-EXPT-1))
 (7 7 (:TYPE-PRESCRIPTION TRIM-BENDIAN*))
 (7 7 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (7 7 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (6 6 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (6 6 (:TYPE-PRESCRIPTION DAB-BASEP))
 (6 2 (:LINEAR EXPT->-1-TWO))
 (6 2 (:LINEAR EXPT-<-1-ONE))
 (5 5 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (4 4 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (4 4 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (4 4 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE |(expt 1/c n)|))
 (4 4 (:REWRITE |(expt (- x) n)|))
 (4 4 (:REWRITE |(< 0 (/ x))|))
 (4 4 (:REWRITE |(< 0 (* x y))|))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (4 4 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (4 4 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-UPPER-<))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (2 2 (:LINEAR EXPT-LINEAR-LOWER-<))
 (1 1 (:TYPE-PRESCRIPTION ZP))
 )
(BENDIAN=>NAT-INJECTIVITY
 (662 4 (:REWRITE BENDIAN=>NAT-INJECTIVITY*))
 (524 4 (:REWRITE TRIM-BENDIAN*-WHEN-NO-STARTING-0))
 (488 4 (:REWRITE ZP-OPEN))
 (216 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP))
 (176 4 (:DEFINITION INTEGER-LISTP))
 (155 4 (:REWRITE BENDIAN=>NAT-INJECTIVITY+))
 (140 24 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (117 3 (:LINEAR EXPT-<=-1-TWO))
 (105 3 (:LINEAR EXPT->=-1-TWO))
 (105 3 (:LINEAR EXPT-<=-1-ONE))
 (102 3 (:LINEAR EXPT-X->=-X))
 (99 3 (:LINEAR EXPT-X->-X))
 (99 3 (:LINEAR EXPT->-1-ONE))
 (99 3 (:LINEAR EXPT-<-1-TWO))
 (68 19 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (68 19 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (68 19 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (56 8 (:REWRITE CAR-OF-DAB-DIGIT-LIST-FIX))
 (56 4 (:REWRITE CDR-OF-DAB-DIGIT-LIST-FIX))
 (54 54 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (50 29 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (50 29 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (50 29 (:REWRITE DEFAULT-LESS-THAN-2))
 (48 48 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (48 4 (:REWRITE TRIM-BENDIAN+-WHEN-ZP-LISTP))
 (44 4 (:REWRITE DAB-DIGIT-FIX-WHEN-DAB-DIGITP))
 (40 20 (:REWRITE DEFAULT-PLUS-2))
 (36 12 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (36 4 (:REWRITE TRIM-BENDIAN*-WHEN-ZP-LISTP))
 (32 8 (:REWRITE INTEGER-LISTP-WHEN-NOT-CONSP))
 (30 15 (:REWRITE DEFAULT-EXPT-2))
 (30 15 (:REWRITE DEFAULT-EXPT-1))
 (29 29 (:REWRITE THE-FLOOR-BELOW))
 (29 29 (:REWRITE THE-FLOOR-ABOVE))
 (29 29 (:REWRITE SIMPLIFY-SUMS-<))
 (29 29 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (29 29 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (29 29 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (29 29 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (29 29 (:REWRITE INTEGERP-<-CONSTANT))
 (29 29 (:REWRITE DEFAULT-LESS-THAN-1))
 (29 29 (:REWRITE CONSTANT-<-INTEGERP))
 (29 29 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (29 29 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (29 29 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (29 29 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (29 29 (:REWRITE |(< c (- x))|))
 (29 29 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (29 29 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (29 29 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (29 29 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (29 29 (:REWRITE |(< (/ x) (/ y))|))
 (29 29 (:REWRITE |(< (- x) c)|))
 (29 29 (:REWRITE |(< (- x) (- y))|))
 (28 28 (:TYPE-PRESCRIPTION TRIM-BENDIAN+))
 (28 28 (:TYPE-PRESCRIPTION TRIM-BENDIAN*))
 (28 28 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (28 28 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (24 24 (:TYPE-PRESCRIPTION DAB-BASEP))
 (24 24 (:REWRITE DEFAULT-CDR))
 (24 24 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (24 4 (:REWRITE DAB-DIGITP-OF-CAR-WHEN-DAB-DIGIT-LISTP))
 (24 4 (:REWRITE DAB-DIGIT-LISTP-OF-CDR-WHEN-DAB-DIGIT-LISTP))
 (20 20 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (20 20 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (20 20 (:REWRITE NORMALIZE-ADDENDS))
 (20 20 (:REWRITE DEFAULT-PLUS-1))
 (20 20 (:REWRITE CONSP-OF-DAB-DIGIT-LIST-FIX))
 (20 8 (:REWRITE ZP-LISTP-WHEN-NOT-CONSP))
 (20 8 (:REWRITE DEFAULT-CAR))
 (19 19 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (19 19 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (19 19 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (19 19 (:REWRITE |(equal c (/ x))|))
 (19 19 (:REWRITE |(equal c (- x))|))
 (19 19 (:REWRITE |(equal (/ x) c)|))
 (19 19 (:REWRITE |(equal (/ x) (/ y))|))
 (19 19 (:REWRITE |(equal (- x) c)|))
 (19 19 (:REWRITE |(equal (- x) (- y))|))
 (16 16 (:TYPE-PRESCRIPTION ZP-LISTP))
 (16 16 (:REWRITE ZP-LISTP-WHEN-SUBSETP-EQUAL))
 (15 15 (:REWRITE |(expt 1/c n)|))
 (15 15 (:REWRITE |(expt (- x) n)|))
 (13 13 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (11 11 (:REWRITE |(< 0 (/ x))|))
 (11 11 (:REWRITE |(< 0 (* x y))|))
 (9 3 (:LINEAR EXPT->-1-TWO))
 (9 3 (:LINEAR EXPT-<-1-ONE))
 (8 8 (:TYPE-PRESCRIPTION DAB-DIGITP))
 (8 8 (:REWRITE DAB-DIGITP-WHEN-MEMBER-EQUAL-OF-DAB-DIGIT-LISTP))
 (6 6 (:REWRITE-QUOTED-CONSTANT NFIX-UNDER-NAT-EQUIV))
 (6 6 (:REWRITE RETURN-TYPE-OF-DAB-DIGIT-LIST-FIX))
 (6 6 (:LINEAR EXPT-IS-WEAKLY-INCREASING-FOR-BASE->-1))
 (6 6 (:LINEAR EXPT-IS-WEAKLY-DECREASING-FOR-POS-BASE-<-1))
 (6 6 (:LINEAR EXPT-IS-INCREASING-FOR-BASE->-1))
 (6 6 (:LINEAR EXPT-IS-DECREASING-FOR-POS-BASE-<-1))
 (4 4 (:TYPE-PRESCRIPTION NATP-OF-DAB-DIGIT-FIX))
 (4 4 (:TYPE-PRESCRIPTION DAB-DIGIT-FIX))
 (4 4 (:REWRITE REDUCE-INTEGERP-+))
 (4 4 (:REWRITE INTEGERP-MINUS-X))
 (4 4 (:META META-INTEGERP-CORRECT))
 (3 3 (:LINEAR EXPT-LINEAR-UPPER-<=))
 (3 3 (:LINEAR EXPT-LINEAR-UPPER-<))
 (3 3 (:LINEAR EXPT-LINEAR-LOWER-<=))
 (3 3 (:LINEAR EXPT-LINEAR-LOWER-<))
 )
(GROUP-LENDIAN
 (104 104 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (104 104 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (104 104 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (104 104 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (104 104 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 4 (:DEFINITION LEN))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (24 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (24 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (19 19 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (19 19 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (19 19 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (16 6 (:REWRITE DEFAULT-LESS-THAN-2))
 (16 6 (:REWRITE DEFAULT-LESS-THAN-1))
 (15 4 (:REWRITE SIMPLIFY-SUMS-<))
 (13 9 (:REWRITE DEFAULT-TIMES-2))
 (13 9 (:REWRITE DEFAULT-TIMES-1))
 (10 5 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN))
 (8 4 (:REWRITE DEFAULT-PLUS-2))
 (6 6 (:REWRITE THE-FLOOR-BELOW))
 (6 6 (:REWRITE THE-FLOOR-ABOVE))
 (6 6 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (6 6 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (6 6 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (6 6 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (6 6 (:REWRITE INTEGERP-<-CONSTANT))
 (6 6 (:REWRITE CONSTANT-<-INTEGERP))
 (6 6 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (6 6 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (6 6 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (6 6 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (6 6 (:REWRITE |(< c (- x))|))
 (6 6 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (6 6 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (6 6 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (6 6 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (6 6 (:REWRITE |(< (/ x) (/ y))|))
 (6 6 (:REWRITE |(< (- x) c)|))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 (6 4 (:REWRITE DEFAULT-EXPT-2))
 (5 5 (:TYPE-PRESCRIPTION ZP))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (4 4 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-PLUS-1))
 (4 4 (:REWRITE DEFAULT-EXPT-1))
 (4 4 (:REWRITE DEFAULT-DIVIDE))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE |(expt 1/c n)|))
 (3 3 (:REWRITE |(expt (- x) n)|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 )
(RETURN-TYPE-OF-GROUP-LENDIAN
 (52 1 (:REWRITE FLOOR-ZERO . 3))
 (43 1 (:REWRITE FLOOR-ZERO . 4))
 (43 1 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (38 1 (:REWRITE FLOOR-ZERO . 5))
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (20 2 (:REWRITE DEFAULT-PLUS-2))
 (16 8 (:REWRITE DEFAULT-TIMES-2))
 (16 8 (:REWRITE DEFAULT-TIMES-1))
 (16 1 (:REWRITE CANCEL-FLOOR-+))
 (14 7 (:REWRITE DEFAULT-DIVIDE))
 (10 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (10 5 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (9 5 (:REWRITE SIMPLIFY-SUMS-<))
 (9 1 (:REWRITE FLOOR-=-X/Y . 2))
 (9 1 (:REWRITE DEFAULT-FLOOR-RATIO))
 (8 5 (:REWRITE DEFAULT-LESS-THAN-2))
 (8 1 (:REWRITE |(* (- x) y)|))
 (7 7 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (7 7 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (7 5 (:REWRITE DEFAULT-LESS-THAN-1))
 (7 1 (:DEFINITION LEN))
 (6 1 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (5 5 (:REWRITE THE-FLOOR-BELOW))
 (5 5 (:REWRITE THE-FLOOR-ABOVE))
 (5 5 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (5 5 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (5 5 (:REWRITE INTEGERP-<-CONSTANT))
 (5 5 (:REWRITE CONSTANT-<-INTEGERP))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (- x))|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) (/ y))|))
 (5 5 (:REWRITE |(< (- x) c)|))
 (5 5 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (4 4 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (4 4 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE DEFAULT-EXPT-1))
 (4 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (4 1 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (3 1 (:TYPE-PRESCRIPTION FLOOR-ZERO . 4))
 (3 1 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:META META-INTEGERP-CORRECT))
 (2 1 (:REWRITE FLOOR-ZERO . 2))
 (2 1 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (2 1 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (2 1 (:REWRITE DEFAULT-FLOOR-2))
 (2 1 (:REWRITE DEFAULT-FLOOR-1))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 2))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE FLOOR-CANCEL-*-CONST))
 (1 1 (:REWRITE FLOOR-=-X/Y . 3))
 (1 1 (:REWRITE DEFAULT-MINUS))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE |(floor x (- y))| . 2))
 (1 1 (:REWRITE |(floor x (- y))| . 1))
 (1 1 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor (- x) y)| . 2))
 (1 1 (:REWRITE |(floor (- x) y)| . 1))
 (1 1 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(- (* c x))|))
 )
(GROUP-LENDIAN-OF-DAB-DIGIT-LIST-FIX-DIGITS
 (104 2 (:REWRITE FLOOR-ZERO . 3))
 (86 2 (:REWRITE FLOOR-ZERO . 4))
 (86 2 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (76 2 (:REWRITE FLOOR-ZERO . 5))
 (40 4 (:REWRITE DEFAULT-PLUS-2))
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (32 16 (:REWRITE DEFAULT-TIMES-2))
 (32 16 (:REWRITE DEFAULT-TIMES-1))
 (32 2 (:REWRITE CANCEL-FLOOR-+))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (28 14 (:REWRITE DEFAULT-DIVIDE))
 (19 9 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (19 9 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (18 2 (:REWRITE FLOOR-=-X/Y . 2))
 (18 2 (:REWRITE DEFAULT-FLOOR-RATIO))
 (17 9 (:REWRITE SIMPLIFY-SUMS-<))
 (16 2 (:REWRITE |(* (- x) y)|))
 (15 9 (:REWRITE DEFAULT-LESS-THAN-2))
 (14 14 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (14 14 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (14 2 (:DEFINITION LEN))
 (13 9 (:REWRITE DEFAULT-LESS-THAN-1))
 (12 2 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (9 9 (:REWRITE THE-FLOOR-BELOW))
 (9 9 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (9 9 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (9 9 (:REWRITE INTEGERP-<-CONSTANT))
 (9 9 (:REWRITE CONSTANT-<-INTEGERP))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (- x))|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) (/ y))|))
 (9 9 (:REWRITE |(< (- x) c)|))
 (9 9 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (8 2 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (6 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 4))
 (6 2 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (6 1 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-PLUS-1))
 (4 2 (:REWRITE FLOOR-ZERO . 2))
 (4 2 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (4 2 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (4 2 (:REWRITE DEFAULT-FLOOR-2))
 (4 2 (:REWRITE DEFAULT-FLOOR-1))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE DEFAULT-EXPT-1))
 (4 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE |(< 0 (/ x))|))
 (3 3 (:REWRITE |(< 0 (* x y))|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-CONST))
 (2 2 (:REWRITE FLOOR-=-X/Y . 3))
 (2 2 (:REWRITE DEFAULT-MINUS))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 2 (:REWRITE |(floor x (- y))| . 2))
 (2 2 (:REWRITE |(floor x (- y))| . 1))
 (2 2 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (- x) y)| . 2))
 (2 2 (:REWRITE |(floor (- x) y)| . 1))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (2 2 (:REWRITE |(- (* c x))|))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 )
(GROUP-LENDIAN-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST)
(LEN-OF-GROUP-LENDIAN
 (114 10 (:REWRITE DEFAULT-PLUS-2))
 (104 2 (:REWRITE FLOOR-ZERO . 3))
 (86 2 (:REWRITE FLOOR-ZERO . 4))
 (86 2 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (79 10 (:REWRITE DEFAULT-PLUS-1))
 (76 2 (:REWRITE FLOOR-ZERO . 5))
 (39 12 (:REWRITE DEFAULT-LESS-THAN-1))
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (34 17 (:REWRITE DEFAULT-TIMES-2))
 (34 17 (:REWRITE DEFAULT-TIMES-1))
 (33 1 (:DEFINITION POSP))
 (32 2 (:REWRITE CANCEL-FLOOR-+))
 (30 15 (:REWRITE DEFAULT-DIVIDE))
 (21 11 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (21 11 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (19 11 (:REWRITE SIMPLIFY-SUMS-<))
 (18 12 (:REWRITE DEFAULT-LESS-THAN-2))
 (18 2 (:REWRITE FLOOR-=-X/Y . 2))
 (18 2 (:REWRITE DEFAULT-FLOOR-RATIO))
 (18 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (16 2 (:REWRITE |(* (- x) y)|))
 (15 15 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (15 15 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (14 2 (:DEFINITION LEN))
 (13 13 (:REWRITE THE-FLOOR-BELOW))
 (12 12 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (12 12 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (12 12 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (12 11 (:REWRITE |(< (/ x) (/ y))|))
 (12 2 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (11 11 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (11 11 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (11 11 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (11 11 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (11 11 (:REWRITE INTEGERP-<-CONSTANT))
 (11 11 (:REWRITE CONSTANT-<-INTEGERP))
 (11 11 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (11 11 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (11 11 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (11 11 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (11 11 (:REWRITE |(< c (- x))|))
 (11 11 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (11 11 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (11 11 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (11 11 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (11 11 (:REWRITE |(< (- x) c)|))
 (11 11 (:REWRITE |(< (- x) (- y))|))
 (8 2 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (6 6 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (6 2 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (5 5 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 2 (:REWRITE FLOOR-ZERO . 2))
 (4 2 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (4 2 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (4 2 (:REWRITE DEFAULT-FLOOR-2))
 (4 2 (:REWRITE DEFAULT-FLOOR-1))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE |(< 0 (/ x))|))
 (3 3 (:REWRITE |(< 0 (* x y))|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (3 2 (:REWRITE |(< (/ x) 0)|))
 (3 1 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-CONST))
 (2 2 (:REWRITE FLOOR-=-X/Y . 3))
 (2 2 (:REWRITE DEFAULT-MINUS))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE |(floor x (- y))| . 2))
 (2 2 (:REWRITE |(floor x (- y))| . 1))
 (2 2 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (- x) y)| . 2))
 (2 2 (:REWRITE |(floor (- x) y)| . 1))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:REWRITE |(- (* c x))|))
 (2 1 (:REWRITE DEFAULT-EXPT-2))
 (2 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 (1 1 (:REWRITE |(< (+ c/d x) y)|))
 (1 1 (:REWRITE |(< (+ (- c) x) y)|))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (1 1 (:REWRITE |(< (* x (/ y)) 0) rationalp (* x (/ y))|))
 )
(GROUP-LENDIAN-WHEN-EXP-IS-1
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (9 6 (:REWRITE DEFAULT-TIMES-2))
 (9 6 (:REWRITE DEFAULT-TIMES-1))
 (7 2 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (7 1 (:DEFINITION LEN))
 (3 1 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 1 (:REWRITE DEFAULT-PLUS-2))
 (2 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE DEFAULT-PLUS-1))
 (1 1 (:REWRITE DEFAULT-EXPT-2))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 )
(GROUP-LENDIAN-OF-DAB-BASE-FIX-BASE
 (104 2 (:REWRITE FLOOR-ZERO . 3))
 (86 2 (:REWRITE FLOOR-ZERO . 4))
 (86 2 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (76 2 (:REWRITE FLOOR-ZERO . 5))
 (40 4 (:REWRITE DEFAULT-PLUS-2))
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (32 16 (:REWRITE DEFAULT-TIMES-2))
 (32 16 (:REWRITE DEFAULT-TIMES-1))
 (32 2 (:REWRITE CANCEL-FLOOR-+))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (28 14 (:REWRITE DEFAULT-DIVIDE))
 (19 9 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (19 9 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (18 2 (:REWRITE FLOOR-=-X/Y . 2))
 (18 2 (:REWRITE DEFAULT-FLOOR-RATIO))
 (17 9 (:REWRITE SIMPLIFY-SUMS-<))
 (16 2 (:REWRITE |(* (- x) y)|))
 (15 9 (:REWRITE DEFAULT-LESS-THAN-2))
 (14 14 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (14 14 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (14 2 (:DEFINITION LEN))
 (13 9 (:REWRITE DEFAULT-LESS-THAN-1))
 (12 2 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (9 9 (:REWRITE THE-FLOOR-BELOW))
 (9 9 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (9 9 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (9 9 (:REWRITE INTEGERP-<-CONSTANT))
 (9 9 (:REWRITE CONSTANT-<-INTEGERP))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (- x))|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) (/ y))|))
 (9 9 (:REWRITE |(< (- x) c)|))
 (9 9 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (8 2 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (6 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 4))
 (6 2 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-PLUS-1))
 (4 2 (:REWRITE FLOOR-ZERO . 2))
 (4 2 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (4 2 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (4 2 (:REWRITE DEFAULT-FLOOR-2))
 (4 2 (:REWRITE DEFAULT-FLOOR-1))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE DEFAULT-EXPT-1))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE |(< 0 (/ x))|))
 (3 3 (:REWRITE |(< 0 (* x y))|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 2 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-CONST))
 (2 2 (:REWRITE FLOOR-=-X/Y . 3))
 (2 2 (:REWRITE DEFAULT-MINUS))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE |(floor x (- y))| . 2))
 (2 2 (:REWRITE |(floor x (- y))| . 1))
 (2 2 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (- x) y)| . 2))
 (2 2 (:REWRITE |(floor (- x) y)| . 1))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (2 2 (:REWRITE |(- (* c x))|))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 )
(GROUP-LENDIAN-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(GROUP-LENDIAN-OF-POS-FIX-EXP
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 )
(GROUP-LENDIAN-POS-EQUIV-CONGRUENCE-ON-EXP)
(GROUP-BENDIAN
 (104 104 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (104 104 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (104 104 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (104 104 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (104 104 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 4 (:DEFINITION LEN))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (25 25 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (24 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (24 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (19 19 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (19 19 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (19 19 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (16 6 (:REWRITE DEFAULT-LESS-THAN-2))
 (16 6 (:REWRITE DEFAULT-LESS-THAN-1))
 (15 4 (:REWRITE SIMPLIFY-SUMS-<))
 (13 9 (:REWRITE DEFAULT-TIMES-2))
 (13 9 (:REWRITE DEFAULT-TIMES-1))
 (10 5 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>BENDIAN))
 (8 4 (:REWRITE DEFAULT-PLUS-2))
 (6 6 (:REWRITE THE-FLOOR-BELOW))
 (6 6 (:REWRITE THE-FLOOR-ABOVE))
 (6 6 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (6 6 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (6 6 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (6 6 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (6 6 (:REWRITE INTEGERP-<-CONSTANT))
 (6 6 (:REWRITE CONSTANT-<-INTEGERP))
 (6 6 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (6 6 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (6 6 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (6 6 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (6 6 (:REWRITE |(< c (- x))|))
 (6 6 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (6 6 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (6 6 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (6 6 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (6 6 (:REWRITE |(< (/ x) (/ y))|))
 (6 6 (:REWRITE |(< (- x) c)|))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 (6 4 (:REWRITE DEFAULT-EXPT-2))
 (5 5 (:TYPE-PRESCRIPTION ZP))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (4 4 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-PLUS-1))
 (4 4 (:REWRITE DEFAULT-EXPT-1))
 (4 4 (:REWRITE DEFAULT-DIVIDE))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE |(expt 1/c n)|))
 (3 3 (:REWRITE |(expt (- x) n)|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 )
(RETURN-TYPE-OF-GROUP-BENDIAN
 (52 1 (:REWRITE FLOOR-ZERO . 3))
 (43 1 (:REWRITE FLOOR-ZERO . 4))
 (43 1 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (38 1 (:REWRITE FLOOR-ZERO . 5))
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (20 20 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (20 2 (:REWRITE DEFAULT-PLUS-2))
 (16 8 (:REWRITE DEFAULT-TIMES-2))
 (16 8 (:REWRITE DEFAULT-TIMES-1))
 (16 1 (:REWRITE CANCEL-FLOOR-+))
 (14 7 (:REWRITE DEFAULT-DIVIDE))
 (10 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (10 5 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (9 5 (:REWRITE SIMPLIFY-SUMS-<))
 (9 1 (:REWRITE FLOOR-=-X/Y . 2))
 (9 1 (:REWRITE DEFAULT-FLOOR-RATIO))
 (8 5 (:REWRITE DEFAULT-LESS-THAN-2))
 (8 1 (:REWRITE |(* (- x) y)|))
 (7 7 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (7 7 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (7 5 (:REWRITE DEFAULT-LESS-THAN-1))
 (7 1 (:DEFINITION LEN))
 (6 1 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (5 5 (:REWRITE THE-FLOOR-BELOW))
 (5 5 (:REWRITE THE-FLOOR-ABOVE))
 (5 5 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (5 5 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (5 5 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (5 5 (:REWRITE INTEGERP-<-CONSTANT))
 (5 5 (:REWRITE CONSTANT-<-INTEGERP))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (5 5 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< c (- x))|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (5 5 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (5 5 (:REWRITE |(< (/ x) (/ y))|))
 (5 5 (:REWRITE |(< (- x) c)|))
 (5 5 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (4 4 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (4 4 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE DEFAULT-EXPT-1))
 (4 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (4 1 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (3 1 (:TYPE-PRESCRIPTION FLOOR-ZERO . 4))
 (3 1 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (2 2 (:META META-INTEGERP-CORRECT))
 (2 1 (:REWRITE FLOOR-ZERO . 2))
 (2 1 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (2 1 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (2 1 (:REWRITE DEFAULT-FLOOR-2))
 (2 1 (:REWRITE DEFAULT-FLOOR-1))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 2))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (1 1 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (1 1 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (1 1 (:REWRITE FLOOR-CANCEL-*-CONST))
 (1 1 (:REWRITE FLOOR-=-X/Y . 3))
 (1 1 (:REWRITE DEFAULT-MINUS))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE |(floor x (- y))| . 2))
 (1 1 (:REWRITE |(floor x (- y))| . 1))
 (1 1 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor (- x) y)| . 2))
 (1 1 (:REWRITE |(floor (- x) y)| . 1))
 (1 1 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (1 1 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (1 1 (:REWRITE |(- (* c x))|))
 )
(GROUP-BENDIAN-OF-DAB-DIGIT-LIST-FIX-DIGITS
 (104 2 (:REWRITE FLOOR-ZERO . 3))
 (86 2 (:REWRITE FLOOR-ZERO . 4))
 (86 2 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (76 2 (:REWRITE FLOOR-ZERO . 5))
 (40 4 (:REWRITE DEFAULT-PLUS-2))
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (32 16 (:REWRITE DEFAULT-TIMES-2))
 (32 16 (:REWRITE DEFAULT-TIMES-1))
 (32 2 (:REWRITE CANCEL-FLOOR-+))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (28 14 (:REWRITE DEFAULT-DIVIDE))
 (19 9 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (19 9 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (18 2 (:REWRITE FLOOR-=-X/Y . 2))
 (18 2 (:REWRITE DEFAULT-FLOOR-RATIO))
 (17 9 (:REWRITE SIMPLIFY-SUMS-<))
 (16 2 (:REWRITE |(* (- x) y)|))
 (15 9 (:REWRITE DEFAULT-LESS-THAN-2))
 (14 14 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (14 14 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (14 2 (:DEFINITION LEN))
 (13 9 (:REWRITE DEFAULT-LESS-THAN-1))
 (12 2 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (9 9 (:REWRITE THE-FLOOR-BELOW))
 (9 9 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (9 9 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (9 9 (:REWRITE INTEGERP-<-CONSTANT))
 (9 9 (:REWRITE CONSTANT-<-INTEGERP))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (- x))|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) (/ y))|))
 (9 9 (:REWRITE |(< (- x) c)|))
 (9 9 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (8 2 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (6 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 4))
 (6 2 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (6 1 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-PLUS-1))
 (4 2 (:REWRITE FLOOR-ZERO . 2))
 (4 2 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (4 2 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (4 2 (:REWRITE DEFAULT-FLOOR-2))
 (4 2 (:REWRITE DEFAULT-FLOOR-1))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE DEFAULT-EXPT-1))
 (4 2 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (3 3 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (3 3 (:REWRITE |(< 0 (/ x))|))
 (3 3 (:REWRITE |(< 0 (* x y))|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-CONST))
 (2 2 (:REWRITE FLOOR-=-X/Y . 3))
 (2 2 (:REWRITE DEFAULT-MINUS))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 2 (:REWRITE |(floor x (- y))| . 2))
 (2 2 (:REWRITE |(floor x (- y))| . 1))
 (2 2 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (- x) y)| . 2))
 (2 2 (:REWRITE |(floor (- x) y)| . 1))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (2 2 (:REWRITE |(- (* c x))|))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 )
(GROUP-BENDIAN-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST)
(LEN-OF-GROUP-BENDIAN
 (114 10 (:REWRITE DEFAULT-PLUS-2))
 (104 2 (:REWRITE FLOOR-ZERO . 3))
 (86 2 (:REWRITE FLOOR-ZERO . 4))
 (86 2 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (79 10 (:REWRITE DEFAULT-PLUS-1))
 (76 2 (:REWRITE FLOOR-ZERO . 5))
 (39 12 (:REWRITE DEFAULT-LESS-THAN-1))
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (34 17 (:REWRITE DEFAULT-TIMES-2))
 (34 17 (:REWRITE DEFAULT-TIMES-1))
 (33 1 (:DEFINITION POSP))
 (32 2 (:REWRITE CANCEL-FLOOR-+))
 (30 15 (:REWRITE DEFAULT-DIVIDE))
 (21 11 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (21 11 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (19 11 (:REWRITE SIMPLIFY-SUMS-<))
 (18 12 (:REWRITE DEFAULT-LESS-THAN-2))
 (18 2 (:REWRITE FLOOR-=-X/Y . 2))
 (18 2 (:REWRITE DEFAULT-FLOOR-RATIO))
 (18 1 (:TYPE-PRESCRIPTION BUBBLE-DOWN))
 (16 2 (:REWRITE |(* (- x) y)|))
 (15 15 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (15 15 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (14 14 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (14 2 (:DEFINITION LEN))
 (13 13 (:REWRITE THE-FLOOR-BELOW))
 (12 12 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (12 12 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (12 12 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (12 11 (:REWRITE |(< (/ x) (/ y))|))
 (12 2 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (11 11 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (11 11 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (11 11 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (11 11 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (11 11 (:REWRITE INTEGERP-<-CONSTANT))
 (11 11 (:REWRITE CONSTANT-<-INTEGERP))
 (11 11 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (11 11 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (11 11 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (11 11 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (11 11 (:REWRITE |(< c (- x))|))
 (11 11 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (11 11 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (11 11 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (11 11 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (11 11 (:REWRITE |(< (- x) c)|))
 (11 11 (:REWRITE |(< (- x) (- y))|))
 (8 2 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (6 6 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (6 2 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (5 5 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 2 (:REWRITE FLOOR-ZERO . 2))
 (4 2 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (4 2 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (4 2 (:REWRITE DEFAULT-FLOOR-2))
 (4 2 (:REWRITE DEFAULT-FLOOR-1))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE |(< 0 (/ x))|))
 (3 3 (:REWRITE |(< 0 (* x y))|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (3 2 (:REWRITE |(< (/ x) 0)|))
 (3 1 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (2 2 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-CONST))
 (2 2 (:REWRITE FLOOR-=-X/Y . 3))
 (2 2 (:REWRITE DEFAULT-MINUS))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE |(floor x (- y))| . 2))
 (2 2 (:REWRITE |(floor x (- y))| . 1))
 (2 2 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (- x) y)| . 2))
 (2 2 (:REWRITE |(floor (- x) y)| . 1))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(< (* x y) 0)|))
 (2 2 (:REWRITE |(- (* c x))|))
 (2 1 (:REWRITE DEFAULT-EXPT-2))
 (2 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 (1 1 (:REWRITE |(< (+ c/d x) y)|))
 (1 1 (:REWRITE |(< (+ (- c) x) y)|))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (1 1 (:REWRITE |(< (* x (/ y)) 0) rationalp (* x (/ y))|))
 )
(GROUP-BENDIAN-WHEN-EXP-IS-1
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (9 6 (:REWRITE DEFAULT-TIMES-2))
 (9 6 (:REWRITE DEFAULT-TIMES-1))
 (7 2 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (7 1 (:DEFINITION LEN))
 (3 1 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 1 (:REWRITE DEFAULT-PLUS-2))
 (2 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE DEFAULT-PLUS-1))
 (1 1 (:REWRITE DEFAULT-EXPT-2))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 )
(GROUP-BENDIAN-OF-DAB-BASE-FIX-BASE
 (104 2 (:REWRITE FLOOR-ZERO . 3))
 (86 2 (:REWRITE FLOOR-ZERO . 4))
 (86 2 (:REWRITE FLOOR-X-Y-=-1 . 2))
 (76 2 (:REWRITE FLOOR-ZERO . 5))
 (40 4 (:REWRITE DEFAULT-PLUS-2))
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (32 16 (:REWRITE DEFAULT-TIMES-2))
 (32 16 (:REWRITE DEFAULT-TIMES-1))
 (32 2 (:REWRITE CANCEL-FLOOR-+))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (28 14 (:REWRITE DEFAULT-DIVIDE))
 (19 9 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (19 9 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (18 2 (:REWRITE FLOOR-=-X/Y . 2))
 (18 2 (:REWRITE DEFAULT-FLOOR-RATIO))
 (17 9 (:REWRITE SIMPLIFY-SUMS-<))
 (16 2 (:REWRITE |(* (- x) y)|))
 (15 9 (:REWRITE DEFAULT-LESS-THAN-2))
 (14 14 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (14 14 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (14 2 (:DEFINITION LEN))
 (13 9 (:REWRITE DEFAULT-LESS-THAN-1))
 (12 2 (:REWRITE |(< (* x (/ y)) 1) with (< 0 y)|))
 (9 9 (:REWRITE THE-FLOOR-BELOW))
 (9 9 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (9 9 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (9 9 (:REWRITE INTEGERP-<-CONSTANT))
 (9 9 (:REWRITE CONSTANT-<-INTEGERP))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (- x))|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) (/ y))|))
 (9 9 (:REWRITE |(< (- x) c)|))
 (9 9 (:REWRITE |(< (- x) (- y))|))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (8 8 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (8 2 (:REWRITE |(< (* x (/ y)) 1) with (< y 0)|))
 (6 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 4))
 (6 2 (:REWRITE FLOOR-X-Y-=--1 . 2))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-PLUS-1))
 (4 2 (:REWRITE FLOOR-ZERO . 2))
 (4 2 (:REWRITE FLOOR-X-Y-=-1 . 3))
 (4 2 (:REWRITE FLOOR-X-Y-=--1 . 3))
 (4 2 (:REWRITE DEFAULT-FLOOR-2))
 (4 2 (:REWRITE DEFAULT-FLOOR-1))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE DEFAULT-EXPT-1))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE |(< 0 (/ x))|))
 (3 3 (:REWRITE |(< 0 (* x y))|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-ZERO . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-POSITIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONPOSITIVE . 1))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NONNEGATIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 3))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 2))
 (2 2 (:TYPE-PRESCRIPTION FLOOR-NEGATIVE . 1))
 (2 2 (:REWRITE FLOOR-CANCEL-*-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-NOT-REWRITING-GOAL-LITERAL))
 (2 2 (:REWRITE FLOOR-CANCEL-*-CONST))
 (2 2 (:REWRITE FLOOR-=-X/Y . 3))
 (2 2 (:REWRITE DEFAULT-MINUS))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 2 (:REWRITE |(floor x (- y))| . 2))
 (2 2 (:REWRITE |(floor x (- y))| . 1))
 (2 2 (:REWRITE |(floor x (* y (/ z))) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor x (* y (/ z))) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (- x) y)| . 2))
 (2 2 (:REWRITE |(floor (- x) y)| . 1))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) rewriting-goal-literal|))
 (2 2 (:REWRITE |(floor (* x (/ y)) z) not rewriting-goal-literal|))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (2 2 (:REWRITE |(- (* c x))|))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 )
(GROUP-BENDIAN-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(GROUP-BENDIAN-OF-POS-FIX-EXP
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 )
(GROUP-BENDIAN-POS-EQUIV-CONGRUENCE-ON-EXP)
(UNGROUP-LENDIAN
 (127 127 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (127 127 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (127 127 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (127 127 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (127 127 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (36 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (36 7 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (28 9 (:REWRITE DEFAULT-LESS-THAN-1))
 (21 3 (:DEFINITION LEN))
 (19 9 (:REWRITE DEFAULT-LESS-THAN-2))
 (18 7 (:REWRITE SIMPLIFY-SUMS-<))
 (15 6 (:REWRITE DEFAULT-EXPT-1))
 (10 5 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>LENDIAN))
 (9 9 (:REWRITE THE-FLOOR-BELOW))
 (9 9 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (9 9 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (9 9 (:REWRITE INTEGERP-<-CONSTANT))
 (9 9 (:REWRITE CONSTANT-<-INTEGERP))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (- x))|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) (/ y))|))
 (9 9 (:REWRITE |(< (- x) c)|))
 (9 9 (:REWRITE |(< (- x) (- y))|))
 (9 6 (:REWRITE DEFAULT-EXPT-2))
 (6 3 (:REWRITE DEFAULT-PLUS-2))
 (5 5 (:TYPE-PRESCRIPTION ZP))
 (5 5 (:REWRITE |(expt 1/c n)|))
 (5 5 (:REWRITE |(expt (- x) n)|))
 (5 3 (:REWRITE DEFAULT-TIMES-2))
 (4 4 (:REWRITE REDUCE-INTEGERP-+))
 (4 4 (:REWRITE INTEGERP-MINUS-X))
 (4 4 (:META META-INTEGERP-CORRECT))
 (4 3 (:REWRITE DEFAULT-TIMES-1))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (3 3 (:REWRITE DEFAULT-PLUS-1))
 (3 3 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 2 (:REWRITE |(expt c (* d n))|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 )
(RETURN-TYPE-OF-UNGROUP-LENDIAN
 (35 1 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (7 1 (:DEFINITION LEN))
 (3 1 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:TYPE-PRESCRIPTION POSP-OF-POS-FIX))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 1 (:REWRITE DEFAULT-TIMES-2))
 (2 1 (:REWRITE DEFAULT-TIMES-1))
 (2 1 (:REWRITE DEFAULT-PLUS-2))
 (2 1 (:REWRITE DEFAULT-EXPT-2))
 (2 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE DEFAULT-PLUS-1))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(UNGROUP-LENDIAN-OF-DAB-DIGIT-LIST-FIX-DIGITS
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (37 3 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (14 2 (:DEFINITION LEN))
 (6 3 (:REWRITE DEFAULT-EXPT-2))
 (6 3 (:REWRITE DEFAULT-EXPT-1))
 (6 1 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (5 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (4 2 (:REWRITE DEFAULT-TIMES-2))
 (4 2 (:REWRITE DEFAULT-TIMES-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (3 3 (:REWRITE |(expt 1/c n)|))
 (3 3 (:REWRITE |(expt (- x) n)|))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(UNGROUP-LENDIAN-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST
 (37 3 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (14 2 (:DEFINITION LEN))
 (6 3 (:REWRITE DEFAULT-EXPT-2))
 (6 3 (:REWRITE DEFAULT-EXPT-1))
 (6 1 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (5 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (4 2 (:REWRITE DEFAULT-TIMES-2))
 (4 2 (:REWRITE DEFAULT-TIMES-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (3 3 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (3 3 (:REWRITE |(expt 1/c n)|))
 (3 3 (:REWRITE |(expt (- x) n)|))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(LEN-OF-UNGROUP-LENDIAN
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (14 2 (:DEFINITION LEN))
 (4 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (4 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (4 2 (:REWRITE DEFAULT-TIMES-2))
 (4 2 (:REWRITE DEFAULT-TIMES-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (4 2 (:REWRITE DEFAULT-LESS-THAN-1))
 (3 1 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE THE-FLOOR-BELOW))
 (2 2 (:REWRITE THE-FLOOR-ABOVE))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE INTEGERP-<-CONSTANT))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE CONSTANT-<-INTEGERP))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (- x))|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) (/ y))|))
 (2 2 (:REWRITE |(< (- x) c)|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 1 (:REWRITE DEFAULT-EXPT-2))
 (2 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(UNGROUP-LENDIAN-WHEN-EXP-IS-1
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (7 2 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (7 1 (:DEFINITION LEN))
 (3 2 (:REWRITE DEFAULT-TIMES-2))
 (3 2 (:REWRITE DEFAULT-TIMES-1))
 (3 1 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 1 (:REWRITE DEFAULT-PLUS-2))
 (2 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE DEFAULT-PLUS-1))
 (1 1 (:REWRITE DEFAULT-EXPT-2))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 )
(UNGROUP-LENDIAN-OF-DAB-BASE-FIX-BASE
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (14 2 (:DEFINITION LEN))
 (4 2 (:REWRITE DEFAULT-TIMES-2))
 (4 2 (:REWRITE DEFAULT-TIMES-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE DEFAULT-EXPT-1))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(UNGROUP-LENDIAN-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(UNGROUP-LENDIAN-OF-POS-FIX-EXP
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 )
(UNGROUP-LENDIAN-POS-EQUIV-CONGRUENCE-ON-EXP)
(UNGROUP-BENDIAN
 (127 127 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (127 127 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (127 127 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (127 127 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (127 127 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (36 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (36 7 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (28 9 (:REWRITE DEFAULT-LESS-THAN-1))
 (21 3 (:DEFINITION LEN))
 (19 9 (:REWRITE DEFAULT-LESS-THAN-2))
 (18 7 (:REWRITE SIMPLIFY-SUMS-<))
 (15 6 (:REWRITE DEFAULT-EXPT-1))
 (10 5 (:TYPE-PRESCRIPTION CONSP-OF-NAT=>BENDIAN))
 (9 9 (:REWRITE THE-FLOOR-BELOW))
 (9 9 (:REWRITE THE-FLOOR-ABOVE))
 (9 9 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (9 9 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (9 9 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (9 9 (:REWRITE INTEGERP-<-CONSTANT))
 (9 9 (:REWRITE CONSTANT-<-INTEGERP))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (9 9 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< c (- x))|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (9 9 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (9 9 (:REWRITE |(< (/ x) (/ y))|))
 (9 9 (:REWRITE |(< (- x) c)|))
 (9 9 (:REWRITE |(< (- x) (- y))|))
 (9 6 (:REWRITE DEFAULT-EXPT-2))
 (6 3 (:REWRITE DEFAULT-PLUS-2))
 (5 5 (:TYPE-PRESCRIPTION ZP))
 (5 5 (:REWRITE |(expt 1/c n)|))
 (5 5 (:REWRITE |(expt (- x) n)|))
 (5 3 (:REWRITE DEFAULT-TIMES-2))
 (4 4 (:REWRITE REDUCE-INTEGERP-+))
 (4 4 (:REWRITE INTEGERP-MINUS-X))
 (4 4 (:META META-INTEGERP-CORRECT))
 (4 3 (:REWRITE DEFAULT-TIMES-1))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (3 3 (:REWRITE DEFAULT-PLUS-1))
 (3 3 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 2 (:REWRITE |(expt c (* d n))|))
 (2 2 (:REWRITE |(< 0 (/ x))|))
 (2 2 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 )
(RETURN-TYPE-OF-UNGROUP-BENDIAN
 (35 1 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (7 1 (:DEFINITION LEN))
 (3 1 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:TYPE-PRESCRIPTION POSP-OF-POS-FIX))
 (2 2 (:TYPE-PRESCRIPTION LEN))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 1 (:REWRITE DEFAULT-TIMES-2))
 (2 1 (:REWRITE DEFAULT-TIMES-1))
 (2 1 (:REWRITE DEFAULT-PLUS-2))
 (2 1 (:REWRITE DEFAULT-EXPT-2))
 (2 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE DEFAULT-PLUS-1))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(UNGROUP-BENDIAN-OF-DAB-DIGIT-LIST-FIX-DIGITS
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (48 48 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (37 3 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (14 2 (:DEFINITION LEN))
 (6 3 (:REWRITE DEFAULT-EXPT-2))
 (6 3 (:REWRITE DEFAULT-EXPT-1))
 (6 1 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (5 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (4 2 (:REWRITE DEFAULT-TIMES-2))
 (4 2 (:REWRITE DEFAULT-TIMES-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (3 3 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (3 3 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (3 3 (:REWRITE |(expt 1/c n)|))
 (3 3 (:REWRITE |(expt (- x) n)|))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(UNGROUP-BENDIAN-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST
 (37 3 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (14 2 (:DEFINITION LEN))
 (6 3 (:REWRITE DEFAULT-EXPT-2))
 (6 3 (:REWRITE DEFAULT-EXPT-1))
 (6 1 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (5 3 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (4 2 (:REWRITE DEFAULT-TIMES-2))
 (4 2 (:REWRITE DEFAULT-TIMES-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (3 3 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (3 3 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (3 3 (:REWRITE |(expt 1/c n)|))
 (3 3 (:REWRITE |(expt (- x) n)|))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(LEN-OF-UNGROUP-BENDIAN
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (14 2 (:DEFINITION LEN))
 (4 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (4 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (4 2 (:REWRITE DEFAULT-TIMES-2))
 (4 2 (:REWRITE DEFAULT-TIMES-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (4 2 (:REWRITE DEFAULT-LESS-THAN-1))
 (3 1 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE THE-FLOOR-BELOW))
 (2 2 (:REWRITE THE-FLOOR-ABOVE))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (2 2 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (2 2 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE INTEGERP-<-CONSTANT))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE DEFAULT-LESS-THAN-2))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE CONSTANT-<-INTEGERP))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (2 2 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< c (- x))|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (2 2 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (2 2 (:REWRITE |(< (/ x) (/ y))|))
 (2 2 (:REWRITE |(< (- x) c)|))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 1 (:REWRITE DEFAULT-EXPT-2))
 (2 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:TYPE-PRESCRIPTION POSP-OF-DAB-BASE-FIX))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) 0)|))
 (1 1 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (1 1 (:REWRITE |(< (* x y) 0)|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(UNGROUP-BENDIAN-WHEN-EXP-IS-1
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (14 14 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (7 2 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (7 1 (:DEFINITION LEN))
 (3 2 (:REWRITE DEFAULT-TIMES-2))
 (3 2 (:REWRITE DEFAULT-TIMES-1))
 (3 1 (:REWRITE DAB-BASE-FIX-WHEN-DAB-BASEP))
 (2 2 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION DAB-BASEP))
 (2 2 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (2 1 (:REWRITE DEFAULT-PLUS-2))
 (2 1 (:REWRITE DEFAULT-EXPT-1))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE DEFAULT-PLUS-1))
 (1 1 (:REWRITE DEFAULT-EXPT-2))
 (1 1 (:REWRITE DEFAULT-CDR))
 (1 1 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (1 1 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (1 1 (:REWRITE |(expt 1/c n)|))
 (1 1 (:REWRITE |(expt (- x) n)|))
 )
(UNGROUP-BENDIAN-OF-DAB-BASE-FIX-BASE
 (36 2 (:REWRITE POS-FIX-WHEN-POSP))
 (33 1 (:DEFINITION POSP))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (28 28 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 (14 2 (:DEFINITION LEN))
 (4 2 (:REWRITE DEFAULT-TIMES-2))
 (4 2 (:REWRITE DEFAULT-TIMES-1))
 (4 2 (:REWRITE DEFAULT-PLUS-2))
 (4 2 (:REWRITE DEFAULT-EXPT-2))
 (4 2 (:REWRITE DEFAULT-EXPT-1))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE DEFAULT-PLUS-1))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (2 2 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (2 2 (:REWRITE |(expt 1/c n)|))
 (2 2 (:REWRITE |(expt (- x) n)|))
 (1 1 (:TYPE-PRESCRIPTION POSP))
 (1 1 (:REWRITE THE-FLOOR-BELOW))
 (1 1 (:REWRITE THE-FLOOR-ABOVE))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (1 1 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:REWRITE INTEGERP-<-CONSTANT))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-2))
 (1 1 (:REWRITE DEFAULT-LESS-THAN-1))
 (1 1 (:REWRITE CONSTANT-<-INTEGERP))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (1 1 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< c (- x))|))
 (1 1 (:REWRITE |(< 0 (/ x))|))
 (1 1 (:REWRITE |(< 0 (* x y))|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (1 1 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (1 1 (:REWRITE |(< (/ x) (/ y))|))
 (1 1 (:REWRITE |(< (- x) c)|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(UNGROUP-BENDIAN-DAB-BASE-EQUIV-CONGRUENCE-ON-BASE)
(UNGROUP-BENDIAN-OF-POS-FIX-EXP
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONNEGATIVE-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NON-0-BASE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE))
 )
(UNGROUP-BENDIAN-POS-EQUIV-CONGRUENCE-ON-EXP)
(UNGROUP-LENDIAN-OF-GROUP-LENDIAN
 (401 27 (:REWRITE POS-FIX-WHEN-POSP))
 (363 11 (:DEFINITION POSP))
 (191 191 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (191 191 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (191 191 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (191 191 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (191 191 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (112 16 (:DEFINITION LEN))
 (101 58 (:REWRITE DEFAULT-TIMES-2))
 (101 58 (:REWRITE DEFAULT-TIMES-1))
 (88 88 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (88 88 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (88 88 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (85 35 (:REWRITE DEFAULT-EXPT-1))
 (65 35 (:REWRITE DEFAULT-EXPT-2))
 (57 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (57 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (57 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (47 47 (:REWRITE THE-FLOOR-BELOW))
 (47 47 (:REWRITE THE-FLOOR-ABOVE))
 (44 39 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (44 39 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (44 39 (:REWRITE |(< (/ x) (/ y))|))
 (41 11 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (39 39 (:REWRITE SIMPLIFY-SUMS-<))
 (39 39 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (39 39 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (39 39 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (39 39 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (39 39 (:REWRITE INTEGERP-<-CONSTANT))
 (39 39 (:REWRITE CONSTANT-<-INTEGERP))
 (39 39 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (39 39 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (39 39 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (39 39 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (39 39 (:REWRITE |(< c (- x))|))
 (39 39 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (39 39 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (39 39 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (39 39 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (39 39 (:REWRITE |(< (- x) c)|))
 (39 39 (:REWRITE |(< (- x) (- y))|))
 (36 4 (:REWRITE ACL2-NUMBERP-X))
 (32 22 (:REWRITE |(< (/ x) 0)|))
 (32 16 (:REWRITE DEFAULT-PLUS-2))
 (28 28 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (26 26 (:REWRITE REDUCE-INTEGERP-+))
 (26 26 (:REWRITE INTEGERP-MINUS-X))
 (26 26 (:META META-INTEGERP-CORRECT))
 (26 13 (:REWRITE DEFAULT-DIVIDE))
 (24 24 (:REWRITE |(expt 1/c n)|))
 (24 24 (:REWRITE |(expt (- x) n)|))
 (22 22 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (22 22 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (22 22 (:REWRITE |(< (* x y) 0)|))
 (16 16 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (16 16 (:REWRITE NORMALIZE-ADDENDS))
 (16 16 (:REWRITE DEFAULT-PLUS-1))
 (16 16 (:REWRITE DEFAULT-CDR))
 (16 4 (:REWRITE RATIONALP-X))
 (13 13 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (13 13 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (12 12 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (12 12 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (11 11 (:TYPE-PRESCRIPTION POSP))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (11 11 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (11 11 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (11 11 (:REWRITE |(< 0 (/ x))|))
 (11 11 (:REWRITE |(< 0 (* x y))|))
 (10 10 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (10 10 (:REWRITE |(< (* x (/ y)) 0) rationalp (* x (/ y))|))
 (6 6 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (4 4 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:META META-RATIONALP-CORRECT))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(UNGROUP-BENDIAN-OF-GROUP-BENDIAN
 (401 27 (:REWRITE POS-FIX-WHEN-POSP))
 (363 11 (:DEFINITION POSP))
 (191 191 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (191 191 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (191 191 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (191 191 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (191 191 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (112 16 (:DEFINITION LEN))
 (101 58 (:REWRITE DEFAULT-TIMES-2))
 (101 58 (:REWRITE DEFAULT-TIMES-1))
 (88 88 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (88 88 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (88 88 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (85 35 (:REWRITE DEFAULT-EXPT-1))
 (65 35 (:REWRITE DEFAULT-EXPT-2))
 (57 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (57 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (57 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (47 47 (:REWRITE THE-FLOOR-BELOW))
 (47 47 (:REWRITE THE-FLOOR-ABOVE))
 (44 39 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (44 39 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (44 39 (:REWRITE |(< (/ x) (/ y))|))
 (41 11 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (39 39 (:REWRITE SIMPLIFY-SUMS-<))
 (39 39 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (39 39 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (39 39 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (39 39 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (39 39 (:REWRITE INTEGERP-<-CONSTANT))
 (39 39 (:REWRITE CONSTANT-<-INTEGERP))
 (39 39 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (39 39 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (39 39 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (39 39 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (39 39 (:REWRITE |(< c (- x))|))
 (39 39 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (39 39 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (39 39 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (39 39 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (39 39 (:REWRITE |(< (- x) c)|))
 (39 39 (:REWRITE |(< (- x) (- y))|))
 (36 4 (:REWRITE ACL2-NUMBERP-X))
 (32 22 (:REWRITE |(< (/ x) 0)|))
 (32 16 (:REWRITE DEFAULT-PLUS-2))
 (28 28 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (26 26 (:REWRITE REDUCE-INTEGERP-+))
 (26 26 (:REWRITE INTEGERP-MINUS-X))
 (26 26 (:META META-INTEGERP-CORRECT))
 (26 13 (:REWRITE DEFAULT-DIVIDE))
 (24 24 (:REWRITE |(expt 1/c n)|))
 (24 24 (:REWRITE |(expt (- x) n)|))
 (22 22 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (22 22 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (22 22 (:REWRITE |(< (* x y) 0)|))
 (16 16 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (16 16 (:REWRITE NORMALIZE-ADDENDS))
 (16 16 (:REWRITE DEFAULT-PLUS-1))
 (16 16 (:REWRITE DEFAULT-CDR))
 (16 4 (:REWRITE RATIONALP-X))
 (13 13 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (13 13 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (12 12 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (12 12 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (11 11 (:TYPE-PRESCRIPTION POSP))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (11 11 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (11 11 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (11 11 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (11 11 (:REWRITE |(< 0 (/ x))|))
 (11 11 (:REWRITE |(< 0 (* x y))|))
 (10 10 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (10 10 (:REWRITE |(< (* x (/ y)) 0) rationalp (* x (/ y))|))
 (6 6 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (4 4 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:META META-RATIONALP-CORRECT))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(GROUP-LENDIAN-OF-UNGROUP-LENDIAN
 (232 28 (:REWRITE POS-FIX-WHEN-POSP))
 (198 6 (:DEFINITION POSP))
 (152 76 (:REWRITE DEFAULT-TIMES-1))
 (137 76 (:REWRITE DEFAULT-TIMES-2))
 (118 118 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (118 118 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (118 118 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (118 118 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (118 118 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (100 45 (:REWRITE DEFAULT-EXPT-2))
 (95 45 (:REWRITE DEFAULT-EXPT-1))
 (77 11 (:DEFINITION LEN))
 (61 36 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (61 36 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (46 46 (:REWRITE THE-FLOOR-BELOW))
 (46 46 (:REWRITE THE-FLOOR-ABOVE))
 (41 11 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (36 36 (:REWRITE SIMPLIFY-SUMS-<))
 (36 36 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (36 36 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (36 36 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (36 36 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (36 36 (:REWRITE INTEGERP-<-CONSTANT))
 (36 36 (:REWRITE CONSTANT-<-INTEGERP))
 (36 36 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (36 36 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (36 36 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (36 36 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (36 36 (:REWRITE |(< c (- x))|))
 (36 36 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (36 36 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (36 36 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (36 36 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (36 36 (:REWRITE |(< (/ x) (/ y))|))
 (36 36 (:REWRITE |(< (- x) c)|))
 (36 36 (:REWRITE |(< (- x) (- y))|))
 (36 4 (:REWRITE ACL2-NUMBERP-X))
 (34 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (34 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (34 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (31 31 (:REWRITE |(expt 1/c n)|))
 (31 31 (:REWRITE |(expt (- x) n)|))
 (30 30 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (30 15 (:REWRITE DEFAULT-DIVIDE))
 (23 23 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (23 23 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (23 23 (:REWRITE |(< (/ x) 0)|))
 (23 23 (:REWRITE |(< (* x y) 0)|))
 (22 11 (:REWRITE DEFAULT-PLUS-2))
 (17 17 (:REWRITE REDUCE-INTEGERP-+))
 (17 17 (:REWRITE INTEGERP-MINUS-X))
 (17 17 (:META META-INTEGERP-CORRECT))
 (16 4 (:REWRITE RATIONALP-X))
 (15 15 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (12 12 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (12 12 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (11 11 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (11 11 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (11 11 (:REWRITE NORMALIZE-ADDENDS))
 (11 11 (:REWRITE LENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (11 11 (:REWRITE LENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (11 11 (:REWRITE DEFAULT-PLUS-1))
 (11 11 (:REWRITE DEFAULT-CDR))
 (10 10 (:REWRITE |(expt c (* d n))|))
 (10 10 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (6 6 (:TYPE-PRESCRIPTION POSP))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (6 6 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (6 6 (:REWRITE |(< 0 (/ x))|))
 (6 6 (:REWRITE |(< 0 (* x y))|))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:META META-RATIONALP-CORRECT))
 (2 2 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(GROUP-BENDIAN-OF-UNGROUP-BENDIAN
 (232 28 (:REWRITE POS-FIX-WHEN-POSP))
 (198 6 (:DEFINITION POSP))
 (152 76 (:REWRITE DEFAULT-TIMES-1))
 (137 76 (:REWRITE DEFAULT-TIMES-2))
 (118 118 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONPOSITIVE-BASE-EVEN-EXPONENT))
 (118 118 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-ODD-EXPONENT))
 (118 118 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NEGATIVE-BASE-EVEN-EXPONENT))
 (118 118 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-B))
 (118 118 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP-BASE-A))
 (100 45 (:REWRITE DEFAULT-EXPT-2))
 (95 45 (:REWRITE DEFAULT-EXPT-1))
 (77 11 (:DEFINITION LEN))
 (61 36 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (61 36 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (46 46 (:REWRITE THE-FLOOR-BELOW))
 (46 46 (:REWRITE THE-FLOOR-ABOVE))
 (41 11 (:REWRITE DAB-DIGIT-LIST-FIX-WHEN-DAB-DIGIT-LISTP))
 (36 36 (:REWRITE SIMPLIFY-SUMS-<))
 (36 36 (:REWRITE REMOVE-STRICT-INEQUALITIES))
 (36 36 (:REWRITE REDUCE-RATIONAL-MULTIPLICATIVE-CONSTANT-<))
 (36 36 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-<))
 (36 36 (:REWRITE REDUCE-ADDITIVE-CONSTANT-<))
 (36 36 (:REWRITE INTEGERP-<-CONSTANT))
 (36 36 (:REWRITE CONSTANT-<-INTEGERP))
 (36 36 (:REWRITE |(< c (/ x)) positive c --- present in goal|))
 (36 36 (:REWRITE |(< c (/ x)) positive c --- obj t or nil|))
 (36 36 (:REWRITE |(< c (/ x)) negative c --- present in goal|))
 (36 36 (:REWRITE |(< c (/ x)) negative c --- obj t or nil|))
 (36 36 (:REWRITE |(< c (- x))|))
 (36 36 (:REWRITE |(< (/ x) c) positive c --- present in goal|))
 (36 36 (:REWRITE |(< (/ x) c) positive c --- obj t or nil|))
 (36 36 (:REWRITE |(< (/ x) c) negative c --- present in goal|))
 (36 36 (:REWRITE |(< (/ x) c) negative c --- obj t or nil|))
 (36 36 (:REWRITE |(< (/ x) (/ y))|))
 (36 36 (:REWRITE |(< (- x) c)|))
 (36 36 (:REWRITE |(< (- x) (- y))|))
 (36 4 (:REWRITE ACL2-NUMBERP-X))
 (34 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (34 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (34 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (31 31 (:REWRITE |(expt 1/c n)|))
 (31 31 (:REWRITE |(expt (- x) n)|))
 (30 30 (:REWRITE REMOVE-WEAK-INEQUALITIES))
 (30 15 (:REWRITE DEFAULT-DIVIDE))
 (23 23 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-REMAINDER))
 (23 23 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-AX+BX-<-0-RATIONAL-COMMON))
 (23 23 (:REWRITE |(< (/ x) 0)|))
 (23 23 (:REWRITE |(< (* x y) 0)|))
 (22 11 (:REWRITE DEFAULT-PLUS-2))
 (17 17 (:REWRITE REDUCE-INTEGERP-+))
 (17 17 (:REWRITE INTEGERP-MINUS-X))
 (17 17 (:META META-INTEGERP-CORRECT))
 (16 4 (:REWRITE RATIONALP-X))
 (15 15 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (12 12 (:TYPE-PRESCRIPTION DAB-DIGIT-LISTP))
 (12 12 (:REWRITE DAB-DIGIT-LISTP-WHEN-SUBSETP-EQUAL))
 (11 11 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (11 11 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (11 11 (:REWRITE NORMALIZE-ADDENDS))
 (11 11 (:REWRITE DEFAULT-PLUS-1))
 (11 11 (:REWRITE DEFAULT-CDR))
 (11 11 (:REWRITE BENDIAN=>NAT-OF-DAB-DIGIT-LIST-FIX-DIGITS-NORMALIZE-CONST))
 (11 11 (:REWRITE BENDIAN=>NAT-OF-ALL-ZEROS-CONSTANT))
 (10 10 (:REWRITE |(expt c (* d n))|))
 (10 10 (:REWRITE |(< (* x y) 0) rationalp (* x y)|))
 (6 6 (:TYPE-PRESCRIPTION POSP))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-REMAINDER))
 (6 6 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-AX+BX-RATIONAL-COMMON))
 (6 6 (:REWRITE DAB-DIGIT-LISTP-WHEN-NOT-CONSP))
 (6 6 (:REWRITE |(< 0 (/ x))|))
 (6 6 (:REWRITE |(< 0 (* x y))|))
 (4 4 (:REWRITE REDUCE-RATIONALP-+))
 (4 4 (:REWRITE REDUCE-RATIONALP-*))
 (4 4 (:REWRITE RATIONALP-MINUS-X))
 (4 4 (:META META-RATIONALP-CORRECT))
 (2 2 (:TYPE-PRESCRIPTION RATIONALP-EXPT-TYPE-PRESCRIPTION))
 (1 1 (:REWRITE REDUCE-MULTIPLICATIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE REDUCE-ADDITIVE-CONSTANT-EQUAL))
 (1 1 (:REWRITE EQUAL-OF-PREDICATES-REWRITE))
 (1 1 (:REWRITE |(equal c (/ x))|))
 (1 1 (:REWRITE |(equal c (- x))|))
 (1 1 (:REWRITE |(equal (/ x) c)|))
 (1 1 (:REWRITE |(equal (/ x) (/ y))|))
 (1 1 (:REWRITE |(equal (- x) c)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
