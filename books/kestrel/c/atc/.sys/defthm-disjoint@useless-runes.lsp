(C::DEFTHM-DISJOINT-INNER-LOOP
 (100 8 (:REWRITE ATOM-LISTP-WHEN-SUBSETP-EQUAL))
 (80 10 (:REWRITE SUBSETP-OF-CONS))
 (17 17 (:REWRITE SUBSETP-TRANS2))
 (17 17 (:REWRITE SUBSETP-TRANS))
 (10 10 (:REWRITE SUBSETP-MEMBER . 2))
 (10 10 (:REWRITE SUBSETP-MEMBER . 1))
 (6 2 (:REWRITE SYMBOLP-WHEN-MEMBER-EQUAL-OF-SYMBOL-LISTP))
 (4 4 (:REWRITE SUBSETP-NIL))
 (4 4 (:REWRITE ATOM-LISTP-WHEN-NOT-CONSP))
 (3 1 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE MEMBER-SELF))
 )
(C::PSEUDO-EVENT-FORM-LISTP-OF-DEFTHM-DISJOINT-INNER-LOOP.EVENTS
 (896 14 (:DEFINITION PSEUDO-EVENT-FORM-LISTP))
 (162 162 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (128 14 (:REWRITE PSEUDO-EVENT-FORMP-OF-CAR-WHEN-PSEUDO-EVENT-FORM-LISTP))
 (128 14 (:REWRITE PSEUDO-EVENT-FORM-LISTP-OF-CDR-WHEN-PSEUDO-EVENT-FORM-LISTP))
 (113 57 (:REWRITE PSEUDO-EVENT-FORM-LISTP-WHEN-NOT-CONSP))
 (99 30 (:REWRITE PSEUDO-EVENT-FORMP-WHEN-MEMBER-EQUAL-OF-PSEUDO-EVENT-FORM-LISTP))
 (84 14 (:REWRITE TRUE-LISTP-WHEN-SYMBOL-LISTP-REWRITE-BACKCHAIN-1))
 (84 14 (:REWRITE SYMBOLP-OF-CAR-WHEN-SYMBOL-LISTP))
 (84 14 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (60 30 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (56 56 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (56 56 (:REWRITE SYMBOL-LISTP-WHEN-SUBSETP-EQUAL))
 (50 30 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (45 5 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (45 5 (:REWRITE SUBSETP-CAR-MEMBER))
 (34 34 (:REWRITE SUBSETP-TRANS2))
 (34 34 (:REWRITE SUBSETP-TRANS))
 (28 28 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (28 28 (:REWRITE SYMBOLP-WHEN-MEMBER-EQUAL-OF-SYMBOL-LISTP))
 (28 28 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (28 14 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (28 14 (:REWRITE CONSP-OF-CAR-WHEN-ATOM-LISTP))
 (15 15 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (14 14 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (14 14 (:TYPE-PRESCRIPTION ATOM-LISTP))
 (14 14 (:REWRITE SET::IN-SET))
 (9 1 (:REWRITE SUBSETP-OF-CONS))
 (7 7 (:REWRITE SUBSETP-MEMBER . 2))
 (7 7 (:REWRITE SUBSETP-MEMBER . 1))
 )
(C::SYMBOL-LISTP-OF-DEFTHM-DISJOINT-INNER-LOOP.NAMES
 (88 48 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (43 15 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (35 5 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (35 5 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (18 18 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (11 11 (:REWRITE SUBSETP-MEMBER . 2))
 (11 11 (:REWRITE SUBSETP-MEMBER . 1))
 (9 9 (:REWRITE SUBSETP-TRANS2))
 (9 9 (:REWRITE SUBSETP-TRANS))
 (9 1 (:REWRITE SUBSETP-OF-CONS))
 (5 5 (:REWRITE MEMBER-SELF))
 )
(C::DEFTHM-DISJOINT-OUTER-LOOP
 (58 18 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (36 4 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (16 4 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (10 10 (:REWRITE SUBSETP-MEMBER . 2))
 (10 10 (:REWRITE SUBSETP-MEMBER . 1))
 (7 7 (:REWRITE SUBSETP-TRANS2))
 (7 7 (:REWRITE SUBSETP-TRANS))
 (7 3 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (7 2 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (5 5 (:REWRITE MEMBER-SELF))
 (4 2 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (2 2 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION BINARY-APPEND))
 (2 1 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (1 1 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (1 1 (:REWRITE SET::IN-SET))
 )
(C::PSEUDO-EVENT-FORM-LISTP-OF-DEFTHM-DISJOINT-OUTER-LOOP.EVENTS
 (427 7 (:DEFINITION PSEUDO-EVENT-FORM-LISTP))
 (175 7 (:DEFINITION PSEUDO-EVENT-FORMP))
 (94 94 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (61 7 (:REWRITE PSEUDO-EVENT-FORMP-OF-CAR-WHEN-PSEUDO-EVENT-FORM-LISTP))
 (61 7 (:REWRITE PSEUDO-EVENT-FORM-LISTP-OF-CDR-WHEN-PSEUDO-EVENT-FORM-LISTP))
 (56 28 (:REWRITE PSEUDO-EVENT-FORM-LISTP-WHEN-NOT-CONSP))
 (48 8 (:REWRITE TRUE-LISTP-WHEN-SYMBOL-LISTP-REWRITE-BACKCHAIN-1))
 (48 8 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (42 7 (:REWRITE SYMBOLP-OF-CAR-WHEN-SYMBOL-LISTP))
 (40 14 (:REWRITE PSEUDO-EVENT-FORMP-WHEN-MEMBER-EQUAL-OF-PSEUDO-EVENT-FORM-LISTP))
 (35 16 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (32 16 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (30 30 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (30 30 (:REWRITE SYMBOL-LISTP-WHEN-SUBSETP-EQUAL))
 (30 1 (:REWRITE SUBSETP-APPEND1))
 (27 18 (:REWRITE SUBSETP-TRANS2))
 (18 18 (:REWRITE SUBSETP-TRANS))
 (18 2 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (18 2 (:REWRITE SUBSETP-CAR-MEMBER))
 (16 16 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (16 8 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (15 15 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (15 1 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (14 14 (:REWRITE SYMBOLP-WHEN-MEMBER-EQUAL-OF-SYMBOL-LISTP))
 (14 7 (:REWRITE CONSP-OF-CAR-WHEN-ATOM-LISTP))
 (8 8 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (8 8 (:REWRITE SET::IN-SET))
 (7 7 (:TYPE-PRESCRIPTION ATOM-LISTP))
 (7 1 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (6 6 (:TYPE-PRESCRIPTION LEN))
 (6 2 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (4 4 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (3 1 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (3 1 (:REWRITE CONSP-OF-LIST-FIX))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (2 2 (:REWRITE SUBSETP-MEMBER . 2))
 (2 2 (:REWRITE SUBSETP-MEMBER . 1))
 )
(C::SYMBOL-LISTP-OF-DEFTHM-DISJOINT-OUTER-LOOP.NAMES
 (70 34 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (42 1 (:REWRITE SUBSETP-APPEND1))
 (33 5 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (24 7 (:REWRITE SUBSETP-TRANS2))
 (21 7 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (21 5 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (14 14 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (14 2 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (12 9 (:REWRITE SUBSETP-MEMBER . 2))
 (9 9 (:REWRITE SUBSETP-MEMBER . 1))
 (7 7 (:REWRITE SUBSETP-TRANS))
 (4 4 (:REWRITE MEMBER-SELF))
 )
(C::DEFTHM-DISJOINT-FN)
(C::PSEUDO-EVENT-FORMP-OF-DEFTHM-DISJOINT-FN
 (42 6 (:REWRITE TRUE-LISTP-WHEN-SYMBOL-LISTP-REWRITE-BACKCHAIN-1))
 (36 6 (:REWRITE SET::SETS-ARE-TRUE-LISTS-CHEAP))
 (14 14 (:REWRITE SYMBOL-LISTP-WHEN-SUBSETP-EQUAL))
 (12 12 (:TYPE-PRESCRIPTION SET::SETP-TYPE))
 (12 6 (:REWRITE SET::NONEMPTY-MEANS-SET))
 (10 10 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (7 7 (:REWRITE SYMBOL-LISTP-WHEN-NOT-CONSP))
 (7 4 (:REWRITE SYMBOL-LISTP-OF-CONS))
 (6 6 (:TYPE-PRESCRIPTION SET::EMPTY-TYPE))
 (6 6 (:REWRITE SET::IN-SET))
 (2 2 (:REWRITE CONSP-WHEN-MEMBER-EQUAL-OF-ATOM-LISTP))
 (2 1 (:REWRITE SYMBOL-LISTP-OF-CDR-WHEN-SYMBOL-LISTP))
 )
