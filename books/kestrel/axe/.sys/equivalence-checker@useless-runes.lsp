(AXE-PROVER-HINTS)
(GET-DISJUNCTS-FROM-TERM
 (49761 36 (:DEFINITION INTEGER-ABS))
 (42294 94 (:DEFINITION NAT-LISTP))
 (29010 312 (:REWRITE USE-ALL-<-FOR-CAR))
 (28628 257 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (25149 455 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (22703 111 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (22658 312 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (18483 566 (:REWRITE LEN-OF-CDR-BETTER))
 (18128 163 (:REWRITE ALL-<-OF-CDR))
 (16940 222 (:REWRITE ALL-NATP-OF-CDR))
 (16349 397 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (15153 397 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (11225 57 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (7113 405 (:REWRITE INEQ-HACK2))
 (7113 405 (:REWRITE INEQ-HACK))
 (5908 1446 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (5587 111 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (4993 150 (:REWRITE EQUAL-CONSTANT-+))
 (4451 136 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (4070 15 (:DEFINITION NATP))
 (4008 18 (:DEFINITION LENGTH))
 (3052 109 (:REWRITE <-0-+-NEGATIVE-1))
 (2547 136 (:REWRITE LIST::LIST-EQUIV-HACK))
 (2501 663 (:REWRITE DEFAULT-CDR))
 (2411 272 (:REWRITE LIST::OPEN-EQUIV))
 (2132 1376 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (2120 2120 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2058 439 (:REWRITE DEFAULT-CAR))
 (1745 1745 (:TYPE-PRESCRIPTION ALL-NATP))
 (1740 54 (:REWRITE STR::CONSP-OF-EXPLODE))
 (1717 877 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (1717 877 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1626 6 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (1554 18 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1396 698 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (1116 18 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (1051 136 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (1047 349 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (1047 349 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (978 978 (:TYPE-PRESCRIPTION ALL-<))
 (961 696 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (909 807 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (885 33 (:REWRITE CDR-IFF))
 (849 701 (:REWRITE DEFAULT-+-2))
 (840 840 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (807 807 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (807 807 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (807 807 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (807 807 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (807 807 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (807 807 (:META LEN-CONS-META-RULE))
 (794 397 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (750 701 (:REWRITE DEFAULT-+-1))
 (708 708 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (701 701 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (680 136 (:REWRITE HACK1))
 (639 639 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (624 312 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (620 599 (:REWRITE DEFAULT-<-2))
 (612 12 (:REWRITE ALL-RATIONALP-OF-CDR))
 (602 599 (:REWRITE DEFAULT-<-1))
 (599 599 (:REWRITE USE-ALL-<-2))
 (599 599 (:REWRITE USE-ALL-<))
 (599 599 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (599 599 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (599 599 (:REWRITE DROP-LINEAR-HYPS2))
 (599 599 (:REWRITE DROP->-HYPS))
 (599 599 (:REWRITE DROP-<-HYPS))
 (599 599 (:REWRITE BOUND-WHEN-USB2))
 (599 599 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (599 599 (:REWRITE <-WHEN-BVLT))
 (599 599 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (599 599 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (599 599 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (599 599 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (599 599 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (599 599 (:REWRITE <-FROM-<=-FREE))
 (567 405 (:REWRITE NOT-<-WHEN-SBVLT))
 (566 566 (:REWRITE +-OF-MINUS))
 (545 207 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (509 509 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (492 15 (:REWRITE USE-ALL-NATP-FOR-CAR))
 (455 455 (:REWRITE USE-ALL-CONSP-2))
 (455 455 (:REWRITE USE-ALL-CONSP))
 (455 455 (:REWRITE LEN-GIVES-CONSP))
 (455 455 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (455 455 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (455 455 (:REWRITE CONSP-FROM-LEN-BOUND))
 (439 439 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (437 437 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (420 96 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (411 405 (:REWRITE ARITH-HACK-CHEAP))
 (405 405 (:REWRITE USE-ALL-<=-2))
 (405 405 (:REWRITE USE-ALL-<=))
 (405 405 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (405 405 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (405 405 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (405 405 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (405 405 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (405 405 (:REWRITE DROP-LINEAR-HYPS3))
 (405 405 (:REWRITE DROP-<=-HYPS))
 (405 405 (:REWRITE BOUND-WHEN-USB))
 (405 405 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (405 405 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (405 405 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (405 405 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (405 405 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (397 397 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (375 33 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (349 349 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (318 318 (:REWRITE CLR-DIFFERENTIAL))
 (312 312 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (306 306 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (282 282 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (282 282 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (272 136 (:REWRITE LIST::TRUE-LISTP-FIX))
 (272 136 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (272 136 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (272 136 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (210 42 (:REWRITE INTEGER-LISTP-OF-CDR))
 (207 207 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (207 207 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (207 207 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (207 207 (:REWRITE ALL-<-TRANSITIVE))
 (206 103 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (204 9 (:REWRITE LIST::LEN-POS-REWRITE))
 (194 194 (:REWRITE <-OF-0-WHEN-<-FREE))
 (183 183 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (180 36 (:REWRITE COMMUTATIVITY-OF-+))
 (176 176 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (169 164 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (162 162 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (152 132 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (150 75 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (136 136 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (136 136 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (136 136 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (136 136 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (136 136 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (136 136 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (136 136 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (134 50 (:REWRITE +-COMBINE-CONSTANTS))
 (132 132 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (132 132 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (132 132 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (132 132 (:REWRITE IMPOSSIBLE-VALUE-2))
 (132 132 (:REWRITE IMPOSSIBLE-VALUE-1))
 (128 128 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (128 128 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (128 128 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (128 128 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (128 128 (:REWRITE EQUAL-WHEN-BVLT))
 (128 128 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (128 128 (:REWRITE EQUAL-WHEN-<-OF-+))
 (128 128 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (128 128 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (128 128 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (128 128 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (128 128 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (128 128 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (128 128 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (128 128 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (128 128 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (128 128 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (128 128 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (103 103 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (103 103 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (103 103 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (95 95 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (95 95 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (78 42 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (66 33 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (66 33 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (66 33 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (66 33 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (66 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (60 12 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (56 8 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (45 45 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (45 45 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (45 45 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (45 45 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (45 45 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (45 45 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (42 42 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (39 3 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (38 38 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (38 38 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (38 38 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (36 36 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (36 36 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (36 36 (:REWRITE HELPER-HELPER2))
 (36 36 (:REWRITE HELPER-HELPER))
 (36 36 (:REWRITE FOLD-CONSTS-IN-+))
 (36 36 (:REWRITE DEFAULT-UNARY-MINUS))
 (36 18 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (36 18 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (36 12 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (36 12 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (33 33 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (33 33 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (33 33 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (30 30 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (28 14 (:REWRITE PLUS-OF-MINUS-3-BV-5))
 (24 12 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (24 12 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (18 18 (:REWRITE USE-ALL-RATIONALP-2))
 (18 18 (:REWRITE USE-ALL-RATIONALP))
 (18 18 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (18 18 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (18 18 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (18 18 (:REWRITE DEFAULT-REALPART))
 (18 18 (:REWRITE DEFAULT-NUMERATOR))
 (18 18 (:REWRITE DEFAULT-IMAGPART))
 (18 18 (:REWRITE DEFAULT-DENOMINATOR))
 (18 18 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (15 15 (:REWRITE USE-ALL-NATP-2))
 (15 15 (:REWRITE USE-ALL-NATP))
 (15 15 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (15 15 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (15 15 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (12 12 (:TYPE-PRESCRIPTION ALISTP))
 (12 12 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (12 12 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (12 12 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (12 12 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (12 12 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (12 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (12 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (12 6 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (6 6 (:REWRITE WFR-HACK5))
 (6 6 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (4 4 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (4 4 (:REWRITE BV-1-0-HACK))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (3 3 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (3 3 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (3 3 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 1 (:REWRITE LIST::EQUAL-CAR-DIFFERENTIAL))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE LIST::CDR-DOES-NOTHING-REWRITE))
 (1 1 (:REWRITE LIST::CARS-MATCH-FROM-FIRSTN-FACT-2))
 (1 1 (:REWRITE LIST::CARS-MATCH-FROM-FIRSTN-FACT))
 )
(CONJUNCTS-FOR-NEGATION)
(PRINT-TERM-NICE
 (42 24 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (42 24 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (18 18 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (18 18 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(NUMBER-CHARACTER-STRING-OR-SYMBOL-LIST
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MYPACKN1
 (408 24 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (342 6 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (168 6 (:REWRITE <-0-+-NEGATIVE-1))
 (154 2 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (154 2 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (138 6 (:REWRITE LEN-OF-CDR-BETTER))
 (120 60 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (120 60 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (61 61 (:TYPE-PRESCRIPTION NAT-LISTP))
 (60 60 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (34 1 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (24 24 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (24 12 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (22 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (18 18 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (18 18 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (18 18 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (18 18 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (18 18 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (18 18 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (18 18 (:META LEN-CONS-META-RULE))
 (18 6 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (18 6 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (15 15 (:TYPE-PRESCRIPTION ALL-NATP))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (10 10 (:REWRITE DEFAULT-CDR))
 (10 10 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (8 8 (:REWRITE DEFAULT-CAR))
 (8 8 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (6 6 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (6 6 (:REWRITE USE-ALL-CONSP-2))
 (6 6 (:REWRITE USE-ALL-CONSP))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (6 6 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (6 6 (:REWRITE LEN-GIVES-CONSP))
 (6 6 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (6 6 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (6 6 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:REWRITE CONSP-FROM-LEN-BOUND))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-0-WHEN-<-FREE))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (6 6 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (6 6 (:REWRITE +-OF-MINUS))
 (5 1 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (5 1 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (4 4 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 (3 3 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (2 2 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (2 1 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (2 1 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (2 1 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (1 1 (:REWRITE USE-ALL-RATIONALP-2))
 (1 1 (:REWRITE USE-ALL-RATIONALP))
 (1 1 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (1 1 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 )
(MYPACKN
 (9487 9 (:DEFINITION EXPLODE-NONNEGATIVE-INTEGER))
 (4918 20 (:DEFINITION NAT-LISTP))
 (4689 9 (:DEFINITION DIGIT-TO-CHAR))
 (3186 75 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2295 54 (:REWRITE USE-ALL-<-FOR-CAR))
 (2287 12 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (2062 40 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (1744 58 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1739 45 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (1684 3 (:REWRITE ZP-OPEN))
 (1540 9 (:REWRITE USE-ALL-<=-FOR-CAR))
 (1419 3 (:REWRITE FLOOR-MINUS-ARG1-BETTER))
 (1366 3 (:REWRITE ALL-<=-WHEN-ALL-<))
 (1144 12 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (1136 58 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (1085 14 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (1071 5 (:DEFINITION NATP))
 (1023 3 (:REWRITE EQUAL-*-/-1))
 (950 26 (:REWRITE <-0-+-NEGATIVE-1))
 (870 3 (:REWRITE *-OF-FLOOR-OF-SAME-WHEN-MULTIPLE))
 (826 32 (:REWRITE LEN-OF-CDR-BETTER))
 (808 190 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (594 594 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (594 594 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (594 594 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (578 41 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (569 143 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (558 279 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (558 279 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (523 57 (:REWRITE INEQ-HACK2))
 (523 57 (:REWRITE INEQ-HACK))
 (508 14 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (498 498 (:TYPE-PRESCRIPTION NAT-LISTP))
 (409 112 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (393 27 (:REWRITE MOD-WHEN-MULTIPLE))
 (393 27 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (386 29 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (372 27 (:REWRITE MOD-WHEN-<-OF-0))
 (339 3 (:REWRITE MOD-OF-MINUS-ARG1))
 (285 15 (:REWRITE FLOOR-WHEN-<=))
 (279 279 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (254 254 (:TYPE-PRESCRIPTION ALL-NATP))
 (240 15 (:REWRITE FLOOR-WHEN-MULTIPLE))
 (234 63 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (232 190 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (210 66 (:REWRITE COMMUTATIVITY-OF-*-WHEN-CONSTANT))
 (210 3 (:LINEAR MOD-UPPER-BOUND-LINEAR))
 (201 3 (:LINEAR MOD-BOUND-LINEAR-ARG2-STRONG))
 (201 3 (:LINEAR MOD-BOUND-LINEAR-ARG2))
 (200 158 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (194 22 (:REWRITE ALL-NATP-OF-CDR))
 (189 15 (:REWRITE FLOOR-WHEN-<))
 (189 15 (:REWRITE FLOOR-MUST-BE-1))
 (188 17 (:REWRITE LIST::LEN-POS-REWRITE))
 (177 24 (:REWRITE MOD-WHEN-<))
 (170 5 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (168 84 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (166 26 (:REWRITE STR::CHARACTER-LISTP-WHEN-DEC-DIGIT-CHAR-LISTP))
 (158 158 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (158 158 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (158 158 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (158 158 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (158 158 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (158 158 (:META LEN-CONS-META-RULE))
 (154 154 (:REWRITE CLR-DIFFERENTIAL))
 (150 3 (:REWRITE ALL-<=-WHEN-<=-AND-DECREASINGP))
 (149 149 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (149 149 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (143 143 (:TYPE-PRESCRIPTION ALL-<))
 (143 143 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (143 143 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (143 143 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (143 143 (:REWRITE IMPOSSIBLE-VALUE-2))
 (143 143 (:REWRITE IMPOSSIBLE-VALUE-1))
 (142 142 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (126 42 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (126 42 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (125 78 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (122 116 (:REWRITE DEFAULT-<-2))
 (116 116 (:REWRITE USE-ALL-<-2))
 (116 116 (:REWRITE USE-ALL-<))
 (116 116 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (116 116 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (116 116 (:REWRITE DROP-LINEAR-HYPS2))
 (116 116 (:REWRITE DROP->-HYPS))
 (116 116 (:REWRITE DROP-<-HYPS))
 (116 116 (:REWRITE DEFAULT-<-1))
 (116 116 (:REWRITE BOUND-WHEN-USB2))
 (116 116 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (116 116 (:REWRITE <-WHEN-BVLT))
 (116 116 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (116 116 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (116 116 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (116 116 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (116 116 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (116 116 (:REWRITE <-FROM-<=-FREE))
 (116 58 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (110 5 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (108 54 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (107 107 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (107 107 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (107 107 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (107 107 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (107 107 (:REWRITE EQUAL-WHEN-BVLT))
 (107 107 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (107 107 (:REWRITE EQUAL-WHEN-<-OF-+))
 (107 107 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (107 107 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (107 107 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (107 107 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (107 107 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (107 107 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (107 107 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (107 107 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (107 107 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (107 107 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (107 107 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (102 3 (:REWRITE EQUAL-CONSTANT-+))
 (99 3 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (96 96 (:REWRITE MOD-EQUAL-IMPOSSIBLE-VALUE))
 (96 95 (:REWRITE DEFAULT-CAR))
 (95 95 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (90 13 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (86 57 (:REWRITE NOT-<-WHEN-SBVLT))
 (84 6 (:REWRITE INTEGERP-OF--))
 (82 82 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (81 69 (:REWRITE DEFAULT-*-2))
 (79 78 (:REWRITE DEFAULT-CDR))
 (77 77 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (76 76 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (76 76 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (76 76 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (76 76 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (76 76 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (75 75 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (69 69 (:REWRITE DEFAULT-*-1))
 (69 57 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (68 2 (:REWRITE STR::CONSP-OF-EXPLODE))
 (63 63 (:REWRITE USE-ALL-CONSP-2))
 (63 63 (:REWRITE USE-ALL-CONSP))
 (63 63 (:REWRITE LEN-GIVES-CONSP))
 (63 63 (:REWRITE INTEGERP-OF-SMALL-HELPER-2))
 (63 63 (:REWRITE INTEGERP-OF-*))
 (63 63 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (63 63 (:REWRITE CONSP-FROM-LEN-BOUND))
 (60 15 (:REWRITE FLOOR-WHEN-MOD-0-CHEAP))
 (60 15 (:REWRITE FLOOR-WHEN-DIVISIBLE-CHEAP))
 (58 58 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (58 5 (:REWRITE USE-ALL-NATP-FOR-CAR))
 (57 57 (:REWRITE USE-ALL-<=-2))
 (57 57 (:REWRITE USE-ALL-<=))
 (57 57 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (57 57 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (57 57 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (57 57 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (57 57 (:REWRITE DROP-LINEAR-HYPS3))
 (57 57 (:REWRITE DROP-<=-HYPS))
 (57 57 (:REWRITE BOUND-WHEN-USB))
 (57 57 (:REWRITE ARITH-HACK-CHEAP))
 (57 57 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (57 57 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (57 57 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (57 57 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (57 57 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (57 3 (:REWRITE LIST::LIST-EQUIV-HACK))
 (56 38 (:REWRITE DEFAULT-+-2))
 (54 6 (:REWRITE LIST::OPEN-EQUIV))
 (51 30 (:REWRITE STR::DEC-DIGIT-CHAR-LISTP-WHEN-NOT-CONSP))
 (49 49 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (45 45 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (45 45 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (42 42 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (42 18 (:REWRITE DEFAULT-UNARY-MINUS))
 (41 41 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (40 8 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (38 38 (:REWRITE DEFAULT-+-1))
 (38 38 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (36 18 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (35 35 (:REWRITE +-OF-MINUS))
 (33 9 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-<-2))
 (32 32 (:REWRITE <-OF-0-WHEN-<-FREE))
 (29 29 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (29 29 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (29 29 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (29 29 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (29 29 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (29 29 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (29 29 (:REWRITE ALL-<-TRANSITIVE))
 (28 14 (:REWRITE APPEND-WHEN-NOT-CONSP-ARG1-CHEAP))
 (27 27 (:TYPE-PRESCRIPTION FLOOR-TYPE-WHEN-NONPOSITIVE-AND-NONNEGATIVE))
 (27 27 (:TYPE-PRESCRIPTION FLOOR-TYPE-NON-NEGATIVE))
 (27 27 (:TYPE-PRESCRIPTION FLOOR-TYPE-1-PART-1-BETTER))
 (27 27 (:TYPE-PRESCRIPTION FLOOR))
 (27 27 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (27 27 (:REWRITE DIVISIBLE-WHEN-DIVISIBLE-BY-MULTIPLE))
 (27 3 (:REWRITE DEFAULT-SYMBOL-NAME))
 (26 13 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (26 13 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (26 13 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (26 13 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (25 5 (:REWRITE INTEGER-LISTP-OF-CDR))
 (24 24 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (24 24 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (24 24 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (24 24 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (24 9 (:REWRITE LIST::APPEND-OF-NON-CONSP-2))
 (24 9 (:REWRITE APPEND-ATOM-UNDER-LIST-EQUIV))
 (24 6 (:REWRITE FUNCTIONAL-COMMUTATIVITY-OF-MINUS-*-RIGHT))
 (24 3 (:REWRITE STR::DEC-DIGIT-CHAR-LISTP-OF-APPEND))
 (23 3 (:REWRITE ALL-<-OF-CDR))
 (18 18 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (18 9 (:REWRITE STR::DEC-DIGIT-CHAR-LISTP-OF-CDR-WHEN-DEC-DIGIT-CHAR-LISTP))
 (18 9 (:REWRITE BV-3-2-1-HACKB))
 (16 16 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (16 8 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (15 15 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-OF-QUOTIENT))
 (15 15 (:REWRITE FLOOR-WHEN-NOT-RATIONALP-ARG1))
 (15 15 (:REWRITE FLOOR-WHEN-NEGATIVE-AND-SMALL-CHEAP))
 (15 15 (:REWRITE FLOOR-WHEN-I-IS-NOT-AN-ACL2-NUMBERP))
 (15 15 (:REWRITE FLOOR-MINUS-NEGATIVE-CONSTANT))
 (15 15 (:REWRITE FLOOR-DIVIDE-BY-COMMON-CONSTANT-FACTOR))
 (15 3 (:REWRITE HACK1))
 (14 7 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (13 13 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (13 13 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (13 13 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (13 1 (:REWRITE STR::DEC-DIGIT-CHAR-LISTP-OF-CONS))
 (12 12 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (12 12 (:TYPE-PRESCRIPTION ALL-<=))
 (12 6 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (9 9 (:TYPE-PRESCRIPTION BVLT))
 (9 9 (:REWRITE FIX-WHEN-ACL2-NUMBERP))
 (9 9 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (9 9 (:REWRITE BV-3-2-1-HACK))
 (9 9 (:REWRITE BV-1-0-HACK))
 (9 9 (:REWRITE APPEND-OF-CONSTANT-AND-CONS-OF-CONSTANT))
 (8 8 (:REWRITE USE-ALL-RATIONALP-2))
 (8 8 (:REWRITE USE-ALL-RATIONALP))
 (8 8 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (7 7 (:TYPE-PRESCRIPTION AXE-TREEP))
 (7 7 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (7 7 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (6 6 (:TYPE-PRESCRIPTION TRUE-LISTP-EXPLODE-NONNEGATIVE-INTEGER))
 (6 6 (:TYPE-PRESCRIPTION EXPLODE-NONNEGATIVE-INTEGER))
 (6 6 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (6 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (6 6 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (6 3 (:REWRITE LIST::TRUE-LISTP-FIX))
 (6 3 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (6 3 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (6 3 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (5 5 (:REWRITE USE-ALL-NATP-2))
 (5 5 (:REWRITE USE-ALL-NATP))
 (5 5 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (5 5 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (5 5 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (5 5 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (5 5 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (3 3 (:REWRITE ZP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE SAME-REMAINDER-WHEN-CLOSE-LEMMA))
 (3 3 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (3 3 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (3 3 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (3 3 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (3 3 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (3 3 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (3 3 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (3 3 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (3 3 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (3 3 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (3 3 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (3 3 (:REWRITE EQUAL-OF-*-AND-CONSTANT))
 (3 3 (:REWRITE DEFAULT-REALPART))
 (3 3 (:REWRITE DEFAULT-NUMERATOR))
 (3 3 (:REWRITE DEFAULT-IMAGPART))
 (3 3 (:REWRITE DEFAULT-DENOMINATOR))
 (3 3 (:REWRITE COLLECT-CONSTANTS-TIMES-EQUAL))
 (3 3 (:REWRITE ALL-<=-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-<=-WHEN-NOT-CONSP))
 (3 3 (:REWRITE ALL-<=-MONOTONE))
 (3 3 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (2 1 (:REWRITE STR::DEC-DIGIT-CHAR-P-WHEN-NONZERO-DEC-DIGIT-CHAR-P))
 (2 1 (:REWRITE STR::DEC-DIGIT-CHAR-P-OF-CAR-WHEN-DEC-DIGIT-CHAR-LISTP))
 (1 1 (:TYPE-PRESCRIPTION STR::NONZERO-DEC-DIGIT-CHAR-P$INLINE))
 (1 1 (:TYPE-PRESCRIPTION STR::DEC-DIGIT-CHAR-P$INLINE))
 )
(MYPACKN-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CONSISTENT-ALISTS
 (1103 494 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (1103 494 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (472 14 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (459 459 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (459 459 (:TYPE-PRESCRIPTION NAT-LISTP))
 (231 23 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (158 79 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (100 6 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (90 90 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (89 5 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (88 5 (:REWRITE LIST::LEN-POS-REWRITE))
 (84 3 (:REWRITE <-0-+-NEGATIVE-1))
 (69 3 (:REWRITE LEN-OF-CDR-BETTER))
 (40 13 (:REWRITE DEFAULT-CDR))
 (39 23 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (36 20 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (35 7 (:REWRITE RULE-ALISTP-MEANS-SYMBOL-ALISTP))
 (30 1 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (29 11 (:REWRITE DEFAULT-CAR))
 (27 9 (:REWRITE SYMBOL-ALISTP-WHEN-SYMBOL-COUNT-WORLDP))
 (27 9 (:REWRITE SYMBOL-ALISTP-WHEN-INFO-WORLDP))
 (27 9 (:REWRITE RESULT-ALISTP-FORWARD-TO-SYMBOL-ALISTP))
 (27 1 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (21 13 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (20 20 (:TYPE-PRESCRIPTION RESULT-ALISTP))
 (20 20 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (20 20 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (20 20 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (20 20 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (20 20 (:META LEN-CONS-META-RULE))
 (18 18 (:TYPE-PRESCRIPTION SYMBOL-COUNT-WORLDP))
 (18 18 (:TYPE-PRESCRIPTION INFO-WORLDP))
 (18 9 (:REWRITE SYMBOL-ALISTP-WHEN-REFINED-ASSUMPTION-ALISTP-CHEAP))
 (18 3 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (16 16 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (15 3 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (14 14 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (14 14 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (14 7 (:REWRITE SYMBOL-ALISTP-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (13 13 (:REWRITE USE-ALL-CONSP-2))
 (13 13 (:REWRITE USE-ALL-CONSP))
 (13 13 (:REWRITE LEN-GIVES-CONSP))
 (13 13 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (13 13 (:REWRITE CONSP-FROM-LEN-BOUND))
 (12 6 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (11 11 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (10 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (9 9 (:TYPE-PRESCRIPTION REFINED-ASSUMPTION-ALISTP))
 (9 3 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (9 3 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (8 8 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (8 8 (:REWRITE USE-ALL-RULE-ALISTP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (8 4 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION ALL-NATP))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (5 1 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (4 4 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION BOOLEANP))
 (3 3 (:REWRITE USE-ALL-<-2))
 (3 3 (:REWRITE USE-ALL-<))
 (3 3 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (3 3 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (3 3 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (3 3 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (3 3 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (3 3 (:REWRITE IMPOSSIBLE-VALUE-2))
 (3 3 (:REWRITE IMPOSSIBLE-VALUE-1))
 (3 3 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (3 3 (:REWRITE EQUAL-WHEN-BVLT))
 (3 3 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (3 3 (:REWRITE EQUAL-WHEN-<-OF-+))
 (3 3 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (3 3 (:REWRITE DROP-LINEAR-HYPS2))
 (3 3 (:REWRITE DROP->-HYPS))
 (3 3 (:REWRITE DROP-<-HYPS))
 (3 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (3 3 (:REWRITE CLR-DIFFERENTIAL))
 (3 3 (:REWRITE BOUND-WHEN-USB2))
 (3 3 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (3 3 (:REWRITE <-WHEN-BVLT))
 (3 3 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (3 3 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (3 3 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (3 3 (:REWRITE <-OF-0-WHEN-<-FREE))
 (3 3 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (3 3 (:REWRITE <-FROM-<=-FREE))
 (3 3 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (3 3 (:REWRITE +-OF-MINUS))
 (3 1 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (3 1 (:REWRITE RESULT-ALISTP-FORWARD-TO-ALISTP))
 (3 1 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (3 1 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (2 2 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (2 2 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (2 2 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (2 2 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION AXE-TREEP))
 (2 2 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (2 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (2 1 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (2 1 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (1 1 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (1 1 (:REWRITE USE-ALL-ALISTP-2))
 (1 1 (:REWRITE USE-ALL-ALISTP))
 (1 1 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (1 1 (:REWRITE ASSOC-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (1 1 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 )
(REPLACE-IN-TERM2
 (1988 1 (:DEFINITION PSEUDO-TERMP))
 (1571 33 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1164 105 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (916 3 (:DEFINITION LENGTH))
 (548 18 (:REWRITE LEN-OF-CDR-BETTER))
 (350 7 (:REWRITE <-0-+-NEGATIVE-1))
 (279 3 (:REWRITE EQUAL-OF-+-WHEN-NEGATIVE-CONSTANT))
 (276 24 (:REWRITE DEFAULT-CDR))
 (271 21 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (200 105 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (178 14 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (154 1 (:REWRITE FIX-OF-LEN))
 (152 1 (:DEFINITION SYMBOL-LISTP))
 (130 65 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (130 65 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (110 3 (:REWRITE STR::CONSP-OF-EXPLODE))
 (107 21 (:REWRITE DEFAULT-CAR))
 (98 87 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (91 9 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (90 3 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (87 87 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (87 87 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (87 87 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (87 87 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (87 87 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (87 87 (:META LEN-CONS-META-RULE))
 (81 3 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (69 5 (:REWRITE LIST::LEN-POS-REWRITE))
 (65 65 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (65 65 (:TYPE-PRESCRIPTION NAT-LISTP))
 (61 15 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (57 13 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (41 24 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (38 2 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (36 36 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (36 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (33 33 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (30 30 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (30 30 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (30 14 (:REWRITE DEFAULT-+-2))
 (28 14 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (28 4 (:REWRITE EQUAL-CONSTANT-+))
 (23 23 (:REWRITE USE-ALL-CONSP-2))
 (23 23 (:REWRITE USE-ALL-CONSP))
 (23 23 (:REWRITE LEN-GIVES-CONSP))
 (23 23 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (23 23 (:REWRITE CONSP-FROM-LEN-BOUND))
 (22 1 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (21 21 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (21 7 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (21 7 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (19 7 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (17 17 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (17 17 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (17 10 (:REWRITE DEFAULT-<-2))
 (16 16 (:REWRITE CLR-DIFFERENTIAL))
 (15 3 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (14 14 (:TYPE-PRESCRIPTION ALL-NATP))
 (14 14 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (14 14 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (14 14 (:REWRITE DEFAULT-+-1))
 (14 14 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (14 7 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (13 13 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (13 13 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (13 13 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (13 13 (:REWRITE IMPOSSIBLE-VALUE-2))
 (13 13 (:REWRITE IMPOSSIBLE-VALUE-1))
 (13 13 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (13 13 (:REWRITE EQUAL-WHEN-<-OF-+))
 (13 13 (:REWRITE +-OF-MINUS))
 (12 12 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (12 12 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (12 12 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (12 12 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (12 12 (:REWRITE EQUAL-WHEN-BVLT))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (12 12 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (12 6 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (10 10 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (10 10 (:REWRITE USE-ALL-<-2))
 (10 10 (:REWRITE USE-ALL-<))
 (10 10 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (10 10 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (10 10 (:REWRITE DROP-LINEAR-HYPS2))
 (10 10 (:REWRITE DROP->-HYPS))
 (10 10 (:REWRITE DROP-<-HYPS))
 (10 10 (:REWRITE DEFAULT-<-1))
 (10 10 (:REWRITE BOUND-WHEN-USB2))
 (10 10 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (10 10 (:REWRITE <-WHEN-BVLT))
 (10 10 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (10 10 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (10 10 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (10 10 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (10 10 (:REWRITE <-OF-0-WHEN-<-FREE))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (10 10 (:REWRITE <-FROM-<=-FREE))
 (10 3 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (9 9 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (9 3 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (9 3 (:REWRITE RESULT-ALISTP-FORWARD-TO-ALISTP))
 (9 3 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (9 3 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (7 7 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (7 7 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (7 1 (:REWRITE PSEUDO-TERMP-OF-CADDR))
 (6 6 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (6 6 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION RESULT-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (6 6 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (6 6 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (6 3 (:REWRITE PSEUDO-TERMP-OF-CAR-WHEN-PSEUDO-TERM-LISTP-CHEAP))
 (6 3 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP))
 (6 3 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (6 3 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (6 3 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (6 2 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (6 1 (:REWRITE HACK1))
 (6 1 (:REWRITE LIST::EQUAL-CONS-CASES))
 (5 5 (:TYPE-PRESCRIPTION BOOLEANP))
 (4 4 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (4 4 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (4 4 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (4 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (4 2 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP))
 (3 3 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (3 3 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (3 3 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (3 3 (:REWRITE USE-ALL-RULE-ALISTP))
 (3 3 (:REWRITE USE-ALL-ALISTP-2))
 (3 3 (:REWRITE USE-ALL-ALISTP))
 (3 3 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (3 3 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (3 3 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (3 3 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (3 3 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (3 3 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (3 3 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (3 1 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:TYPE-PRESCRIPTION AXE-TREEP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (2 2 (:REWRITE EQUAL-OF-+-COMBINE-CONSTANTS))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 1 (:REWRITE SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-ALISTP-CHEAP))
 (2 1 (:REWRITE SYMBOL-LISTP-OF-CADR-OF-CAR-WHEN-PSEUDO-TERMP-CHEAP))
 (2 1 (:REWRITE PSEUDO-TERMP-OF-LAMBDA-BODY-CHEAP))
 (2 1 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (2 1 (:REWRITE BV-3-2-1-HACKB))
 (1 1 (:TYPE-PRESCRIPTION SYMBOL-ALISTP))
 (1 1 (:TYPE-PRESCRIPTION BVLT))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (1 1 (:REWRITE LIST::TRUE-LISTP-FIX))
 (1 1 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (1 1 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (1 1 (:REWRITE EQUAL-OF-+-OF-MINUS-32))
 (1 1 (:REWRITE EQUAL-OF-+-OF-MINUS))
 (1 1 (:REWRITE CDR-CONS))
 (1 1 (:REWRITE CAR-CONS))
 (1 1 (:REWRITE BV-3-2-1-HACK))
 (1 1 (:REWRITE ASSOC-EQUAL-WHEN-NOT-CONSP-CHEAP))
 )
(MY-PACK-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(DROP-LAST)
(MAP-DROP-LAST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAP-DROP-LAST-OF-NIL)
(MAP-DROP-LAST-OF-CONS)
(MAP-DROP-LAST-OF-TRUE-LIST-FIX)
(MAP-DROP-LAST-OPENER)
(MAP-DROP-LAST-OF-APPEND)
(CAR-OF-MAP-DROP-LAST)
(CDR-OF-MAP-DROP-LAST)
(LEN-OF-MAP-DROP-LAST)
(CONSP-OF-MAP-DROP-LAST)
(MAP-DROP-LAST-IFF)
(TRUE-LISTP-OF-MAP-DROP-LAST)
(FIRSTN-OF-MAP-DROP-LAST)
(TAKE-OF-MAP-DROP-LAST)
(NTH-OF-MAP-DROP-LAST)
(NTHCDR-OF-MAP-DROP-LAST)
(PRINT-DAG-ARRAY-TO-FILE-AUX)
(PRINT-DAG-ARRAY-TO-FILE)
(PRINT-DAG-ARRAY-TO-TEMP-FILE)
(PRINT-DAG-LST-TO-TEMP-FILE)
(RECURSIVE-FUNCTIONP
 (434 217 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (217 217 (:TYPE-PRESCRIPTION ALL-NATP))
 )
(CALL-APPEARS-AT-TOP-LEVEL
 (11750 206 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (11005 44 (:DEFINITION INTEGER-ABS))
 (7796 202 (:REWRITE LEN-OF-CDR-BETTER))
 (5984 577 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (4968 22 (:DEFINITION LENGTH))
 (3219 167 (:REWRITE INEQ-HACK2))
 (3219 167 (:REWRITE INEQ-HACK))
 (2271 49 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (2195 66 (:REWRITE STR::CONSP-OF-EXPLODE))
 (2178 27 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (2011 7 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (1962 56 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1927 21 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1909 214 (:REWRITE DEFAULT-CDR))
 (1750 41 (:REWRITE EQUAL-CONSTANT-+))
 (1709 41 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (1540 577 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (1374 149 (:REWRITE DEFAULT-CAR))
 (1372 49 (:REWRITE <-0-+-NEGATIVE-1))
 (1366 22 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (1034 517 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (1034 517 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1023 41 (:REWRITE LIST::LIST-EQUIV-HACK))
 (982 82 (:REWRITE LIST::OPEN-EQUIV))
 (945 27 (:REWRITE USE-ALL-<-FOR-CAR))
 (888 36 (:REWRITE ALL-NATP-OF-CDR))
 (768 14 (:REWRITE ALL-RATIONALP-OF-CDR))
 (685 685 (:TYPE-PRESCRIPTION NAT-LISTP))
 (676 338 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (579 129 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (570 374 (:REWRITE DEFAULT-+-2))
 (524 30 (:REWRITE ALL-<-OF-CDR))
 (519 519 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (507 169 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (507 169 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (500 500 (:TYPE-PRESCRIPTION ALL-NATP))
 (500 370 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (468 41 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (442 374 (:REWRITE DEFAULT-+-1))
 (374 374 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (374 374 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (370 370 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (370 370 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (370 370 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (370 370 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (370 370 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (370 370 (:META LEN-CONS-META-RULE))
 (320 320 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (305 214 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (296 271 (:REWRITE DEFAULT-<-2))
 (274 271 (:REWRITE DEFAULT-<-1))
 (272 272 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (271 271 (:REWRITE USE-ALL-<-2))
 (271 271 (:REWRITE USE-ALL-<))
 (271 271 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (271 271 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (271 271 (:REWRITE DROP-LINEAR-HYPS2))
 (271 271 (:REWRITE DROP->-HYPS))
 (271 271 (:REWRITE DROP-<-HYPS))
 (271 271 (:REWRITE BOUND-WHEN-USB2))
 (271 271 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (271 271 (:REWRITE <-WHEN-BVLT))
 (271 271 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (271 271 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (271 271 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (271 271 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (271 271 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (271 271 (:REWRITE <-FROM-<=-FREE))
 (266 11 (:REWRITE LIST::LEN-POS-REWRITE))
 (233 41 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (220 44 (:REWRITE COMMUTATIVITY-OF-+))
 (211 167 (:REWRITE NOT-<-WHEN-SBVLT))
 (206 206 (:REWRITE USE-ALL-CONSP-2))
 (206 206 (:REWRITE USE-ALL-CONSP))
 (206 206 (:REWRITE LEN-GIVES-CONSP))
 (206 206 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (206 206 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (206 206 (:REWRITE CONSP-FROM-LEN-BOUND))
 (205 41 (:REWRITE HACK1))
 (203 21 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (202 202 (:REWRITE +-OF-MINUS))
 (190 21 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (186 186 (:REWRITE CLR-DIFFERENTIAL))
 (184 184 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (173 167 (:REWRITE ARITH-HACK-CHEAP))
 (169 169 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (167 167 (:REWRITE USE-ALL-<=-2))
 (167 167 (:REWRITE USE-ALL-<=))
 (167 167 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (167 167 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (167 167 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (167 167 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (167 167 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (167 167 (:REWRITE DROP-LINEAR-HYPS3))
 (167 167 (:REWRITE DROP-<=-HYPS))
 (167 167 (:REWRITE BOUND-WHEN-USB))
 (167 167 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (167 167 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (167 167 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (167 167 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (167 167 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (164 164 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (149 149 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (145 145 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (142 142 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (142 142 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (140 56 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (125 125 (:TYPE-PRESCRIPTION ALL-<))
 (114 41 (:REWRITE LIST::TRUE-LISTP-FIX))
 (114 41 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (114 41 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (114 41 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (112 56 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (110 55 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (109 101 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (105 7 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (104 104 (:REWRITE <-OF-0-WHEN-<-FREE))
 (101 101 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (101 101 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (101 101 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (101 101 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (101 101 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (101 101 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (101 101 (:REWRITE IMPOSSIBLE-VALUE-2))
 (101 101 (:REWRITE IMPOSSIBLE-VALUE-1))
 (101 101 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (101 101 (:REWRITE EQUAL-WHEN-BVLT))
 (101 101 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (101 101 (:REWRITE EQUAL-WHEN-<-OF-+))
 (101 101 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (101 101 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (101 101 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (101 101 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (101 101 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (101 101 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (101 101 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (101 101 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (101 101 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (101 101 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (101 101 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (92 1 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (83 83 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (83 83 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (82 16 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (75 1 (:DEFINITION STRIP-CARS))
 (74 16 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (71 71 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (70 14 (:REWRITE INTEGER-LISTP-OF-CDR))
 (67 2 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (56 56 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (54 54 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (54 27 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (50 50 (:REWRITE HELPER-HELPER2))
 (50 50 (:REWRITE HELPER-HELPER))
 (50 50 (:REWRITE FOLD-CONSTS-IN-+))
 (50 50 (:REWRITE +-COMBINE-CONSTANTS))
 (49 49 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (45 1 (:REWRITE ACL2-COUNT-WHEN-MEMBER))
 (44 44 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (44 44 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (44 44 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (44 44 (:REWRITE DEFAULT-UNARY-MINUS))
 (44 22 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (42 42 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (42 21 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (42 14 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (42 14 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (41 41 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (41 41 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (41 41 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (41 41 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (41 41 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (41 41 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (41 41 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (41 41 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (41 41 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (41 41 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (41 41 (:REWRITE ALL-<-TRANSITIVE))
 (39 1 (:REWRITE SUBSETP-CAR-MEMBER))
 (32 16 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (32 16 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (28 28 (:REWRITE WFR-HACK5))
 (28 28 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (27 27 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (24 3 (:REWRITE USE-ALL-CDRS-RATIONALP-FOR-CAR))
 (23 2 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (22 22 (:REWRITE USE-ALL-RATIONALP-2))
 (22 22 (:REWRITE USE-ALL-RATIONALP))
 (22 22 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (22 22 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (22 22 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (22 22 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (22 22 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (22 22 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (22 22 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (22 22 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (22 22 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (22 22 (:REWRITE DEFAULT-REALPART))
 (22 22 (:REWRITE DEFAULT-NUMERATOR))
 (22 22 (:REWRITE DEFAULT-IMAGPART))
 (22 22 (:REWRITE DEFAULT-DENOMINATOR))
 (21 21 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (21 3 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (16 16 (:TYPE-PRESCRIPTION ALISTP))
 (16 16 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (16 16 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (16 16 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (16 16 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (15 15 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (15 15 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (14 7 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (14 7 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (14 7 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (14 7 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (14 7 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (12 12 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (9 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-HIT-COUNT-ALISTP))
 (8 8 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (8 8 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (8 8 (:REWRITE CDR-CONS))
 (8 8 (:REWRITE CAR-CONS))
 (7 7 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (7 7 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (7 7 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (6 6 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (6 6 (:TYPE-PRESCRIPTION HIT-COUNT-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION ALL-CDRS-RATIONALP))
 (4 4 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (3 3 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (3 3 (:REWRITE SUBSETP-TRANS2))
 (3 3 (:REWRITE SUBSETP-TRANS))
 (3 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (2 2 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 1 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-AUX-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION WEAK-DAGP))
 (1 1 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (1 1 (:REWRITE SUBSETP-MEMBER . 2))
 (1 1 (:REWRITE SUBSETP-MEMBER . 1))
 (1 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE <-OF-0-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 )
(TAIL-RECURSIVEP)
(IS-A-REC-FN-TO-HANDLE
 (428 214 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (214 214 (:TYPE-PRESCRIPTION ALL-NATP))
 )
(IS-A-CALL-OF-A-REC-FN-TO-HANDLE
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FILTER-REC-FN-NODES2
 (50 25 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (25 25 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (25 25 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (2 2 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (2 2 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (2 2 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (2 2 (:REWRITE INEQ-HACK2))
 (2 2 (:REWRITE INEQ-HACK))
 (2 2 (:REWRITE DROP-LINEAR-HYPS3))
 (2 2 (:REWRITE DROP-LINEAR-HYPS2))
 (2 2 (:REWRITE ARITH-HACK-CHEAP))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (2 1 (:REWRITE NOT-<-WHEN-SBVLT))
 (1 1 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USE-ALL-<=-2))
 (1 1 (:REWRITE USE-ALL-<=))
 (1 1 (:REWRITE USE-ALL-<-2))
 (1 1 (:REWRITE USE-ALL-<))
 (1 1 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (1 1 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (1 1 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (1 1 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (1 1 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE DROP->-HYPS))
 (1 1 (:REWRITE DROP-<=-HYPS))
 (1 1 (:REWRITE DROP-<-HYPS))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE BOUND-WHEN-USB2))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 (1 1 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (1 1 (:REWRITE <-WHEN-BVLT))
 (1 1 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (1 1 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (1 1 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (1 1 (:REWRITE <-FROM-<=-FREE))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(CONTAINS-A-LAMBDA
 (20 10 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (20 10 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (10 10 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (10 10 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LAMBDA-SURROUNDED-FN-CALL-WITH-NO-OTHER-CALLS-OF-FNP
 (8632 28 (:DEFINITION INTEGER-ABS))
 (6873 119 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (4257 99 (:REWRITE LEN-OF-CDR-BETTER))
 (3971 313 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (3208 14 (:DEFINITION LENGTH))
 (3030 142 (:REWRITE INEQ-HACK2))
 (3030 142 (:REWRITE INEQ-HACK))
 (1444 42 (:REWRITE STR::CONSP-OF-EXPLODE))
 (1184 28 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (1136 20 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (1036 37 (:REWRITE <-0-+-NEGATIVE-1))
 (1036 4 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (1034 132 (:REWRITE DEFAULT-CDR))
 (1008 32 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (988 12 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (949 313 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (932 16 (:REWRITE EQUAL-CONSTANT-+))
 (916 16 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (868 14 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (806 409 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (806 409 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (714 104 (:REWRITE DEFAULT-CAR))
 (596 298 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (596 20 (:REWRITE USE-ALL-<-FOR-CAR))
 (540 16 (:REWRITE LIST::LIST-EQUIV-HACK))
 (524 32 (:REWRITE LIST::OPEN-EQUIV))
 (493 493 (:TYPE-PRESCRIPTION NAT-LISTP))
 (447 149 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (447 149 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (400 88 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (400 20 (:REWRITE ALL-NATP-OF-CDR))
 (397 397 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (390 390 (:TYPE-PRESCRIPTION ALL-NATP))
 (345 213 (:REWRITE DEFAULT-+-2))
 (332 8 (:REWRITE ALL-RATIONALP-OF-CDR))
 (308 24 (:REWRITE ALL-<-OF-CDR))
 (292 210 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (259 213 (:REWRITE DEFAULT-+-1))
 (246 246 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (238 238 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (227 209 (:REWRITE DEFAULT-<-2))
 (213 213 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (211 209 (:REWRITE DEFAULT-<-1))
 (210 210 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (210 210 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (210 210 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (210 210 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (210 210 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (210 210 (:META LEN-CONS-META-RULE))
 (209 209 (:REWRITE USE-ALL-<-2))
 (209 209 (:REWRITE USE-ALL-<))
 (209 209 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (209 209 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (209 209 (:REWRITE DROP-LINEAR-HYPS2))
 (209 209 (:REWRITE DROP->-HYPS))
 (209 209 (:REWRITE DROP-<-HYPS))
 (209 209 (:REWRITE BOUND-WHEN-USB2))
 (209 209 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (209 209 (:REWRITE <-WHEN-BVLT))
 (209 209 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (209 209 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (209 209 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (209 209 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (209 209 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (209 209 (:REWRITE <-FROM-<=-FREE))
 (194 8 (:REWRITE LIST::LEN-POS-REWRITE))
 (193 132 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (180 16 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (170 142 (:REWRITE NOT-<-WHEN-SBVLT))
 (161 161 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (149 149 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (148 142 (:REWRITE ARITH-HACK-CHEAP))
 (144 28 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (142 142 (:REWRITE USE-ALL-<=-2))
 (142 142 (:REWRITE USE-ALL-<=))
 (142 142 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (142 142 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (142 142 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (142 142 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (142 142 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (142 142 (:REWRITE DROP-LINEAR-HYPS3))
 (142 142 (:REWRITE DROP-<=-HYPS))
 (142 142 (:REWRITE BOUND-WHEN-USB))
 (142 142 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (142 142 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (142 142 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (142 142 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (142 142 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (140 28 (:REWRITE COMMUTATIVITY-OF-+))
 (133 133 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (133 133 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (119 119 (:REWRITE USE-ALL-CONSP-2))
 (119 119 (:REWRITE USE-ALL-CONSP))
 (119 119 (:REWRITE LEN-GIVES-CONSP))
 (119 119 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (119 119 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (119 119 (:REWRITE CONSP-FROM-LEN-BOUND))
 (116 12 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (108 12 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (104 104 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (103 103 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (101 101 (:REWRITE CLR-DIFFERENTIAL))
 (99 99 (:REWRITE +-OF-MINUS))
 (92 92 (:TYPE-PRESCRIPTION ALL-<))
 (86 85 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (80 32 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (80 16 (:REWRITE HACK1))
 (73 73 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (73 73 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (72 16 (:REWRITE LIST::TRUE-LISTP-FIX))
 (72 16 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (72 16 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (72 16 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (72 1 (:DEFINITION SOME-EXPR-CALLS-FN))
 (67 67 (:REWRITE <-OF-0-WHEN-<-FREE))
 (64 64 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (64 32 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (60 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (57 57 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (57 57 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (57 57 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (57 57 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (57 57 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (57 57 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (57 57 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (57 57 (:REWRITE IMPOSSIBLE-VALUE-2))
 (57 57 (:REWRITE IMPOSSIBLE-VALUE-1))
 (57 57 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (57 57 (:REWRITE EQUAL-WHEN-BVLT))
 (57 57 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (57 57 (:REWRITE EQUAL-WHEN-<-OF-+))
 (57 57 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (57 57 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (57 57 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (57 57 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (57 57 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (57 57 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (57 57 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (57 57 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (57 57 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (57 57 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (57 57 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (54 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (52 4 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (48 24 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (48 12 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (40 40 (:REWRITE WFR-HACK5))
 (40 40 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (40 20 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (40 8 (:REWRITE INTEGER-LISTP-OF-CDR))
 (36 36 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (36 36 (:REWRITE HELPER-HELPER2))
 (36 36 (:REWRITE HELPER-HELPER))
 (36 36 (:REWRITE FOLD-CONSTS-IN-+))
 (36 36 (:REWRITE +-COMBINE-CONSTANTS))
 (34 34 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (32 32 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (32 4 (:REWRITE USE-ALL-CDRS-RATIONALP-FOR-CAR))
 (28 28 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (28 28 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (28 28 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (28 28 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (28 28 (:REWRITE DEFAULT-UNARY-MINUS))
 (28 28 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (28 28 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (28 28 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (28 28 (:REWRITE ALL-<-TRANSITIVE))
 (28 14 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (24 24 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (24 12 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (24 12 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (24 12 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (24 8 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (24 8 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (20 20 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (16 16 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (16 16 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (16 16 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (16 16 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (16 16 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (16 16 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (16 16 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (16 16 (:REWRITE CDR-CONS))
 (16 16 (:REWRITE CAR-CONS))
 (14 14 (:REWRITE USE-ALL-RATIONALP-2))
 (14 14 (:REWRITE USE-ALL-RATIONALP))
 (14 14 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (14 14 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (14 14 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (14 14 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (14 14 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (14 14 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (14 14 (:REWRITE DEFAULT-REALPART))
 (14 14 (:REWRITE DEFAULT-NUMERATOR))
 (14 14 (:REWRITE DEFAULT-IMAGPART))
 (14 14 (:REWRITE DEFAULT-DENOMINATOR))
 (12 12 (:TYPE-PRESCRIPTION ALISTP))
 (12 12 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (12 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (12 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (12 12 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (12 12 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (12 4 (:REWRITE ALL-CDRS-RATIONALP-WHEN-HIT-COUNT-ALISTP))
 (10 10 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (10 10 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (8 8 (:TYPE-PRESCRIPTION HIT-COUNT-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION ALL-CDRS-RATIONALP))
 (8 8 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (8 4 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (4 4 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (2 2 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (1 1 (:TYPE-PRESCRIPTION EXPR-CALLS-FN))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 )
(BASE-CASES-IN-ITE
 (7641 135 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (6022 28 (:DEFINITION INTEGER-ABS))
 (5315 144 (:REWRITE LEN-OF-CDR-BETTER))
 (3573 391 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (3112 14 (:DEFINITION LENGTH))
 (1652 32 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (1578 12 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (1472 4 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (1440 38 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1434 86 (:REWRITE INEQ-HACK2))
 (1434 86 (:REWRITE INEQ-HACK))
 (1416 14 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1348 42 (:REWRITE STR::CONSP-OF-EXPLODE))
 (1267 138 (:REWRITE DEFAULT-CDR))
 (1199 32 (:REWRITE EQUAL-CONSTANT-+))
 (1167 32 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (971 391 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (868 14 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (864 86 (:REWRITE DEFAULT-CAR))
 (728 26 (:REWRITE <-0-+-NEGATIVE-1))
 (719 32 (:REWRITE LIST::LIST-EQUIV-HACK))
 (688 26 (:REWRITE ALL-NATP-OF-CDR))
 (687 64 (:REWRITE LIST::OPEN-EQUIV))
 (602 10 (:REWRITE ALL-RATIONALP-OF-CDR))
 (592 12 (:REWRITE USE-ALL-<-FOR-CAR))
 (409 211 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (409 211 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (370 18 (:REWRITE ALL-<-OF-CDR))
 (367 32 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (362 248 (:REWRITE DEFAULT-+-2))
 (328 164 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (318 244 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (314 74 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (308 308 (:TYPE-PRESCRIPTION NAT-LISTP))
 (286 248 (:REWRITE DEFAULT-+-1))
 (272 272 (:TYPE-PRESCRIPTION ALL-NATP))
 (248 248 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (246 82 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (246 82 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (244 244 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (244 244 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (244 244 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (244 244 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (244 244 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (244 244 (:META LEN-CONS-META-RULE))
 (238 238 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (198 198 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (196 138 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (177 177 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (176 176 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (166 150 (:REWRITE DEFAULT-<-2))
 (160 32 (:REWRITE HACK1))
 (156 22 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (152 150 (:REWRITE DEFAULT-<-1))
 (150 150 (:REWRITE USE-ALL-<-2))
 (150 150 (:REWRITE USE-ALL-<))
 (150 150 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (150 150 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (150 150 (:REWRITE DROP-LINEAR-HYPS2))
 (150 150 (:REWRITE DROP->-HYPS))
 (150 150 (:REWRITE DROP-<-HYPS))
 (150 150 (:REWRITE BOUND-WHEN-USB2))
 (150 150 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (150 150 (:REWRITE <-WHEN-BVLT))
 (150 150 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (150 150 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (150 150 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (150 150 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (150 150 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (150 150 (:REWRITE <-FROM-<=-FREE))
 (144 144 (:REWRITE +-OF-MINUS))
 (140 28 (:REWRITE COMMUTATIVITY-OF-+))
 (136 6 (:REWRITE LIST::LEN-POS-REWRITE))
 (135 135 (:REWRITE USE-ALL-CONSP-2))
 (135 135 (:REWRITE USE-ALL-CONSP))
 (135 135 (:REWRITE LEN-GIVES-CONSP))
 (135 135 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (135 135 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (135 135 (:REWRITE CONSP-FROM-LEN-BOUND))
 (134 14 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (132 14 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (130 130 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (126 126 (:REWRITE CLR-DIFFERENTIAL))
 (123 123 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (114 86 (:REWRITE NOT-<-WHEN-SBVLT))
 (98 98 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (98 98 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (94 94 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (94 38 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (90 86 (:REWRITE ARITH-HACK-CHEAP))
 (86 86 (:REWRITE USE-ALL-<=-2))
 (86 86 (:REWRITE USE-ALL-<=))
 (86 86 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (86 86 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (86 86 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (86 86 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (86 86 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (86 86 (:REWRITE DROP-LINEAR-HYPS3))
 (86 86 (:REWRITE DROP-<=-HYPS))
 (86 86 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (86 86 (:REWRITE BOUND-WHEN-USB))
 (86 86 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (86 86 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (86 86 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (86 86 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (86 86 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (82 82 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (76 38 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (74 66 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (70 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (66 66 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (66 66 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (66 66 (:REWRITE IMPOSSIBLE-VALUE-2))
 (66 66 (:REWRITE IMPOSSIBLE-VALUE-1))
 (66 66 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (66 66 (:REWRITE EQUAL-WHEN-BVLT))
 (66 66 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (66 66 (:REWRITE EQUAL-WHEN-<-OF-+))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (64 64 (:TYPE-PRESCRIPTION ALL-<))
 (64 64 (:REWRITE <-OF-0-WHEN-<-FREE))
 (64 32 (:REWRITE LIST::TRUE-LISTP-FIX))
 (64 32 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (64 32 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (64 32 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (50 10 (:REWRITE INTEGER-LISTP-OF-CDR))
 (50 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (46 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (39 3 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (38 38 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (32 32 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (32 32 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (32 32 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (32 32 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (32 32 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (32 32 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (32 32 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (32 32 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (30 10 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (30 10 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (28 28 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (28 28 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (28 28 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (28 28 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (28 28 (:REWRITE HELPER-HELPER2))
 (28 28 (:REWRITE HELPER-HELPER))
 (28 28 (:REWRITE FOLD-CONSTS-IN-+))
 (28 28 (:REWRITE DEFAULT-UNARY-MINUS))
 (28 28 (:REWRITE +-COMBINE-CONSTANTS))
 (28 14 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (28 14 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (24 12 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (24 12 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (22 22 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (22 22 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (22 22 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (22 22 (:REWRITE ALL-<-TRANSITIVE))
 (20 20 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (14 14 (:REWRITE USE-ALL-RATIONALP-2))
 (14 14 (:REWRITE USE-ALL-RATIONALP))
 (14 14 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (14 14 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (14 14 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (14 14 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (14 14 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (14 14 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (14 14 (:REWRITE DEFAULT-REALPART))
 (14 14 (:REWRITE DEFAULT-NUMERATOR))
 (14 14 (:REWRITE DEFAULT-IMAGPART))
 (14 14 (:REWRITE DEFAULT-DENOMINATOR))
 (14 14 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (12 12 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (10 10 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (10 10 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (8 8 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 4 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (6 6 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (4 4 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (2 2 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(CONS-NEST-OF-UNIQUE-ITEMSP
 (2765 55 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2402 12 (:DEFINITION INTEGER-ABS))
 (1650 44 (:REWRITE LEN-OF-CDR-BETTER))
 (1560 138 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1336 6 (:DEFINITION LENGTH))
 (621 37 (:REWRITE INEQ-HACK2))
 (621 37 (:REWRITE INEQ-HACK))
 (580 18 (:REWRITE STR::CONSP-OF-EXPLODE))
 (522 14 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (494 6 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (448 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (434 50 (:REWRITE DEFAULT-CDR))
 (434 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (424 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (392 14 (:REWRITE <-0-+-NEGATIVE-1))
 (390 138 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (372 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (346 28 (:REWRITE DEFAULT-CAR))
 (298 8 (:REWRITE EQUAL-CONSTANT-+))
 (290 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (250 6 (:REWRITE USE-ALL-<-FOR-CAR))
 (205 107 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (205 107 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (188 10 (:REWRITE ALL-NATP-OF-CDR))
 (178 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (170 16 (:REWRITE LIST::OPEN-EQUIV))
 (154 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (152 76 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (146 146 (:TYPE-PRESCRIPTION NAT-LISTP))
 (142 8 (:REWRITE ALL-<-OF-CDR))
 (140 32 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (138 89 (:REWRITE DEFAULT-+-2))
 (127 93 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (122 122 (:TYPE-PRESCRIPTION ALL-NATP))
 (114 38 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (114 38 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (105 89 (:REWRITE DEFAULT-+-1))
 (102 102 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (98 98 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (93 93 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (93 93 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (93 93 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (93 93 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (93 93 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (93 93 (:META LEN-CONS-META-RULE))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (89 89 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (79 79 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (73 73 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (72 65 (:REWRITE DEFAULT-<-2))
 (70 50 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (68 3 (:REWRITE LIST::LEN-POS-REWRITE))
 (66 65 (:REWRITE DEFAULT-<-1))
 (65 65 (:REWRITE USE-ALL-<-2))
 (65 65 (:REWRITE USE-ALL-<))
 (65 65 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (65 65 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (65 65 (:REWRITE DROP-LINEAR-HYPS2))
 (65 65 (:REWRITE DROP->-HYPS))
 (65 65 (:REWRITE DROP-<-HYPS))
 (65 65 (:REWRITE BOUND-WHEN-USB2))
 (65 65 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (65 65 (:REWRITE <-WHEN-BVLT))
 (65 65 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (65 65 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (65 65 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (65 65 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (65 65 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (65 65 (:REWRITE <-FROM-<=-FREE))
 (60 12 (:REWRITE COMMUTATIVITY-OF-+))
 (60 10 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (58 6 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (55 55 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (54 6 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (53 53 (:REWRITE USE-ALL-CONSP-2))
 (53 53 (:REWRITE USE-ALL-CONSP))
 (53 53 (:REWRITE LEN-GIVES-CONSP))
 (53 53 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (53 53 (:REWRITE CONSP-FROM-LEN-BOUND))
 (49 37 (:REWRITE NOT-<-WHEN-SBVLT))
 (49 1 (:REWRITE SUBSETP-CAR-MEMBER))
 (47 47 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (45 45 (:REWRITE CLR-DIFFERENTIAL))
 (44 44 (:REWRITE +-OF-MINUS))
 (40 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (40 8 (:REWRITE HACK1))
 (39 37 (:REWRITE ARITH-HACK-CHEAP))
 (38 38 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (37 37 (:REWRITE USE-ALL-<=-2))
 (37 37 (:REWRITE USE-ALL-<=))
 (37 37 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (37 37 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (37 37 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (37 37 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (37 37 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (37 37 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (37 37 (:REWRITE DROP-LINEAR-HYPS3))
 (37 37 (:REWRITE DROP-<=-HYPS))
 (37 37 (:REWRITE BOUND-WHEN-USB))
 (37 37 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (37 37 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (33 33 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (33 33 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (33 1 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (30 30 (:TYPE-PRESCRIPTION ALL-<))
 (30 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (29 25 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (28 28 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (28 28 (:REWRITE <-OF-0-WHEN-<-FREE))
 (28 2 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (27 1 (:REWRITE MEMBER-WHEN-ATOM))
 (25 25 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (25 25 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (25 25 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (25 25 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (25 25 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (25 25 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (25 25 (:REWRITE IMPOSSIBLE-VALUE-2))
 (25 25 (:REWRITE IMPOSSIBLE-VALUE-1))
 (25 25 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (25 25 (:REWRITE EQUAL-WHEN-BVLT))
 (25 25 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (25 25 (:REWRITE EQUAL-WHEN-<-OF-+))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (22 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (20 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (20 4 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (16 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (16 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (16 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (14 14 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (14 14 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (13 1 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (12 12 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (12 12 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (12 12 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (12 12 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE HELPER-HELPER2))
 (12 12 (:REWRITE HELPER-HELPER))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE +-COMBINE-CONSTANTS))
 (12 6 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (12 6 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 6 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (12 6 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (12 4 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (12 4 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (11 2 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (10 10 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (10 10 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (10 10 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (10 10 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (10 10 (:REWRITE ALL-<-TRANSITIVE))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 6 (:REWRITE USE-ALL-RATIONALP-2))
 (6 6 (:REWRITE USE-ALL-RATIONALP))
 (6 6 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (6 6 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (6 6 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (6 6 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (4 4 (:TYPE-PRESCRIPTION ALISTP))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE SUBSETP-TRANS2))
 (2 2 (:REWRITE SUBSETP-TRANS))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (2 1 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1 1 (:REWRITE SUBSETP-MEMBER . 4))
 (1 1 (:REWRITE SUBSETP-MEMBER . 3))
 (1 1 (:REWRITE SUBSETP-MEMBER . 2))
 (1 1 (:REWRITE SUBSETP-MEMBER . 1))
 (1 1 (:REWRITE INTERSECTP-MEMBER . 3))
 (1 1 (:REWRITE INTERSECTP-MEMBER . 2))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(TRIVIAL-BASE-CASE-TERMP)
(ITE-NEST-WITH-BASE-CASES-AND-LAMBDA-WRAPPED-REC-CALLP
 (24206 289 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (15848 62 (:DEFINITION INTEGER-ABS))
 (12512 1461 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (6940 31 (:DEFINITION LENGTH))
 (4361 231 (:REWRITE INEQ-HACK2))
 (4361 231 (:REWRITE INEQ-HACK))
 (3849 387 (:REWRITE DEFAULT-CAR))
 (3530 111 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (3303 55 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (3248 473 (:REWRITE DEFAULT-CDR))
 (3034 93 (:REWRITE STR::CONSP-OF-EXPLODE))
 (2939 1461 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (2927 15 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (2816 129 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (2735 48 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1940 49 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (1912 55 (:REWRITE USE-ALL-<-FOR-CAR))
 (1854 57 (:REWRITE <-0-+-NEGATIVE-1))
 (1579 795 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (1579 795 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1243 910 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (1165 1165 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1137 812 (:REWRITE DEFAULT-+-2))
 (1079 73 (:REWRITE ALL-<-OF-CDR))
 (1061 5 (:LINEAR LEN-OF-CDR-LINEAR-STRONG))
 (1061 5 (:LINEAR LIST::LEN-OF-CDR-LINEAR))
 (1039 5 (:LINEAR LEN-OF-CDR-LINEAR))
 (1039 5 (:LINEAR LIST::LEN-OF-CDR-BOUND-WEAK-LINEAR))
 (1039 5 (:LINEAR LIST::LEN-OF-CDR-BOUND-TIGHT-LINEAR))
 (999 84 (:REWRITE ALL-NATP-OF-CDR))
 (910 910 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (910 910 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (910 910 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (910 910 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (910 910 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (910 910 (:META LEN-CONS-META-RULE))
 (908 812 (:REWRITE DEFAULT-+-1))
 (884 442 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (882 180 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (857 32 (:REWRITE LIST::LEN-POS-REWRITE))
 (812 812 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (811 811 (:TYPE-PRESCRIPTION ALL-NATP))
 (784 784 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (717 33 (:REWRITE ALL-RATIONALP-OF-CDR))
 (663 221 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (663 221 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (649 473 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (604 604 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (558 558 (:REWRITE +-OF-MINUS))
 (527 527 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (522 135 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (462 48 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (442 135 (:REWRITE LIST::TRUE-LISTP-FIX))
 (442 135 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (442 135 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (441 48 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (438 438 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (434 381 (:REWRITE DEFAULT-<-2))
 (412 412 (:REWRITE CLR-DIFFERENTIAL))
 (387 387 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (386 381 (:REWRITE DEFAULT-<-1))
 (382 382 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (381 381 (:REWRITE USE-ALL-<-2))
 (381 381 (:REWRITE USE-ALL-<))
 (381 381 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (381 381 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (381 381 (:REWRITE DROP-LINEAR-HYPS2))
 (381 381 (:REWRITE DROP->-HYPS))
 (381 381 (:REWRITE DROP-<-HYPS))
 (381 381 (:REWRITE BOUND-WHEN-USB2))
 (381 381 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (381 381 (:REWRITE <-WHEN-BVLT))
 (381 381 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (381 381 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (381 381 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (381 381 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (381 381 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (381 381 (:REWRITE <-FROM-<=-FREE))
 (350 350 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (350 350 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (321 129 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (318 159 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (313 88 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (310 62 (:REWRITE COMMUTATIVITY-OF-+))
 (293 231 (:REWRITE NOT-<-WHEN-SBVLT))
 (289 289 (:REWRITE USE-ALL-CONSP-2))
 (289 289 (:REWRITE USE-ALL-CONSP))
 (289 289 (:REWRITE LEN-GIVES-CONSP))
 (289 289 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (289 289 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (289 289 (:REWRITE CONSP-FROM-LEN-BOUND))
 (271 271 (:TYPE-PRESCRIPTION ALL-<))
 (258 129 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (255 54 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (254 246 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (246 231 (:REWRITE ARITH-HACK-CHEAP))
 (240 184 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (240 15 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (231 231 (:REWRITE USE-ALL-<=-2))
 (231 231 (:REWRITE USE-ALL-<=))
 (231 231 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (231 231 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (231 231 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (231 231 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (231 231 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (231 231 (:REWRITE DROP-LINEAR-HYPS3))
 (231 231 (:REWRITE DROP-<=-HYPS))
 (231 231 (:REWRITE BOUND-WHEN-USB))
 (231 231 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (231 231 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (231 231 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (231 231 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (231 231 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (228 54 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (225 225 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (221 221 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (213 213 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (184 184 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (184 184 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (184 184 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (184 184 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (184 184 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (184 184 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (184 184 (:REWRITE IMPOSSIBLE-VALUE-2))
 (184 184 (:REWRITE IMPOSSIBLE-VALUE-1))
 (184 184 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (184 184 (:REWRITE EQUAL-WHEN-BVLT))
 (184 184 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (184 184 (:REWRITE EQUAL-WHEN-<-OF-+))
 (184 184 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (184 184 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (184 184 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (184 184 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (184 184 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (184 184 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (184 184 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (184 184 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (184 184 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (184 184 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (184 184 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (165 33 (:REWRITE INTEGER-LISTP-OF-CDR))
 (161 161 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (160 80 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (150 150 (:REWRITE <-OF-0-WHEN-<-FREE))
 (141 135 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (135 135 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (135 135 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (135 135 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (135 135 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (135 135 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (134 134 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (129 129 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (128 16 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (126 126 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (126 126 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (120 40 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (120 40 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (111 111 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (110 55 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (108 54 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (108 54 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (96 96 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (96 48 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (93 93 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (88 88 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (88 88 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (88 88 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (88 88 (:REWRITE ALL-<-TRANSITIVE))
 (80 80 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (80 80 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (80 80 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (79 79 (:REWRITE FOLD-CONSTS-IN-+))
 (77 77 (:REWRITE HELPER-HELPER2))
 (77 77 (:REWRITE HELPER-HELPER))
 (64 64 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (64 64 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (62 62 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (62 62 (:REWRITE DEFAULT-UNARY-MINUS))
 (62 31 (:REWRITE PLUS-OF-MINUS-3-BV-5))
 (62 31 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (55 55 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (54 54 (:TYPE-PRESCRIPTION ALISTP))
 (54 54 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (54 54 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (54 54 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (54 54 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (51 51 (:REWRITE WFR-HACK5))
 (51 51 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (48 48 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (39 3 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (31 31 (:REWRITE USE-ALL-RATIONALP-2))
 (31 31 (:REWRITE USE-ALL-RATIONALP))
 (31 31 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (31 31 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (31 31 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (31 31 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (31 31 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (31 31 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (31 31 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (31 31 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (31 31 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (31 31 (:REWRITE DEFAULT-REALPART))
 (31 31 (:REWRITE DEFAULT-NUMERATOR))
 (31 31 (:REWRITE DEFAULT-IMAGPART))
 (31 31 (:REWRITE DEFAULT-DENOMINATOR))
 (30 15 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (30 15 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (30 15 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (30 15 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (30 15 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (16 16 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (16 16 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (15 15 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (15 15 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (15 15 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (12 12 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION BOOLEANP))
 (8 8 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (8 8 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (6 6 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (6 6 (:REWRITE CDR-CONS))
 (6 6 (:REWRITE CAR-CONS))
 (6 6 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (5 5 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (5 5 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (5 5 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (5 5 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 )
(NEED-TO-PEEL-OFF-BASE-CASEP
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-NTH-TERMS-REV)
(MAKE-NTH-TERMS)
(MY-MAKE-DEFTHM)
(DROP-UNMENTIONED-VARS-AND-THEIR-TERMS
 (14 7 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (14 7 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (7 7 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (7 7 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-ARG-N-ALLOWS-LAMBDAS
 (9295 13 (:DEFINITION ACL2-COUNT))
 (4967 16 (:DEFINITION INTEGER-ABS))
 (3884 68 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2401 176 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (2314 54 (:REWRITE LEN-OF-CDR-BETTER))
 (1856 8 (:DEFINITION LENGTH))
 (1785 81 (:REWRITE INEQ-HACK2))
 (1785 81 (:REWRITE INEQ-HACK))
 (847 24 (:REWRITE STR::CONSP-OF-EXPLODE))
 (616 22 (:REWRITE <-0-+-NEGATIVE-1))
 (603 17 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (588 307 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (588 307 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (584 15 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (574 73 (:REWRITE DEFAULT-CDR))
 (559 176 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (523 3 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (506 18 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (498 8 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (495 7 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (466 8 (:REWRITE EQUAL-CONSTANT-+))
 (458 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (363 58 (:REWRITE DEFAULT-CAR))
 (354 177 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (353 15 (:REWRITE USE-ALL-<-FOR-CAR))
 (339 339 (:TYPE-PRESCRIPTION NAT-LISTP))
 (283 283 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (270 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (265 55 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (262 16 (:REWRITE LIST::OPEN-EQUIV))
 (258 86 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (258 86 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (231 231 (:TYPE-PRESCRIPTION ALL-NATP))
 (204 122 (:REWRITE DEFAULT-+-2))
 (200 10 (:REWRITE ALL-NATP-OF-CDR))
 (176 120 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (166 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (154 12 (:REWRITE ALL-<-OF-CDR))
 (152 122 (:REWRITE DEFAULT-+-1))
 (141 141 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (136 136 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (130 5 (:REWRITE LIST::LEN-POS-REWRITE))
 (128 119 (:REWRITE DEFAULT-<-2))
 (122 122 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (120 120 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (120 120 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (120 120 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (120 120 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (120 120 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (120 120 (:META LEN-CONS-META-RULE))
 (120 119 (:REWRITE DEFAULT-<-1))
 (119 119 (:REWRITE USE-ALL-<-2))
 (119 119 (:REWRITE USE-ALL-<))
 (119 119 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (119 119 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (119 119 (:REWRITE DROP-LINEAR-HYPS2))
 (119 119 (:REWRITE DROP->-HYPS))
 (119 119 (:REWRITE DROP-<-HYPS))
 (119 119 (:REWRITE BOUND-WHEN-USB2))
 (119 119 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (119 119 (:REWRITE <-WHEN-BVLT))
 (119 119 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (119 119 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (119 119 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (119 119 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (119 119 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (119 119 (:REWRITE <-FROM-<=-FREE))
 (105 73 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (97 81 (:REWRITE NOT-<-WHEN-SBVLT))
 (92 92 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (92 1 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (86 86 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (86 43 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (83 81 (:REWRITE ARITH-HACK-CHEAP))
 (81 81 (:REWRITE USE-ALL-<=-2))
 (81 81 (:REWRITE USE-ALL-<=))
 (81 81 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (81 81 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (81 81 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (81 81 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (81 81 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (81 81 (:REWRITE DROP-LINEAR-HYPS3))
 (81 81 (:REWRITE DROP-<=-HYPS))
 (81 81 (:REWRITE BOUND-WHEN-USB))
 (81 81 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (81 81 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (80 16 (:REWRITE COMMUTATIVITY-OF-+))
 (77 19 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (75 75 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (75 75 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (75 1 (:DEFINITION STRIP-CARS))
 (69 7 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (68 68 (:REWRITE USE-ALL-CONSP-2))
 (68 68 (:REWRITE USE-ALL-CONSP))
 (68 68 (:REWRITE LEN-GIVES-CONSP))
 (68 68 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (68 68 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (68 68 (:REWRITE CONSP-FROM-LEN-BOUND))
 (67 2 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (61 61 (:TYPE-PRESCRIPTION ALL-<))
 (58 58 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (58 58 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (58 7 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (57 57 (:REWRITE CLR-DIFFERENTIAL))
 (54 54 (:REWRITE +-OF-MINUS))
 (51 51 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (50 49 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (46 18 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (45 1 (:REWRITE ACL2-COUNT-WHEN-MEMBER))
 (41 41 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (41 41 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (40 8 (:REWRITE HACK1))
 (39 1 (:REWRITE SUBSETP-CAR-MEMBER))
 (38 38 (:REWRITE <-OF-0-WHEN-<-FREE))
 (36 18 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (36 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (36 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (36 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (36 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (35 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (33 33 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (33 33 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (33 33 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (33 33 (:REWRITE IMPOSSIBLE-VALUE-2))
 (33 33 (:REWRITE IMPOSSIBLE-VALUE-1))
 (33 33 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (33 33 (:REWRITE EQUAL-WHEN-BVLT))
 (33 33 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (33 33 (:REWRITE EQUAL-WHEN-<-OF-+))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (30 15 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (28 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (24 24 (:REWRITE WFR-HACK5))
 (24 24 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (24 3 (:REWRITE USE-ALL-CDRS-RATIONALP-FOR-CAR))
 (23 2 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (22 22 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (22 22 (:REWRITE HELPER-HELPER2))
 (22 22 (:REWRITE HELPER-HELPER))
 (22 22 (:REWRITE FOLD-CONSTS-IN-+))
 (22 22 (:REWRITE +-COMBINE-CONSTANTS))
 (21 3 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (20 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (19 19 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (19 19 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (19 19 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (19 19 (:REWRITE ALL-<-TRANSITIVE))
 (18 18 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (17 17 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (16 16 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (16 16 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (16 16 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (16 16 (:REWRITE DEFAULT-UNARY-MINUS))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (16 8 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (15 15 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (14 14 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (14 7 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 4 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (12 4 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (9 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-HIT-COUNT-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE USE-ALL-RATIONALP-2))
 (8 8 (:REWRITE USE-ALL-RATIONALP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (8 8 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (8 8 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (8 8 (:REWRITE DEFAULT-REALPART))
 (8 8 (:REWRITE DEFAULT-NUMERATOR))
 (8 8 (:REWRITE DEFAULT-IMAGPART))
 (8 8 (:REWRITE DEFAULT-DENOMINATOR))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 8 (:REWRITE CDR-CONS))
 (8 8 (:REWRITE CAR-CONS))
 (7 7 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (6 6 (:TYPE-PRESCRIPTION HIT-COUNT-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION ALL-CDRS-RATIONALP))
 (6 6 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (6 3 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (5 5 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (5 5 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (3 3 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (3 3 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (3 3 (:REWRITE SUBSETP-TRANS2))
 (3 3 (:REWRITE SUBSETP-TRANS))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (3 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (2 1 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-AUX-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION WEAK-DAGP))
 (1 1 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE SUBSETP-MEMBER . 2))
 (1 1 (:REWRITE SUBSETP-MEMBER . 1))
 (1 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE <-OF-0-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 )
(GET-FUNCTION-ARGS-ALLOWS-LAMBDAS-AUX
 (16 9 (:REWRITE NOT-<-WHEN-SBVLT))
 (14 14 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (9 9 (:REWRITE USE-ALL-<=-2))
 (9 9 (:REWRITE USE-ALL-<=))
 (9 9 (:REWRITE USE-ALL-<-2))
 (9 9 (:REWRITE USE-ALL-<))
 (9 9 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (9 9 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (9 9 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (9 9 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (9 9 (:REWRITE INEQ-HACK2))
 (9 9 (:REWRITE INEQ-HACK))
 (9 9 (:REWRITE DROP-LINEAR-HYPS3))
 (9 9 (:REWRITE DROP-LINEAR-HYPS2))
 (9 9 (:REWRITE DROP->-HYPS))
 (9 9 (:REWRITE DROP-<=-HYPS))
 (9 9 (:REWRITE DROP-<-HYPS))
 (9 9 (:REWRITE DEFAULT-<-2))
 (9 9 (:REWRITE DEFAULT-<-1))
 (9 9 (:REWRITE BOUND-WHEN-USB2))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 9 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (9 9 (:REWRITE <-WHEN-BVLT))
 (9 9 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (9 9 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (9 9 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (9 9 (:REWRITE <-FROM-<=-FREE))
 (8 8 (:REWRITE DEFAULT-+-2))
 (8 8 (:REWRITE DEFAULT-+-1))
 (8 8 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (7 7 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 4 (:REWRITE USE-ALL-NATP-2))
 (4 4 (:REWRITE USE-ALL-NATP))
 (4 4 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE +-OF-MINUS))
 (3 3 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (3 3 (:REWRITE DROP-LINEAR-HYPS1))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (3 3 (:REWRITE BOUND-LEMMA))
 (3 3 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (3 3 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-IF-ARG1-SAFE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(GET-FUNCTION-ARGS-ALLOWS-LAMBDAS)
(GETPROPS-NON-NIL)
(IS-A-NICE-TAIL-FUNCTION
 (84 53 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (84 53 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (31 31 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (31 31 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-BODY-SCHEMA
 (22581 399 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (18066 84 (:DEFINITION INTEGER-ABS))
 (15807 426 (:REWRITE LEN-OF-CDR-BETTER))
 (9921 1143 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (9336 42 (:DEFINITION LENGTH))
 (4956 96 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (4734 36 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (4416 12 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (4320 114 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (4302 258 (:REWRITE INEQ-HACK2))
 (4302 258 (:REWRITE INEQ-HACK))
 (4248 42 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (4044 126 (:REWRITE STR::CONSP-OF-EXPLODE))
 (3803 416 (:REWRITE DEFAULT-CDR))
 (3597 96 (:REWRITE EQUAL-CONSTANT-+))
 (3501 96 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (2883 1143 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (2610 276 (:REWRITE DEFAULT-CAR))
 (2604 42 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (2157 96 (:REWRITE LIST::LIST-EQUIV-HACK))
 (2064 78 (:REWRITE ALL-NATP-OF-CDR))
 (2061 192 (:REWRITE LIST::OPEN-EQUIV))
 (2016 72 (:REWRITE <-0-+-NEGATIVE-1))
 (1806 30 (:REWRITE ALL-RATIONALP-OF-CDR))
 (1776 36 (:REWRITE USE-ALL-<-FOR-CAR))
 (1110 54 (:REWRITE ALL-<-OF-CDR))
 (1101 96 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (1080 738 (:REWRITE DEFAULT-+-2))
 (1009 510 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (1009 510 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (960 480 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (942 222 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (930 708 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (852 738 (:REWRITE DEFAULT-+-1))
 (829 829 (:TYPE-PRESCRIPTION NAT-LISTP))
 (804 804 (:TYPE-PRESCRIPTION ALL-NATP))
 (738 738 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (720 240 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (720 240 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (714 714 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (708 708 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (708 708 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (708 708 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (708 708 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (708 708 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (708 708 (:META LEN-CONS-META-RULE))
 (596 416 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (525 525 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (516 516 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (499 499 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (492 444 (:REWRITE DEFAULT-<-2))
 (480 96 (:REWRITE HACK1))
 (468 66 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (450 444 (:REWRITE DEFAULT-<-1))
 (444 444 (:REWRITE USE-ALL-<-2))
 (444 444 (:REWRITE USE-ALL-<))
 (444 444 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (444 444 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (444 444 (:REWRITE DROP-LINEAR-HYPS2))
 (444 444 (:REWRITE DROP->-HYPS))
 (444 444 (:REWRITE DROP-<-HYPS))
 (444 444 (:REWRITE BOUND-WHEN-USB2))
 (444 444 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (444 444 (:REWRITE <-WHEN-BVLT))
 (444 444 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (444 444 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (444 444 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (444 444 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (444 444 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (444 444 (:REWRITE <-FROM-<=-FREE))
 (432 6 (:DEFINITION SOME-EXPR-CALLS-FN))
 (426 426 (:REWRITE +-OF-MINUS))
 (420 84 (:REWRITE COMMUTATIVITY-OF-+))
 (408 18 (:REWRITE LIST::LEN-POS-REWRITE))
 (402 42 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (399 399 (:REWRITE USE-ALL-CONSP-2))
 (399 399 (:REWRITE USE-ALL-CONSP))
 (399 399 (:REWRITE LEN-GIVES-CONSP))
 (399 399 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (399 399 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (399 399 (:REWRITE CONSP-FROM-LEN-BOUND))
 (396 42 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (384 384 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (384 384 (:REWRITE CLR-DIFFERENTIAL))
 (363 363 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (342 258 (:REWRITE NOT-<-WHEN-SBVLT))
 (300 300 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (300 300 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (294 288 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (282 114 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (276 276 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (270 258 (:REWRITE ARITH-HACK-CHEAP))
 (258 258 (:REWRITE USE-ALL-<=-2))
 (258 258 (:REWRITE USE-ALL-<=))
 (258 258 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (258 258 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (258 258 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (258 258 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (258 258 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (258 258 (:REWRITE DROP-LINEAR-HYPS3))
 (258 258 (:REWRITE DROP-<=-HYPS))
 (258 258 (:REWRITE BOUND-WHEN-USB))
 (258 258 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (258 258 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (258 258 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (258 258 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (258 258 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (240 240 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (228 204 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (228 114 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (210 12 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (204 204 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (204 204 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (204 204 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (204 204 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (204 204 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (204 204 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (204 204 (:REWRITE IMPOSSIBLE-VALUE-2))
 (204 204 (:REWRITE IMPOSSIBLE-VALUE-1))
 (204 204 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (204 204 (:REWRITE EQUAL-WHEN-BVLT))
 (204 204 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (204 204 (:REWRITE EQUAL-WHEN-<-OF-+))
 (204 204 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (204 204 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (204 204 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (204 204 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (204 204 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (204 204 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (204 204 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (204 204 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (204 204 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (204 204 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (204 204 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (192 192 (:TYPE-PRESCRIPTION ALL-<))
 (192 96 (:REWRITE LIST::TRUE-LISTP-FIX))
 (192 96 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (192 96 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (192 96 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (186 186 (:REWRITE <-OF-0-WHEN-<-FREE))
 (150 30 (:REWRITE INTEGER-LISTP-OF-CDR))
 (150 24 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (138 24 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (117 9 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (114 114 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (96 96 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (96 96 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (96 96 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (96 96 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (96 96 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (96 96 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (96 96 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (96 96 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (96 96 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (90 30 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (90 30 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (84 84 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (84 84 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (84 84 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (84 84 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (84 84 (:REWRITE HELPER-HELPER2))
 (84 84 (:REWRITE HELPER-HELPER))
 (84 84 (:REWRITE FOLD-CONSTS-IN-+))
 (84 84 (:REWRITE DEFAULT-UNARY-MINUS))
 (84 84 (:REWRITE +-COMBINE-CONSTANTS))
 (84 42 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (84 42 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (72 36 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (72 36 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (66 66 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (66 66 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (66 66 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (66 66 (:REWRITE ALL-<-TRANSITIVE))
 (60 60 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (48 24 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (48 24 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (42 42 (:REWRITE USE-ALL-RATIONALP-2))
 (42 42 (:REWRITE USE-ALL-RATIONALP))
 (42 42 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (42 42 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (42 42 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (42 42 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (42 42 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (42 42 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (42 42 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (42 42 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (42 42 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (42 42 (:REWRITE DEFAULT-REALPART))
 (42 42 (:REWRITE DEFAULT-NUMERATOR))
 (42 42 (:REWRITE DEFAULT-IMAGPART))
 (42 42 (:REWRITE DEFAULT-DENOMINATOR))
 (42 42 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (36 36 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (30 30 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (30 30 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (24 24 (:TYPE-PRESCRIPTION ALISTP))
 (24 24 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (24 24 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (24 24 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (24 24 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (24 24 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (24 24 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (24 24 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (24 24 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (24 24 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (24 24 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (24 12 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (24 12 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (24 12 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (24 12 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (24 12 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (18 18 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (12 12 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (12 12 (:REWRITE WFR-HACK5))
 (12 12 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (12 12 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (12 12 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:TYPE-PRESCRIPTION BOOLEANP))
 (6 6 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (6 6 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (6 6 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (6 6 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (6 6 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(MAKE-NEW-BASE-CASE-WITH-SCHEMA
 (7641 135 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (6022 28 (:DEFINITION INTEGER-ABS))
 (5315 144 (:REWRITE LEN-OF-CDR-BETTER))
 (3573 391 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (3112 14 (:DEFINITION LENGTH))
 (1652 32 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (1578 12 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (1472 4 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (1440 38 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1434 86 (:REWRITE INEQ-HACK2))
 (1434 86 (:REWRITE INEQ-HACK))
 (1416 14 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1348 42 (:REWRITE STR::CONSP-OF-EXPLODE))
 (1267 138 (:REWRITE DEFAULT-CDR))
 (1199 32 (:REWRITE EQUAL-CONSTANT-+))
 (1167 32 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (971 391 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (868 14 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (864 86 (:REWRITE DEFAULT-CAR))
 (728 26 (:REWRITE <-0-+-NEGATIVE-1))
 (719 32 (:REWRITE LIST::LIST-EQUIV-HACK))
 (688 26 (:REWRITE ALL-NATP-OF-CDR))
 (687 64 (:REWRITE LIST::OPEN-EQUIV))
 (602 10 (:REWRITE ALL-RATIONALP-OF-CDR))
 (592 12 (:REWRITE USE-ALL-<-FOR-CAR))
 (444 229 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (444 229 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (370 18 (:REWRITE ALL-<-OF-CDR))
 (367 32 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (362 248 (:REWRITE DEFAULT-+-2))
 (328 164 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (325 325 (:TYPE-PRESCRIPTION NAT-LISTP))
 (318 244 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (314 74 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (286 248 (:REWRITE DEFAULT-+-1))
 (272 272 (:TYPE-PRESCRIPTION ALL-NATP))
 (248 248 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (246 82 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (246 82 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (244 244 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (244 244 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (244 244 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (244 244 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (244 244 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (244 244 (:META LEN-CONS-META-RULE))
 (238 238 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (215 215 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (196 138 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (177 177 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (176 176 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (166 150 (:REWRITE DEFAULT-<-2))
 (160 32 (:REWRITE HACK1))
 (156 22 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (152 150 (:REWRITE DEFAULT-<-1))
 (150 150 (:REWRITE USE-ALL-<-2))
 (150 150 (:REWRITE USE-ALL-<))
 (150 150 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (150 150 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (150 150 (:REWRITE DROP-LINEAR-HYPS2))
 (150 150 (:REWRITE DROP->-HYPS))
 (150 150 (:REWRITE DROP-<-HYPS))
 (150 150 (:REWRITE BOUND-WHEN-USB2))
 (150 150 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (150 150 (:REWRITE <-WHEN-BVLT))
 (150 150 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (150 150 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (150 150 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (150 150 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (150 150 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (150 150 (:REWRITE <-FROM-<=-FREE))
 (144 144 (:REWRITE +-OF-MINUS))
 (140 28 (:REWRITE COMMUTATIVITY-OF-+))
 (136 6 (:REWRITE LIST::LEN-POS-REWRITE))
 (135 135 (:REWRITE USE-ALL-CONSP-2))
 (135 135 (:REWRITE USE-ALL-CONSP))
 (135 135 (:REWRITE LEN-GIVES-CONSP))
 (135 135 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (135 135 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (135 135 (:REWRITE CONSP-FROM-LEN-BOUND))
 (134 14 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (132 14 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (128 128 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (126 126 (:REWRITE CLR-DIFFERENTIAL))
 (123 123 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (114 86 (:REWRITE NOT-<-WHEN-SBVLT))
 (98 98 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (98 98 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (94 94 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (94 38 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (90 86 (:REWRITE ARITH-HACK-CHEAP))
 (86 86 (:REWRITE USE-ALL-<=-2))
 (86 86 (:REWRITE USE-ALL-<=))
 (86 86 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (86 86 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (86 86 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (86 86 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (86 86 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (86 86 (:REWRITE DROP-LINEAR-HYPS3))
 (86 86 (:REWRITE DROP-<=-HYPS))
 (86 86 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (86 86 (:REWRITE BOUND-WHEN-USB))
 (86 86 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (86 86 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (86 86 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (86 86 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (86 86 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (82 82 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (76 38 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (74 66 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (70 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (66 66 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (66 66 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (66 66 (:REWRITE IMPOSSIBLE-VALUE-2))
 (66 66 (:REWRITE IMPOSSIBLE-VALUE-1))
 (66 66 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (66 66 (:REWRITE EQUAL-WHEN-BVLT))
 (66 66 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (66 66 (:REWRITE EQUAL-WHEN-<-OF-+))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (64 64 (:TYPE-PRESCRIPTION ALL-<))
 (64 64 (:REWRITE <-OF-0-WHEN-<-FREE))
 (64 32 (:REWRITE LIST::TRUE-LISTP-FIX))
 (64 32 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (64 32 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (64 32 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (50 10 (:REWRITE INTEGER-LISTP-OF-CDR))
 (50 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (46 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (39 3 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (38 38 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (32 32 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (32 32 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (32 32 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (32 32 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (32 32 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (32 32 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (32 32 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (32 32 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (30 10 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (30 10 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (28 28 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (28 28 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (28 28 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (28 28 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (28 28 (:REWRITE HELPER-HELPER2))
 (28 28 (:REWRITE HELPER-HELPER))
 (28 28 (:REWRITE FOLD-CONSTS-IN-+))
 (28 28 (:REWRITE DEFAULT-UNARY-MINUS))
 (28 28 (:REWRITE +-COMBINE-CONSTANTS))
 (28 14 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (28 14 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (24 12 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (24 12 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (22 22 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (22 22 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (22 22 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (22 22 (:REWRITE ALL-<-TRANSITIVE))
 (20 20 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (14 14 (:REWRITE USE-ALL-RATIONALP-2))
 (14 14 (:REWRITE USE-ALL-RATIONALP))
 (14 14 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (14 14 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (14 14 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (14 14 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (14 14 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (14 14 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (14 14 (:REWRITE DEFAULT-REALPART))
 (14 14 (:REWRITE DEFAULT-NUMERATOR))
 (14 14 (:REWRITE DEFAULT-IMAGPART))
 (14 14 (:REWRITE DEFAULT-DENOMINATOR))
 (14 14 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (12 12 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (10 10 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (10 10 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (8 8 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 4 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (6 6 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (4 4 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (2 2 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(MAKE-NEW-REC-CASE-WITH-SCHEMA
 (7641 135 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (6022 28 (:DEFINITION INTEGER-ABS))
 (5315 144 (:REWRITE LEN-OF-CDR-BETTER))
 (3573 391 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (3112 14 (:DEFINITION LENGTH))
 (1652 32 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (1578 12 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (1472 4 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (1440 38 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1434 86 (:REWRITE INEQ-HACK2))
 (1434 86 (:REWRITE INEQ-HACK))
 (1416 14 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1348 42 (:REWRITE STR::CONSP-OF-EXPLODE))
 (1267 138 (:REWRITE DEFAULT-CDR))
 (1199 32 (:REWRITE EQUAL-CONSTANT-+))
 (1167 32 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (971 391 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (868 14 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (864 86 (:REWRITE DEFAULT-CAR))
 (728 26 (:REWRITE <-0-+-NEGATIVE-1))
 (719 32 (:REWRITE LIST::LIST-EQUIV-HACK))
 (688 26 (:REWRITE ALL-NATP-OF-CDR))
 (687 64 (:REWRITE LIST::OPEN-EQUIV))
 (602 10 (:REWRITE ALL-RATIONALP-OF-CDR))
 (592 12 (:REWRITE USE-ALL-<-FOR-CAR))
 (444 229 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (444 229 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (370 18 (:REWRITE ALL-<-OF-CDR))
 (367 32 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (362 248 (:REWRITE DEFAULT-+-2))
 (328 164 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (325 325 (:TYPE-PRESCRIPTION NAT-LISTP))
 (318 244 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (314 74 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (286 248 (:REWRITE DEFAULT-+-1))
 (272 272 (:TYPE-PRESCRIPTION ALL-NATP))
 (248 248 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (246 82 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (246 82 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (244 244 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (244 244 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (244 244 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (244 244 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (244 244 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (244 244 (:META LEN-CONS-META-RULE))
 (238 238 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (215 215 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (196 138 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (177 177 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (176 176 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (166 150 (:REWRITE DEFAULT-<-2))
 (160 32 (:REWRITE HACK1))
 (156 22 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (152 150 (:REWRITE DEFAULT-<-1))
 (150 150 (:REWRITE USE-ALL-<-2))
 (150 150 (:REWRITE USE-ALL-<))
 (150 150 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (150 150 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (150 150 (:REWRITE DROP-LINEAR-HYPS2))
 (150 150 (:REWRITE DROP->-HYPS))
 (150 150 (:REWRITE DROP-<-HYPS))
 (150 150 (:REWRITE BOUND-WHEN-USB2))
 (150 150 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (150 150 (:REWRITE <-WHEN-BVLT))
 (150 150 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (150 150 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (150 150 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (150 150 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (150 150 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (150 150 (:REWRITE <-FROM-<=-FREE))
 (144 144 (:REWRITE +-OF-MINUS))
 (140 28 (:REWRITE COMMUTATIVITY-OF-+))
 (136 6 (:REWRITE LIST::LEN-POS-REWRITE))
 (135 135 (:REWRITE USE-ALL-CONSP-2))
 (135 135 (:REWRITE USE-ALL-CONSP))
 (135 135 (:REWRITE LEN-GIVES-CONSP))
 (135 135 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (135 135 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (135 135 (:REWRITE CONSP-FROM-LEN-BOUND))
 (134 14 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (132 14 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (128 128 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (126 126 (:REWRITE CLR-DIFFERENTIAL))
 (123 123 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (114 86 (:REWRITE NOT-<-WHEN-SBVLT))
 (98 98 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (98 98 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (94 94 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (94 38 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (90 86 (:REWRITE ARITH-HACK-CHEAP))
 (86 86 (:REWRITE USE-ALL-<=-2))
 (86 86 (:REWRITE USE-ALL-<=))
 (86 86 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (86 86 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (86 86 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (86 86 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (86 86 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (86 86 (:REWRITE DROP-LINEAR-HYPS3))
 (86 86 (:REWRITE DROP-<=-HYPS))
 (86 86 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (86 86 (:REWRITE BOUND-WHEN-USB))
 (86 86 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (86 86 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (86 86 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (86 86 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (86 86 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (82 82 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (76 38 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (74 66 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (70 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (66 66 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (66 66 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (66 66 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (66 66 (:REWRITE IMPOSSIBLE-VALUE-2))
 (66 66 (:REWRITE IMPOSSIBLE-VALUE-1))
 (66 66 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (66 66 (:REWRITE EQUAL-WHEN-BVLT))
 (66 66 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (66 66 (:REWRITE EQUAL-WHEN-<-OF-+))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (66 66 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (66 66 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (64 64 (:TYPE-PRESCRIPTION ALL-<))
 (64 64 (:REWRITE <-OF-0-WHEN-<-FREE))
 (64 32 (:REWRITE LIST::TRUE-LISTP-FIX))
 (64 32 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (64 32 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (64 32 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (50 10 (:REWRITE INTEGER-LISTP-OF-CDR))
 (50 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (46 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (39 3 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (38 38 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (32 32 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (32 32 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (32 32 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (32 32 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (32 32 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (32 32 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (32 32 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (32 32 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (30 10 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (30 10 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (28 28 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (28 28 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (28 28 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (28 28 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (28 28 (:REWRITE HELPER-HELPER2))
 (28 28 (:REWRITE HELPER-HELPER))
 (28 28 (:REWRITE FOLD-CONSTS-IN-+))
 (28 28 (:REWRITE DEFAULT-UNARY-MINUS))
 (28 28 (:REWRITE +-COMBINE-CONSTANTS))
 (28 14 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (28 14 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (24 12 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (24 12 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (22 22 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (22 22 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (22 22 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (22 22 (:REWRITE ALL-<-TRANSITIVE))
 (20 20 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (14 14 (:REWRITE USE-ALL-RATIONALP-2))
 (14 14 (:REWRITE USE-ALL-RATIONALP))
 (14 14 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (14 14 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (14 14 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (14 14 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (14 14 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (14 14 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (14 14 (:REWRITE DEFAULT-REALPART))
 (14 14 (:REWRITE DEFAULT-NUMERATOR))
 (14 14 (:REWRITE DEFAULT-IMAGPART))
 (14 14 (:REWRITE DEFAULT-DENOMINATOR))
 (14 14 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (12 12 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (10 10 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (10 10 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (8 8 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (8 8 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 4 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (6 6 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (4 4 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (2 2 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(CLEAN-UP-IFS
 (37370 650 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (27032 128 (:DEFINITION INTEGER-ABS))
 (25964 712 (:REWRITE LEN-OF-CDR-BETTER))
 (15722 1914 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (14240 64 (:DEFINITION LENGTH))
 (7520 652 (:REWRITE DEFAULT-CDR))
 (7000 148 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (6910 434 (:REWRITE DEFAULT-CAR))
 (6684 60 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (6594 394 (:REWRITE INEQ-HACK2))
 (6594 394 (:REWRITE INEQ-HACK))
 (6196 20 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (6176 192 (:REWRITE STR::CONSP-OF-EXPLODE))
 (6048 172 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (5988 160 (:REWRITE EQUAL-CONSTANT-+))
 (5940 64 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (5828 160 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (4650 1914 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (3968 64 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (3588 160 (:REWRITE LIST::LIST-EQUIV-HACK))
 (3584 128 (:REWRITE <-0-+-NEGATIVE-1))
 (3428 320 (:REWRITE LIST::OPEN-EQUIV))
 (2804 112 (:REWRITE ALL-NATP-OF-CDR))
 (2696 60 (:REWRITE USE-ALL-<-FOR-CAR))
 (2682 1352 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2682 1352 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2428 44 (:REWRITE ALL-RATIONALP-OF-CDR))
 (1838 1838 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1828 160 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (1714 1190 (:REWRITE DEFAULT-+-2))
 (1632 784 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (1604 84 (:REWRITE ALL-<-OF-CDR))
 (1526 1174 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (1468 340 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (1364 1190 (:REWRITE DEFAULT-+-1))
 (1330 1330 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1276 1276 (:TYPE-PRESCRIPTION ALL-NATP))
 (1190 1190 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (1174 1174 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (1174 1174 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (1174 1174 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (1174 1174 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (1174 1174 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (1174 1174 (:META LEN-CONS-META-RULE))
 (1152 384 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (1152 384 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (1088 1088 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (976 16 (:REWRITE LIST::EQUAL-CONS-CASES))
 (924 652 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (842 842 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (834 834 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (800 160 (:REWRITE HACK1))
 (780 706 (:REWRITE DEFAULT-<-2))
 (716 706 (:REWRITE DEFAULT-<-1))
 (712 712 (:REWRITE +-OF-MINUS))
 (706 706 (:REWRITE USE-ALL-<-2))
 (706 706 (:REWRITE USE-ALL-<))
 (706 706 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (706 706 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (706 706 (:REWRITE DROP-LINEAR-HYPS2))
 (706 706 (:REWRITE DROP->-HYPS))
 (706 706 (:REWRITE DROP-<-HYPS))
 (706 706 (:REWRITE BOUND-WHEN-USB2))
 (706 706 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (706 706 (:REWRITE <-WHEN-BVLT))
 (706 706 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (706 706 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (706 706 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (706 706 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (706 706 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (706 706 (:REWRITE <-FROM-<=-FREE))
 (684 104 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (650 650 (:REWRITE USE-ALL-CONSP-2))
 (650 650 (:REWRITE USE-ALL-CONSP))
 (650 650 (:REWRITE LEN-GIVES-CONSP))
 (650 650 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (650 650 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (650 650 (:REWRITE CONSP-FROM-LEN-BOUND))
 (640 640 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (640 128 (:REWRITE COMMUTATIVITY-OF-+))
 (620 24 (:REWRITE LIST::LEN-POS-REWRITE))
 (616 64 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (604 604 (:REWRITE CLR-DIFFERENTIAL))
 (588 64 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (586 586 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (522 394 (:REWRITE NOT-<-WHEN-SBVLT))
 (476 476 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (476 476 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (444 444 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (434 434 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (428 172 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (414 394 (:REWRITE ARITH-HACK-CHEAP))
 (400 56 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (396 316 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (394 394 (:REWRITE USE-ALL-<=-2))
 (394 394 (:REWRITE USE-ALL-<=))
 (394 394 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (394 394 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (394 394 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (394 394 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (394 394 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (394 394 (:REWRITE DROP-LINEAR-HYPS3))
 (394 394 (:REWRITE DROP-<=-HYPS))
 (394 394 (:REWRITE BOUND-WHEN-USB))
 (394 394 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (394 394 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (394 394 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (394 394 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (394 394 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (384 384 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (380 56 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (344 172 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (320 160 (:REWRITE LIST::TRUE-LISTP-FIX))
 (320 160 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (320 160 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (320 160 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (320 20 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (316 316 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (316 316 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (316 316 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (316 316 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (316 316 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (316 316 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (316 316 (:REWRITE IMPOSSIBLE-VALUE-2))
 (316 316 (:REWRITE IMPOSSIBLE-VALUE-1))
 (316 316 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (316 316 (:REWRITE EQUAL-WHEN-BVLT))
 (316 316 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (316 316 (:REWRITE EQUAL-WHEN-<-OF-+))
 (316 316 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (316 316 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (316 316 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (316 316 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (316 316 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (316 316 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (316 316 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (316 316 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (316 316 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (316 316 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (316 316 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (312 312 (:REWRITE <-OF-0-WHEN-<-FREE))
 (308 308 (:TYPE-PRESCRIPTION ALL-<))
 (260 260 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (252 84 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (252 84 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (240 240 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (220 44 (:REWRITE INTEGER-LISTP-OF-CDR))
 (172 172 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (160 160 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (160 160 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (160 160 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (160 160 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (160 160 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (160 160 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (160 160 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (156 12 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (148 148 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (128 128 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (128 128 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (128 128 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (128 128 (:REWRITE HELPER-HELPER2))
 (128 128 (:REWRITE HELPER-HELPER))
 (128 128 (:REWRITE FOLD-CONSTS-IN-+))
 (128 128 (:REWRITE DEFAULT-UNARY-MINUS))
 (128 128 (:REWRITE +-COMBINE-CONSTANTS))
 (128 64 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (128 64 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (120 60 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (120 60 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (116 116 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (112 56 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (112 56 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (112 16 (:REWRITE EQUAL-OF-CONS-WHEN-EQUAL-NTH-0-CHEAP))
 (104 104 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (104 104 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (104 104 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (104 104 (:REWRITE ALL-<-TRANSITIVE))
 (64 64 (:REWRITE USE-ALL-RATIONALP-2))
 (64 64 (:REWRITE USE-ALL-RATIONALP))
 (64 64 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (64 64 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (64 64 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (64 64 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (64 64 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (64 64 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (64 64 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (64 64 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (64 64 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (64 64 (:REWRITE DEFAULT-REALPART))
 (64 64 (:REWRITE DEFAULT-NUMERATOR))
 (64 64 (:REWRITE DEFAULT-IMAGPART))
 (64 64 (:REWRITE DEFAULT-DENOMINATOR))
 (64 64 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (60 60 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (56 56 (:TYPE-PRESCRIPTION ALISTP))
 (56 56 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (56 56 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (56 56 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (56 56 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (44 44 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (44 44 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (40 40 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (40 40 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (40 40 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (40 40 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (40 40 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (40 40 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (40 20 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (40 20 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (40 20 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (40 20 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (40 20 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (24 24 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (20 20 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (20 20 (:REWRITE WFR-HACK5))
 (20 20 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (20 20 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (20 20 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (16 16 (:REWRITE EQUAL-OF-CONS-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONS))
 (10 10 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (10 10 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (10 10 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (10 10 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (10 10 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(COMBINE-BASE-CASES-OF-TAIL-FN)
(ADD-ARGS-NOT-DONE
 (1078 410 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (410 20 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (380 380 (:TYPE-PRESCRIPTION NAT-LISTP))
 (340 11 (:REWRITE INEQ-HACK2))
 (340 11 (:REWRITE INEQ-HACK))
 (332 314 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (314 314 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (230 3 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-ALL-<))
 (221 21 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (146 12 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (140 5 (:REWRITE <-0-+-NEGATIVE-1))
 (115 5 (:REWRITE LEN-OF-CDR-BETTER))
 (108 108 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-DIMENSIONS))
 (86 11 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (82 2 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (82 2 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (75 75 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (65 14 (:REWRITE DEFAULT-<-1))
 (56 5 (:REWRITE ALL-<-OF-ALEN1-WHEN-PSEUDO-DAG-ARRAYP-LIST))
 (49 9 (:REWRITE USE-ALL-<-FOR-CAR))
 (46 46 (:TYPE-PRESCRIPTION ALL-<))
 (39 2 (:REWRITE LIST::LEN-POS-REWRITE))
 (30 9 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-WHEN-ALL-DARGP-LESS-THAN-SPECIAL))
 (30 6 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-<-2))
 (29 21 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (28 14 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (28 2 (:REWRITE ALL-<-OF-CDR))
 (26 13 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (26 13 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (26 6 (:REWRITE USE-ALL-<=-FOR-CAR))
 (26 2 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-OF-CDR))
 (24 16 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (23 11 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (23 5 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (22 11 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (21 21 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (21 7 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (21 7 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (20 20 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (20 20 (:REWRITE USE-ALL-CONSP-2))
 (20 20 (:REWRITE USE-ALL-CONSP))
 (20 20 (:REWRITE LEN-GIVES-CONSP))
 (20 20 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (20 20 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (20 20 (:REWRITE CONSP-FROM-LEN-BOUND))
 (18 18 (:TYPE-PRESCRIPTION PSEUDO-DAG-ARRAYP-LIST))
 (18 18 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (18 18 (:TYPE-PRESCRIPTION ALL-NATP))
 (16 16 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (16 16 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (16 16 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (16 16 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (16 16 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (16 16 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (16 16 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (16 16 (:REWRITE DROP-LINEAR-HYPS2))
 (16 16 (:REWRITE DROP->-HYPS))
 (16 16 (:REWRITE DROP-<-HYPS))
 (16 16 (:REWRITE BOUND-WHEN-USB2))
 (16 16 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (16 16 (:REWRITE <-WHEN-BVLT))
 (16 16 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (16 16 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (16 16 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (16 16 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (16 16 (:REWRITE <-FROM-<=-FREE))
 (16 16 (:META LEN-CONS-META-RULE))
 (16 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (16 8 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (15 13 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (14 14 (:REWRITE USE-ALL-<-2))
 (14 14 (:REWRITE USE-ALL-<))
 (14 14 (:REWRITE DEFAULT-<-2))
 (13 13 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (13 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (13 13 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (13 13 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (13 12 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (13 11 (:REWRITE NOT-<-WHEN-SBVLT))
 (13 10 (:REWRITE DEFAULT-+-2))
 (13 1 (:REWRITE <-OF-CAR-AND-ALEN1-WHEN-PSEUDO-DAG-ARRAYP-LIST))
 (12 12 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (12 12 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (12 12 (:REWRITE ALL-<-TRANSITIVE))
 (12 11 (:REWRITE ARITH-HACK-CHEAP))
 (12 4 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (11 11 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (11 11 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (11 11 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (11 11 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (11 11 (:REWRITE DROP-LINEAR-HYPS3))
 (11 11 (:REWRITE DROP-<=-HYPS))
 (11 11 (:REWRITE BOUND-WHEN-USB))
 (11 11 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (11 11 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (10 10 (:REWRITE USE-ALL-<=-2))
 (10 10 (:REWRITE USE-ALL-<=))
 (10 10 (:REWRITE DEFAULT-+-1))
 (10 10 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (10 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (9 9 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-WHEN-ALL-DARGP-LESS-THAN-SPECIAL-ALT))
 (9 9 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-WHEN-ALL-DARGP-LESS-THAN))
 (9 9 (:REWRITE DEFAULT-CDR))
 (9 9 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (9 1 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (8 8 (:TYPE-PRESCRIPTION ALL-<=))
 (7 7 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAG-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (6 3 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-ALL-MYQUOTEP-CHEAP))
 (6 3 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-ALL-DARGP-LESS-THAN-OF-CDR-CHEAP))
 (6 1 (:REWRITE <-OF-CAR-AND-ALEN1))
 (5 5 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (5 5 (:REWRITE <-OF-0-WHEN-<-FREE))
 (5 5 (:REWRITE +-OF-MINUS))
 (4 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (4 4 (:REWRITE ARRAY1P-WHEN-TERM-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-SUPPORTERS-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-SIZE-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-RESULT-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-RENAMING-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-PSEUDO-DAG-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-EVAL-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-DEPTH-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-CONTEXT-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-BINDING-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE ALL-<=-WHEN-ALL-<))
 (3 3 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (3 3 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (3 3 (:REWRITE PSEUDO-DAG-ARRAYP-MONOTONE))
 (3 3 (:REWRITE DEFAULT-CAR))
 (3 3 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (3 3 (:REWRITE ALL-DARGP-LESS-THAN-MONOTONE))
 (2 2 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (2 2 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (2 2 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE ALL-<=-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-<=-WHEN-NOT-CONSP))
 (2 2 (:REWRITE ALL-<=-WHEN-<=-AND-DECREASINGP))
 (2 2 (:REWRITE ALL-<=-MONOTONE))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 1 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (2 1 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (1 1 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS))
 (1 1 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1 1 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-NOT-CONSP))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:LINEAR POSITION-EQUAL-BOUND))
 )
(GET-VALS-OF-ARGS
 (2076 732 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1054 25 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (702 702 (:TYPE-PRESCRIPTION NAT-LISTP))
 (379 12 (:REWRITE <-0-+-NEGATIVE-1))
 (340 11 (:REWRITE INEQ-HACK2))
 (340 11 (:REWRITE INEQ-HACK))
 (287 12 (:REWRITE LEN-OF-CDR-BETTER))
 (129 3 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-ALL-<))
 (108 108 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-DIMENSIONS))
 (86 11 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (78 11 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (78 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (75 75 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (73 57 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (73 22 (:REWRITE DEFAULT-<-1))
 (61 45 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (56 28 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (49 9 (:REWRITE USE-ALL-<-FOR-CAR))
 (45 45 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (45 45 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (45 45 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (45 45 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (45 45 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (45 45 (:META LEN-CONS-META-RULE))
 (44 44 (:TYPE-PRESCRIPTION ALL-<))
 (42 14 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (42 14 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (36 36 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (32 32 (:TYPE-PRESCRIPTION ALL-NATP))
 (30 6 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-<-2))
 (30 4 (:REWRITE ALL-<-OF-ALEN1-WHEN-PSEUDO-DAG-ARRAYP-LIST))
 (26 6 (:REWRITE USE-ALL-<=-FOR-CAR))
 (25 25 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (25 25 (:REWRITE USE-ALL-CONSP-2))
 (25 25 (:REWRITE USE-ALL-CONSP))
 (25 25 (:REWRITE LEN-GIVES-CONSP))
 (25 25 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (25 25 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (25 25 (:REWRITE CONSP-FROM-LEN-BOUND))
 (24 24 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (24 24 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (24 24 (:REWRITE DROP-LINEAR-HYPS2))
 (24 24 (:REWRITE DROP->-HYPS))
 (24 24 (:REWRITE DROP-<-HYPS))
 (24 24 (:REWRITE BOUND-WHEN-USB2))
 (24 24 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (24 24 (:REWRITE <-WHEN-BVLT))
 (24 24 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (24 24 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (24 24 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (24 24 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (24 24 (:REWRITE <-FROM-<=-FREE))
 (23 22 (:REWRITE DEFAULT-<-2))
 (23 11 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (23 5 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (22 22 (:REWRITE USE-ALL-<-2))
 (22 22 (:REWRITE USE-ALL-<))
 (22 11 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (18 16 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (18 9 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (18 9 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (18 9 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (17 15 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-CDR))
 (15 15 (:REWRITE DEFAULT-+-1))
 (15 15 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (15 9 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (14 14 (:TYPE-PRESCRIPTION PSEUDO-DAG-ARRAYP-LIST))
 (14 14 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (14 14 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (14 14 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (14 7 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-WHEN-ALL-DARGP-LESS-THAN-SPECIAL))
 (14 1 (:REWRITE ALL-<-OF-CDR))
 (13 13 (:REWRITE <-OF-0-WHEN-<-FREE))
 (13 11 (:REWRITE NOT-<-WHEN-SBVLT))
 (13 1 (:REWRITE <-OF-CAR-AND-ALEN1-WHEN-PSEUDO-DAG-ARRAYP-LIST))
 (12 12 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (12 12 (:REWRITE +-OF-MINUS))
 (12 11 (:REWRITE ARITH-HACK-CHEAP))
 (12 11 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (11 11 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (11 11 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (11 11 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (11 11 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (11 11 (:REWRITE DROP-LINEAR-HYPS3))
 (11 11 (:REWRITE DROP-<=-HYPS))
 (11 11 (:REWRITE BOUND-WHEN-USB))
 (11 11 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (11 11 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (11 11 (:REWRITE ALL-<-TRANSITIVE))
 (11 11 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (11 11 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (10 10 (:REWRITE USE-ALL-<=-2))
 (10 10 (:REWRITE USE-ALL-<=))
 (10 4 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (10 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (9 9 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (9 9 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (9 9 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (9 9 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (9 9 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (9 1 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (8 8 (:TYPE-PRESCRIPTION ALL-<=))
 (8 8 (:REWRITE DEFAULT-CAR))
 (8 8 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (7 7 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-WHEN-ALL-DARGP-LESS-THAN-SPECIAL-ALT))
 (7 7 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-WHEN-ALL-DARGP-LESS-THAN))
 (6 6 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (6 6 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (6 6 (:LINEAR ARRAY2P-LINEAR))
 (6 3 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (6 3 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-ALL-MYQUOTEP-CHEAP))
 (6 3 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-ALL-DARGP-LESS-THAN-OF-CDR-CHEAP))
 (6 1 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-OF-CDR))
 (6 1 (:REWRITE <-OF-CAR-AND-ALEN1))
 (4 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (4 4 (:REWRITE ARRAY1P-WHEN-TERM-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-SUPPORTERS-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-SIZE-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-RESULT-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-RENAMING-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-PSEUDO-DAG-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-EVAL-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-DEPTH-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-CONTEXT-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-BINDING-ARRAYP))
 (4 4 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE ALL-<=-WHEN-ALL-<))
 (3 3 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (3 3 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (3 3 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (3 3 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (3 3 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (3 3 (:REWRITE ALL-DARGP-LESS-THAN-MONOTONE))
 (3 3 (:LINEAR POSITION-EQUAL-BOUND))
 (2 2 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (2 2 (:TYPE-PRESCRIPTION PSEUDO-DAG-ARRAYP))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (2 2 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-DARGP-LESS-THAN-WHEN-NOT-CONSP))
 (2 2 (:REWRITE ALL-<=-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-<=-WHEN-NOT-CONSP))
 (2 2 (:REWRITE ALL-<=-WHEN-<=-AND-DECREASINGP))
 (2 2 (:REWRITE ALL-<=-MONOTONE))
 (2 1 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (2 1 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (2 1 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (1 1 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (1 1 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS))
 (1 1 (:REWRITE PSEUDO-DAG-ARRAYP-MONOTONE))
 (1 1 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1 1 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (1 1 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 )
(TAG-NOT-DONE-NODES-AS-UNUSED
 (28 14 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (14 14 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (14 14 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (2 2 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (2 2 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (2 2 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (2 2 (:REWRITE INEQ-HACK2))
 (2 2 (:REWRITE INEQ-HACK))
 (2 2 (:REWRITE DROP-LINEAR-HYPS3))
 (2 2 (:REWRITE DROP-LINEAR-HYPS2))
 (2 2 (:REWRITE ARITH-HACK-CHEAP))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (2 1 (:REWRITE NOT-<-WHEN-SBVLT))
 (1 1 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USE-ALL-<=-2))
 (1 1 (:REWRITE USE-ALL-<=))
 (1 1 (:REWRITE USE-ALL-<-2))
 (1 1 (:REWRITE USE-ALL-<))
 (1 1 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (1 1 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (1 1 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (1 1 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (1 1 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE DROP->-HYPS))
 (1 1 (:REWRITE DROP-<=-HYPS))
 (1 1 (:REWRITE DROP-<-HYPS))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE BOUND-WHEN-USB2))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 (1 1 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (1 1 (:REWRITE <-WHEN-BVLT))
 (1 1 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (1 1 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (1 1 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (1 1 (:REWRITE <-FROM-<=-FREE))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(EVALUATE-TEST-CASE)
(GEN-RANDOM-INTEGER-IN-RANGE
 (1685 18 (:REWRITE MOD-WHEN-<))
 (927 9 (:REWRITE COLLECT-CONSTANTS-<-/-TWO))
 (844 52 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (791 1 (:REWRITE MOVE-NEGATIVE-ADDEND-2))
 (564 18 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (444 4 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (432 4 (:LINEAR MOD-UPPER-BOUND-LINEAR))
 (416 4 (:LINEAR MOD-BOUND-LINEAR-ARG2-STRONG))
 (416 4 (:LINEAR MOD-BOUND-LINEAR-ARG2))
 (399 3 (:REWRITE MULTIPLE-WHEN-<=))
 (315 1 (:REWRITE MOD-OF-MOD-BASES-MULTIPLE-ALT))
 (253 18 (:REWRITE MOD-WHEN-MULTIPLE))
 (231 2 (:REWRITE MOVE-NEGATIVE-ADDEND-1))
 (203 6 (:REWRITE /R-WHEN-ABS-NUMERATOR=1))
 (189 9 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (170 4 (:REWRITE <-OF-0-WHEN-<-FREE))
 (164 2 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (152 32 (:REWRITE INEQ-HACK2))
 (152 32 (:REWRITE INEQ-HACK))
 (94 4 (:REWRITE EQUAL-OF-+-OF-MINUS-ALT-32))
 (90 18 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (90 18 (:REWRITE COMMUTATIVITY-OF-*-WHEN-CONSTANT))
 (90 4 (:REWRITE EQUAL-OF-+-OF-MINUS-ALT))
 (86 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (72 18 (:REWRITE FOLD-CONSTS-IN-*))
 (58 32 (:REWRITE ARITH-HACK-CHEAP))
 (57 34 (:REWRITE DEFAULT-<-2))
 (55 55 (:REWRITE DROP-LINEAR-HYPS2))
 (55 55 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (55 55 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (55 5 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (54 54 (:REWRITE DROP->-HYPS))
 (54 54 (:REWRITE DROP-<-HYPS))
 (53 30 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (52 52 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (52 52 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (52 52 (:REWRITE <-FROM-<=-FREE))
 (52 26 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (50 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (49 21 (:REWRITE INTEGERP-OF-*))
 (43 43 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (43 43 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (41 22 (:REWRITE DEFAULT-*-2))
 (39 18 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (39 18 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (39 18 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (39 18 (:REWRITE MOD-WHEN-<-OF-0))
 (39 15 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (38 34 (:REWRITE DEFAULT-<-1))
 (36 18 (:REWRITE INTEGERP-OF-SMALL-HELPER-2))
 (36 1 (:REWRITE LEN-OF-CDR-BETTER))
 (34 34 (:REWRITE USE-ALL-<-2))
 (34 34 (:REWRITE USE-ALL-<))
 (34 34 (:REWRITE BOUND-WHEN-USB2))
 (34 34 (:REWRITE <-WHEN-BVLT))
 (34 34 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (34 34 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (34 30 (:REWRITE NOT-<-WHEN-SBVLT))
 (32 32 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (32 32 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (32 32 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (32 32 (:REWRITE DROP-LINEAR-HYPS3))
 (32 32 (:REWRITE DROP-<=-HYPS))
 (32 32 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (32 32 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (31 31 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (31 31 (:TYPE-PRESCRIPTION ALL-NATP))
 (30 30 (:REWRITE USE-ALL-<=-2))
 (30 30 (:REWRITE USE-ALL-<=))
 (30 30 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (30 30 (:REWRITE BOUND-WHEN-USB))
 (30 30 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (30 30 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (30 30 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (30 22 (:REWRITE DEFAULT-*-1))
 (28 2 (:REWRITE DEFAULT-CDR))
 (28 2 (:REWRITE DEFAULT-CAR))
 (27 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (27 1 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (27 1 (:REWRITE INTEGERP-OF-/))
 (25 25 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (24 24 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (24 24 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (24 24 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (24 24 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (24 24 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (18 18 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (18 18 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (18 18 (:REWRITE DIVISIBLE-WHEN-DIVISIBLE-BY-MULTIPLE))
 (17 17 (:REWRITE MOD-OF-*-SUBST-CONSTANT-ARG2))
 (17 17 (:REWRITE MOD-OF-*-SUBST-CONSTANT-ARG1))
 (15 6 (:REWRITE DEFAULT-+-2))
 (13 13 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (13 13 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (13 13 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (13 13 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (13 13 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (13 13 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (13 13 (:META LEN-CONS-META-RULE))
 (12 1 (:REWRITE INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (12 1 (:REWRITE INTEGERP-OF-NTH-WHEN-ALL-INTEGERP))
 (12 1 (:REWRITE LIST::EQUAL-CONS-CASES))
 (11 1 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (10 3 (:REWRITE DEFAULT-UNARY-/))
 (10 2 (:REWRITE INVERSE-OF-+-AS=0))
 (9 9 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (9 9 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (9 9 (:REWRITE CLR-DIFFERENTIAL))
 (6 6 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (6 6 (:REWRITE EQUAL-CONSTANT-+))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (5 1 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONZERO))
 (4 4 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP))
 (4 4 (:REWRITE USE-ALL-CONSP-2))
 (4 4 (:REWRITE USE-ALL-CONSP))
 (4 4 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE LEN-GIVES-CONSP))
 (4 4 (:REWRITE FIX-WHEN-ACL2-NUMBERP))
 (4 4 (:REWRITE EQUAL-OF-+-WHEN-NEGATIVE-CONSTANT))
 (4 4 (:REWRITE EQUAL-OF-+-COMBINE-CONSTANTS))
 (4 4 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (4 4 (:REWRITE CONSP-FROM-LEN-BOUND))
 (4 2 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (4 1 (:REWRITE TAKE-OF-TOO-MANY))
 (4 1 (:REWRITE LIST::NTH-WITH-LARGE-INDEX))
 (4 1 (:REWRITE COMMUTATIVITY-OF-+))
 (3 3 (:TYPE-PRESCRIPTION NAT-LISTP))
 (3 3 (:REWRITE DROP-LINEAR-HYPS1))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (3 3 (:REWRITE BOUND-LEMMA))
 (3 3 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (3 1 (:REWRITE TAKE-OF-LEN-FREE))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:TYPE-PRESCRIPTION NFIX))
 (2 2 (:TYPE-PRESCRIPTION NATP))
 (2 2 (:TYPE-PRESCRIPTION GETBIT-TYPE))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-2))
 (2 2 (:REWRITE USE-ALL-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE USB-WHEN-BVLT-HACK-GEN))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-ZP-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0-POLARITY))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-NOT-BVLT-TIGHTEN))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT-TIGHTEN))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-WHEN-SLICE-IS-0))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-FROM-BOUND))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-CONSTANT))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-CONSTANT-VERSION))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-<=-VERSION))
 (2 2 (:REWRITE UBP-LONGER-BETTER))
 (2 2 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (2 2 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (2 2 (:REWRITE MOVE-MINUS-TO-CONSTANT))
 (2 2 (:REWRITE EQUAL-OF---WHEN-VARIABLE))
 (2 2 (:REWRITE EQUAL-OF---AND-CONSTANT))
 (2 2 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (2 2 (:REWRITE BV-1-0-HACK))
 (2 2 (:REWRITE BOUND-GAP-THEOREM))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (2 2 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 1 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-ALT))
 (2 1 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 1 (:REWRITE NTH-WITH-LARGE-INDEX-CHEAP))
 (2 1 (:REWRITE NTH-WHEN-<=-LEN-CHEAP))
 (2 1 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (2 1 (:REWRITE INTEGERP-OF-NTH-WHEN-POSSIBLY-NEGATED-NODENUMSP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-NTH-WHEN-INTEGER-LISTP-CHEAP))
 (2 1 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (2 1 (:REWRITE ALL-NATP-IMPLIES-ALL-INTEGERP-CHEAP))
 (2 1 (:REWRITE ALL-INTEGERP-WHEN-ALL-NATP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (1 1 (:REWRITE USE-ALL-ALL-INTEGERP-2))
 (1 1 (:REWRITE USE-ALL-ALL-INTEGERP))
 (1 1 (:REWRITE LIST::UPDATE-NTH-WHEN-KEY-IS-NOT-POSITIVE))
 (1 1 (:REWRITE LIST::UPDATE-NTH-WHEN-KEY-IS-NOT-AN-INTEGERP))
 (1 1 (:REWRITE LIST::UPDATE-NTH-NON-CONSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE TAKE-WHEN-ATOM))
 (1 1 (:REWRITE NTH-WHEN-ZP-CHEAP))
 (1 1 (:REWRITE NTH-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE LIST::NTH-WHEN-N-IS-NOT-AN-INTEGERP))
 (1 1 (:REWRITE LIST::NTH-WHEN-L-IS-NOT-A-CONSP))
 (1 1 (:REWRITE NTH-WHEN-EQUAL-OF-TAKE-AND-CONSTANT))
 (1 1 (:REWRITE NTH-WHEN-EQUAL-OF-FIRSTN-AND-CONSTANT))
 (1 1 (:REWRITE NTH-WHEN-ALL-SAME-CHEAP))
 (1 1 (:REWRITE NTH-WHEN-ALL-EQUAL$-HELPER))
 (1 1 (:REWRITE NTH-BECOMES-BVNTH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE MOD-OF-MOD-WHEN-MULTIPLE-SAFE))
 (1 1 (:REWRITE MOD-OF-MOD-WHEN-MULT-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-NTH-WHEN-UNSIGNED-BYTE-LISTP))
 (1 1 (:REWRITE INTEGERP-OF-NTH-WHEN-ALL-DARGP-LESS-THAN-SPECIAL))
 (1 1 (:REWRITE INTEGERP-OF-NTH-WHEN-ALL-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-OF-NTH-FREE-LEN))
 (1 1 (:REWRITE DEFAULT-UNARY-MINUS))
 (1 1 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (1 1 (:REWRITE ALL-UNSIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (1 1 (:REWRITE ALL-SIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (1 1 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (1 1 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (1 1 (:REWRITE +-OF-MINUS))
 (1 1 (:LINEAR POSITION-EQUAL-BOUND))
 )
(GEN-RANDOM-BV
 (46 2 (:REWRITE X-LESS-THAN-32-WHEN-USB5))
 (26 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (7 7 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (7 7 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 3 (:REWRITE NOT-<-WHEN-SBVLT))
 (5 5 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (5 5 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (5 5 (:REWRITE INEQ-HACK2))
 (5 5 (:REWRITE INEQ-HACK))
 (5 5 (:REWRITE DROP-LINEAR-HYPS3))
 (5 5 (:REWRITE DROP-<=-HYPS))
 (5 5 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (5 5 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (4 4 (:REWRITE USE-ALL-<-2))
 (4 4 (:REWRITE USE-ALL-<))
 (4 4 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (4 4 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE BOUND-WHEN-USB2))
 (4 4 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (4 4 (:REWRITE <-WHEN-BVLT))
 (4 4 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (4 4 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (4 4 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (4 4 (:REWRITE <-FROM-<=-FREE))
 (3 3 (:TYPE-PRESCRIPTION NATP-OF-EXPT))
 (3 3 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (3 3 (:REWRITE USE-ALL-<=-2))
 (3 3 (:REWRITE USE-ALL-<=))
 (3 3 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (3 3 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (3 3 (:REWRITE BOUND-WHEN-USB))
 (3 3 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (2 2 (:REWRITE USE-ALL-NATP-2))
 (2 2 (:REWRITE USE-ALL-NATP))
 (2 2 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (2 2 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (2 2 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (2 2 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-2))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USB-WHEN-BVLT-HACK-GEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-ZP-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0-POLARITY))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-NOT-BVLT-TIGHTEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT-TIGHTEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-FROM-BOUND))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-CONSTANT))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-CONSTANT-VERSION))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-<=-VERSION))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE UBP-LONGER-BETTER))
 (1 1 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (1 1 (:REWRITE DROP-LINEAR-HYPS1))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE BOUND-LEMMA))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (1 1 (:REWRITE +-OF-MINUS))
 )
(INTEGERP-OF-MV-NTH-0-OF-GENRANDOM
 (901 6 (:REWRITE MOD-WHEN-<))
 (515 5 (:REWRITE COLLECT-CONSTANTS-<-/-TWO))
 (464 24 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (322 1 (:REWRITE UPDATE-NTH-BECOMES-UPDATE-NTH2-EXTEND-NEW))
 (276 19 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (206 25 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (190 1 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (187 1 (:LINEAR MOD-UPPER-BOUND-LINEAR))
 (183 1 (:LINEAR MOD-BOUND-LINEAR-ARG2-STRONG))
 (183 1 (:LINEAR MOD-BOUND-LINEAR-ARG2))
 (179 6 (:REWRITE MOD-WHEN-INTEGERP-OF-QUOTIENT))
 (169 6 (:LINEAR LIST::LEN-NON-NEGATIVE-LINEAR))
 (166 6 (:REWRITE MOD-WHEN-MULTIPLE))
 (123 2 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (103 1 (:REWRITE UPDATE-NTH-WITH-LAST-VAL))
 (102 1 (:REWRITE UPDATE-NTH-WITH-LAST-VAL-GEN))
 (91 2 (:REWRITE LIST::LIST-EQUIV-HACK))
 (81 2 (:REWRITE LIST::EQUIV-CONS-CASES))
 (80 1 (:REWRITE MOD-OF-MOD-BASES-MULTIPLE-ALT))
 (75 3 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (72 2 (:REWRITE LEN-OF-CDR-BETTER))
 (69 69 (:TYPE-PRESCRIPTION LEN))
 (68 12 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (62 25 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (52 12 (:REWRITE COMMUTATIVITY-OF-*-WHEN-CONSTANT))
 (50 9 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (44 4 (:REWRITE DEFAULT-CDR))
 (44 2 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (41 1 (:REWRITE MULTIPLE-WHEN-<=))
 (40 10 (:REWRITE FOLD-CONSTS-IN-*))
 (39 13 (:REWRITE INTEGERP-OF-*))
 (35 16 (:REWRITE DEFAULT-*-2))
 (30 12 (:REWRITE INTEGERP-OF-SMALL-HELPER-2))
 (27 1 (:REWRITE LIST::UPDATE-NTH-NON-CONSP))
 (26 14 (:REWRITE DEFAULT-<-2))
 (24 24 (:REWRITE DROP-LINEAR-HYPS2))
 (24 24 (:REWRITE DROP->-HYPS))
 (24 24 (:REWRITE DROP-<-HYPS))
 (24 24 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (24 24 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (24 24 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (24 24 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (24 24 (:REWRITE <-FROM-<=-FREE))
 (24 16 (:REWRITE DEFAULT-*-1))
 (24 2 (:REWRITE INTEGERP-OF-/))
 (22 22 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (22 22 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (22 22 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (22 22 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (22 22 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (22 22 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (22 22 (:META LEN-CONS-META-RULE))
 (21 11 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (21 11 (:REWRITE ARITH-HACK-CHEAP))
 (19 19 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (19 19 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (19 19 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (19 19 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (18 14 (:REWRITE DEFAULT-<-1))
 (17 6 (:REWRITE /R-WHEN-ABS-NUMERATOR=1))
 (16 16 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (15 6 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (15 6 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (15 6 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (15 6 (:REWRITE MOD-WHEN-<-OF-0))
 (14 14 (:REWRITE USE-ALL-CONSP-2))
 (14 14 (:REWRITE USE-ALL-CONSP))
 (14 14 (:REWRITE USE-ALL-<-2))
 (14 14 (:REWRITE USE-ALL-<))
 (14 14 (:REWRITE LEN-GIVES-CONSP))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (14 14 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (14 14 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (14 14 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (14 14 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (14 14 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (14 14 (:REWRITE CONSP-FROM-LEN-BOUND))
 (14 14 (:REWRITE BOUND-WHEN-USB2))
 (14 14 (:REWRITE <-WHEN-BVLT))
 (14 14 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (14 14 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (14 2 (:REWRITE COMMUTATIVITY-OF-*))
 (12 11 (:REWRITE NOT-<-WHEN-SBVLT))
 (11 11 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (11 11 (:REWRITE USE-ALL-<=-2))
 (11 11 (:REWRITE USE-ALL-<=))
 (11 11 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (11 11 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (11 11 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (11 11 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (11 11 (:REWRITE INEQ-HACK2))
 (11 11 (:REWRITE INEQ-HACK))
 (11 11 (:REWRITE DROP-LINEAR-HYPS3))
 (11 11 (:REWRITE DROP-<=-HYPS))
 (11 11 (:REWRITE BOUND-WHEN-USB))
 (11 11 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (11 11 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (10 10 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (10 1 (:REWRITE LIST::LEN-POS-REWRITE))
 (9 9 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (9 9 (:REWRITE CLR-DIFFERENTIAL))
 (8 4 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (8 4 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (6 6 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (6 6 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (6 6 (:REWRITE DIVISIBLE-WHEN-DIVISIBLE-BY-MULTIPLE))
 (6 6 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (5 5 (:REWRITE MOD-OF-*-SUBST-CONSTANT-ARG2))
 (5 5 (:REWRITE MOD-OF-*-SUBST-CONSTANT-ARG1))
 (5 3 (:REWRITE DEFAULT-UNARY-/))
 (4 4 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (4 4 (:REWRITE LIST::OPEN-EQUIV))
 (4 4 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (4 2 (:REWRITE LIST::TRUE-LISTP-FIX))
 (4 2 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (4 2 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (4 2 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (4 2 (:REWRITE DEFAULT-+-2))
 (3 3 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (3 3 (:REWRITE MOVE-MINUS-TO-CONSTANT))
 (3 3 (:REWRITE EQUAL-OF---WHEN-VARIABLE))
 (3 3 (:REWRITE EQUAL-OF---AND-CONSTANT))
 (3 3 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (3 3 (:REWRITE BV-1-0-HACK))
 (2 2 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (2 2 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (2 2 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE <-OF-0-WHEN-<-FREE))
 (2 2 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (2 2 (:REWRITE +-OF-MINUS))
 (1 1 (:REWRITE LIST::UPDATE-NTH-WHEN-KEY-IS-NOT-POSITIVE))
 (1 1 (:REWRITE LIST::UPDATE-NTH-WHEN-KEY-IS-NOT-AN-INTEGERP))
 (1 1 (:REWRITE MOD-OF-MOD-WHEN-MULTIPLE-SAFE))
 (1 1 (:REWRITE MOD-OF-MOD-WHEN-MULT-CHEAP))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 )
(INTEGERP-OF-MV-NTH-0-OF-GEN-RANDOM-BV
 (6594 66 (:REWRITE COLLECT-CONSTANTS-<-/-TWO))
 (6018 386 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (5474 17 (:REWRITE UPDATE-NTH-BECOMES-UPDATE-NTH2-EXTEND-NEW))
 (4692 323 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (3502 425 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (2873 102 (:LINEAR LIST::LEN-NON-NEGATIVE-LINEAR))
 (2510 79 (:REWRITE MOD-WHEN-MULTIPLE))
 (2228 4 (:REWRITE LIST::UPDATE-NTH-UPDATE-NTH-SAME))
 (2091 34 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (1927 10 (:LINEAR MOD-BOUND-LINEAR-ARG1))
 (1830 10 (:LINEAR MOD-BOUND-LINEAR-ARG2-STRONG))
 (1830 10 (:LINEAR MOD-BOUND-LINEAR-ARG2))
 (1751 17 (:REWRITE UPDATE-NTH-WITH-LAST-VAL))
 (1734 17 (:REWRITE UPDATE-NTH-WITH-LAST-VAL-GEN))
 (1674 2 (:REWRITE <-*-/-RIGHT-COMMUTED))
 (1547 34 (:REWRITE LIST::LIST-EQUIV-HACK))
 (1377 34 (:REWRITE LIST::EQUIV-CONS-CASES))
 (1275 51 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (1224 34 (:REWRITE LEN-OF-CDR-BETTER))
 (1173 1173 (:TYPE-PRESCRIPTION LEN))
 (1054 425 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (962 158 (:REWRITE MULTIPLE-WHEN-MOD-0-CHEAP))
 (878 10 (:REWRITE MULTIPLE-WHEN-<=))
 (850 153 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (748 68 (:REWRITE DEFAULT-CDR))
 (748 34 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (670 219 (:REWRITE DEFAULT-*-2))
 (514 258 (:REWRITE DEFAULT-<-2))
 (464 158 (:REWRITE INTEGERP-OF-SMALL-HELPER-2))
 (459 17 (:REWRITE LIST::UPDATE-NTH-NON-CONSP))
 (405 405 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (395 395 (:REWRITE DROP-LINEAR-HYPS2))
 (395 395 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (390 390 (:REWRITE DROP-<-HYPS))
 (386 386 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (386 386 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (386 386 (:REWRITE <-FROM-<=-FREE))
 (374 374 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (374 374 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (374 374 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (374 374 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (374 374 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (374 374 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (374 374 (:META LEN-CONS-META-RULE))
 (373 29 (:LINEAR EXPT->-1))
 (359 195 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (357 219 (:REWRITE DEFAULT-*-1))
 (335 258 (:REWRITE DEFAULT-<-1))
 (323 323 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (323 323 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (322 322 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (322 322 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (282 6 (:REWRITE BVCAT-WHEN-LOWSIZE-IS-NOT-POSP))
 (270 6 (:DEFINITION POSP))
 (258 258 (:REWRITE USE-ALL-<-2))
 (258 258 (:REWRITE USE-ALL-<))
 (258 258 (:REWRITE BOUND-WHEN-USB2))
 (258 258 (:REWRITE <-WHEN-BVLT))
 (258 258 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (258 258 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (248 248 (:TYPE-PRESCRIPTION NATP-OF-EXPT))
 (248 248 (:TYPE-PRESCRIPTION INTEGERP-OF-EXPT-TYPE))
 (248 26 (:REWRITE DEFAULT-UNARY-/))
 (240 6 (:REWRITE <-0-+-NEGATIVE-1))
 (238 238 (:REWRITE USE-ALL-CONSP-2))
 (238 238 (:REWRITE USE-ALL-CONSP))
 (238 238 (:REWRITE LEN-GIVES-CONSP))
 (238 238 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (238 238 (:REWRITE CONSP-FROM-LEN-BOUND))
 (225 195 (:REWRITE NOT-<-WHEN-SBVLT))
 (221 221 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (217 217 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (216 6 (:REWRITE DISTRIBUTIVITY-OF-/-OVER-*))
 (210 210 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (210 210 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (210 210 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (210 210 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (210 210 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (207 81 (:REWRITE MOD-WHEN-<-OF-0))
 (203 203 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (203 203 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (203 203 (:REWRITE INEQ-HACK2))
 (203 203 (:REWRITE INEQ-HACK))
 (203 203 (:REWRITE DROP-LINEAR-HYPS3))
 (203 203 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (202 202 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (201 72 (:REWRITE MOD-WHEN-RATIONALP-ARG1-AND-NOT-RATIONALP-ARG2))
 (195 195 (:REWRITE USE-ALL-<=-2))
 (195 195 (:REWRITE USE-ALL-<=))
 (195 195 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (195 195 (:REWRITE BOUND-WHEN-USB))
 (195 195 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (195 195 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (195 195 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (190 2 (:REWRITE UNSIGNED-BYTE-P-OF-+-OF-MINUS-ALT))
 (170 170 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (170 17 (:REWRITE LIST::LEN-POS-REWRITE))
 (168 72 (:REWRITE MOD-WHEN-NOT-RATIONALP-ARG1-AND-RATIONALP-ARG2))
 (168 72 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG1))
 (164 4 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (142 58 (:LINEAR EXPT-BOUND-LINEAR-WEAK))
 (136 68 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (136 68 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (124 58 (:LINEAR EXPT-IS-INCREASING-FOR-BASE>1))
 (124 58 (:LINEAR EXPT-BOUND-LINEAR))
 (110 29 (:LINEAR EXPT-BOUND-LINEAR-2))
 (105 72 (:REWRITE MOD-WHEN-NOT-ACL2-NUMBERP-ARG2))
 (102 102 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (102 102 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (89 29 (:LINEAR EXPT-BOUND-FW))
 (86 4 (:REWRITE INTEGERP-OF-POWER2-HACK-ANOTHER-FACTOR))
 (85 51 (:REWRITE DEFAULT-+-2))
 (83 83 (:REWRITE <-OF-0-WHEN-<-FREE))
 (81 81 (:REWRITE MOD-WHEN-EQUAL-OF-MOD-AND-0-FREE-CHEAP))
 (81 81 (:REWRITE DIVISIBLE-WHEN-DIVISIBLE-BY-MULTIPLE))
 (68 68 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (68 68 (:REWRITE LIST::OPEN-EQUIV))
 (68 68 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (68 68 (:REWRITE DEFAULT-CAR))
 (68 68 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (68 34 (:REWRITE LIST::TRUE-LISTP-FIX))
 (68 34 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (68 34 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (68 34 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (64 64 (:REWRITE MOD-OF-*-SUBST-CONSTANT-ARG2))
 (64 64 (:REWRITE MOD-OF-*-SUBST-CONSTANT-ARG1))
 (51 51 (:REWRITE DEFAULT-+-1))
 (51 51 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (49 49 (:REWRITE +-OF-MINUS))
 (48 15 (:REWRITE MOD-OF-MOD-WHEN-MULT-CHEAP))
 (44 2 (:REWRITE BOOLAND-OF-NON-NIL))
 (42 2 (:REWRITE BOOL-FIX-UNDER-IFF))
 (39 9 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (36 15 (:REWRITE MOD-OF-MOD-WHEN-MULTIPLE-SAFE))
 (36 6 (:REWRITE DEFAULT-NUMERATOR))
 (34 34 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (34 34 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (34 34 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (25 25 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (25 7 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (21 9 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (21 7 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (20 4 (:REWRITE HACK1))
 (17 17 (:REWRITE LIST::UPDATE-NTH-WHEN-KEY-IS-NOT-POSITIVE))
 (17 17 (:REWRITE LIST::UPDATE-NTH-WHEN-KEY-IS-NOT-AN-INTEGERP))
 (16 8 (:REWRITE INTEGERP-OF-POWER2-HACK))
 (13 13 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (12 2 (:REWRITE EXPONENTS-ADD))
 (10 10 (:TYPE-PRESCRIPTION POWER-OF-2P))
 (10 10 (:REWRITE *-OF-*-COMBINE-CONSTANTS))
 (10 2 (:REWRITE COMMUTATIVITY-OF-+))
 (9 9 (:REWRITE USB-WHEN-BVLT-HACK-GEN))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-ZP-CHEAP))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0-POLARITY))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-NOT-BVLT-TIGHTEN))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT-TIGHTEN))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-FROM-BOUND))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-OF-CONSTANT))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-CONSTANT-VERSION))
 (9 9 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-<=-VERSION))
 (9 9 (:REWRITE CLR-DIFFERENTIAL))
 (8 8 (:REWRITE <-OF-EXPT-WHEN-FREE))
 (7 7 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-2))
 (7 7 (:REWRITE USE-ALL-UNSIGNED-BYTE-P))
 (7 7 (:REWRITE USE-ALL-RATIONALP-2))
 (7 7 (:REWRITE USE-ALL-RATIONALP))
 (7 7 (:REWRITE USE-ALL-NATP-2))
 (7 7 (:REWRITE USE-ALL-NATP))
 (7 7 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (7 7 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (7 7 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (7 7 (:REWRITE IFIX-DOES-NOTHING))
 (7 7 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (7 7 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:TYPE-PRESCRIPTION POSP))
 (6 6 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (6 6 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (6 6 (:REWRITE UBP-LONGER-BETTER))
 (6 6 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (6 6 (:REWRITE BVCAT-WHEN-UNSIGNED-BYTE-P))
 (6 6 (:REWRITE BVCAT-WHEN-HIGHSIZE-IS-NOT-POSP))
 (6 6 (:REWRITE BVCAT-WHEN-ARG2-IS-NOT-AN-INTEGER))
 (6 6 (:REWRITE BVCAT-TIGHTEN-UPPER-SIZE))
 (6 6 (:REWRITE BVCAT-TIGHTEN-LOW-ARG))
 (6 6 (:REWRITE BVCAT-TIGHTEN-HIGH-ARG))
 (6 6 (:REWRITE BVCAT-SUBST-CONSTANT-ARG4))
 (6 6 (:REWRITE BVCAT-SUBST-CONSTANT-ARG2))
 (6 6 (:REWRITE BVCAT-OF-CONSTANT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP))
 (6 6 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG4))
 (6 6 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG2))
 (6 6 (:REWRITE BV-1-0-HACK))
 (6 2 (:REWRITE <-+-NEGATIVE-0-1))
 (4 4 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (4 4 (:REWRITE DROP-LINEAR-HYPS1))
 (4 4 (:REWRITE BOUND-LEMMA))
 (4 2 (:REWRITE UNSIGNED-BYTE-P-OF-+-OF-CONSTANT))
 (4 2 (:REWRITE UNSIGNED-BYTE-P-OF-+))
 (2 2 (:TYPE-PRESCRIPTION INTEGER-LENGTH))
 (2 2 (:REWRITE BOUND-GAP-THEOREM))
 (2 2 (:REWRITE BOOLAND-OF-NON-NIL-ARG2))
 )
(GEN-RANDOM-BV
 (254 1 (:DEFINITION GEN-RANDOM-BV))
 (189 9 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (159 4 (:REWRITE X-LESS-THAN-32-WHEN-USB5))
 (112 16 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (95 1 (:REWRITE UNSIGNED-BYTE-P-OF-+-OF-MINUS-ALT))
 (82 2 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (55 5 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (48 24 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (47 1 (:REWRITE BVCAT-WHEN-LOWSIZE-IS-NOT-POSP))
 (39 15 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (36 1 (:REWRITE LEN-OF-CDR-BETTER))
 (29 29 (:TYPE-PRESCRIPTION ALL-NATP))
 (28 2 (:REWRITE DEFAULT-CDR))
 (28 2 (:REWRITE DEFAULT-CAR))
 (27 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (27 1 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (26 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (22 1 (:REWRITE BOOLAND-OF-NON-NIL))
 (21 1 (:REWRITE BOOL-FIX-UNDER-IFF))
 (15 15 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (14 14 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (13 13 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (13 13 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (13 13 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (13 13 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (13 13 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (13 13 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (13 13 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (13 13 (:META LEN-CONS-META-RULE))
 (12 1 (:REWRITE INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (12 1 (:REWRITE INTEGERP-OF-NTH-WHEN-ALL-INTEGERP))
 (12 1 (:REWRITE LIST::EQUAL-CONS-CASES))
 (11 11 (:REWRITE DROP-LINEAR-HYPS2))
 (11 11 (:REWRITE DROP->-HYPS))
 (11 11 (:REWRITE DROP-<-HYPS))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (11 1 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (10 9 (:REWRITE DEFAULT-<-2))
 (10 2 (:REWRITE HACK1))
 (9 9 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (9 9 (:REWRITE USE-ALL-<-2))
 (9 9 (:REWRITE USE-ALL-<))
 (9 9 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (9 9 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (9 9 (:REWRITE DEFAULT-<-1))
 (9 9 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (9 9 (:REWRITE BOUND-WHEN-USB2))
 (9 9 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (9 9 (:REWRITE <-WHEN-BVLT))
 (9 9 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (9 9 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (9 9 (:REWRITE <-FROM-<=-FREE))
 (9 8 (:REWRITE DEFAULT-+-2))
 (9 6 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (9 6 (:REWRITE NOT-<-WHEN-SBVLT))
 (8 8 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (8 8 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (8 8 (:REWRITE INEQ-HACK2))
 (8 8 (:REWRITE INEQ-HACK))
 (8 8 (:REWRITE DROP-LINEAR-HYPS3))
 (8 8 (:REWRITE DROP-<=-HYPS))
 (8 8 (:REWRITE DEFAULT-+-1))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (8 8 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (8 2 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (7 7 (:REWRITE +-OF-MINUS))
 (6 6 (:REWRITE USE-ALL-<=-2))
 (6 6 (:REWRITE USE-ALL-<=))
 (6 6 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE BOUND-WHEN-USB))
 (6 6 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (6 1 (:REWRITE EXPONENTS-ADD))
 (5 5 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (5 1 (:REWRITE COMMUTATIVITY-OF-+))
 (5 1 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (4 4 (:REWRITE USE-ALL-CONSP-2))
 (4 4 (:REWRITE USE-ALL-CONSP))
 (4 4 (:REWRITE LEN-GIVES-CONSP))
 (4 4 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (4 4 (:REWRITE CONSP-FROM-LEN-BOUND))
 (4 4 (:REWRITE <-OF-0-WHEN-<-FREE))
 (4 2 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (4 1 (:REWRITE LIST::NTH-WITH-LARGE-INDEX))
 (4 1 (:REWRITE DEFAULT-*-2))
 (3 3 (:TYPE-PRESCRIPTION NAT-LISTP))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE USB-WHEN-BVLT-HACK-GEN))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-ZP-CHEAP))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0-POLARITY))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-NOT-BVLT-TIGHTEN))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT-TIGHTEN))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-WHEN-SLICE-IS-0))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-FROM-BOUND))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-OF-CONSTANT))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-CONSTANT-VERSION))
 (2 2 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-<=-VERSION))
 (2 2 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (2 2 (:REWRITE DROP-LINEAR-HYPS1))
 (2 2 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (2 2 (:REWRITE BOUND-LEMMA))
 (2 1 (:REWRITE UNSIGNED-BYTE-P-OF-+-OF-CONSTANT))
 (2 1 (:REWRITE UNSIGNED-BYTE-P-OF-+))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 1 (:REWRITE NTH-WITH-LARGE-INDEX-CHEAP))
 (2 1 (:REWRITE NTH-WHEN-<=-LEN-CHEAP))
 (2 1 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (2 1 (:REWRITE INTEGERP-OF-NTH-WHEN-POSSIBLY-NEGATED-NODENUMSP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-NTH-WHEN-INTEGER-LISTP-CHEAP))
 (2 1 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (2 1 (:REWRITE ALL-NATP-IMPLIES-ALL-INTEGERP-CHEAP))
 (2 1 (:REWRITE ALL-INTEGERP-WHEN-ALL-NATP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION NFIX))
 (1 1 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-2))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USE-ALL-NATP-2))
 (1 1 (:REWRITE USE-ALL-NATP))
 (1 1 (:REWRITE USE-ALL-ALL-INTEGERP-2))
 (1 1 (:REWRITE USE-ALL-ALL-INTEGERP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE UBP-LONGER-BETTER))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE NTH-WHEN-ZP-CHEAP))
 (1 1 (:REWRITE NTH-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE LIST::NTH-WHEN-N-IS-NOT-AN-INTEGERP))
 (1 1 (:REWRITE LIST::NTH-WHEN-L-IS-NOT-A-CONSP))
 (1 1 (:REWRITE NTH-WHEN-EQUAL-OF-TAKE-AND-CONSTANT))
 (1 1 (:REWRITE NTH-WHEN-EQUAL-OF-FIRSTN-AND-CONSTANT))
 (1 1 (:REWRITE NTH-WHEN-ALL-SAME-CHEAP))
 (1 1 (:REWRITE NTH-WHEN-ALL-EQUAL$-HELPER))
 (1 1 (:REWRITE NTH-BECOMES-BVNTH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (1 1 (:REWRITE INTEGERP-OF-NTH-WHEN-UNSIGNED-BYTE-LISTP))
 (1 1 (:REWRITE INTEGERP-OF-NTH-WHEN-ALL-DARGP-LESS-THAN-SPECIAL))
 (1 1 (:REWRITE INTEGERP-OF-NTH-WHEN-ALL-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-OF-NTH-FREE-LEN))
 (1 1 (:REWRITE DEFAULT-*-1))
 (1 1 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (1 1 (:REWRITE CLR-DIFFERENTIAL))
 (1 1 (:REWRITE BVCAT-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE BVCAT-WHEN-HIGHSIZE-IS-NOT-POSP))
 (1 1 (:REWRITE BVCAT-WHEN-ARG2-IS-NOT-AN-INTEGER))
 (1 1 (:REWRITE BVCAT-TIGHTEN-UPPER-SIZE))
 (1 1 (:REWRITE BVCAT-TIGHTEN-LOW-ARG))
 (1 1 (:REWRITE BVCAT-TIGHTEN-HIGH-ARG))
 (1 1 (:REWRITE BVCAT-SUBST-CONSTANT-ARG4))
 (1 1 (:REWRITE BVCAT-SUBST-CONSTANT-ARG2))
 (1 1 (:REWRITE BVCAT-OF-CONSTANT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP))
 (1 1 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG4))
 (1 1 (:REWRITE BVCAT-NORMALIZE-CONSTANT-ARG2))
 (1 1 (:REWRITE BOOLAND-OF-NON-NIL-ARG2))
 (1 1 (:REWRITE ALL-UNSIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (1 1 (:REWRITE ALL-SIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (1 1 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:LINEAR POSITION-EQUAL-BOUND))
 )
(GEN-RANDOM-VALUE
 (31034 2531 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (15634 489 (:REWRITE STR::CONSP-OF-EXPLODE))
 (13317 464 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (10719 731 (:REWRITE DEFAULT-CDR))
 (9209 2531 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (8690 235 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (8237 39 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (7601 39 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (7316 255 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (7209 98 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (4891 304 (:REWRITE DEFAULT-CAR))
 (3815 39 (:REWRITE USE-ALL-<-FOR-CAR))
 (3582 138 (:REWRITE ALL-NATP-OF-CDR))
 (3432 1773 (:REWRITE DEFAULT-+-2))
 (3090 59 (:REWRITE ALL-RATIONALP-OF-CDR))
 (3047 821 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (3030 1515 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (3030 1515 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2771 2771 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (2588 1787 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (2341 160 (:REWRITE LIST::LEN-POS-REWRITE))
 (2318 2318 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2247 1773 (:REWRITE DEFAULT-+-1))
 (2174 59 (:REWRITE ALL-<-OF-CDR))
 (1852 1852 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (1787 1787 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (1787 1787 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (1787 1787 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (1787 1787 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (1787 1787 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (1787 1787 (:META LEN-CONS-META-RULE))
 (1773 1773 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (1515 1515 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1398 731 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1363 1363 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (1344 98 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (1212 1212 (:REWRITE USE-ALL-CONSP-2))
 (1212 1212 (:REWRITE USE-ALL-CONSP))
 (1212 1212 (:REWRITE LEN-GIVES-CONSP))
 (1212 1212 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (1212 1212 (:REWRITE CONSP-FROM-LEN-BOUND))
 (1142 1112 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1114 1114 (:REWRITE CLR-DIFFERENTIAL))
 (1074 681 (:REWRITE DEFAULT-<-2))
 (978 786 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (960 98 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (868 49 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (825 98 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (796 786 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (796 786 (:REWRITE IMPOSSIBLE-VALUE-2))
 (788 788 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (788 788 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (786 786 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (786 786 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (786 786 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (786 786 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (786 786 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (786 786 (:REWRITE IMPOSSIBLE-VALUE-1))
 (786 786 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (786 786 (:REWRITE EQUAL-WHEN-BVLT))
 (786 786 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (786 786 (:REWRITE EQUAL-WHEN-<-OF-+))
 (786 786 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (786 786 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (786 786 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (786 786 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (786 786 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (786 786 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (786 786 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (786 786 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (786 786 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (786 786 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (786 786 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (746 746 (:TYPE-PRESCRIPTION ALL-NATP))
 (687 687 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (687 687 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (684 681 (:REWRITE DEFAULT-<-1))
 (682 682 (:REWRITE DROP-LINEAR-HYPS2))
 (681 681 (:REWRITE USE-ALL-<-2))
 (681 681 (:REWRITE USE-ALL-<))
 (681 681 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (681 681 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (681 681 (:REWRITE DROP->-HYPS))
 (681 681 (:REWRITE DROP-<-HYPS))
 (681 681 (:REWRITE BOUND-WHEN-USB2))
 (681 681 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (681 681 (:REWRITE <-WHEN-BVLT))
 (681 681 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (681 681 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (681 681 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (681 681 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (681 681 (:REWRITE <-FROM-<=-FREE))
 (647 255 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (580 293 (:REWRITE NOT-<-WHEN-SBVLT))
 (541 541 (:REWRITE +-OF-MINUS))
 (510 255 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (503 503 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (490 39 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (390 390 (:REWRITE <-OF-0-WHEN-<-FREE))
 (372 78 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (333 78 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (304 304 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (304 304 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (299 299 (:REWRITE FOLD-CONSTS-IN-+))
 (299 299 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (298 298 (:REWRITE HELPER-HELPER2))
 (298 298 (:REWRITE HELPER-HELPER))
 (296 293 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (295 59 (:REWRITE INTEGER-LISTP-OF-CDR))
 (294 294 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (294 294 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (294 294 (:REWRITE INEQ-HACK2))
 (294 294 (:REWRITE INEQ-HACK))
 (294 294 (:REWRITE DROP-LINEAR-HYPS3))
 (293 293 (:REWRITE USE-ALL-<=-2))
 (293 293 (:REWRITE USE-ALL-<=))
 (293 293 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (293 293 (:REWRITE DROP-<=-HYPS))
 (293 293 (:REWRITE BOUND-WHEN-USB))
 (293 293 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (293 293 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (293 293 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (293 293 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (290 290 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (287 287 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (279 279 (:REWRITE DEFAULT-UNARY-MINUS))
 (255 255 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (235 235 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (235 235 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (235 235 (:TYPE-PRESCRIPTION ALL-<))
 (234 117 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (196 196 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (196 196 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (196 98 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (195 195 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (177 59 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (177 59 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (163 163 (:REWRITE USE-ALL-RATIONALP-2))
 (163 163 (:REWRITE USE-ALL-RATIONALP))
 (163 163 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (163 163 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (163 163 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (163 163 (:REWRITE DEFAULT-REALPART))
 (163 163 (:REWRITE DEFAULT-NUMERATOR))
 (163 163 (:REWRITE DEFAULT-IMAGPART))
 (163 163 (:REWRITE DEFAULT-DENOMINATOR))
 (156 78 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (156 78 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (134 134 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (134 134 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (134 134 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (134 134 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (134 134 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (134 134 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (134 134 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (98 98 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (98 98 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (98 98 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (98 98 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (98 98 (:REWRITE ALL-<-TRANSITIVE))
 (88 88 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (88 88 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (88 88 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (78 78 (:TYPE-PRESCRIPTION ALISTP))
 (78 78 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (78 78 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (78 78 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (78 78 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (78 78 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (78 78 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (78 39 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (78 39 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (78 39 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (78 39 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (78 39 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (78 39 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (76 76 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (71 71 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (71 71 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (46 2 (:REWRITE ACL2-COUNT-WHEN-MEMBER))
 (39 39 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (39 39 (:REWRITE WFR-HACK5))
 (39 39 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (39 39 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (39 39 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (39 39 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (32 2 (:REWRITE SUBSETP-CAR-MEMBER))
 (12 12 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (5 5 (:REWRITE EQUAL-CONSTANT-+))
 (4 4 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (4 4 (:REWRITE USE-ALL-NATP-2))
 (4 4 (:REWRITE USE-ALL-NATP))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (4 4 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (4 2 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (4 2 (:REWRITE BV-3-2-1-HACKB))
 (3 3 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (3 3 (:REWRITE EQUAL-OF-+-WHEN-NEGATIVE-CONSTANT))
 (3 3 (:REWRITE EQUAL-OF-+-COMBINE-CONSTANTS))
 (3 1 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:TYPE-PRESCRIPTION BVLT))
 (2 2 (:REWRITE ZP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ZP-OPEN))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (2 2 (:REWRITE SUBSETP-OF-CDR))
 (2 2 (:REWRITE SUBSETP-MEMBER . 2))
 (2 2 (:REWRITE SUBSETP-MEMBER . 1))
 (2 2 (:REWRITE BV-3-2-1-HACK))
 (2 1 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(MAKE-TEST-CASE
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(TEST-CASE-SATISFIES-ASSUMPTIONSP
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-TEST-CASES-AUX)
(MAKE-TEST-CASES)
(GET-TRACE-FOR-NODE
 (34 17 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (34 17 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (24 12 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (17 17 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (17 17 (:TYPE-PRESCRIPTION NAT-LISTP))
 (12 12 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (12 12 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(GET-TRACES-FOR-NODE-AUX
 (36 18 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (36 18 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (18 18 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (18 18 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-TRACES-FOR-NODE)
(GET-TRACES-FOR-TWO-NODES-AUX
 (36 18 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (36 18 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (18 18 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (18 18 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-TRACES-FOR-TWO-NODES)
(FLATTEN-TRACES
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LEN-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-DIFFS
 (8 4 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (8 4 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 4 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (4 4 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MIN-AND-MAX-INTEGER-LIST
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MIN-AND-MAX-INTEGER-LIST-LIST
 (6 3 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (6 3 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (3 3 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (3 3 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-BOUNDS-AND-TYPE-FACTS)
(BVPLUS-LIST-LIST
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(NTH-LIST-AUX
 (454 8 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (428 28 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (168 6 (:REWRITE <-0-+-NEGATIVE-1))
 (138 6 (:REWRITE LEN-OF-CDR-BETTER))
 (82 41 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (82 41 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (73 1 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (71 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (44 28 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (41 41 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (41 41 (:TYPE-PRESCRIPTION NAT-LISTP))
 (38 22 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (30 13 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (22 22 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (22 22 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (22 22 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (22 22 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (22 22 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (22 22 (:META LEN-CONS-META-RULE))
 (18 6 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (18 6 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (13 13 (:TYPE-PRESCRIPTION ALL-NATP))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (8 8 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (8 8 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (7 7 (:REWRITE DEFAULT-CDR))
 (7 7 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (6 6 (:REWRITE USE-ALL-CONSP-2))
 (6 6 (:REWRITE USE-ALL-CONSP))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (6 6 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (6 6 (:REWRITE LEN-GIVES-CONSP))
 (6 6 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (6 6 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:REWRITE CONSP-FROM-LEN-BOUND))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-0-WHEN-<-FREE))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (6 6 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (6 6 (:REWRITE +-OF-MINUS))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION ALISTP))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 )
(NTH-LIST)
(G-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(BVMINUS-LIST
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(G-LIST-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LEN-LIST-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(NTH-LIST-LIST-AUX
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(NTH-LIST-LIST)
(ALL-EQUAL-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-NTHS-FROM-TRACES-REV)
(GET-NTHS-FROM-TRACES)
(GET-NTHS-FROM-VALUES-REV)
(GET-NTHS-FROM-VALUES)
(TRUE-LIST-LIST-LISTP
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(NIL-OR-CONSP)
(NIL-OR-CONSP-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(NIL-OR-CONSP-LIST-LIST
 (454 8 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (428 28 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (212 4 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (168 6 (:REWRITE <-0-+-NEGATIVE-1))
 (154 2 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (138 6 (:REWRITE LEN-OF-CDR-BETTER))
 (80 40 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (80 40 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (73 1 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (71 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (44 28 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (40 40 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (40 40 (:TYPE-PRESCRIPTION NAT-LISTP))
 (38 22 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (22 22 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (22 22 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (22 22 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (22 22 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (22 22 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (22 22 (:META LEN-CONS-META-RULE))
 (18 6 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (18 6 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (12 12 (:TYPE-PRESCRIPTION ALL-NATP))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (8 8 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (8 8 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (7 7 (:REWRITE DEFAULT-CDR))
 (7 7 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (6 6 (:REWRITE USE-ALL-CONSP-2))
 (6 6 (:REWRITE USE-ALL-CONSP))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (6 6 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (6 6 (:REWRITE LEN-GIVES-CONSP))
 (6 6 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (6 6 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:REWRITE CONSP-FROM-LEN-BOUND))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-0-WHEN-<-FREE))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (6 6 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (6 6 (:REWRITE +-OF-MINUS))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION ALISTP))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 )
(NIL-OR-CONSP-LIST-LIST-LIST
 (804 14 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (484 36 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (312 8 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (182 2 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (178 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (168 6 (:REWRITE <-0-+-NEGATIVE-1))
 (164 4 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (138 6 (:REWRITE LEN-OF-CDR-BETTER))
 (130 65 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (130 65 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (100 36 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (94 30 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (80 40 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (65 65 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (65 65 (:TYPE-PRESCRIPTION NAT-LISTP))
 (58 2 (:REWRITE LIST::LEN-POS-REWRITE))
 (44 44 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (30 30 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (30 30 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (30 30 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (30 30 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (30 30 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (30 30 (:META LEN-CONS-META-RULE))
 (24 12 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (18 6 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (18 6 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (16 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (14 14 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (14 14 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (12 12 (:TYPE-PRESCRIPTION ALL-NATP))
 (12 12 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (12 12 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (11 9 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (10 10 (:REWRITE USE-ALL-CONSP-2))
 (10 10 (:REWRITE USE-ALL-CONSP))
 (10 10 (:REWRITE LEN-GIVES-CONSP))
 (10 10 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (10 10 (:REWRITE CONSP-FROM-LEN-BOUND))
 (10 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (9 9 (:REWRITE DEFAULT-CDR))
 (8 8 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (6 6 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (6 6 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-0-WHEN-<-FREE))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (6 6 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (6 6 (:REWRITE +-OF-MINUS))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 )
(LEN-EQUAL-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LEN-EQUAL-LIST-LIST
 (454 8 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (428 28 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (212 4 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (168 6 (:REWRITE <-0-+-NEGATIVE-1))
 (154 2 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (138 6 (:REWRITE LEN-OF-CDR-BETTER))
 (80 40 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (80 40 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (73 1 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (71 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (44 28 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (40 40 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (40 40 (:TYPE-PRESCRIPTION NAT-LISTP))
 (38 22 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (22 22 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (22 22 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (22 22 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (22 22 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (22 22 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (22 22 (:META LEN-CONS-META-RULE))
 (18 6 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (18 6 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (12 12 (:TYPE-PRESCRIPTION ALL-NATP))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (8 8 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (8 8 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (7 7 (:REWRITE DEFAULT-CDR))
 (7 7 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (6 6 (:REWRITE USE-ALL-CONSP-2))
 (6 6 (:REWRITE USE-ALL-CONSP))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (6 6 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (6 6 (:REWRITE LEN-GIVES-CONSP))
 (6 6 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (6 6 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:REWRITE CONSP-FROM-LEN-BOUND))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-0-WHEN-<-FREE))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (6 6 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (6 6 (:REWRITE +-OF-MINUS))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION ALISTP))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 )
(LEN-EQUAL-LIST-LIST-LIST
 (804 14 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (484 36 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (312 8 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (182 2 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (178 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (168 6 (:REWRITE <-0-+-NEGATIVE-1))
 (164 4 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (138 6 (:REWRITE LEN-OF-CDR-BETTER))
 (130 65 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (130 65 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (100 36 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (94 30 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (80 40 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (65 65 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (65 65 (:TYPE-PRESCRIPTION NAT-LISTP))
 (58 2 (:REWRITE LIST::LEN-POS-REWRITE))
 (44 44 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (30 30 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (30 30 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (30 30 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (30 30 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (30 30 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (30 30 (:META LEN-CONS-META-RULE))
 (24 12 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (18 6 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (18 6 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (16 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (14 14 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (14 14 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (12 12 (:TYPE-PRESCRIPTION ALL-NATP))
 (12 12 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (12 12 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (11 9 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (10 10 (:REWRITE USE-ALL-CONSP-2))
 (10 10 (:REWRITE USE-ALL-CONSP))
 (10 10 (:REWRITE LEN-GIVES-CONSP))
 (10 10 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (10 10 (:REWRITE CONSP-FROM-LEN-BOUND))
 (10 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (9 9 (:REWRITE DEFAULT-CDR))
 (8 8 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (6 6 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (6 6 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-OF-0-WHEN-<-FREE))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (6 6 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (6 6 (:REWRITE +-OF-MINUS))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE DEFAULT-CAR))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 )
(ALL-ALL-NATP
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-ALL-ALL-NATP
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAXNAT
 (33 5 (:TYPE-PRESCRIPTION MAX))
 (26 13 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (26 13 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (13 13 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (13 13 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(RATIONALP-OF-MAXNAT
 (1415 22 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (410 12 (:REWRITE <-0-+-NEGATIVE-1))
 (227 6 (:REWRITE USE-ALL-<=-FOR-CAR))
 (206 11 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (185 3 (:REWRITE ALL-<=-WHEN-<=-AND-DECREASINGP))
 (160 1 (:LINEAR LEN-OF-CDR-LINEAR-STRONG))
 (160 1 (:LINEAR LIST::LEN-OF-CDR-LINEAR))
 (156 1 (:LINEAR LEN-OF-CDR-LINEAR))
 (156 1 (:LINEAR LIST::LEN-OF-CDR-BOUND-WEAK-LINEAR))
 (156 1 (:LINEAR LIST::LEN-OF-CDR-BOUND-TIGHT-LINEAR))
 (128 8 (:REWRITE EQUAL-CONSTANT-+))
 (120 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (119 119 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (83 83 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (83 83 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (83 83 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (83 83 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (83 83 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (83 83 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (83 83 (:META LEN-CONS-META-RULE))
 (70 35 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (67 41 (:REWRITE DEFAULT-+-2))
 (60 6 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-<-2))
 (49 37 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (48 24 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (41 41 (:REWRITE DEFAULT-+-1))
 (41 41 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (40 8 (:REWRITE HACK1))
 (40 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (39 19 (:REWRITE DEFAULT-<-2))
 (38 38 (:REWRITE +-OF-MINUS))
 (37 37 (:REWRITE DEFAULT-CDR))
 (36 12 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (36 12 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (35 35 (:TYPE-PRESCRIPTION NAT-LISTP))
 (33 33 (:REWRITE DEFAULT-CAR))
 (33 33 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (31 31 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (29 29 (:TYPE-PRESCRIPTION ALL-NATP))
 (27 19 (:REWRITE DEFAULT-<-1))
 (24 6 (:REWRITE ARITH-HACK-CHEAP))
 (24 3 (:REWRITE ALL-<=-WHEN-ALL-<))
 (22 22 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (22 22 (:REWRITE USE-ALL-CONSP-2))
 (22 22 (:REWRITE USE-ALL-CONSP))
 (22 22 (:REWRITE LEN-GIVES-CONSP))
 (22 22 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (22 22 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (22 22 (:REWRITE CONSP-FROM-LEN-BOUND))
 (19 19 (:REWRITE USE-ALL-<-2))
 (19 19 (:REWRITE USE-ALL-<))
 (19 19 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (19 19 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (19 19 (:REWRITE DROP-LINEAR-HYPS2))
 (19 19 (:REWRITE DROP->-HYPS))
 (19 19 (:REWRITE DROP-<-HYPS))
 (19 19 (:REWRITE BOUND-WHEN-USB2))
 (19 19 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (19 19 (:REWRITE <-WHEN-BVLT))
 (19 19 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (19 19 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (19 19 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (19 19 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (19 19 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (19 19 (:REWRITE <-FROM-<=-FREE))
 (16 4 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (13 13 (:REWRITE <-OF-0-WHEN-<-FREE))
 (12 12 (:TYPE-PRESCRIPTION ALL-<))
 (12 12 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (12 12 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (10 5 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (9 9 (:TYPE-PRESCRIPTION ALL-<=))
 (8 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (8 8 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (8 8 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (8 8 (:REWRITE CLR-DIFFERENTIAL))
 (8 8 (:REWRITE CDR-CONS))
 (8 8 (:REWRITE CAR-CONS))
 (8 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (6 6 (:REWRITE USE-ALL-<=-2))
 (6 6 (:REWRITE USE-ALL-<=))
 (6 6 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (6 6 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (6 6 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (6 6 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (6 6 (:REWRITE NOT-<-WHEN-SBVLT))
 (6 6 (:REWRITE INEQ-HACK2))
 (6 6 (:REWRITE INEQ-HACK))
 (6 6 (:REWRITE DROP-LINEAR-HYPS3))
 (6 6 (:REWRITE DROP-<=-HYPS))
 (6 6 (:REWRITE BOUND-WHEN-USB))
 (6 6 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (6 6 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (6 6 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (6 6 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (6 6 (:REWRITE ALL-<-TRANSITIVE))
 (6 6 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (5 5 (:REWRITE USE-ALL-RATIONALP-2))
 (5 5 (:REWRITE USE-ALL-RATIONALP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE ALL-<=-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-<=-WHEN-NOT-CONSP))
 (3 3 (:REWRITE ALL-<=-MONOTONE))
 (2 2 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (2 2 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (2 2 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 )
(MAXNAT
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAXNAT-LIST
 (5 5 (:TYPE-PRESCRIPTION MAX))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAXNAT-LIST-LIST
 (5 5 (:TYPE-PRESCRIPTION MAX))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-A-LIST-ELEMENT-IN-TRACE
 (14 7 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (14 7 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (7 7 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (7 7 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-A-LIST-ELEMENT-IN-TRACES
 (1206 26 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (702 62 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (466 14 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (295 4 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (284 4 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (280 10 (:REWRITE <-0-+-NEGATIVE-1))
 (270 3 (:DEFINITION FIND-A-LIST-ELEMENT-IN-TRACE))
 (250 125 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (250 125 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (234 6 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (230 10 (:REWRITE LEN-OF-CDR-BETTER))
 (126 62 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (125 125 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (125 125 (:TYPE-PRESCRIPTION NAT-LISTP))
 (116 52 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (85 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (52 52 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (52 52 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (52 52 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (52 52 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (52 52 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (52 52 (:META LEN-CONS-META-RULE))
 (40 20 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (31 14 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (30 10 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (30 10 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (28 14 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (26 26 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (26 26 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (22 22 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (22 22 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (20 20 (:TYPE-PRESCRIPTION ALL-NATP))
 (20 20 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (20 16 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (18 18 (:REWRITE USE-ALL-CONSP-2))
 (18 18 (:REWRITE USE-ALL-CONSP))
 (18 18 (:REWRITE LEN-GIVES-CONSP))
 (18 18 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (18 18 (:REWRITE CONSP-FROM-LEN-BOUND))
 (16 16 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (16 16 (:REWRITE DEFAULT-CDR))
 (15 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (14 14 (:TYPE-PRESCRIPTION ALISTP))
 (14 14 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (10 10 (:REWRITE USE-ALL-<-2))
 (10 10 (:REWRITE USE-ALL-<))
 (10 10 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (10 10 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (10 10 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (10 10 (:REWRITE DROP-LINEAR-HYPS2))
 (10 10 (:REWRITE DROP->-HYPS))
 (10 10 (:REWRITE DROP-<-HYPS))
 (10 10 (:REWRITE DEFAULT-<-2))
 (10 10 (:REWRITE DEFAULT-<-1))
 (10 10 (:REWRITE DEFAULT-+-2))
 (10 10 (:REWRITE DEFAULT-+-1))
 (10 10 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (10 10 (:REWRITE BOUND-WHEN-USB2))
 (10 10 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (10 10 (:REWRITE <-WHEN-BVLT))
 (10 10 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (10 10 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (10 10 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (10 10 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (10 10 (:REWRITE <-OF-0-WHEN-<-FREE))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (10 10 (:REWRITE <-FROM-<=-FREE))
 (10 10 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (10 10 (:REWRITE +-OF-MINUS))
 (9 9 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (9 9 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (8 8 (:REWRITE DEFAULT-CAR))
 (8 8 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (8 4 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (6 6 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 3 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (4 4 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (3 3 (:REWRITE WFR-HACK5))
 (3 3 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (3 1 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 )
(ALL-HAVE-BIT
 (205 13 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (194 5 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (84 3 (:REWRITE <-0-+-NEGATIVE-1))
 (69 3 (:REWRITE LEN-OF-CDR-BETTER))
 (62 31 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (62 31 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (48 3 (:REWRITE INEQ-HACK2))
 (48 3 (:REWRITE INEQ-HACK))
 (32 32 (:TYPE-PRESCRIPTION NAT-LISTP))
 (31 31 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (20 10 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (15 5 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (15 5 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (14 14 (:TYPE-PRESCRIPTION ALL-NATP))
 (13 13 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (10 10 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (10 10 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (10 10 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (10 10 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (10 10 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (10 10 (:META LEN-CONS-META-RULE))
 (10 1 (:REWRITE LIST::LEN-POS-REWRITE))
 (9 9 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (6 6 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (6 6 (:REWRITE DROP-LINEAR-HYPS2))
 (6 6 (:REWRITE DROP->-HYPS))
 (6 6 (:REWRITE DROP-<-HYPS))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE BOUND-WHEN-USB2))
 (6 6 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (6 6 (:REWRITE <-WHEN-BVLT))
 (6 6 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (6 6 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (6 6 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (6 6 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (6 6 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (6 6 (:REWRITE <-FROM-<=-FREE))
 (5 5 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (5 5 (:REWRITE USE-ALL-CONSP-2))
 (5 5 (:REWRITE USE-ALL-CONSP))
 (5 5 (:REWRITE LEN-GIVES-CONSP))
 (5 5 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (5 5 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (5 5 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (5 5 (:REWRITE CONSP-FROM-LEN-BOUND))
 (5 1 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (4 3 (:REWRITE NOT-<-WHEN-SBVLT))
 (3 3 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (3 3 (:REWRITE USE-ALL-<=-2))
 (3 3 (:REWRITE USE-ALL-<=))
 (3 3 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (3 3 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (3 3 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (3 3 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (3 3 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (3 3 (:REWRITE DROP-LINEAR-HYPS3))
 (3 3 (:REWRITE DROP-<=-HYPS))
 (3 3 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (3 3 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (3 3 (:REWRITE BOUND-WHEN-USB))
 (3 3 (:REWRITE ARITH-HACK-CHEAP))
 (3 3 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (3 3 (:REWRITE <-OF-0-WHEN-<-FREE))
 (3 3 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (3 3 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (3 3 (:REWRITE +-OF-MINUS))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (2 2 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (2 2 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (2 2 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE ALL-NATP-IMPLIES-ALL-INTEGERP-CHEAP))
 (2 1 (:REWRITE ALL-INTEGERP-WHEN-ALL-NATP-CHEAP))
 (1 1 (:REWRITE USE-ALL-ALL-INTEGERP-2))
 (1 1 (:REWRITE USE-ALL-ALL-INTEGERP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (1 1 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (1 1 (:REWRITE ALL-UNSIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (1 1 (:REWRITE ALL-SIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (1 1 (:REWRITE ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 )
(FIND-CONSTANT-LOW-BITS-AUX
 (1150 9 (:DEFINITION ALL-HAVE-BIT))
 (762 17 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (340 170 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (340 170 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (308 11 (:REWRITE <-0-+-NEGATIVE-1))
 (303 33 (:REWRITE INEQ-HACK2))
 (303 33 (:REWRITE INEQ-HACK))
 (289 12 (:REWRITE LEN-OF-CDR-BETTER))
 (236 44 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (171 171 (:TYPE-PRESCRIPTION NAT-LISTP))
 (170 170 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (99 3 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (92 46 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (77 1 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (69 23 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (69 23 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (57 57 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (54 54 (:TYPE-PRESCRIPTION ALL-NATP))
 (49 23 (:REWRITE DEFAULT-CDR))
 (45 45 (:REWRITE DROP-LINEAR-HYPS2))
 (45 45 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (44 44 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (41 41 (:REWRITE DROP->-HYPS))
 (41 41 (:REWRITE DROP-<-HYPS))
 (40 39 (:REWRITE DEFAULT-<-2))
 (39 39 (:REWRITE USE-ALL-<-2))
 (39 39 (:REWRITE USE-ALL-<))
 (39 39 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (39 39 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (39 39 (:REWRITE DEFAULT-<-1))
 (39 39 (:REWRITE BOUND-WHEN-USB2))
 (39 39 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (39 39 (:REWRITE <-WHEN-BVLT))
 (39 39 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (39 39 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (39 39 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (39 39 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (39 39 (:REWRITE <-FROM-<=-FREE))
 (37 11 (:REWRITE DEFAULT-CAR))
 (35 27 (:REWRITE NOT-<-WHEN-SBVLT))
 (34 34 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (34 34 (:REWRITE ARITH-HACK-CHEAP))
 (33 33 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (33 33 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (33 33 (:REWRITE DROP-LINEAR-HYPS3))
 (33 33 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (33 23 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (32 32 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (32 32 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (32 32 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (32 32 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (32 32 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (32 32 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (32 32 (:META LEN-CONS-META-RULE))
 (31 31 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (27 27 (:REWRITE USE-ALL-<=-2))
 (27 27 (:REWRITE USE-ALL-<=))
 (27 27 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (27 27 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (27 27 (:REWRITE BOUND-WHEN-USB))
 (27 27 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (27 27 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (27 27 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (27 9 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (23 23 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (22 21 (:REWRITE DEFAULT-+-2))
 (22 11 (:REWRITE GETBIT-WHEN-NOT-1))
 (22 11 (:REWRITE GETBIT-WHEN-NOT-0))
 (22 11 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (21 21 (:REWRITE DEFAULT-+-1))
 (21 21 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (18 9 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (17 17 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (17 17 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (16 16 (:REWRITE +-OF-MINUS))
 (15 15 (:REWRITE USE-ALL-CONSP-2))
 (15 15 (:REWRITE USE-ALL-CONSP))
 (15 15 (:REWRITE LEN-GIVES-CONSP))
 (15 15 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (15 15 (:REWRITE CONSP-FROM-LEN-BOUND))
 (12 12 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (12 12 (:REWRITE <-OF-0-WHEN-<-FREE))
 (11 11 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (11 11 (:REWRITE GETBIT-WHEN-SIGNED-BYTE-P-HIGH))
 (11 11 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (11 11 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (11 11 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (11 11 (:REWRITE GETBIT-WHEN-BVLT-OF-SMALL))
 (11 11 (:REWRITE GETBIT-WHEN-BOUND4))
 (11 11 (:REWRITE GETBIT-WHEN-BOUND3))
 (11 11 (:REWRITE GETBIT-WHEN-BOUND2))
 (11 11 (:REWRITE GETBIT-WHEN-BOUND))
 (11 11 (:REWRITE GETBIT-TRIM))
 (11 11 (:REWRITE GETBIT-TOO-HIGH-CHEAP-FREE))
 (11 11 (:REWRITE GETBIT-TOO-HIGH-CHEAP))
 (11 11 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (11 1 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (10 10 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (10 10 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (10 10 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (10 10 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (10 10 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (10 10 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (10 1 (:REWRITE LIST::LEN-POS-REWRITE))
 (9 9 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (9 9 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (9 9 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (9 9 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (9 9 (:REWRITE IMPOSSIBLE-VALUE-2))
 (9 9 (:REWRITE IMPOSSIBLE-VALUE-1))
 (9 9 (:REWRITE GETBITS-SAME-WHEN-BVCHOPS-SAME))
 (9 9 (:REWRITE GETBIT-IMPOSSIBLE-VALUE))
 (9 9 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (9 9 (:REWRITE EQUAL-WHEN-BVLT))
 (9 9 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (9 9 (:REWRITE EQUAL-WHEN-<-OF-+))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (9 9 (:REWRITE CLR-DIFFERENTIAL))
 (8 8 (:REWRITE USE-ALL-NATP-2))
 (8 8 (:REWRITE USE-ALL-NATP))
 (8 8 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (8 8 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (8 8 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (8 8 (:REWRITE DROP-LINEAR-HYPS1))
 (8 8 (:REWRITE BOUND-LEMMA))
 (6 6 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (6 3 (:REWRITE ALL-NATP-IMPLIES-ALL-INTEGERP-CHEAP))
 (6 3 (:REWRITE ALL-INTEGERP-WHEN-ALL-NATP-CHEAP))
 (5 1 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (4 4 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (3 3 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (3 3 (:REWRITE USE-ALL-ALL-INTEGERP-2))
 (3 3 (:REWRITE USE-ALL-ALL-INTEGERP))
 (3 3 (:REWRITE ALL-UNSIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (3 3 (:REWRITE ALL-SIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (3 3 (:REWRITE ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-NEGATIVE-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (2 1 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (1 1 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (1 1 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 )
(FIND-CONSTANT-LOW-BITS)
(ALL-ALL-HAVE-BIT
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-CONSTANT-LOW-BITS2-AUX
 (207 6 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (197 1 (:DEFINITION ALL-ALL-HAVE-BIT))
 (147 1 (:DEFINITION ALL-HAVE-BIT))
 (106 49 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (106 49 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (102 4 (:REWRITE DEFAULT-CAR))
 (49 49 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (49 49 (:TYPE-PRESCRIPTION NAT-LISTP))
 (46 4 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (39 2 (:REWRITE LIST::LEN-POS-REWRITE))
 (36 2 (:LINEAR LIST::LEN-NON-NEGATIVE-LINEAR))
 (24 8 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (24 8 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (24 8 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (20 20 (:TYPE-PRESCRIPTION LEN))
 (15 15 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (15 15 (:REWRITE ARITH-HACK-CHEAP))
 (15 15 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (14 14 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (14 14 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (14 14 (:REWRITE INEQ-HACK2))
 (14 14 (:REWRITE INEQ-HACK))
 (14 14 (:REWRITE DROP-LINEAR-HYPS3))
 (14 14 (:REWRITE DROP-LINEAR-HYPS2))
 (14 14 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (14 14 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (14 10 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 12 (:REWRITE DROP->-HYPS))
 (12 12 (:REWRITE DROP-<=-HYPS))
 (12 12 (:REWRITE DROP-<-HYPS))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (10 10 (:REWRITE USE-ALL-<=-2))
 (10 10 (:REWRITE USE-ALL-<=))
 (10 10 (:REWRITE USE-ALL-<-2))
 (10 10 (:REWRITE USE-ALL-<))
 (10 10 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (10 10 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (10 10 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (10 10 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (10 10 (:REWRITE DEFAULT-<-2))
 (10 10 (:REWRITE DEFAULT-<-1))
 (10 10 (:REWRITE BOUND-WHEN-USB2))
 (10 10 (:REWRITE BOUND-WHEN-USB))
 (10 10 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (10 10 (:REWRITE <-WHEN-BVLT))
 (10 10 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (10 10 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (10 10 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (10 10 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (10 10 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (10 10 (:REWRITE <-FROM-<=-FREE))
 (9 9 (:REWRITE DEFAULT-+-2))
 (9 9 (:REWRITE DEFAULT-+-1))
 (9 9 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (8 8 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (8 8 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (8 8 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (8 8 (:REWRITE DROP-LINEAR-HYPS1))
 (8 8 (:REWRITE BOUND-LEMMA))
 (8 8 (:META LEN-CONS-META-RULE))
 (8 4 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (7 3 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (6 6 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (6 6 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (6 6 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (6 3 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 2 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (5 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (4 4 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (4 4 (:REWRITE USE-ALL-NATP-2))
 (4 4 (:REWRITE USE-ALL-NATP))
 (4 4 (:REWRITE USE-ALL-CONSP-2))
 (4 4 (:REWRITE USE-ALL-CONSP))
 (4 4 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:REWRITE LEN-GIVES-CONSP))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (4 4 (:REWRITE CONSP-FROM-LEN-BOUND))
 (4 4 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (4 4 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (4 4 (:REWRITE +-OF-MINUS))
 (4 2 (:REWRITE GETBIT-WHEN-NOT-1))
 (4 2 (:REWRITE GETBIT-WHEN-NOT-0))
 (4 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (3 3 (:TYPE-PRESCRIPTION ALISTP))
 (3 3 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (2 2 (:REWRITE GETBIT-WHEN-SIGNED-BYTE-P-HIGH))
 (2 2 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (2 2 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (2 2 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (2 2 (:REWRITE GETBIT-WHEN-BVLT-OF-SMALL))
 (2 2 (:REWRITE GETBIT-WHEN-BOUND4))
 (2 2 (:REWRITE GETBIT-WHEN-BOUND3))
 (2 2 (:REWRITE GETBIT-WHEN-BOUND2))
 (2 2 (:REWRITE GETBIT-WHEN-BOUND))
 (2 2 (:REWRITE GETBIT-TRIM))
 (2 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP-FREE))
 (2 2 (:REWRITE GETBIT-TOO-HIGH-CHEAP))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE <-OF-NEGATIVE-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (1 1 (:TYPE-PRESCRIPTION ALL-HAVE-BIT))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 )
(FIND-CONSTANT-LOW-BITS2)
(ALL-SAME-LENGTHP
 (36 18 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (36 18 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (18 18 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (18 18 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-ALL-SAME-LENGTHP
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-A-VAL-IN-TRACES
 (1363 28 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (716 60 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (377 13 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (350 175 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (350 175 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (280 10 (:REWRITE <-0-+-NEGATIVE-1))
 (261 9 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (230 10 (:REWRITE LEN-OF-CDR-BETTER))
 (184 7 (:REWRITE LIST::LEN-POS-REWRITE))
 (175 175 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (175 175 (:TYPE-PRESCRIPTION NAT-LISTP))
 (142 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (140 60 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (130 50 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (50 50 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (50 50 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (50 50 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (50 50 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (50 50 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (50 50 (:META LEN-CONS-META-RULE))
 (40 20 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (35 16 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (32 16 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (30 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (30 10 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (30 10 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (28 28 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (28 28 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (24 24 (:REWRITE USE-ALL-CONSP-2))
 (24 24 (:REWRITE USE-ALL-CONSP))
 (24 24 (:REWRITE LEN-GIVES-CONSP))
 (24 24 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (24 24 (:REWRITE CONSP-FROM-LEN-BOUND))
 (24 12 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (20 20 (:TYPE-PRESCRIPTION ALL-NATP))
 (20 20 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (20 20 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (20 20 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (18 18 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (18 18 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (16 16 (:TYPE-PRESCRIPTION ALISTP))
 (16 16 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (14 13 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (13 13 (:REWRITE DEFAULT-CDR))
 (12 12 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (12 12 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (12 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (12 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE USE-ALL-<-2))
 (10 10 (:REWRITE USE-ALL-<))
 (10 10 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (10 10 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (10 10 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (10 10 (:REWRITE DROP-LINEAR-HYPS2))
 (10 10 (:REWRITE DROP->-HYPS))
 (10 10 (:REWRITE DROP-<-HYPS))
 (10 10 (:REWRITE DEFAULT-<-2))
 (10 10 (:REWRITE DEFAULT-<-1))
 (10 10 (:REWRITE DEFAULT-+-2))
 (10 10 (:REWRITE DEFAULT-+-1))
 (10 10 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (10 10 (:REWRITE BOUND-WHEN-USB2))
 (10 10 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (10 10 (:REWRITE <-WHEN-BVLT))
 (10 10 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (10 10 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (10 10 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (10 10 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (10 10 (:REWRITE <-OF-0-WHEN-<-FREE))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (10 10 (:REWRITE <-FROM-<=-FREE))
 (10 10 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (10 10 (:REWRITE +-OF-MINUS))
 (5 5 (:REWRITE DEFAULT-CAR))
 (5 5 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (3 1 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 )
(ALL-ALL-SAME
 (14 7 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (14 7 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (7 7 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (7 7 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAP-LAST-ELEM
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAP-LAST-ELEM-OF-NIL)
(MAP-LAST-ELEM-OF-CONS)
(MAP-LAST-ELEM-OF-TRUE-LIST-FIX)
(MAP-LAST-ELEM-OPENER)
(MAP-LAST-ELEM-OF-APPEND)
(CAR-OF-MAP-LAST-ELEM)
(CDR-OF-MAP-LAST-ELEM)
(LEN-OF-MAP-LAST-ELEM)
(CONSP-OF-MAP-LAST-ELEM)
(MAP-LAST-ELEM-IFF)
(TRUE-LISTP-OF-MAP-LAST-ELEM)
(FIRSTN-OF-MAP-LAST-ELEM)
(TAKE-OF-MAP-LAST-ELEM)
(NTH-OF-MAP-LAST-ELEM)
(NTHCDR-OF-MAP-LAST-ELEM)
(CORRESPONDING-ELEMENTS-HAVE-DIFFERENCE
 (40 20 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (40 20 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (20 20 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (20 20 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ACL2-NUMBERP-LIST
 (10 5 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (10 5 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (5 5 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (5 5 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-TERM-WITH-CONSTANT-DIFFERENCE
 (36 18 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (36 18 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (18 18 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (18 18 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-BVPLUS-TERM)
(NON-DECREASINGP
 (2964 276 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (2856 33 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (756 27 (:REWRITE <-0-+-NEGATIVE-1))
 (384 24 (:REWRITE EQUAL-CONSTANT-+))
 (360 24 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (276 276 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (177 177 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (177 177 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (177 177 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (177 177 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (177 177 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (177 177 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (177 177 (:META LEN-CONS-META-RULE))
 (156 78 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (120 24 (:REWRITE HACK1))
 (116 92 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (108 54 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (105 105 (:REWRITE DEFAULT-+-2))
 (105 105 (:REWRITE DEFAULT-+-1))
 (105 105 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (105 105 (:REWRITE +-OF-MINUS))
 (92 92 (:REWRITE DEFAULT-CDR))
 (81 81 (:TYPE-PRESCRIPTION NAT-LISTP))
 (81 27 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (81 27 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (75 75 (:REWRITE DEFAULT-CAR))
 (75 75 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (68 68 (:TYPE-PRESCRIPTION ALL-NATP))
 (54 54 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (33 33 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (33 33 (:REWRITE USE-ALL-CONSP-2))
 (33 33 (:REWRITE USE-ALL-CONSP))
 (33 33 (:REWRITE LEN-GIVES-CONSP))
 (33 33 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (33 33 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (33 33 (:REWRITE CONSP-FROM-LEN-BOUND))
 (30 3 (:REWRITE LIST::LEN-POS-REWRITE))
 (27 27 (:REWRITE USE-ALL-<-2))
 (27 27 (:REWRITE USE-ALL-<))
 (27 27 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (27 27 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (27 27 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (27 27 (:REWRITE DROP-LINEAR-HYPS2))
 (27 27 (:REWRITE DROP->-HYPS))
 (27 27 (:REWRITE DROP-<-HYPS))
 (27 27 (:REWRITE DEFAULT-<-2))
 (27 27 (:REWRITE DEFAULT-<-1))
 (27 27 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (27 27 (:REWRITE BOUND-WHEN-USB2))
 (27 27 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (27 27 (:REWRITE <-WHEN-BVLT))
 (27 27 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (27 27 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (27 27 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (27 27 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (27 27 (:REWRITE <-OF-0-WHEN-<-FREE))
 (27 27 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (27 27 (:REWRITE <-FROM-<=-FREE))
 (25 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (24 24 (:REWRITE LIST::TRUE-LISTP-FIX))
 (24 24 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (24 24 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (24 24 (:REWRITE CLR-DIFFERENTIAL))
 (24 24 (:REWRITE CDR-CONS))
 (24 24 (:REWRITE CAR-CONS))
 (13 13 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (10 5 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (10 2 (:REWRITE INTEGER-LISTP-OF-CDR))
 (6 6 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (6 3 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE ALL-NATP-IMPLIES-ALL-INTEGERP-CHEAP))
 (6 3 (:REWRITE ALL-INTEGERP-WHEN-ALL-NATP-CHEAP))
 (3 3 (:REWRITE USE-ALL-ALL-INTEGERP-2))
 (3 3 (:REWRITE USE-ALL-ALL-INTEGERP))
 (3 3 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (3 3 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (3 3 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE ALL-UNSIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (3 3 (:REWRITE ALL-SIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (3 3 (:REWRITE ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 )
(NON-INCREASINGP
 (2964 276 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (2856 33 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (756 27 (:REWRITE <-0-+-NEGATIVE-1))
 (384 24 (:REWRITE EQUAL-CONSTANT-+))
 (360 24 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (276 276 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (177 177 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (177 177 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (177 177 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (177 177 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (177 177 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (177 177 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (177 177 (:META LEN-CONS-META-RULE))
 (156 78 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (120 24 (:REWRITE HACK1))
 (116 92 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (108 54 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (105 105 (:REWRITE DEFAULT-+-2))
 (105 105 (:REWRITE DEFAULT-+-1))
 (105 105 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (105 105 (:REWRITE +-OF-MINUS))
 (92 92 (:REWRITE DEFAULT-CDR))
 (81 81 (:TYPE-PRESCRIPTION NAT-LISTP))
 (81 27 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (81 27 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (75 75 (:REWRITE DEFAULT-CAR))
 (75 75 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (68 68 (:TYPE-PRESCRIPTION ALL-NATP))
 (54 54 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (33 33 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (33 33 (:REWRITE USE-ALL-CONSP-2))
 (33 33 (:REWRITE USE-ALL-CONSP))
 (33 33 (:REWRITE LEN-GIVES-CONSP))
 (33 33 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (33 33 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (33 33 (:REWRITE CONSP-FROM-LEN-BOUND))
 (30 3 (:REWRITE LIST::LEN-POS-REWRITE))
 (27 27 (:REWRITE USE-ALL-<-2))
 (27 27 (:REWRITE USE-ALL-<))
 (27 27 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (27 27 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (27 27 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (27 27 (:REWRITE DROP-LINEAR-HYPS2))
 (27 27 (:REWRITE DROP->-HYPS))
 (27 27 (:REWRITE DROP-<-HYPS))
 (27 27 (:REWRITE DEFAULT-<-2))
 (27 27 (:REWRITE DEFAULT-<-1))
 (27 27 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (27 27 (:REWRITE BOUND-WHEN-USB2))
 (27 27 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (27 27 (:REWRITE <-WHEN-BVLT))
 (27 27 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (27 27 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (27 27 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (27 27 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (27 27 (:REWRITE <-OF-0-WHEN-<-FREE))
 (27 27 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (27 27 (:REWRITE <-FROM-<=-FREE))
 (25 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (24 24 (:REWRITE LIST::TRUE-LISTP-FIX))
 (24 24 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (24 24 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (24 24 (:REWRITE CLR-DIFFERENTIAL))
 (24 24 (:REWRITE CDR-CONS))
 (24 24 (:REWRITE CAR-CONS))
 (13 13 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (10 5 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (10 2 (:REWRITE INTEGER-LISTP-OF-CDR))
 (6 6 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (6 3 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE ALL-NATP-IMPLIES-ALL-INTEGERP-CHEAP))
 (6 3 (:REWRITE ALL-INTEGERP-WHEN-ALL-NATP-CHEAP))
 (3 3 (:REWRITE USE-ALL-ALL-INTEGERP-2))
 (3 3 (:REWRITE USE-ALL-ALL-INTEGERP))
 (3 3 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (3 3 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (3 3 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE ALL-UNSIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (3 3 (:REWRITE ALL-SIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (3 3 (:REWRITE ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 )
(ALL-RATIONAL-LISTP
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-RATIONAL-LISTP-OF-CONS)
(USE-ALL-RATIONAL-LISTP-FOR-CAR)
(USE-ALL-RATIONAL-LISTP-FOR-CAR-OF-LAST)
(ALL-RATIONAL-LISTP-OF-APPEND)
(ALL-RATIONAL-LISTP-OF-UNION-EQUAL)
(ALL-RATIONAL-LISTP-WHEN-NOT-CONSP)
(ALL-RATIONAL-LISTP-WHEN-NOT-CONSP-CHEAP)
(ALL-RATIONAL-LISTP-OF-REVAPPEND)
(ALL-RATIONAL-LISTP-OF-CDR)
(ALL-RATIONAL-LISTP-OF-NTHCDR)
(ALL-RATIONAL-LISTP-OF-FIRSTN)
(ALL-RATIONAL-LISTP-OF-REMOVE1-EQUAL)
(ALL-RATIONAL-LISTP-OF-REMOVE-EQUAL)
(ALL-RATIONAL-LISTP-OF-LAST)
(ALL-RATIONAL-LISTP-OF-TAKE)
(ALL-RATIONAL-LISTP-WHEN-PERM)
(ALL-RATIONAL-LISTP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-RATIONAL-LISTP-1)
(USE-ALL-RATIONAL-LISTP)
(USE-ALL-RATIONAL-LISTP-2)
(ALL-RATIONAL-LISTP-OF-ADD-TO-SET-EQUAL)
(ALL-ALL-TRUE-LISTP
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-ALL-TRUE-LISTP-OF-CONS)
(USE-ALL-ALL-TRUE-LISTP-FOR-CAR)
(USE-ALL-ALL-TRUE-LISTP-FOR-CAR-OF-LAST)
(ALL-ALL-TRUE-LISTP-OF-APPEND)
(ALL-ALL-TRUE-LISTP-OF-UNION-EQUAL)
(ALL-ALL-TRUE-LISTP-WHEN-NOT-CONSP)
(ALL-ALL-TRUE-LISTP-WHEN-NOT-CONSP-CHEAP)
(ALL-ALL-TRUE-LISTP-OF-REVAPPEND)
(ALL-ALL-TRUE-LISTP-OF-CDR)
(ALL-ALL-TRUE-LISTP-OF-NTHCDR)
(ALL-ALL-TRUE-LISTP-OF-FIRSTN)
(ALL-ALL-TRUE-LISTP-OF-REMOVE1-EQUAL)
(ALL-ALL-TRUE-LISTP-OF-REMOVE-EQUAL)
(ALL-ALL-TRUE-LISTP-OF-LAST)
(ALL-ALL-TRUE-LISTP-OF-TAKE)
(ALL-ALL-TRUE-LISTP-WHEN-PERM)
(ALL-ALL-TRUE-LISTP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-ALL-TRUE-LISTP-1)
(USE-ALL-ALL-TRUE-LISTP)
(USE-ALL-ALL-TRUE-LISTP-2)
(ALL-ALL-TRUE-LISTP-OF-ADD-TO-SET-EQUAL)
(ALL-INTEGERP-OF-NTH
 (308 7 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (277 21 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (140 5 (:REWRITE <-0-+-NEGATIVE-1))
 (115 5 (:REWRITE LEN-OF-CDR-BETTER))
 (100 1 (:DEFINITION ALL-ALL-INTEGERP))
 (79 1 (:REWRITE LIST::NTH-WITH-LARGE-INDEX))
 (77 1 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (77 1 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (71 4 (:REWRITE ALL-ALL-INTEGERP-WHEN-NOT-CONSP))
 (21 21 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (20 10 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (16 16 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (16 16 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (16 16 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (16 16 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (16 16 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (16 16 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (16 16 (:META LEN-CONS-META-RULE))
 (15 5 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (15 5 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (12 12 (:TYPE-PRESCRIPTION ALL-NATP))
 (11 2 (:REWRITE LIST::LEN-POS-REWRITE))
 (10 10 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (7 7 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (7 7 (:REWRITE USE-ALL-CONSP-2))
 (7 7 (:REWRITE USE-ALL-CONSP))
 (7 7 (:REWRITE LEN-GIVES-CONSP))
 (7 7 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (7 7 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (7 7 (:REWRITE CONSP-FROM-LEN-BOUND))
 (6 6 (:REWRITE DEFAULT-CDR))
 (6 6 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (6 1 (:REWRITE USE-ALL-ALL-INTEGERP-FOR-CAR))
 (6 1 (:REWRITE ALL-ALL-INTEGERP-OF-CDR))
 (5 5 (:REWRITE USE-ALL-<-2))
 (5 5 (:REWRITE USE-ALL-<))
 (5 5 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (5 5 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (5 5 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (5 5 (:REWRITE DROP-LINEAR-HYPS2))
 (5 5 (:REWRITE DROP->-HYPS))
 (5 5 (:REWRITE DROP-<-HYPS))
 (5 5 (:REWRITE DEFAULT-<-2))
 (5 5 (:REWRITE DEFAULT-<-1))
 (5 5 (:REWRITE DEFAULT-+-2))
 (5 5 (:REWRITE DEFAULT-+-1))
 (5 5 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (5 5 (:REWRITE BOUND-WHEN-USB2))
 (5 5 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (5 5 (:REWRITE <-WHEN-BVLT))
 (5 5 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (5 5 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (5 5 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (5 5 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (5 5 (:REWRITE <-OF-0-WHEN-<-FREE))
 (5 5 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (5 5 (:REWRITE <-FROM-<=-FREE))
 (5 5 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (5 5 (:REWRITE +-OF-MINUS))
 (5 1 (:REWRITE ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE ALL-ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE USE-ALL-ALL-INTEGERP-2))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 1 (:REWRITE JVM::MEMBER-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (2 1 (:REWRITE ALL-NATP-IMPLIES-ALL-INTEGERP-CHEAP))
 (2 1 (:REWRITE ALL-INTEGERP-WHEN-ALL-NATP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NFIX))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1 1 (:REWRITE NTH-WITH-LARGE-INDEX-CHEAP))
 (1 1 (:REWRITE NTH-WHEN-ZP-CHEAP))
 (1 1 (:REWRITE NTH-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE LIST::NTH-WHEN-N-IS-NOT-AN-INTEGERP))
 (1 1 (:REWRITE LIST::NTH-WHEN-L-IS-NOT-A-CONSP))
 (1 1 (:REWRITE NTH-WHEN-EQUAL-OF-TAKE-AND-CONSTANT))
 (1 1 (:REWRITE NTH-WHEN-EQUAL-OF-FIRSTN-AND-CONSTANT))
 (1 1 (:REWRITE NTH-WHEN-ALL-SAME-CHEAP))
 (1 1 (:REWRITE NTH-WHEN-ALL-EQUAL$-HELPER))
 (1 1 (:REWRITE NTH-WHEN-<=-LEN-CHEAP))
 (1 1 (:REWRITE NTH-BECOMES-BVNTH-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-FIRSTN))
 (1 1 (:REWRITE MEMBERP-CONSTANT-OPENER))
 (1 1 (:REWRITE FW-1))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (1 1 (:REWRITE ALL-UNSIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (1 1 (:REWRITE ALL-SIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 )
(ALL-NON-DECREASINGP
 (998 1 (:DEFINITION NON-DECREASINGP))
 (700 1 (:DEFINITION SBVLE))
 (462 1 (:REWRITE SBVLT-REWRITE))
 (434 8 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (224 24 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (220 1 (:REWRITE SBVLT-BECOMES-BVLT-BETTER))
 (155 4 (:REWRITE <-0-+-NEGATIVE-1))
 (143 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (110 4 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (108 4 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (99 4 (:REWRITE LEN-OF-CDR-BETTER))
 (90 45 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (90 45 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (90 2 (:REWRITE BVLT-WHEN-ARG2-IS-NOT-AN-INTEGER))
 (85 5 (:REWRITE DEFAULT-<-1))
 (78 2 (:REWRITE BVLT-WHEN-ARG1-IS-NOT-AN-INTEGER))
 (50 50 (:TYPE-PRESCRIPTION NAT-LISTP))
 (45 45 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (40 5 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (39 2 (:REWRITE LIST::LEN-POS-REWRITE))
 (39 1 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (34 1 (:REWRITE UNSIGNED-BYTE-P-OF-CAR-WHEN-ALL-UNSIGNED-BYTE-P))
 (32 24 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (28 20 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (27 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (23 2 (:REWRITE ALL-UNSIGNED-BYTE-P-OF-CDR))
 (22 22 (:TYPE-PRESCRIPTION ALL-NATP))
 (21 21 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (21 21 (:TYPE-PRESCRIPTION GETBIT-TYPE))
 (20 20 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (20 20 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (20 20 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (20 20 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (20 20 (:META LEN-CONS-META-RULE))
 (16 8 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (16 8 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (16 1 (:REWRITE USE-ALL-<-FOR-CAR))
 (15 3 (:REWRITE INTEGER-LISTP-OF-CDR))
 (13 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-FOR-CAR))
 (12 6 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (12 4 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (12 4 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (10 10 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (10 10 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (10 7 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (10 5 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (10 5 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (10 5 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (10 5 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (10 1 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (9 9 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (8 8 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (8 8 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (8 8 (:REWRITE USE-ALL-CONSP-2))
 (8 8 (:REWRITE USE-ALL-CONSP))
 (8 8 (:REWRITE LEN-GIVES-CONSP))
 (8 8 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (8 8 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (8 8 (:REWRITE CONSP-FROM-LEN-BOUND))
 (8 1 (:REWRITE ALL-<-OF-CDR))
 (7 7 (:TYPE-PRESCRIPTION ALL-UNSIGNED-BYTE-P))
 (7 7 (:REWRITE DEFAULT-CDR))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 5 (:REWRITE DEFAULT-<-2))
 (6 3 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (6 3 (:REWRITE GETBIT-WHEN-NOT-1))
 (6 3 (:REWRITE GETBIT-WHEN-NOT-0))
 (6 3 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (6 1 (:REWRITE UNSIGNED-BYTE-P-OF-CAR-WHEN-UNSIGNED-BYTE-LISTP-2))
 (5 5 (:TYPE-PRESCRIPTION ALL-<))
 (5 5 (:REWRITE USE-ALL-<-2))
 (5 5 (:REWRITE USE-ALL-<))
 (5 5 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (5 5 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (5 5 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (5 5 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (5 5 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (5 5 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (5 5 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (5 5 (:REWRITE DROP-LINEAR-HYPS2))
 (5 5 (:REWRITE DROP->-HYPS))
 (5 5 (:REWRITE DROP-<-HYPS))
 (5 5 (:REWRITE BOUND-WHEN-USB2))
 (5 5 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (5 5 (:REWRITE <-WHEN-BVLT))
 (5 5 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (5 5 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (5 5 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (5 5 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (5 5 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (5 5 (:REWRITE <-FROM-<=-FREE))
 (5 4 (:REWRITE DEFAULT-+-2))
 (5 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (5 1 (:REWRITE USE-ALL-ALL-UNSIGNED-BYTE-P-FOR-CAR))
 (5 1 (:REWRITE ALL-UNSIGNED-BYTE-P-OF-CAR-2))
 (5 1 (:REWRITE ALL-RATIONALP-OF-CDR))
 (4 4 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-LISTP))
 (4 4 (:TYPE-PRESCRIPTION BVLT))
 (4 4 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (4 4 (:TYPE-PRESCRIPTION ALL-ALL-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 4 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (4 4 (:REWRITE <-OF-0-WHEN-<-FREE))
 (4 4 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (4 4 (:REWRITE +-OF-MINUS))
 (4 3 (:REWRITE GETBIT-IMPOSSIBLE-VALUE))
 (4 2 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-AUX-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (3 3 (:REWRITE USE-ALL-ALL-UNSIGNED-BYTE-P-2))
 (3 3 (:REWRITE USE-ALL-ALL-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (3 3 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (3 3 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (3 3 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (3 3 (:REWRITE IMPOSSIBLE-VALUE-2))
 (3 3 (:REWRITE IMPOSSIBLE-VALUE-1))
 (3 3 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-SIGNED-BYTE-P-HIGH))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-BVLT-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (3 3 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (3 3 (:REWRITE GETBIT-WHEN-BVLT-OF-SMALL))
 (3 3 (:REWRITE GETBIT-WHEN-BVCHOP-BOUND))
 (3 3 (:REWRITE GETBIT-WHEN-BOUND4))
 (3 3 (:REWRITE GETBIT-WHEN-BOUND3))
 (3 3 (:REWRITE GETBIT-WHEN-BOUND2))
 (3 3 (:REWRITE GETBIT-WHEN-BOUND))
 (3 3 (:REWRITE GETBIT-TRIM))
 (3 3 (:REWRITE GETBIT-TOO-HIGH-CHEAP-FREE))
 (3 3 (:REWRITE GETBIT-TOO-HIGH-CHEAP))
 (3 3 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (3 3 (:REWRITE EQUAL-WHEN-BVLT))
 (3 3 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (3 3 (:REWRITE EQUAL-WHEN-<-OF-+))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (3 3 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (3 3 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (3 3 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (3 3 (:REWRITE DEFAULT-CAR))
 (3 3 (:REWRITE CLR-DIFFERENTIAL))
 (3 3 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (3 3 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-LISTP-CHEAP))
 (3 3 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-NOT-INTEGERP-WIDTH))
 (3 3 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-NOT-CONSP))
 (3 3 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-NEGATIVE-WIDTH))
 (3 3 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-BV-ARRAYP))
 (3 3 (:REWRITE ALL-UNSIGNED-BYTE-P-FROM-ALL-UNSIGNED-BYTE-P-NARROWER))
 (3 3 (:REWRITE ALL-ALL-UNSIGNED-BYTE-P-OF-GROUP2-BACK))
 (3 1 (:REWRITE UNSIGNED-BYTE-LISTP-OF-CDR))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP))
 (2 2 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION ALISTP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE SLICE-WHEN-LARGE-ALT))
 (2 2 (:REWRITE NOT-BVLT-WHEN-NOT-BVLT-NARROWER2))
 (2 2 (:REWRITE NOT-BVLT-WHEN-NOT-BVLT-NARROWER))
 (2 2 (:REWRITE NOT-BVLT-OF-CONSTANT-WHEN-<=-OF-CONSTANT))
 (2 2 (:REWRITE NOT-BVLT-OF-CONSTANT-WHEN-<-OF-CONSTANT))
 (2 2 (:REWRITE INTEGERP-OF-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE BVLT-WHEN-UNSIGNED-BYTE-P-BETTER-NON-CONSTANT))
 (2 2 (:REWRITE BVLT-WHEN-UNSIGNED-BYTE-P-BETTER))
 (2 2 (:REWRITE BVLT-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE BVLT-WHEN-SBVLT-FALSE))
 (2 2 (:REWRITE BVLT-WHEN-NOT-POSP))
 (2 2 (:REWRITE BVLT-WHEN-NOT-MAX))
 (2 2 (:REWRITE BVLT-WHEN-NOT-BVLT-ONE-MORE))
 (2 2 (:REWRITE BVLT-WHEN-NOT-BVLT-OF-SLICE-AND-SLICE2))
 (2 2 (:REWRITE BVLT-WHEN-NOT-BVLT-OF-SLICE-AND-SLICE))
 (2 2 (:REWRITE BVLT-WHEN-NOT-BVLT))
 (2 2 (:REWRITE BVLT-WHEN-LOW-BITS-TOO-BIG))
 (2 2 (:REWRITE BVLT-WHEN-EQUAL-OF-CONSTANT))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-WIDER))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-SMALLER-OF-CONSTANT))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-SMALLER))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-REVERSE))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-MUST-BE-FAKE-FREE))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-FALSE2))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-FALSE))
 (2 2 (:REWRITE BVLT-WHEN-BVCHOP-KNOWN-SUBST-ALT))
 (2 2 (:REWRITE BVLT-WHEN-BVCHOP-KNOWN-SUBST))
 (2 2 (:REWRITE BVLT-WHEN-BOUND))
 (2 2 (:REWRITE BVLT-UNIQUE))
 (2 2 (:REWRITE BVLT-TRIM-CONSTANT-ARG2))
 (2 2 (:REWRITE BVLT-TRIM-CONSTANT-ARG1))
 (2 2 (:REWRITE BVLT-TRIM-ARG2))
 (2 2 (:REWRITE BVLT-TRIM-ARG1))
 (2 2 (:REWRITE BVLT-TRANSITIVE-FREE2-BACK-CONSTANTS))
 (2 2 (:REWRITE BVLT-TRANSITIVE-FREE2-BACK))
 (2 2 (:REWRITE BVLT-TRANSITIVE-5-B))
 (2 2 (:REWRITE BVLT-TRANSITIVE-5-A))
 (2 2 (:REWRITE BVLT-TRANSITIVE-4-B))
 (2 2 (:REWRITE BVLT-TRANSITIVE-4-A))
 (2 2 (:REWRITE BVLT-TRANSITIVE-3-B))
 (2 2 (:REWRITE BVLT-TRANSITIVE-3-A))
 (2 2 (:REWRITE BVLT-TRANSITIVE-2-B))
 (2 2 (:REWRITE BVLT-TRANSITIVE-2-A))
 (2 2 (:REWRITE BVLT-TRANSITIVE-1-B))
 (2 2 (:REWRITE BVLT-TRANSITIVE-1-A))
 (2 2 (:REWRITE BVLT-TIGHTEN-NON-DAG))
 (2 2 (:REWRITE BVLT-TIGHTEN-FREE-AND-FREE))
 (2 2 (:REWRITE BVLT-TIGHTEN-FREE-ALT))
 (2 2 (:REWRITE BVLT-TIGHTEN-FREE))
 (2 2 (:REWRITE BVLT-TIGHTEN))
 (2 2 (:REWRITE BVLT-OF-MAX-MINUS-1-ARG2-CONSTANT-VERSION))
 (2 2 (:REWRITE BVLT-OF-MAX-CONSTANT-VERSION))
 (2 2 (:REWRITE BVLT-OF-MAX-ARG2))
 (2 2 (:REWRITE BVLT-OF-HUGE-WHEN-SLICE-NOT-MAX))
 (2 2 (:REWRITE BVLT-OF-CONSTANT-WHEN-USB))
 (2 2 (:REWRITE BVLT-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-TIGHTER))
 (2 2 (:REWRITE BVLT-OF-CONSTANT-WHEN-<-OF-CONSTANT))
 (2 2 (:REWRITE BVLT-MUST-BE))
 (2 2 (:REWRITE BVLT-MAX-ARG3-CONSTANT-VERSION))
 (2 2 (:REWRITE BVLT-FALSE-WHEN-BVLT-BETTER))
 (2 2 (:REWRITE BVLT-FALSE-WHEN-BVLT))
 (2 2 (:REWRITE BOUND-WHEN-LOW-BITS-0-ALT))
 (2 2 (:REWRITE BOUND-WHEN-LOW-BITS-0))
 (2 2 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE ALL-ALL-UNSIGNED-BYTE-P-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-ALL-UNSIGNED-BYTE-P-WHEN-NOT-CONSP))
 (2 2 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (2 2 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (2 2 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (2 2 (:REWRITE ALL-<-TRANSITIVE))
 (2 1 (:REWRITE UNSIGNED-BYTE-P-OF-CAR-WHEN-ALL-UNSIGNED-BYTE-P-CHEAP))
 (2 1 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONZERO))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP))
 (1 1 (:REWRITE WFR-HACK5))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-2))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USE-ALL-RATIONALP-2))
 (1 1 (:REWRITE USE-ALL-RATIONALP))
 (1 1 (:REWRITE USE-ALL-ALL-TRUE-LISTP-2))
 (1 1 (:REWRITE USE-ALL-ALL-TRUE-LISTP))
 (1 1 (:REWRITE USB-WHEN-BVLT-HACK-GEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-ZP-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0-POLARITY))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-NOT-BVLT-TIGHTEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT-TIGHTEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-BOUND))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-FROM-BOUND))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-SHRINK))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-CONSTANT))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-CONSTANT-VERSION))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-<=-VERSION))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE UBP-LONGER-BETTER))
 (1 1 (:REWRITE SBVLT-WHEN-SBVLT-OF-ONE-LESS))
 (1 1 (:REWRITE SBVLT-WHEN-SBVLT-OF-BVPLUS-OF-CONSTANT))
 (1 1 (:REWRITE SBVLT-WHEN-SBVLT-OF-BVMINUS-OF-CONSTANT))
 (1 1 (:REWRITE SBVLT-WHEN-BVLT-CONSTANTS))
 (1 1 (:REWRITE SBVLT-WEAKEN-TO-NOT-EQUAL-WHEN-<=))
 (1 1 (:REWRITE SBVLT-OF-NEGATIVE-CONSTANT-WHEN-UNSIGNED-BYTE-P-2))
 (1 1 (:REWRITE SBVLT-OF-NEGATIVE-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SBVLT-OF-MINUS-ONE))
 (1 1 (:REWRITE SBVLT-OF-CONSTANT-WHEN-<-OF-CONSTANT))
 (1 1 (:REWRITE SBVLT-FALSE-WHEN-SBVLT-GEN))
 (1 1 (:REWRITE SBVLT-FALSE-FROM-BOUND-BETTER))
 (1 1 (:REWRITE SBVLT-FALSE-FROM-BOUND))
 (1 1 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (1 1 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE BOUND-GAP-THEOREM))
 (1 1 (:REWRITE ALL-ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-ALL-INTEGERP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 )
(ALL-NON-DECREASINGP-OF-CONS)
(USE-ALL-NON-DECREASINGP-FOR-CAR)
(USE-ALL-NON-DECREASINGP-FOR-CAR-OF-LAST)
(ALL-NON-DECREASINGP-OF-APPEND)
(ALL-NON-DECREASINGP-OF-UNION-EQUAL)
(ALL-NON-DECREASINGP-WHEN-NOT-CONSP)
(ALL-NON-DECREASINGP-WHEN-NOT-CONSP-CHEAP)
(ALL-NON-DECREASINGP-OF-REVAPPEND)
(ALL-NON-DECREASINGP-OF-CDR)
(ALL-NON-DECREASINGP-OF-NTHCDR)
(ALL-NON-DECREASINGP-OF-FIRSTN)
(ALL-NON-DECREASINGP-OF-REMOVE1-EQUAL)
(ALL-NON-DECREASINGP-OF-REMOVE-EQUAL)
(ALL-NON-DECREASINGP-OF-LAST)
(ALL-NON-DECREASINGP-OF-TAKE)
(ALL-NON-DECREASINGP-WHEN-PERM)
(ALL-NON-DECREASINGP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-NON-DECREASINGP-1)
(USE-ALL-NON-DECREASINGP)
(USE-ALL-NON-DECREASINGP-2)
(ALL-NON-DECREASINGP-OF-ADD-TO-SET-EQUAL)
(ALL-NON-INCREASINGP
 (1426 1 (:DEFINITION NON-INCREASINGP))
 (1128 1 (:DEFINITION SBVLE))
 (732 13 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (648 1 (:REWRITE SBVLT-BECOMES-BVLT-BETTER))
 (585 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (527 8 (:REWRITE DEFAULT-<-1))
 (462 1 (:REWRITE SBVLT-REWRITE))
 (457 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (433 2 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (379 2 (:DEFINITION STRIP-CARS))
 (269 4 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (247 39 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (239 7 (:REWRITE <-0-+-NEGATIVE-1))
 (238 9 (:REWRITE LEN-OF-CDR-BETTER))
 (139 5 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (114 57 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (114 57 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (108 4 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (90 2 (:REWRITE BVLT-WHEN-ARG1-IS-NOT-AN-INTEGER))
 (87 12 (:REWRITE DEFAULT-CAR))
 (78 2 (:REWRITE BVLT-WHEN-ARG2-IS-NOT-AN-INTEGER))
 (62 62 (:TYPE-PRESCRIPTION NAT-LISTP))
 (60 60 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (55 39 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (49 1 (:REWRITE RATIONAL-LISTP-OF-CONS))
 (46 30 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (45 1 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (44 22 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (39 2 (:REWRITE LIST::LEN-POS-REWRITE))
 (35 5 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (34 1 (:REWRITE EQUAL-CONSTANT-+))
 (33 1 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (30 30 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (30 30 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (30 30 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (30 30 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (30 30 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (30 30 (:META LEN-CONS-META-RULE))
 (29 29 (:TYPE-PRESCRIPTION ALL-NATP))
 (28 14 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (24 24 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (22 1 (:REWRITE UNSIGNED-BYTE-P-OF-CAR-WHEN-ALL-UNSIGNED-BYTE-P))
 (21 21 (:TYPE-PRESCRIPTION GETBIT-TYPE))
 (21 7 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (21 7 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (19 19 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (19 1 (:REWRITE LIST::LIST-EQUIV-HACK))
 (18 2 (:REWRITE LIST::OPEN-EQUIV))
 (17 12 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (15 15 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (14 7 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (14 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-FOR-CAR))
 (13 13 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (13 13 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (12 12 (:REWRITE USE-ALL-CONSP-2))
 (12 12 (:REWRITE USE-ALL-CONSP))
 (12 12 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (12 12 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (12 12 (:REWRITE LEN-GIVES-CONSP))
 (12 12 (:REWRITE DEFAULT-CDR))
 (12 12 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (12 12 (:REWRITE CONSP-FROM-LEN-BOUND))
 (12 12 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (10 9 (:REWRITE DEFAULT-+-2))
 (10 5 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (10 5 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (10 5 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (10 5 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (10 3 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (10 2 (:REWRITE INTEGER-LISTP-OF-CDR))
 (9 9 (:REWRITE DEFAULT-+-1))
 (9 9 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (9 9 (:REWRITE +-OF-MINUS))
 (9 8 (:REWRITE DEFAULT-<-2))
 (8 8 (:REWRITE USE-ALL-<-2))
 (8 8 (:REWRITE USE-ALL-<))
 (8 8 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (8 8 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (8 8 (:REWRITE DROP-LINEAR-HYPS2))
 (8 8 (:REWRITE DROP->-HYPS))
 (8 8 (:REWRITE DROP-<-HYPS))
 (8 8 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (8 8 (:REWRITE BOUND-WHEN-USB2))
 (8 8 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (8 8 (:REWRITE <-WHEN-BVLT))
 (8 8 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (8 8 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (8 8 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (8 8 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (8 8 (:REWRITE <-FROM-<=-FREE))
 (8 1 (:REWRITE USE-ALL-<-FOR-CAR))
 (7 7 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (7 7 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (7 7 (:REWRITE <-OF-0-WHEN-<-FREE))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (6 3 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (6 3 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-AUX-CHEAP))
 (6 3 (:REWRITE GETBIT-WHEN-NOT-1))
 (6 3 (:REWRITE GETBIT-WHEN-NOT-0))
 (6 3 (:REWRITE GETBIT-TOO-HIGH-CHEAP-2))
 (6 3 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (6 2 (:REWRITE USE-ALL-ALL-UNSIGNED-BYTE-P-FOR-CAR))
 (6 2 (:REWRITE ALL-UNSIGNED-BYTE-P-OF-CAR-2))
 (6 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (5 5 (:TYPE-PRESCRIPTION ALL-UNSIGNED-BYTE-P))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (5 5 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (5 5 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (5 5 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (5 5 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (5 5 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (5 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (5 1 (:REWRITE HACK1))
 (4 4 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (4 4 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (4 4 (:TYPE-PRESCRIPTION BVLT))
 (4 4 (:TYPE-PRESCRIPTION ALL-ALL-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (4 4 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (4 4 (:REWRITE CLR-DIFFERENTIAL))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 3 (:REWRITE GETBIT-IMPOSSIBLE-VALUE))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION WEAK-DAGP))
 (3 3 (:TYPE-PRESCRIPTION ALL-<))
 (3 3 (:TYPE-PRESCRIPTION ALISTP))
 (3 3 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (3 3 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (3 3 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (3 3 (:REWRITE INTEGERP-OF-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (3 3 (:REWRITE IMPOSSIBLE-VALUE-2))
 (3 3 (:REWRITE IMPOSSIBLE-VALUE-1))
 (3 3 (:REWRITE GETBIT-WHEN-SLICE-IS-KNOWN-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-SIGNED-BYTE-P-HIGH))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-INTEGERP-ARG1))
 (3 3 (:REWRITE GETBIT-WHEN-NOT-BVLT-CONSTANT))
 (3 3 (:REWRITE GETBIT-WHEN-N-IS-NEGATIVE))
 (3 3 (:REWRITE GETBIT-WHEN-EQUAL-OF-CONSTANT-AND-BVCHOP-CONSTANT-VERSION))
 (3 3 (:REWRITE GETBIT-WHEN-BVLT-OF-SMALL))
 (3 3 (:REWRITE GETBIT-WHEN-BVCHOP-BOUND))
 (3 3 (:REWRITE GETBIT-WHEN-BOUND4))
 (3 3 (:REWRITE GETBIT-WHEN-BOUND3))
 (3 3 (:REWRITE GETBIT-WHEN-BOUND2))
 (3 3 (:REWRITE GETBIT-WHEN-BOUND))
 (3 3 (:REWRITE GETBIT-TRIM))
 (3 3 (:REWRITE GETBIT-TOO-HIGH-CHEAP-FREE))
 (3 3 (:REWRITE GETBIT-TOO-HIGH-CHEAP))
 (3 3 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (3 3 (:REWRITE EQUAL-WHEN-BVLT))
 (3 3 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (3 3 (:REWRITE EQUAL-WHEN-<-OF-+))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (3 3 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (3 3 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (3 3 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (3 3 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (3 1 (:REWRITE UNSIGNED-BYTE-P-OF-CAR-WHEN-UNSIGNED-BYTE-LISTP-2))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (3 1 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (3 1 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (2 2 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (2 2 (:REWRITE USE-ALL-RATIONALP-2))
 (2 2 (:REWRITE USE-ALL-RATIONALP))
 (2 2 (:REWRITE USE-ALL-RATIONAL-LISTP-2))
 (2 2 (:REWRITE USE-ALL-RATIONAL-LISTP))
 (2 2 (:REWRITE USE-ALL-ALL-UNSIGNED-BYTE-P-2))
 (2 2 (:REWRITE USE-ALL-ALL-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE SLICE-WHEN-LARGE-ALT))
 (2 2 (:REWRITE NOT-BVLT-WHEN-NOT-BVLT-NARROWER2))
 (2 2 (:REWRITE NOT-BVLT-WHEN-NOT-BVLT-NARROWER))
 (2 2 (:REWRITE NOT-BVLT-OF-CONSTANT-WHEN-<=-OF-CONSTANT))
 (2 2 (:REWRITE NOT-BVLT-OF-CONSTANT-WHEN-<-OF-CONSTANT))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE BVLT-WHEN-UNSIGNED-BYTE-P-BETTER-NON-CONSTANT))
 (2 2 (:REWRITE BVLT-WHEN-UNSIGNED-BYTE-P-BETTER))
 (2 2 (:REWRITE BVLT-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE BVLT-WHEN-SBVLT-FALSE))
 (2 2 (:REWRITE BVLT-WHEN-NOT-POSP))
 (2 2 (:REWRITE BVLT-WHEN-NOT-MAX))
 (2 2 (:REWRITE BVLT-WHEN-NOT-BVLT-ONE-MORE))
 (2 2 (:REWRITE BVLT-WHEN-NOT-BVLT-OF-SLICE-AND-SLICE2))
 (2 2 (:REWRITE BVLT-WHEN-NOT-BVLT-OF-SLICE-AND-SLICE))
 (2 2 (:REWRITE BVLT-WHEN-NOT-BVLT))
 (2 2 (:REWRITE BVLT-WHEN-LOW-BITS-TOO-BIG))
 (2 2 (:REWRITE BVLT-WHEN-EQUAL-OF-CONSTANT))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-WIDER))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-SMALLER-OF-CONSTANT))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-SMALLER))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-REVERSE))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-MUST-BE-FAKE-FREE))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-FALSE2))
 (2 2 (:REWRITE BVLT-WHEN-BVLT-FALSE))
 (2 2 (:REWRITE BVLT-WHEN-BVCHOP-KNOWN-SUBST-ALT))
 (2 2 (:REWRITE BVLT-WHEN-BVCHOP-KNOWN-SUBST))
 (2 2 (:REWRITE BVLT-WHEN-BOUND))
 (2 2 (:REWRITE BVLT-UNIQUE))
 (2 2 (:REWRITE BVLT-TRIM-CONSTANT-ARG2))
 (2 2 (:REWRITE BVLT-TRIM-CONSTANT-ARG1))
 (2 2 (:REWRITE BVLT-TRIM-ARG2))
 (2 2 (:REWRITE BVLT-TRIM-ARG1))
 (2 2 (:REWRITE BVLT-TRANSITIVE-FREE2-BACK-CONSTANTS))
 (2 2 (:REWRITE BVLT-TRANSITIVE-FREE2-BACK))
 (2 2 (:REWRITE BVLT-TRANSITIVE-5-B))
 (2 2 (:REWRITE BVLT-TRANSITIVE-5-A))
 (2 2 (:REWRITE BVLT-TRANSITIVE-4-B))
 (2 2 (:REWRITE BVLT-TRANSITIVE-4-A))
 (2 2 (:REWRITE BVLT-TRANSITIVE-3-B))
 (2 2 (:REWRITE BVLT-TRANSITIVE-3-A))
 (2 2 (:REWRITE BVLT-TRANSITIVE-2-B))
 (2 2 (:REWRITE BVLT-TRANSITIVE-2-A))
 (2 2 (:REWRITE BVLT-TRANSITIVE-1-B))
 (2 2 (:REWRITE BVLT-TRANSITIVE-1-A))
 (2 2 (:REWRITE BVLT-TIGHTEN-NON-DAG))
 (2 2 (:REWRITE BVLT-TIGHTEN-FREE-AND-FREE))
 (2 2 (:REWRITE BVLT-TIGHTEN-FREE-ALT))
 (2 2 (:REWRITE BVLT-TIGHTEN-FREE))
 (2 2 (:REWRITE BVLT-TIGHTEN))
 (2 2 (:REWRITE BVLT-OF-MAX-MINUS-1-ARG2-CONSTANT-VERSION))
 (2 2 (:REWRITE BVLT-OF-MAX-CONSTANT-VERSION))
 (2 2 (:REWRITE BVLT-OF-MAX-ARG2))
 (2 2 (:REWRITE BVLT-OF-HUGE-WHEN-SLICE-NOT-MAX))
 (2 2 (:REWRITE BVLT-OF-CONSTANT-WHEN-USB))
 (2 2 (:REWRITE BVLT-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-TIGHTER))
 (2 2 (:REWRITE BVLT-OF-CONSTANT-WHEN-<-OF-CONSTANT))
 (2 2 (:REWRITE BVLT-MUST-BE))
 (2 2 (:REWRITE BVLT-MAX-ARG3-CONSTANT-VERSION))
 (2 2 (:REWRITE BVLT-FALSE-WHEN-BVLT-BETTER))
 (2 2 (:REWRITE BVLT-FALSE-WHEN-BVLT))
 (2 2 (:REWRITE BOUND-WHEN-LOW-BITS-0-ALT))
 (2 2 (:REWRITE BOUND-WHEN-LOW-BITS-0))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-UNSIGNED-BYTE-LISTP-CHEAP))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-NOT-INTEGERP-WIDTH))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-NOT-CONSP))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-NEGATIVE-WIDTH))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE ALL-UNSIGNED-BYTE-P-FROM-ALL-UNSIGNED-BYTE-P-NARROWER))
 (2 2 (:REWRITE ALL-ALL-UNSIGNED-BYTE-P-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-ALL-UNSIGNED-BYTE-P-WHEN-NOT-CONSP))
 (2 2 (:REWRITE ALL-ALL-UNSIGNED-BYTE-P-OF-GROUP2-BACK))
 (2 1 (:REWRITE UNSIGNED-BYTE-P-OF-CAR-WHEN-ALL-UNSIGNED-BYTE-P-CHEAP))
 (2 1 (:REWRITE LIST::TRUE-LISTP-FIX))
 (2 1 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (2 1 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (2 1 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (2 1 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (2 1 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONZERO))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP))
 (1 1 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-2))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USE-ALL-ALL-TRUE-LISTP-2))
 (1 1 (:REWRITE USE-ALL-ALL-TRUE-LISTP))
 (1 1 (:REWRITE USB-WHEN-BVLT-HACK-GEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-ZP-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0-POLARITY))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-NOT-BVLT-TIGHTEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT-TIGHTEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-BOUND))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-FROM-BOUND))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-SHRINK))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-CONSTANT))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-CONSTANT-VERSION))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-<=-VERSION))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE UBP-LONGER-BETTER))
 (1 1 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE SBVLT-WHEN-SBVLT-OF-ONE-LESS))
 (1 1 (:REWRITE SBVLT-WHEN-SBVLT-OF-BVPLUS-OF-CONSTANT))
 (1 1 (:REWRITE SBVLT-WHEN-SBVLT-OF-BVMINUS-OF-CONSTANT))
 (1 1 (:REWRITE SBVLT-WHEN-BVLT-CONSTANTS))
 (1 1 (:REWRITE SBVLT-WEAKEN-TO-NOT-EQUAL-WHEN-<=))
 (1 1 (:REWRITE SBVLT-OF-NEGATIVE-CONSTANT-WHEN-UNSIGNED-BYTE-P-2))
 (1 1 (:REWRITE SBVLT-OF-NEGATIVE-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE SBVLT-OF-MINUS-ONE))
 (1 1 (:REWRITE SBVLT-OF-CONSTANT-WHEN-<-OF-CONSTANT))
 (1 1 (:REWRITE SBVLT-FALSE-WHEN-SBVLT-GEN))
 (1 1 (:REWRITE SBVLT-FALSE-FROM-BOUND-BETTER))
 (1 1 (:REWRITE SBVLT-FALSE-FROM-BOUND))
 (1 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (1 1 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (1 1 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (1 1 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (1 1 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (1 1 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (1 1 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (1 1 (:REWRITE CDR-CONS))
 (1 1 (:REWRITE CAR-CONS))
 (1 1 (:REWRITE BOUND-GAP-THEOREM))
 (1 1 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ALL-ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-ALL-INTEGERP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (1 1 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (1 1 (:REWRITE ALL-<-TRANSITIVE))
 (1 1 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 )
(ALL-NON-INCREASINGP-OF-CONS)
(USE-ALL-NON-INCREASINGP-FOR-CAR)
(USE-ALL-NON-INCREASINGP-FOR-CAR-OF-LAST)
(ALL-NON-INCREASINGP-OF-APPEND)
(ALL-NON-INCREASINGP-OF-UNION-EQUAL)
(ALL-NON-INCREASINGP-WHEN-NOT-CONSP)
(ALL-NON-INCREASINGP-WHEN-NOT-CONSP-CHEAP)
(ALL-NON-INCREASINGP-OF-REVAPPEND)
(ALL-NON-INCREASINGP-OF-CDR)
(ALL-NON-INCREASINGP-OF-NTHCDR)
(ALL-NON-INCREASINGP-OF-FIRSTN)
(ALL-NON-INCREASINGP-OF-REMOVE1-EQUAL)
(ALL-NON-INCREASINGP-OF-REMOVE-EQUAL)
(ALL-NON-INCREASINGP-OF-LAST)
(ALL-NON-INCREASINGP-OF-TAKE)
(ALL-NON-INCREASINGP-WHEN-PERM)
(ALL-NON-INCREASINGP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-NON-INCREASINGP-1)
(USE-ALL-NON-INCREASINGP)
(USE-ALL-NON-INCREASINGP-2)
(ALL-NON-INCREASINGP-OF-ADD-TO-SET-EQUAL)
(FIND-TYPE-FACTS-FOR-INTEGER
 (52 28 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (52 28 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (20 20 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (20 20 (:TYPE-PRESCRIPTION NAT-LISTP))
 (7 1 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (4 2 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (3 1 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (3 1 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (3 1 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (2 2 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 )
(FIND-BOUNDS-FOR-INTEGER
 (12 6 (:TYPE-PRESCRIPTION ASSOC-EQUAL-TYPE))
 (8 4 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (8 4 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION ALISTP))
 (4 4 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (4 4 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-ARG-LIST)
(MAKE-NTH-LIST-FOR-NTHCDR-AUX
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (20 20 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (20 10 (:TYPE-PRESCRIPTION LIST::TRUE-LISTP-OF-NTHCDR-TYPE-PRESCRIPTION))
 (20 10 (:TYPE-PRESCRIPTION TRUE-LISTP-NTHCDR-TYPE-PRESCRIPTION))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-NTH-LIST-FOR-NTHCDR)
(MAKE-NTH-LIST-FOR-NTHCDR-LIST-AUX
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-NTH-LIST-FOR-NTHCDR-LIST)
(MAKE-NTH-LIST-FOR-FIRSTN-AUX
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION LIST::CONSP-FIRSTN-TYPE-PRESCRIPTION))
 )
(MAKE-NTH-LIST-FOR-FIRSTN)
(MAKE-NTH-LIST-FOR-FIRSTN-LIST-AUX
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-NTH-LIST-FOR-FIRSTN-LIST)
(CDR-OF-ALIST-VALUES
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CAR-OF-ALIST-VALUES
 (48 24 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (48 24 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (24 24 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (24 24 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PATTERN-WORKS-ON-ELEMENT)
(PATTERN-WORKS-ON-TRACE
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PATTERN-WORKS-ON-TRACES
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PATTERN-WORKS-ON-TRACES2)
(WORKING-PATTERNS
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CHOOSE-WORKING-PATTERN-IF-EXACTLY-ONE
 (10 5 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (10 5 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (5 5 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (5 5 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(POS-INTS)
(NEG-INTS)
(ADD-CONSTANT)
(MAKE-DIV-PATTERNS
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(POSSIBLE-DIV-PATTERNS
 (5 5 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (5 5 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 )
(SEQS-MATCH
 (798 11 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (668 3 (:DEFINITION LENGTH))
 (555 36 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (331 5 (:REWRITE LEN-OF-CDR-BETTER))
 (290 9 (:REWRITE STR::CONSP-OF-EXPLODE))
 (290 6 (:DEFINITION INTEGER-ABS))
 (272 136 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (272 136 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (188 5 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (162 36 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (146 146 (:TYPE-PRESCRIPTION NAT-LISTP))
 (136 136 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (130 2 (:REWRITE <-0-+-NEGATIVE-1))
 (120 11 (:REWRITE DEFAULT-CDR))
 (91 7 (:LINEAR LIST::LEN-NON-NEGATIVE-LINEAR))
 (84 18 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (81 81 (:TYPE-PRESCRIPTION LEN))
 (62 30 (:REWRITE DEFAULT-+-2))
 (55 7 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (51 51 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (51 7 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (49 3 (:REWRITE LIST::LEN-POS-REWRITE))
 (48 31 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (47 1 (:REWRITE LIST::EQUAL-CAR-DIFFERENTIAL))
 (41 30 (:REWRITE DEFAULT-+-1))
 (31 31 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (31 31 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (31 31 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (31 31 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (31 31 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (31 31 (:META LEN-CONS-META-RULE))
 (30 30 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (30 6 (:REWRITE COMMUTATIVITY-OF-+))
 (25 20 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (23 1 (:REWRITE USE-ALL-<-FOR-CAR))
 (22 14 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (22 11 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (20 20 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (20 20 (:REWRITE CLR-DIFFERENTIAL))
 (19 12 (:REWRITE DEFAULT-<-2))
 (14 14 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (14 14 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (14 14 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (14 14 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (14 14 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (14 14 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (14 14 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (14 14 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (14 14 (:REWRITE IMPOSSIBLE-VALUE-2))
 (14 14 (:REWRITE IMPOSSIBLE-VALUE-1))
 (14 14 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (14 14 (:REWRITE EQUAL-WHEN-BVLT))
 (14 14 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (14 14 (:REWRITE EQUAL-WHEN-<-OF-+))
 (14 14 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (14 14 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (14 14 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (14 14 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (14 14 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (14 14 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (14 14 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (14 14 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (14 14 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (14 14 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (14 14 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (14 14 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (13 12 (:REWRITE DEFAULT-<-1))
 (13 7 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 12 (:REWRITE USE-ALL-<-2))
 (12 12 (:REWRITE USE-ALL-<))
 (12 12 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (12 12 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (12 12 (:REWRITE DROP-LINEAR-HYPS2))
 (12 12 (:REWRITE DROP->-HYPS))
 (12 12 (:REWRITE DROP-<-HYPS))
 (12 12 (:REWRITE BOUND-WHEN-USB2))
 (12 12 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (12 12 (:REWRITE <-WHEN-BVLT))
 (12 12 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (12 12 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (12 12 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (12 12 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (12 12 (:REWRITE <-FROM-<=-FREE))
 (12 1 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (11 11 (:TYPE-PRESCRIPTION ALL-NATP))
 (11 11 (:REWRITE USE-ALL-CONSP-2))
 (11 11 (:REWRITE USE-ALL-CONSP))
 (11 11 (:REWRITE LEN-GIVES-CONSP))
 (11 11 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (11 11 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (11 11 (:REWRITE CONSP-FROM-LEN-BOUND))
 (11 3 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (11 1 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (10 7 (:REWRITE ARITH-HACK-CHEAP))
 (9 9 (:REWRITE DEFAULT-CAR))
 (9 9 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (8 8 (:REWRITE HELPER-HELPER2))
 (8 8 (:REWRITE HELPER-HELPER))
 (8 8 (:REWRITE FOLD-CONSTS-IN-+))
 (8 8 (:REWRITE +-COMBINE-CONSTANTS))
 (8 4 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (7 7 (:REWRITE USE-ALL-<=-2))
 (7 7 (:REWRITE USE-ALL-<=))
 (7 7 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (7 7 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (7 7 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (7 7 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (7 7 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (7 7 (:REWRITE INEQ-HACK2))
 (7 7 (:REWRITE INEQ-HACK))
 (7 7 (:REWRITE DROP-LINEAR-HYPS3))
 (7 7 (:REWRITE DROP-<=-HYPS))
 (7 7 (:REWRITE BOUND-WHEN-USB))
 (7 7 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (7 7 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (7 7 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (7 7 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (7 7 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE DEFAULT-UNARY-MINUS))
 (6 3 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (6 3 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (6 2 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (6 2 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (6 2 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (5 5 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (5 5 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (5 5 (:REWRITE <-OF-0-WHEN-<-FREE))
 (5 5 (:REWRITE +-OF-MINUS))
 (5 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (5 1 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (5 1 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (4 2 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (4 1 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (3 3 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (3 3 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (3 3 (:TYPE-PRESCRIPTION ALL-<))
 (3 3 (:REWRITE USE-ALL-RATIONALP-2))
 (3 3 (:REWRITE USE-ALL-RATIONALP))
 (3 3 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (3 3 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (3 3 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (3 3 (:REWRITE DEFAULT-REALPART))
 (3 3 (:REWRITE DEFAULT-NUMERATOR))
 (3 3 (:REWRITE DEFAULT-IMAGPART))
 (3 3 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (2 2 (:TYPE-PRESCRIPTION ALISTP))
 (2 2 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (2 2 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (2 1 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (2 1 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (1 1 (:REWRITE WFR-HACK5))
 (1 1 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (1 1 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE LIST::CARS-MATCH-FROM-FIRSTN-FACT-2))
 (1 1 (:REWRITE LIST::CARS-MATCH-FROM-FIRSTN-FACT))
 (1 1 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (1 1 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (1 1 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (1 1 (:REWRITE ALL-<-TRANSITIVE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(FIND-REPEATING-SEQUENCE-AUX
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-REPEATING-SEQUENCE
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(SAWTOOTH-HEIGHT)
(SUBTREE
 (8 4 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (8 4 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 4 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (4 4 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-LONG-ENOUGH-SEQS
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-PREFIXP
 (8 4 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (8 4 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 4 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (4 4 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-ALL-PREFIXP
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-INTEGER-LISTP
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-INTEGER-LISTP-OF-CONS)
(USE-ALL-INTEGER-LISTP-FOR-CAR)
(USE-ALL-INTEGER-LISTP-FOR-CAR-OF-LAST)
(ALL-INTEGER-LISTP-OF-APPEND)
(ALL-INTEGER-LISTP-OF-UNION-EQUAL)
(ALL-INTEGER-LISTP-WHEN-NOT-CONSP)
(ALL-INTEGER-LISTP-WHEN-NOT-CONSP-CHEAP)
(ALL-INTEGER-LISTP-OF-REVAPPEND)
(ALL-INTEGER-LISTP-OF-CDR)
(ALL-INTEGER-LISTP-OF-NTHCDR)
(ALL-INTEGER-LISTP-OF-FIRSTN)
(ALL-INTEGER-LISTP-OF-REMOVE1-EQUAL)
(ALL-INTEGER-LISTP-OF-REMOVE-EQUAL)
(ALL-INTEGER-LISTP-OF-LAST)
(ALL-INTEGER-LISTP-OF-TAKE)
(ALL-INTEGER-LISTP-WHEN-PERM)
(ALL-INTEGER-LISTP-OF-TRUE-LIST-FIX)
(PERM-IMPLIES-EQUAL-ALL-INTEGER-LISTP-1)
(USE-ALL-INTEGER-LISTP)
(USE-ALL-INTEGER-LISTP-2)
(ALL-INTEGER-LISTP-OF-ADD-TO-SET-EQUAL)
(ALL-INTEGER-LISTP)
(MAX-WIDTH-OF-WIDEST-INT
 (1356 39 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1059 83 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (442 14 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (420 15 (:REWRITE <-0-+-NEGATIVE-1))
 (398 10 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (345 15 (:REWRITE LEN-OF-CDR-BETTER))
 (152 76 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (138 10 (:REWRITE LIST::LEN-POS-REWRITE))
 (99 83 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (91 5 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP))
 (84 68 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (78 4 (:REWRITE USE-ALL-INTEGER-LISTP))
 (76 76 (:TYPE-PRESCRIPTION NAT-LISTP))
 (68 68 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (68 68 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (68 68 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (68 68 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (68 68 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (68 68 (:META LEN-CONS-META-RULE))
 (60 30 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (57 5 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (57 5 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (52 52 (:TYPE-PRESCRIPTION ALL-NATP))
 (49 3 (:REWRITE ALL-INTEGERP-OF-CDR))
 (45 15 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (45 15 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (44 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (39 39 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (39 39 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (35 35 (:REWRITE USE-ALL-CONSP-2))
 (35 35 (:REWRITE USE-ALL-CONSP))
 (35 35 (:REWRITE LEN-GIVES-CONSP))
 (35 35 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (35 35 (:REWRITE CONSP-FROM-LEN-BOUND))
 (30 30 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (22 19 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (20 10 (:REWRITE ALL-NATP-IMPLIES-ALL-INTEGERP-CHEAP))
 (20 10 (:REWRITE ALL-INTEGERP-WHEN-ALL-NATP-CHEAP))
 (20 4 (:REWRITE USE-ALL-ALL-INTEGERP-FOR-CAR))
 (19 19 (:REWRITE DEFAULT-CDR))
 (18 18 (:TYPE-PRESCRIPTION MEMBERP))
 (18 10 (:REWRITE ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 (15 15 (:REWRITE USE-ALL-<-2))
 (15 15 (:REWRITE USE-ALL-<))
 (15 15 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (15 15 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (15 15 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (15 15 (:REWRITE DROP-LINEAR-HYPS2))
 (15 15 (:REWRITE DROP->-HYPS))
 (15 15 (:REWRITE DROP-<-HYPS))
 (15 15 (:REWRITE DEFAULT-<-2))
 (15 15 (:REWRITE DEFAULT-<-1))
 (15 15 (:REWRITE DEFAULT-+-2))
 (15 15 (:REWRITE DEFAULT-+-1))
 (15 15 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (15 15 (:REWRITE BOUND-WHEN-USB2))
 (15 15 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (15 15 (:REWRITE <-WHEN-BVLT))
 (15 15 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (15 15 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (15 15 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (15 15 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (15 15 (:REWRITE <-OF-0-WHEN-<-FREE))
 (15 15 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (15 15 (:REWRITE <-FROM-<=-FREE))
 (15 15 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (15 15 (:REWRITE +-OF-MINUS))
 (10 10 (:REWRITE USE-ALL-ALL-INTEGERP-2))
 (10 10 (:REWRITE USE-ALL-ALL-INTEGERP))
 (10 10 (:REWRITE ALL-UNSIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (10 10 (:REWRITE ALL-SIGNED-BYTE-P-IMPLIES-ALL-INTEGERP))
 (10 5 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (10 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (8 8 (:TYPE-PRESCRIPTION ALL-ALL-INTEGERP))
 (8 8 (:REWRITE DEFAULT-CAR))
 (8 8 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (8 4 (:REWRITE MEMBERP-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (8 4 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-CDR-CHEAP))
 (8 4 (:REWRITE JVM::MEMBER-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (8 4 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (6 4 (:REWRITE MEMBERP-WHEN-SINGLETON-CHEAP))
 (5 5 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (5 5 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (5 5 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (5 5 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (4 4 (:TYPE-PRESCRIPTION ALISTP))
 (4 4 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE NOT-MEMBERP-WHEN-MEMBERP-OF-TAKE))
 (4 4 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-2))
 (4 4 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-1))
 (4 4 (:REWRITE MEMBERP-WHEN-NOT-EQUAL-OF-CAR-CHEAP))
 (4 4 (:REWRITE MEMBERP-WHEN-NOT-CONS-OF-CDR-CHEAP))
 (4 4 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-FIRSTN))
 (4 4 (:REWRITE MEMBERP-OF-CONSTANT-WHEN-NOT-MEMBER-OF-CONSTANT))
 (4 4 (:REWRITE MEMBERP-CONSTANT-OPENER))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:REWRITE FW-1))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 4 (:REWRITE ALL-ALL-INTEGERP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE ALL-ALL-INTEGERP-WHEN-NOT-CONSP))
 (4 2 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (4 2 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE MEMBERP-OF-CAR-SAME))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 )
(SLICE-PATTERN-WORKS-ON-TRACE
 (4956 338 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1206 131 (:REWRITE DEFAULT-CDR))
 (896 32 (:REWRITE <-0-+-NEGATIVE-1))
 (741 3 (:LINEAR LEN-OF-CDR-LINEAR-STRONG))
 (741 3 (:LINEAR LIST::LEN-OF-CDR-LINEAR))
 (729 3 (:LINEAR LIST::LEN-OF-CDR-BOUND-TIGHT-LINEAR))
 (723 3 (:LINEAR LEN-OF-CDR-LINEAR))
 (723 3 (:LINEAR LIST::LEN-OF-CDR-BOUND-WEAK-LINEAR))
 (585 338 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (420 20 (:REWRITE EQUAL-CONSTANT-+))
 (400 20 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (221 221 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (221 221 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (221 221 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (221 221 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (221 221 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (221 221 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (221 221 (:META LEN-CONS-META-RULE))
 (218 109 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (196 109 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (173 131 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (156 156 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (156 156 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (144 72 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (137 111 (:REWRITE LEN-GIVES-CONSP))
 (124 122 (:REWRITE DEFAULT-+-2))
 (122 122 (:REWRITE DEFAULT-+-1))
 (122 122 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (120 120 (:REWRITE +-OF-MINUS))
 (111 111 (:REWRITE USE-ALL-CONSP-2))
 (111 111 (:REWRITE USE-ALL-CONSP))
 (111 111 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (111 111 (:REWRITE CONSP-FROM-LEN-BOUND))
 (109 109 (:TYPE-PRESCRIPTION NAT-LISTP))
 (108 36 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (108 36 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (100 20 (:REWRITE HACK1))
 (100 20 (:REWRITE LIST::EQUAL-CONS-CASES))
 (98 8 (:REWRITE INEQ-HACK2))
 (98 8 (:REWRITE INEQ-HACK))
 (97 97 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (95 95 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (89 83 (:REWRITE DEFAULT-CAR))
 (83 83 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (74 74 (:TYPE-PRESCRIPTION ALL-NATP))
 (65 63 (:REWRITE DEFAULT-<-2))
 (63 63 (:REWRITE USE-ALL-<-2))
 (63 63 (:REWRITE USE-ALL-<))
 (63 63 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (63 63 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (63 63 (:REWRITE DROP-LINEAR-HYPS2))
 (63 63 (:REWRITE DROP->-HYPS))
 (63 63 (:REWRITE DROP-<-HYPS))
 (63 63 (:REWRITE DEFAULT-<-1))
 (63 63 (:REWRITE BOUND-WHEN-USB2))
 (63 63 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (63 63 (:REWRITE <-WHEN-BVLT))
 (63 63 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (63 63 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (63 63 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (63 63 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (63 63 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (63 63 (:REWRITE <-FROM-<=-FREE))
 (62 6 (:REWRITE LIST::LEN-POS-REWRITE))
 (54 54 (:REWRITE <-OF-0-WHEN-<-FREE))
 (36 36 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (25 25 (:REWRITE CLR-DIFFERENTIAL))
 (24 24 (:REWRITE LIST::TRUE-LISTP-FIX))
 (23 23 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (23 23 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (20 20 (:REWRITE CDR-CONS))
 (20 20 (:REWRITE CAR-CONS))
 (20 2 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (20 1 (:REWRITE SLICE-OUT-OF-ORDER))
 (14 2 (:REWRITE LEN-WHEN-EQUAL-OF-TRUE-LIST-FIX-AND-TRUE-LIST-FIX))
 (10 8 (:REWRITE NOT-<-WHEN-SBVLT))
 (10 5 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (10 3 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (8 8 (:REWRITE USE-ALL-<=-2))
 (8 8 (:REWRITE USE-ALL-<=))
 (8 8 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (8 8 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (8 8 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (8 8 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (8 8 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (8 8 (:REWRITE DROP-LINEAR-HYPS3))
 (8 8 (:REWRITE DROP-<=-HYPS))
 (8 8 (:REWRITE BOUND-WHEN-USB))
 (8 8 (:REWRITE ARITH-HACK-CHEAP))
 (8 8 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (8 8 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (4 4 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (4 2 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (4 1 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (3 3 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (3 3 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (3 3 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (3 3 (:REWRITE IMPOSSIBLE-VALUE-2))
 (3 3 (:REWRITE IMPOSSIBLE-VALUE-1))
 (3 3 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (3 3 (:REWRITE EQUAL-WHEN-BVLT))
 (3 3 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (3 3 (:REWRITE EQUAL-WHEN-<-OF-+))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (3 3 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (3 3 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (2 2 (:REWRITE USE-ALL-INTEGER-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (2 2 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (2 2 (:REWRITE EQUAL-OF-LEN-AND-LEN-WHEN-PREFIXP-ALT))
 (2 2 (:REWRITE EQUAL-OF-LEN-AND-LEN-WHEN-PREFIXP))
 (2 2 (:REWRITE EQUAL-OF-LEN-AND-LEN-WHEN-EQUAL-OF-NTHCDR-AND-NTHCDR))
 (2 2 (:REWRITE DROP-LINEAR-HYPS1))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (2 2 (:REWRITE BOUND-LEMMA))
 (2 2 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (2 2 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE SLICE-WHEN-SIGNED-BYTE-P-HIGH))
 (1 1 (:REWRITE SLICE-WHEN-NOT-BVLT-GEN))
 (1 1 (:REWRITE SLICE-WHEN-NOT-BVLT-FREE))
 (1 1 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (1 1 (:REWRITE SLICE-WHEN-BVLT-GEN))
 (1 1 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE SLICE-TRIM))
 (1 1 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (1 1 (:REWRITE SLICE-TOO-HIGH-IS-0-CHEAP))
 (1 1 (:REWRITE SLICE-TIGHTEN-TOP-QUOTEP))
 (1 1 (:REWRITE SLICE-TIGHTEN-TOP-FREE))
 (1 1 (:REWRITE SLICE-TIGHTEN-TOP))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (1 1 (:REWRITE SLICE-SUBST-CONSTANT-ALT))
 (1 1 (:REWRITE SLICE-SUBST-CONSTANT))
 (1 1 (:REWRITE EQUAL-OF-SLICE-AND-IMPOSSIBLE-CONSTANT))
 (1 1 (:REWRITE EQUAL-OF-SLICE-AND-CONSTANT-WHEN-EQUAL-OF-BVCHOP-AND-CONSTANT2))
 (1 1 (:REWRITE EQUAL-OF-SLICE-AND-CONSTANT-WHEN-EQUAL-OF-BVCHOP-AND-CONSTANT))
 (1 1 (:REWRITE EQUAL-OF-SLICE-AND-CONSTANT-EXTEND-WHEN-BVCHOP-KNOWN))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-AND-SLICE-WHEN-BVLT))
 (1 1 (:LINEAR SLICE-UPPER-BOUND-LINEAR))
 )
(SLICE-PATTERN-WORKS-ON-TRACES
 (19884 530 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (5605 111 (:REWRITE LEN-OF-CDR-BETTER))
 (5136 4 (:REWRITE LEN-WHEN-EQUAL-OF-TRUE-LIST-FIX-AND-TRUE-LIST-FIX))
 (5134 881 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (4722 2359 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4365 156 (:REWRITE DEFAULT-CDR))
 (2706 6 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (2359 2359 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2187 746 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (1287 42 (:REWRITE <-0-+-NEGATIVE-1))
 (1155 2 (:DEFINITION SLICE-PATTERN-WORKS-ON-TRACE))
 (924 63 (:REWRITE LIST::LEN-POS-REWRITE))
 (878 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (776 368 (:REWRITE LEN-GIVES-CONSP))
 (746 746 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (746 746 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (746 746 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (746 746 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (746 746 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (746 746 (:META LEN-CONS-META-RULE))
 (670 4 (:REWRITE LIST::LIST-EQUIV-HACK))
 (623 43 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (586 46 (:REWRITE INEQ-HACK2))
 (586 46 (:REWRITE INEQ-HACK))
 (534 534 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (530 530 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (514 257 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (451 159 (:REWRITE DEFAULT-<-2))
 (430 257 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (424 424 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (424 424 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (378 6 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (368 368 (:REWRITE USE-ALL-CONSP-2))
 (368 368 (:REWRITE USE-ALL-CONSP))
 (368 368 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (368 368 (:REWRITE CONSP-FROM-LEN-BOUND))
 (304 55 (:REWRITE DEFAULT-CAR))
 (270 135 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (266 8 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP))
 (264 132 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (263 135 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (257 257 (:TYPE-PRESCRIPTION ALISTP))
 (257 257 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (253 156 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (201 201 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (198 66 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (198 66 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (194 122 (:REWRITE DEFAULT-+-2))
 (186 6 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (168 168 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (166 4 (:REWRITE USE-ALL-INTEGER-LISTP))
 (159 159 (:REWRITE USE-ALL-<-2))
 (159 159 (:REWRITE USE-ALL-<))
 (159 159 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (159 159 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (159 159 (:REWRITE DROP-LINEAR-HYPS2))
 (159 159 (:REWRITE DROP->-HYPS))
 (159 159 (:REWRITE DROP-<-HYPS))
 (159 159 (:REWRITE DEFAULT-<-1))
 (159 159 (:REWRITE BOUND-WHEN-USB2))
 (159 159 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (159 159 (:REWRITE <-WHEN-BVLT))
 (159 159 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (159 159 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (159 159 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (159 159 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (159 159 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (159 159 (:REWRITE <-FROM-<=-FREE))
 (145 145 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (136 136 (:TYPE-PRESCRIPTION ALL-NATP))
 (135 135 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (135 135 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (135 135 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (132 6 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (132 6 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (128 128 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (124 4 (:REWRITE LIST::OPEN-EQUIV))
 (124 4 (:REWRITE LIST-EQUIV-WHEN-ATOM-LEFT))
 (124 4 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (122 122 (:REWRITE DEFAULT-+-1))
 (122 122 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (111 111 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (111 111 (:REWRITE <-OF-0-WHEN-<-FREE))
 (111 111 (:REWRITE +-OF-MINUS))
 (108 4 (:REWRITE CONSP-OF-LIST-FIX))
 (98 4 (:REWRITE LIST-EQUIV-WHEN-ATOM-RIGHT))
 (98 4 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (88 4 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (88 2 (:REWRITE MEMBERP-OF-CAR-SAME))
 (86 43 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (70 18 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (66 66 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (57 46 (:REWRITE NOT-<-WHEN-SBVLT))
 (57 18 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (55 55 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (46 46 (:REWRITE USE-ALL-<=-2))
 (46 46 (:REWRITE USE-ALL-<=))
 (46 46 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (46 46 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (46 46 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (46 46 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (46 46 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (46 46 (:REWRITE DROP-LINEAR-HYPS3))
 (46 46 (:REWRITE DROP-<=-HYPS))
 (46 46 (:REWRITE BOUND-WHEN-USB))
 (46 46 (:REWRITE ARITH-HACK-CHEAP))
 (46 46 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (46 46 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (46 46 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (46 46 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (46 46 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (43 43 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (43 43 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (43 43 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (40 2 (:REWRITE SLICE-OUT-OF-ORDER))
 (38 2 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (34 2 (:REWRITE LIST::EQUAL-CONS-CASES))
 (30 30 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (30 6 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (22 22 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (22 22 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (22 22 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (22 22 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (22 22 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (22 22 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (22 22 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (20 20 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (20 20 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (20 20 (:REWRITE CLR-DIFFERENTIAL))
 (20 10 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (18 18 (:TYPE-PRESCRIPTION MEMBERP))
 (18 18 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (18 18 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (18 18 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (18 18 (:REWRITE IMPOSSIBLE-VALUE-2))
 (18 18 (:REWRITE IMPOSSIBLE-VALUE-1))
 (18 18 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (18 18 (:REWRITE EQUAL-WHEN-BVLT))
 (18 18 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (18 18 (:REWRITE EQUAL-WHEN-<-OF-+))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (18 18 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (18 18 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (18 2 (:REWRITE USE-ALL-INTEGER-LISTP-FOR-CAR))
 (15 5 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (11 11 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (11 11 (:TYPE-PRESCRIPTION BOOLEANP))
 (11 11 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (11 11 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (11 11 (:REWRITE DROP-LINEAR-HYPS1))
 (11 11 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (11 11 (:REWRITE BOUND-LEMMA))
 (11 11 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (11 11 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (9 9 (:REWRITE USE-ALL-ALL-TRUE-LISTP-2))
 (9 9 (:REWRITE USE-ALL-ALL-TRUE-LISTP))
 (8 8 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP-CHEAP))
 (8 4 (:REWRITE MEMBERP-WHEN-SINGLETON-CHEAP))
 (8 4 (:REWRITE MEMBERP-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (8 4 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-CDR-CHEAP))
 (8 4 (:REWRITE JVM::MEMBER-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (8 4 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION SLICE))
 (4 4 (:TYPE-PRESCRIPTION LIST-EQUIV))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (4 4 (:REWRITE NOT-MEMBERP-WHEN-MEMBERP-OF-TAKE))
 (4 4 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-2))
 (4 4 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-1))
 (4 4 (:REWRITE MEMBERP-WHEN-NOT-EQUAL-OF-CAR-CHEAP))
 (4 4 (:REWRITE MEMBERP-WHEN-NOT-CONS-OF-CDR-CHEAP))
 (4 4 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-FIRSTN))
 (4 4 (:REWRITE MEMBERP-OF-CONSTANT-WHEN-NOT-MEMBER-OF-CONSTANT))
 (4 4 (:REWRITE MEMBERP-CONSTANT-OPENER))
 (4 4 (:REWRITE FW-1))
 (4 4 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (4 4 (:REWRITE EQUAL-OF-LEN-AND-LEN-WHEN-PREFIXP-ALT))
 (4 4 (:REWRITE EQUAL-OF-LEN-AND-LEN-WHEN-PREFIXP))
 (4 4 (:REWRITE EQUAL-OF-LEN-AND-LEN-WHEN-EQUAL-OF-NTHCDR-AND-NTHCDR))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE SLICE-WHEN-SIGNED-BYTE-P-HIGH))
 (2 2 (:REWRITE SLICE-WHEN-NOT-BVLT-GEN))
 (2 2 (:REWRITE SLICE-WHEN-NOT-BVLT-FREE))
 (2 2 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (2 2 (:REWRITE SLICE-WHEN-BVLT-GEN))
 (2 2 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE SLICE-TRIM))
 (2 2 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (2 2 (:REWRITE SLICE-TOO-HIGH-IS-0-CHEAP))
 (2 2 (:REWRITE SLICE-TIGHTEN-TOP-QUOTEP))
 (2 2 (:REWRITE SLICE-TIGHTEN-TOP-FREE))
 (2 2 (:REWRITE SLICE-TIGHTEN-TOP))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (2 2 (:REWRITE SLICE-SUBST-CONSTANT-ALT))
 (2 2 (:REWRITE SLICE-SUBST-CONSTANT))
 (2 2 (:REWRITE EQUAL-OF-SLICE-AND-IMPOSSIBLE-CONSTANT))
 (2 2 (:REWRITE EQUAL-OF-SLICE-AND-CONSTANT-WHEN-EQUAL-OF-BVCHOP-AND-CONSTANT2))
 (2 2 (:REWRITE EQUAL-OF-SLICE-AND-CONSTANT-WHEN-EQUAL-OF-BVCHOP-AND-CONSTANT))
 (2 2 (:REWRITE EQUAL-OF-SLICE-AND-CONSTANT-EXTEND-WHEN-BVCHOP-KNOWN))
 (2 2 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-AND-SLICE-WHEN-BVLT))
 (1 1 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 )
(FIND-SLICE-PATTERN-AUX
 (4144 8 (:DEFINITION SLICE-PATTERN-WORKS-ON-TRACES))
 (4091 109 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (3288 8 (:DEFINITION SLICE-PATTERN-WORKS-ON-TRACE))
 (1686 168 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1260 44 (:REWRITE DEFAULT-CDR))
 (1088 72 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (1020 502 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (1020 502 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (840 168 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (822 38 (:REWRITE DEFAULT-CAR))
 (502 502 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (502 502 (:TYPE-PRESCRIPTION NAT-LISTP))
 (498 162 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (450 6 (:REWRITE LEN-OF-CDR-BETTER))
 (404 404 (:TYPE-PRESCRIPTION LEN))
 (392 24 (:REWRITE LIST::LEN-POS-REWRITE))
 (376 24 (:LINEAR LIST::LEN-NON-NEGATIVE-LINEAR))
 (280 8 (:REWRITE SLICE-OUT-OF-ORDER))
 (232 8 (:REWRITE <-OF-+-CANCEL-SECOND-OF-MORE-AND-ONLY))
 (180 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (162 162 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (162 162 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (162 162 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (162 162 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (162 162 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (162 162 (:META LEN-CONS-META-RULE))
 (152 8 (:REWRITE SLICE-WHEN-VAL-IS-NOT-AN-INTEGER-CHEAP))
 (132 3 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP))
 (110 50 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (109 109 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (109 109 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (100 50 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (90 90 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (90 90 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (88 44 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (80 40 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (67 9 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (67 9 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (62 62 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (61 61 (:REWRITE USE-ALL-CONSP-2))
 (61 61 (:REWRITE USE-ALL-CONSP))
 (61 61 (:REWRITE LEN-GIVES-CONSP))
 (61 61 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (61 61 (:REWRITE CONSP-FROM-LEN-BOUND))
 (60 60 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (60 30 (:REWRITE DEFAULT-<-2))
 (57 27 (:REWRITE DEFAULT-+-2))
 (56 24 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (54 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (54 2 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (53 53 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (52 22 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (50 50 (:TYPE-PRESCRIPTION ALISTP))
 (50 50 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (44 44 (:REWRITE DROP-LINEAR-HYPS2))
 (44 44 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (44 22 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (38 38 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (34 30 (:REWRITE DEFAULT-<-1))
 (32 32 (:REWRITE DROP->-HYPS))
 (32 32 (:REWRITE DROP-<-HYPS))
 (30 30 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (30 30 (:REWRITE USE-ALL-<-2))
 (30 30 (:REWRITE USE-ALL-<))
 (30 30 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (30 30 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (30 30 (:REWRITE BOUND-WHEN-USB2))
 (30 30 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (30 30 (:REWRITE <-WHEN-BVLT))
 (30 30 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (30 30 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (30 30 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (30 30 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (30 30 (:REWRITE <-FROM-<=-FREE))
 (27 27 (:REWRITE DEFAULT-+-1))
 (27 27 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (25 16 (:REWRITE NOT-<-WHEN-SBVLT))
 (24 24 (:TYPE-PRESCRIPTION SLICE))
 (23 23 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (23 23 (:REWRITE ARITH-HACK-CHEAP))
 (22 22 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (22 22 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (22 22 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (22 22 (:REWRITE INEQ-HACK2))
 (22 22 (:REWRITE INEQ-HACK))
 (22 22 (:REWRITE DROP-LINEAR-HYPS3))
 (22 22 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (22 22 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (22 22 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (20 20 (:REWRITE +-OF-MINUS))
 (19 19 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (17 17 (:REWRITE DROP-LINEAR-HYPS1))
 (17 17 (:REWRITE BOUND-LEMMA))
 (16 16 (:REWRITE WFR-HACK5))
 (16 16 (:REWRITE USE-ALL-<=-2))
 (16 16 (:REWRITE USE-ALL-<=))
 (16 16 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (16 16 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (16 16 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (16 16 (:REWRITE BOUND-WHEN-USB))
 (16 16 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (16 16 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (16 16 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (15 3 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (11 11 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (11 11 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (11 11 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (11 11 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (11 11 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (11 11 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (9 9 (:TYPE-PRESCRIPTION BOOLEANP))
 (9 9 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (9 9 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (9 9 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (9 9 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (9 9 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (9 9 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (9 9 (:REWRITE IMPOSSIBLE-VALUE-2))
 (9 9 (:REWRITE IMPOSSIBLE-VALUE-1))
 (9 9 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (9 9 (:REWRITE EQUAL-WHEN-BVLT))
 (9 9 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (9 9 (:REWRITE EQUAL-WHEN-<-OF-+))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (9 9 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (9 9 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (9 9 (:REWRITE CLR-DIFFERENTIAL))
 (8 8 (:TYPE-PRESCRIPTION SLICE-PATTERN-WORKS-ON-TRACE))
 (8 8 (:REWRITE USE-ALL-NATP-2))
 (8 8 (:REWRITE USE-ALL-NATP))
 (8 8 (:REWRITE SLICE-WHEN-SIGNED-BYTE-P-HIGH))
 (8 8 (:REWRITE SLICE-WHEN-NOT-BVLT-GEN))
 (8 8 (:REWRITE SLICE-WHEN-NOT-BVLT-FREE))
 (8 8 (:REWRITE SLICE-WHEN-LOW-IS-NEGATIVE))
 (8 8 (:REWRITE SLICE-WHEN-BVLT-GEN))
 (8 8 (:REWRITE SLICE-WHEN-BVCHOP-KNOWN))
 (8 8 (:REWRITE SLICE-TRIM))
 (8 8 (:REWRITE SLICE-TOO-HIGH-LEMMA))
 (8 8 (:REWRITE SLICE-TOO-HIGH-IS-0-CHEAP))
 (8 8 (:REWRITE SLICE-TIGHTEN-TOP-QUOTEP))
 (8 8 (:REWRITE SLICE-TIGHTEN-TOP-FREE))
 (8 8 (:REWRITE SLICE-TIGHTEN-TOP))
 (8 8 (:REWRITE SLICE-SUBST-IN-CONSTANT-ALT))
 (8 8 (:REWRITE SLICE-SUBST-IN-CONSTANT))
 (8 8 (:REWRITE SLICE-SUBST-CONSTANT-ALT))
 (8 8 (:REWRITE SLICE-SUBST-CONSTANT))
 (8 8 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (8 8 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (8 8 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (8 8 (:REWRITE EQUAL-OF-SLICE-AND-IMPOSSIBLE-CONSTANT))
 (8 8 (:REWRITE EQUAL-OF-SLICE-AND-CONSTANT-WHEN-EQUAL-OF-BVCHOP-AND-CONSTANT2))
 (8 8 (:REWRITE EQUAL-OF-SLICE-AND-CONSTANT-WHEN-EQUAL-OF-BVCHOP-AND-CONSTANT))
 (8 8 (:REWRITE EQUAL-OF-SLICE-AND-CONSTANT-EXTEND-WHEN-BVCHOP-KNOWN))
 (8 8 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-AND-SLICE-WHEN-BVLT))
 (8 8 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (7 3 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (6 6 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (6 6 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:REWRITE <-OF-0-WHEN-<-FREE))
 (4 4 (:REWRITE FOLD-CONSTS-IN-+))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (4 4 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (4 4 (:REWRITE +-COMBINE-CONSTANTS))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (3 3 (:REWRITE USE-ALL-ALL-TRUE-LISTP-2))
 (3 3 (:REWRITE USE-ALL-ALL-TRUE-LISTP))
 (3 3 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:REWRITE USE-ALL-RATIONALP-2))
 (2 2 (:REWRITE USE-ALL-RATIONALP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-NEGATIVE-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-UNARY-MINUS))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 )
(FIND-SLICE-PATTERN)
(MAP-NTH
 (6 1 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1 1 (:TYPE-PRESCRIPTION ALL-NATP))
 )
(MAP-NTH-OF-NIL)
(MAP-NTH-OF-CONS)
(MAP-NTH-OF-TRUE-LIST-FIX)
(MAP-NTH-OPENER)
(MAP-NTH-OF-APPEND)
(CAR-OF-MAP-NTH)
(CDR-OF-MAP-NTH)
(LEN-OF-MAP-NTH)
(CONSP-OF-MAP-NTH)
(MAP-NTH-IFF)
(TRUE-LISTP-OF-MAP-NTH)
(FIRSTN-OF-MAP-NTH)
(TAKE-OF-MAP-NTH)
(NTH-OF-MAP-NTH)
(NTHCDR-OF-MAP-NTH)
(GET-NTHS-FROM-VALUE-FOR-EACH-TRACE-REV)
(GET-NTHS-FROM-VALUE-FOR-EACH-TRACE)
(ALL-SUMS-ARE
 (8 4 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (8 4 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 4 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (4 4 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-SUMS-SAME
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REVERSE-ALIST
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PAIR-TERMS-WITH-FIRST-VALUES-FOR-EACH-TRACE
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-BASIC-UNCHANGED-PATTERN
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(STRIP-NTHS-AND-LENS
 (4100 77 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (3874 20 (:DEFINITION INTEGER-ABS))
 (2703 197 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (2298 60 (:REWRITE LEN-OF-CDR-BETTER))
 (2232 10 (:DEFINITION LENGTH))
 (1050 62 (:REWRITE INEQ-HACK2))
 (1050 62 (:REWRITE INEQ-HACK))
 (972 30 (:REWRITE STR::CONSP-OF-EXPLODE))
 (728 26 (:REWRITE <-0-+-NEGATIVE-1))
 (718 24 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (680 12 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (625 197 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (620 10 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (604 72 (:REWRITE DEFAULT-CDR))
 (602 4 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (578 26 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (562 10 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (418 35 (:REWRITE DEFAULT-CAR))
 (414 12 (:REWRITE USE-ALL-<-FOR-CAR))
 (405 219 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (405 219 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (298 8 (:REWRITE EQUAL-CONSTANT-+))
 (290 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (268 268 (:TYPE-PRESCRIPTION NAT-LISTP))
 (264 132 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (246 54 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (219 136 (:REWRITE DEFAULT-+-2))
 (214 14 (:REWRITE ALL-NATP-OF-CDR))
 (208 208 (:TYPE-PRESCRIPTION ALL-NATP))
 (204 14 (:REWRITE ALL-<-OF-CDR))
 (198 136 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (198 66 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (198 66 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (186 186 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (178 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (170 170 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (170 16 (:REWRITE LIST::OPEN-EQUIV))
 (164 6 (:REWRITE ALL-RATIONALP-OF-CDR))
 (163 136 (:REWRITE DEFAULT-+-1))
 (136 136 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (136 136 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (136 136 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (136 136 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (136 136 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (136 136 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (136 136 (:META LEN-CONS-META-RULE))
 (136 6 (:REWRITE LIST::LEN-POS-REWRITE))
 (132 132 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (118 106 (:REWRITE DEFAULT-<-2))
 (108 106 (:REWRITE DEFAULT-<-1))
 (107 107 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (106 106 (:REWRITE USE-ALL-<-2))
 (106 106 (:REWRITE USE-ALL-<))
 (106 106 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (106 106 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (106 106 (:REWRITE DROP-LINEAR-HYPS2))
 (106 106 (:REWRITE DROP->-HYPS))
 (106 106 (:REWRITE DROP-<-HYPS))
 (106 106 (:REWRITE BOUND-WHEN-USB2))
 (106 106 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (106 106 (:REWRITE <-WHEN-BVLT))
 (106 106 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (106 106 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (106 106 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (106 106 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (106 106 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (106 106 (:REWRITE <-FROM-<=-FREE))
 (100 72 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (100 20 (:REWRITE COMMUTATIVITY-OF-+))
 (98 10 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (90 18 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (84 10 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (82 62 (:REWRITE NOT-<-WHEN-SBVLT))
 (77 77 (:REWRITE USE-ALL-CONSP-2))
 (77 77 (:REWRITE USE-ALL-CONSP))
 (77 77 (:REWRITE LEN-GIVES-CONSP))
 (77 77 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (77 77 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (77 77 (:REWRITE CONSP-FROM-LEN-BOUND))
 (70 70 (:REWRITE CLR-DIFFERENTIAL))
 (70 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (66 66 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (66 62 (:REWRITE ARITH-HACK-CHEAP))
 (66 26 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (65 65 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (62 62 (:REWRITE USE-ALL-<=-2))
 (62 62 (:REWRITE USE-ALL-<=))
 (62 62 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (62 62 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (62 62 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (62 62 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (62 62 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (62 62 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (62 62 (:REWRITE DROP-LINEAR-HYPS3))
 (62 62 (:REWRITE DROP-<=-HYPS))
 (62 62 (:REWRITE BOUND-WHEN-USB))
 (62 62 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (62 62 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (62 62 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (62 62 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (62 62 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (60 60 (:REWRITE +-OF-MINUS))
 (56 56 (:TYPE-PRESCRIPTION ALL-<))
 (52 26 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (50 50 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (50 50 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (50 42 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (44 44 (:REWRITE <-OF-0-WHEN-<-FREE))
 (42 42 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (42 42 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (42 42 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (42 42 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (42 42 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (42 42 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (42 42 (:REWRITE IMPOSSIBLE-VALUE-2))
 (42 42 (:REWRITE IMPOSSIBLE-VALUE-1))
 (42 42 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (42 42 (:REWRITE EQUAL-WHEN-BVLT))
 (42 42 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (42 42 (:REWRITE EQUAL-WHEN-<-OF-+))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (42 42 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (42 42 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (42 42 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (42 42 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (42 6 (:REWRITE INTEGER-LISTP-OF-CDR))
 (40 8 (:REWRITE HACK1))
 (38 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (35 35 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (34 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (26 26 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (24 24 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (24 24 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (24 12 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (24 12 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (20 20 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (20 20 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (20 20 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (20 20 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (20 20 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (20 20 (:REWRITE HELPER-HELPER2))
 (20 20 (:REWRITE HELPER-HELPER))
 (20 20 (:REWRITE FOLD-CONSTS-IN-+))
 (20 20 (:REWRITE DEFAULT-UNARY-MINUS))
 (20 20 (:REWRITE +-COMBINE-CONSTANTS))
 (20 10 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (20 10 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (18 18 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (18 18 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (18 18 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (18 18 (:REWRITE ALL-<-TRANSITIVE))
 (18 6 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (18 6 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (16 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (16 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (13 1 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (12 12 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (10 10 (:REWRITE USE-ALL-RATIONALP-2))
 (10 10 (:REWRITE USE-ALL-RATIONALP))
 (10 10 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (10 10 (:REWRITE USE-ALL-INTEGER-LISTP))
 (10 10 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (10 10 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (10 10 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (10 10 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (10 10 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (10 10 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (10 10 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (10 10 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (10 10 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (10 10 (:REWRITE DEFAULT-REALPART))
 (10 10 (:REWRITE DEFAULT-NUMERATOR))
 (10 10 (:REWRITE DEFAULT-IMAGPART))
 (10 10 (:REWRITE DEFAULT-DENOMINATOR))
 (10 10 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 4 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (6 6 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (6 6 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (2 2 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 )
(TERM-OR-PARENT-IS
 (2659 51 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2402 12 (:DEFINITION INTEGER-ABS))
 (1627 43 (:REWRITE LEN-OF-CDR-BETTER))
 (1553 131 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1336 6 (:DEFINITION LENGTH))
 (621 37 (:REWRITE INEQ-HACK2))
 (621 37 (:REWRITE INEQ-HACK))
 (580 18 (:REWRITE STR::CONSP-OF-EXPLODE))
 (522 14 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (494 6 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (448 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (434 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (433 49 (:REWRITE DEFAULT-CDR))
 (424 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (383 131 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (372 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (364 13 (:REWRITE <-0-+-NEGATIVE-1))
 (298 8 (:REWRITE EQUAL-CONSTANT-+))
 (290 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (279 26 (:REWRITE DEFAULT-CAR))
 (250 6 (:REWRITE USE-ALL-<-FOR-CAR))
 (199 105 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (199 105 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (188 10 (:REWRITE ALL-NATP-OF-CDR))
 (178 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (170 16 (:REWRITE LIST::OPEN-EQUIV))
 (154 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (148 74 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (142 142 (:TYPE-PRESCRIPTION NAT-LISTP))
 (142 8 (:REWRITE ALL-<-OF-CDR))
 (140 32 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (137 88 (:REWRITE DEFAULT-+-2))
 (121 87 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (120 120 (:TYPE-PRESCRIPTION ALL-NATP))
 (111 37 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (111 37 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (104 88 (:REWRITE DEFAULT-+-1))
 (102 102 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (94 94 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (88 88 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (87 87 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (87 87 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (87 87 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (87 87 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (87 87 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (87 87 (:META LEN-CONS-META-RULE))
 (77 77 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (71 64 (:REWRITE DEFAULT-<-2))
 (69 69 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (69 49 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (68 3 (:REWRITE LIST::LEN-POS-REWRITE))
 (65 64 (:REWRITE DEFAULT-<-1))
 (64 64 (:REWRITE USE-ALL-<-2))
 (64 64 (:REWRITE USE-ALL-<))
 (64 64 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (64 64 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (64 64 (:REWRITE DROP-LINEAR-HYPS2))
 (64 64 (:REWRITE DROP->-HYPS))
 (64 64 (:REWRITE DROP-<-HYPS))
 (64 64 (:REWRITE BOUND-WHEN-USB2))
 (64 64 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (64 64 (:REWRITE <-WHEN-BVLT))
 (64 64 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (64 64 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (64 64 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (64 64 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (64 64 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (64 64 (:REWRITE <-FROM-<=-FREE))
 (60 12 (:REWRITE COMMUTATIVITY-OF-+))
 (60 10 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (58 6 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (54 6 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (51 51 (:REWRITE USE-ALL-CONSP-2))
 (51 51 (:REWRITE USE-ALL-CONSP))
 (51 51 (:REWRITE LEN-GIVES-CONSP))
 (51 51 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (51 51 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (51 51 (:REWRITE CONSP-FROM-LEN-BOUND))
 (49 37 (:REWRITE NOT-<-WHEN-SBVLT))
 (46 46 (:REWRITE CLR-DIFFERENTIAL))
 (45 45 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (43 43 (:REWRITE +-OF-MINUS))
 (42 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (40 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (40 8 (:REWRITE HACK1))
 (39 37 (:REWRITE ARITH-HACK-CHEAP))
 (38 38 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (37 37 (:REWRITE USE-ALL-<=-2))
 (37 37 (:REWRITE USE-ALL-<=))
 (37 37 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (37 37 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (37 37 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (37 37 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (37 37 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (37 37 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (37 37 (:REWRITE DROP-LINEAR-HYPS3))
 (37 37 (:REWRITE DROP-<=-HYPS))
 (37 37 (:REWRITE BOUND-WHEN-USB))
 (37 37 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (37 37 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (34 34 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (34 34 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (30 30 (:TYPE-PRESCRIPTION ALL-<))
 (30 26 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (28 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (27 27 (:REWRITE <-OF-0-WHEN-<-FREE))
 (26 26 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (26 26 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (26 26 (:REWRITE IMPOSSIBLE-VALUE-2))
 (26 26 (:REWRITE IMPOSSIBLE-VALUE-1))
 (26 26 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-BVLT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (26 26 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (22 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (20 4 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (16 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (16 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (16 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (14 14 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (14 14 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (13 1 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (12 12 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (12 12 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (12 12 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (12 12 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE HELPER-HELPER2))
 (12 12 (:REWRITE HELPER-HELPER))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE +-COMBINE-CONSTANTS))
 (12 6 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (12 6 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 6 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (12 6 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (12 4 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (12 4 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (10 10 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (10 10 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (10 10 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (10 10 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (10 10 (:REWRITE ALL-<-TRANSITIVE))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 6 (:REWRITE USE-ALL-RATIONALP-2))
 (6 6 (:REWRITE USE-ALL-RATIONALP))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP))
 (6 6 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (6 6 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (6 6 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (6 6 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION ALISTP))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(TERM-OR-A-PARENT-IS-IN
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(NTH-NEST-AROUND-SYMBOLP
 (3594 12 (:DEFINITION INTEGER-ABS))
 (3195 61 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1996 162 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1835 51 (:REWRITE LEN-OF-CDR-BETTER))
 (1336 6 (:DEFINITION LENGTH))
 (1229 61 (:REWRITE INEQ-HACK2))
 (1229 61 (:REWRITE INEQ-HACK))
 (588 21 (:REWRITE <-0-+-NEGATIVE-1))
 (580 18 (:REWRITE STR::CONSP-OF-EXPLODE))
 (522 14 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (498 10 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (448 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (441 57 (:REWRITE DEFAULT-CDR))
 (434 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (424 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (418 162 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (412 29 (:REWRITE DEFAULT-CAR))
 (372 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (360 178 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (360 178 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (298 8 (:REWRITE EQUAL-CONSTANT-+))
 (290 10 (:REWRITE USE-ALL-<-FOR-CAR))
 (290 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (276 138 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (226 226 (:TYPE-PRESCRIPTION NAT-LISTP))
 (207 69 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (207 69 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (188 10 (:REWRITE ALL-NATP-OF-CDR))
 (184 184 (:TYPE-PRESCRIPTION ALL-NATP))
 (178 178 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (178 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (170 16 (:REWRITE LIST::OPEN-EQUIV))
 (154 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (150 12 (:REWRITE ALL-<-OF-CDR))
 (148 110 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (145 96 (:REWRITE DEFAULT-+-2))
 (117 117 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (116 32 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (112 96 (:REWRITE DEFAULT-+-1))
 (110 110 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (110 110 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (110 110 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (110 110 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (110 110 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (110 110 (:META LEN-CONS-META-RULE))
 (103 96 (:REWRITE DEFAULT-<-2))
 (102 102 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (97 96 (:REWRITE DEFAULT-<-1))
 (97 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (96 96 (:REWRITE USE-ALL-<-2))
 (96 96 (:REWRITE USE-ALL-<))
 (96 96 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (96 96 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (96 96 (:REWRITE DROP-LINEAR-HYPS2))
 (96 96 (:REWRITE DROP->-HYPS))
 (96 96 (:REWRITE DROP-<-HYPS))
 (96 96 (:REWRITE BOUND-WHEN-USB2))
 (96 96 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (96 96 (:REWRITE <-WHEN-BVLT))
 (96 96 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (96 96 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (96 96 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (96 96 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (96 96 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (96 96 (:REWRITE <-FROM-<=-FREE))
 (96 96 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (79 79 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (77 57 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (73 61 (:REWRITE NOT-<-WHEN-SBVLT))
 (72 36 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (69 69 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (64 14 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (63 61 (:REWRITE ARITH-HACK-CHEAP))
 (61 61 (:REWRITE USE-ALL-CONSP-2))
 (61 61 (:REWRITE USE-ALL-CONSP))
 (61 61 (:REWRITE USE-ALL-<=-2))
 (61 61 (:REWRITE USE-ALL-<=))
 (61 61 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (61 61 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (61 61 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (61 61 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (61 61 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (61 61 (:REWRITE LEN-GIVES-CONSP))
 (61 61 (:REWRITE DROP-LINEAR-HYPS3))
 (61 61 (:REWRITE DROP-<=-HYPS))
 (61 61 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (61 61 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (61 61 (:REWRITE CONSP-FROM-LEN-BOUND))
 (61 61 (:REWRITE BOUND-WHEN-USB))
 (61 61 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (61 61 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (60 12 (:REWRITE COMMUTATIVITY-OF-+))
 (58 6 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (54 6 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (53 53 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (51 51 (:REWRITE +-OF-MINUS))
 (46 46 (:TYPE-PRESCRIPTION ALL-<))
 (46 46 (:REWRITE CLR-DIFFERENTIAL))
 (45 38 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (42 42 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (42 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (40 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (40 8 (:REWRITE HACK1))
 (36 26 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (35 35 (:REWRITE <-OF-0-WHEN-<-FREE))
 (34 34 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (34 34 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (30 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (29 29 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (28 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (27 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (26 26 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (26 26 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (26 26 (:REWRITE IMPOSSIBLE-VALUE-2))
 (26 26 (:REWRITE IMPOSSIBLE-VALUE-1))
 (26 26 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-BVLT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (23 23 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (23 23 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (20 10 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (19 19 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (16 16 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (16 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (16 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (16 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (15 5 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (15 5 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (14 14 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (14 14 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (14 14 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (14 14 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (14 14 (:REWRITE ALL-<-TRANSITIVE))
 (13 1 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (12 12 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (12 12 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (12 12 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE HELPER-HELPER2))
 (12 12 (:REWRITE HELPER-HELPER))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE +-COMBINE-CONSTANTS))
 (12 6 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (12 6 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (10 10 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (6 6 (:TYPE-PRESCRIPTION ALISTP))
 (6 6 (:REWRITE USE-ALL-RATIONALP-2))
 (6 6 (:REWRITE USE-ALL-RATIONALP))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP))
 (6 6 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (6 6 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (6 6 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (3 3 (:REWRITE WFR-HACK5))
 (3 3 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (1 1 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(TRY-TO-EXPRESS-WHOLE-UNCHANGED-TARGET-WITH-ANY-CANDIDATE
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-MULT-AND-DIV-SEQUENCES
 (170 85 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (170 85 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (85 85 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (85 85 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-UNCHANGED-SUM-AUX
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-UNCHANGED-SUM
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-UNCHANGED-SUMS-FOR-TRACES
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-DIFFERENCE-PATTERN)
(FIND-UNCHANGED-DIFFERENCE-AUX
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-UNCHANGED-DIFFERENCE
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-UNCHANGED-DIFFERENCES-FOR-TRACES
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-SUM-PATTERN)
(MOD-PATTERN-WORKS-ON-TRACE
 (26 13 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (26 13 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (13 13 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (13 13 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MOD-PATTERN-WORKS-ON-ALL-TRACES
 (6 3 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (6 3 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (3 3 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (3 3 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-MOD-PATTERN
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-PREFIXP-PATTERN-WITH-ANY-VALUE
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(EMPTY-EXPLANATION-GRAPH)
(GET-NODES-POINTED-TO
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ADD-POINTED-TO-NODES
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ADD-IMPLIED-PAIRS
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 (5 5 (:TYPE-PRESCRIPTION ADD-POINTED-TO-NODES))
 )
(GET-SUBTERMS-OF-NTH-AND-LEN-NEST
 (4100 77 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (3874 20 (:DEFINITION INTEGER-ABS))
 (2703 197 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (2298 60 (:REWRITE LEN-OF-CDR-BETTER))
 (2232 10 (:DEFINITION LENGTH))
 (1050 62 (:REWRITE INEQ-HACK2))
 (1050 62 (:REWRITE INEQ-HACK))
 (972 30 (:REWRITE STR::CONSP-OF-EXPLODE))
 (728 26 (:REWRITE <-0-+-NEGATIVE-1))
 (718 24 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (680 12 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (625 197 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (620 10 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (604 72 (:REWRITE DEFAULT-CDR))
 (602 4 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (578 26 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (562 10 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (418 35 (:REWRITE DEFAULT-CAR))
 (414 12 (:REWRITE USE-ALL-<-FOR-CAR))
 (402 220 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (402 220 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (298 8 (:REWRITE EQUAL-CONSTANT-+))
 (290 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (264 264 (:TYPE-PRESCRIPTION NAT-LISTP))
 (264 132 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (246 54 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (219 136 (:REWRITE DEFAULT-+-2))
 (214 14 (:REWRITE ALL-NATP-OF-CDR))
 (208 208 (:TYPE-PRESCRIPTION ALL-NATP))
 (204 14 (:REWRITE ALL-<-OF-CDR))
 (198 136 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (198 66 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (198 66 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (182 182 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (178 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (170 170 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (170 16 (:REWRITE LIST::OPEN-EQUIV))
 (164 6 (:REWRITE ALL-RATIONALP-OF-CDR))
 (163 136 (:REWRITE DEFAULT-+-1))
 (136 136 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (136 136 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (136 136 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (136 136 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (136 136 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (136 136 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (136 136 (:META LEN-CONS-META-RULE))
 (136 6 (:REWRITE LIST::LEN-POS-REWRITE))
 (132 132 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (118 106 (:REWRITE DEFAULT-<-2))
 (108 106 (:REWRITE DEFAULT-<-1))
 (107 107 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (106 106 (:REWRITE USE-ALL-<-2))
 (106 106 (:REWRITE USE-ALL-<))
 (106 106 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (106 106 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (106 106 (:REWRITE DROP-LINEAR-HYPS2))
 (106 106 (:REWRITE DROP->-HYPS))
 (106 106 (:REWRITE DROP-<-HYPS))
 (106 106 (:REWRITE BOUND-WHEN-USB2))
 (106 106 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (106 106 (:REWRITE <-WHEN-BVLT))
 (106 106 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (106 106 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (106 106 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (106 106 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (106 106 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (106 106 (:REWRITE <-FROM-<=-FREE))
 (100 72 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (100 20 (:REWRITE COMMUTATIVITY-OF-+))
 (98 10 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (90 18 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (84 10 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (82 62 (:REWRITE NOT-<-WHEN-SBVLT))
 (77 77 (:REWRITE USE-ALL-CONSP-2))
 (77 77 (:REWRITE USE-ALL-CONSP))
 (77 77 (:REWRITE LEN-GIVES-CONSP))
 (77 77 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (77 77 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (77 77 (:REWRITE CONSP-FROM-LEN-BOUND))
 (70 70 (:REWRITE CLR-DIFFERENTIAL))
 (70 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (66 66 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (66 62 (:REWRITE ARITH-HACK-CHEAP))
 (66 26 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (65 65 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (62 62 (:REWRITE USE-ALL-<=-2))
 (62 62 (:REWRITE USE-ALL-<=))
 (62 62 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (62 62 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (62 62 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (62 62 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (62 62 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (62 62 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (62 62 (:REWRITE DROP-LINEAR-HYPS3))
 (62 62 (:REWRITE DROP-<=-HYPS))
 (62 62 (:REWRITE BOUND-WHEN-USB))
 (62 62 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (62 62 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (62 62 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (62 62 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (62 62 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (60 60 (:REWRITE +-OF-MINUS))
 (56 56 (:TYPE-PRESCRIPTION ALL-<))
 (52 26 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (50 50 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (50 50 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (50 42 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (44 44 (:REWRITE <-OF-0-WHEN-<-FREE))
 (42 42 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (42 42 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (42 42 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (42 42 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (42 42 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (42 42 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (42 42 (:REWRITE IMPOSSIBLE-VALUE-2))
 (42 42 (:REWRITE IMPOSSIBLE-VALUE-1))
 (42 42 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (42 42 (:REWRITE EQUAL-WHEN-BVLT))
 (42 42 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (42 42 (:REWRITE EQUAL-WHEN-<-OF-+))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (42 42 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (42 42 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (42 42 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (42 42 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (42 42 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (42 6 (:REWRITE INTEGER-LISTP-OF-CDR))
 (40 8 (:REWRITE HACK1))
 (38 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (35 35 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (34 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (26 26 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (24 24 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (24 24 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (24 12 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (24 12 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (20 20 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (20 20 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (20 20 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (20 20 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (20 20 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (20 20 (:REWRITE HELPER-HELPER2))
 (20 20 (:REWRITE HELPER-HELPER))
 (20 20 (:REWRITE FOLD-CONSTS-IN-+))
 (20 20 (:REWRITE DEFAULT-UNARY-MINUS))
 (20 20 (:REWRITE +-COMBINE-CONSTANTS))
 (20 10 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (20 10 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (18 18 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (18 18 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (18 18 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (18 18 (:REWRITE ALL-<-TRANSITIVE))
 (18 6 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (18 6 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (16 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (16 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (13 1 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (12 12 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (10 10 (:REWRITE USE-ALL-RATIONALP-2))
 (10 10 (:REWRITE USE-ALL-RATIONALP))
 (10 10 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (10 10 (:REWRITE USE-ALL-INTEGER-LISTP))
 (10 10 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (10 10 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (10 10 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (10 10 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (10 10 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (10 10 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (10 10 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (10 10 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (10 10 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (10 10 (:REWRITE DEFAULT-REALPART))
 (10 10 (:REWRITE DEFAULT-NUMERATOR))
 (10 10 (:REWRITE DEFAULT-IMAGPART))
 (10 10 (:REWRITE DEFAULT-DENOMINATOR))
 (10 10 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 4 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (6 6 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (6 6 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (2 2 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 )
(GET-SUBTERMS-OF-NTH-AND-LEN-NESTS
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-MENTIONED-ARG-COMPONENTS-AUX2
 (27 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (27 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (11 11 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (11 11 (:TYPE-PRESCRIPTION NAT-LISTP))
 (4 4 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LISTP))
 )
(UPDATE-EXPLANATION-GRAPH)
(GET-NODES-THAT-POINT-TO
 (18 9 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (18 9 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (9 9 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (9 9 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-TERMS-TO-IGNORE)
(TERMS-EQUATED-TO
 (60 33 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (60 33 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (27 27 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (27 27 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CLEAR-KEYS
 (1627 50 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1176 487 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (1176 487 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (904 106 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (596 28 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (487 487 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (487 487 (:TYPE-PRESCRIPTION NAT-LISTP))
 (392 14 (:REWRITE <-0-+-NEGATIVE-1))
 (375 13 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (337 13 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (322 14 (:REWRITE LEN-OF-CDR-BETTER))
 (312 8 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (304 6 (:REWRITE LIST::EQUAL-CAR-DIFFERENTIAL))
 (247 34 (:REWRITE DEFAULT-CAR))
 (202 101 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (186 10 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (136 106 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (122 92 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (110 6 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (110 6 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (101 101 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (92 92 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (92 92 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (92 92 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (92 92 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (92 92 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (92 92 (:META LEN-CONS-META-RULE))
 (80 8 (:REWRITE LIST::LEN-POS-REWRITE))
 (70 10 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (65 13 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (56 28 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (50 50 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (50 50 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (42 14 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (42 14 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (41 29 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (39 13 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (39 13 (:REWRITE RESULT-ALISTP-FORWARD-TO-ALISTP))
 (39 13 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (39 13 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (34 34 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (30 30 (:REWRITE USE-ALL-CONSP-2))
 (30 30 (:REWRITE USE-ALL-CONSP))
 (30 30 (:REWRITE LEN-GIVES-CONSP))
 (30 30 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (30 30 (:REWRITE CONSP-FROM-LEN-BOUND))
 (29 29 (:REWRITE DEFAULT-CDR))
 (28 28 (:TYPE-PRESCRIPTION ALL-NATP))
 (28 28 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (26 26 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (26 26 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (26 26 (:TYPE-PRESCRIPTION RESULT-ALISTP))
 (26 26 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (26 26 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (26 13 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (26 13 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (25 25 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (14 14 (:REWRITE USE-ALL-<-2))
 (14 14 (:REWRITE USE-ALL-<))
 (14 14 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (14 14 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (14 14 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (14 14 (:REWRITE DROP-LINEAR-HYPS2))
 (14 14 (:REWRITE DROP->-HYPS))
 (14 14 (:REWRITE DROP-<-HYPS))
 (14 14 (:REWRITE DEFAULT-<-2))
 (14 14 (:REWRITE DEFAULT-<-1))
 (14 14 (:REWRITE DEFAULT-+-2))
 (14 14 (:REWRITE DEFAULT-+-1))
 (14 14 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (14 14 (:REWRITE BOUND-WHEN-USB2))
 (14 14 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (14 14 (:REWRITE <-WHEN-BVLT))
 (14 14 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (14 14 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (14 14 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (14 14 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (14 14 (:REWRITE <-OF-0-WHEN-<-FREE))
 (14 14 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (14 14 (:REWRITE <-FROM-<=-FREE))
 (14 14 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (14 14 (:REWRITE +-OF-MINUS))
 (13 13 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (13 13 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (13 13 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (13 13 (:REWRITE USE-ALL-RULE-ALISTP))
 (13 13 (:REWRITE USE-ALL-ALISTP-2))
 (13 13 (:REWRITE USE-ALL-ALISTP))
 (13 13 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (13 13 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (13 13 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (13 13 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (12 6 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (12 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (11 11 (:REWRITE WFR-HACK5))
 (11 11 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (10 10 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (10 10 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (10 10 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (10 10 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (10 10 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (10 10 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (10 10 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (10 10 (:REWRITE IMPOSSIBLE-VALUE-2))
 (10 10 (:REWRITE IMPOSSIBLE-VALUE-1))
 (10 10 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (10 10 (:REWRITE EQUAL-WHEN-BVLT))
 (10 10 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (10 10 (:REWRITE EQUAL-WHEN-<-OF-+))
 (10 10 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (10 10 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (10 10 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (10 10 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (10 10 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (10 10 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (10 10 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (10 10 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (10 10 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (10 10 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (10 10 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (10 10 (:REWRITE CLR-DIFFERENTIAL))
 (8 8 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION BOOLEANP))
 (6 6 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (6 6 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (6 6 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE LIST::CARS-MATCH-FROM-FIRSTN-FACT-2))
 (6 6 (:REWRITE LIST::CARS-MATCH-FROM-FIRSTN-FACT))
 (6 2 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE LIST::CDR-DOES-NOTHING-REWRITE))
 )
(ADD-VALUE-FOR-EACH-KEY
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ADD-VALUES-FOR-EACH-KEY
 (16 8 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-UNION-EQUAL-TYPE))
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ADD-VALUE-FOR-EACH-KEY-WITH-SOME-VALUE
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION ADD-TO-SET-EQUAL))
 )
(TRY-TO-EXPLAIN-TERMS2)
(TRY-TO-EXPLAIN-LENGTHS)
(FIND-UNCHANGED-COMPONENTS)
(VALUE-ON-FIRST-TUPLE-OF-TRACE
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIRST-VALUES-ARE-ALL
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIRST-VALUES-ARE-ALL-SAME
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-PROBABLY-CONSTANT-COMPONENTS
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(TRY-TO-EXPRESS-PARAMS-WITH-PARAMS)
(STANDARDIZE-EQUALITIES
 (8641 176 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (5114 2332 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (5114 2332 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (3166 99 (:REWRITE LEN-OF-CDR-BETTER))
 (2369 106 (:REWRITE DEFAULT-CAR))
 (2202 51 (:REWRITE <-0-+-NEGATIVE-1))
 (2194 1 (:DEFINITION PSEUDO-TERMP))
 (2052 2052 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2052 2052 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1299 147 (:REWRITE DEFAULT-CDR))
 (1094 547 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (970 3 (:DEFINITION LENGTH))
 (654 473 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (595 17 (:REWRITE EQUAL-CONSTANT-+))
 (581 581 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (556 14 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (461 374 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (396 18 (:REWRITE LIST::LEN-POS-REWRITE))
 (374 374 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (374 374 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (374 374 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (374 374 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (374 374 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (374 374 (:META LEN-CONS-META-RULE))
 (304 13 (:REWRITE LIST::LIST-EQUIV-HACK))
 (297 3 (:REWRITE EQUAL-OF-+-WHEN-NEGATIVE-CONSTANT))
 (291 26 (:REWRITE LIST::OPEN-EQUIV))
 (282 282 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (282 282 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (217 149 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (204 102 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (179 179 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (176 176 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (172 1 (:REWRITE FIX-OF-LEN))
 (169 169 (:REWRITE USE-ALL-CONSP-2))
 (169 169 (:REWRITE USE-ALL-CONSP))
 (169 169 (:REWRITE LEN-GIVES-CONSP))
 (169 169 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (169 169 (:REWRITE CONSP-FROM-LEN-BOUND))
 (163 103 (:REWRITE DEFAULT-+-2))
 (157 27 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (153 51 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (153 51 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (152 1 (:DEFINITION SYMBOL-LISTP))
 (135 135 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (130 3 (:REWRITE STR::CONSP-OF-EXPLODE))
 (125 43 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (123 123 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (123 13 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (115 84 (:REWRITE DEFAULT-<-2))
 (106 106 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (103 103 (:REWRITE DEFAULT-+-1))
 (103 103 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (102 102 (:TYPE-PRESCRIPTION ALL-NATP))
 (102 102 (:REWRITE +-OF-MINUS))
 (84 84 (:REWRITE USE-ALL-<-2))
 (84 84 (:REWRITE USE-ALL-<))
 (84 84 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (84 84 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (84 84 (:REWRITE DROP-LINEAR-HYPS2))
 (84 84 (:REWRITE DROP->-HYPS))
 (84 84 (:REWRITE DROP-<-HYPS))
 (84 84 (:REWRITE DEFAULT-<-1))
 (84 84 (:REWRITE BOUND-WHEN-USB2))
 (84 84 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (84 84 (:REWRITE <-WHEN-BVLT))
 (84 84 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (84 84 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (84 84 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (84 84 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (84 84 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (84 84 (:REWRITE <-FROM-<=-FREE))
 (83 83 (:REWRITE <-OF-0-WHEN-<-FREE))
 (83 34 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (81 14 (:REWRITE HACK1))
 (79 38 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (76 38 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (68 34 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (61 28 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (55 55 (:REWRITE WFR-HACK5))
 (55 55 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (51 51 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (47 47 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (44 8 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (43 43 (:REWRITE CLR-DIFFERENTIAL))
 (42 8 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (41 41 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (41 41 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (38 38 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (38 38 (:TYPE-PRESCRIPTION ALISTP))
 (38 38 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (34 34 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (34 34 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (34 34 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (34 17 (:REWRITE PSEUDO-TERM-LISTP-WHEN-SYMBOL-LISTP-CHEAP))
 (29 14 (:REWRITE LIST::TRUE-LISTP-FIX))
 (28 13 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (28 13 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (28 13 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (27 27 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (27 27 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (27 27 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (27 27 (:REWRITE IMPOSSIBLE-VALUE-2))
 (27 27 (:REWRITE IMPOSSIBLE-VALUE-1))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+))
 (25 25 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (25 25 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (25 25 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (25 25 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (25 25 (:REWRITE EQUAL-WHEN-BVLT))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (23 13 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (20 10 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP-CHEAP))
 (20 10 (:REWRITE PSEUDO-TERM-LISTP-OF-CDR-WHEN-PSEUDO-TERMP))
 (18 18 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (18 18 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (17 17 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (17 17 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (16 8 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (13 13 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (13 13 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (13 13 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (13 13 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (13 13 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (13 13 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (11 11 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (9 3 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (8 8 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (8 1 (:REWRITE LIST::EQUAL-CONS-CASES))
 (7 7 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (7 7 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (7 7 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (6 3 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (6 2 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (4 2 (:REWRITE SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-ALISTP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION AXE-TREEP))
 (3 3 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (3 3 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 (2 2 (:TYPE-PRESCRIPTION SYMBOL-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION BOOLEANP))
 (2 2 (:REWRITE EQUAL-OF-+-COMBINE-CONSTANTS))
 (2 1 (:REWRITE SYMBOL-LISTP-OF-CADR-OF-CAR-WHEN-PSEUDO-TERMP-CHEAP))
 (2 1 (:REWRITE PSEUDO-TERMP-OF-LAMBDA-BODY-CHEAP))
 (2 1 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (2 1 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (2 1 (:REWRITE BV-3-2-1-HACKB))
 (1 1 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (1 1 (:TYPE-PRESCRIPTION BVLT))
 (1 1 (:REWRITE USE-ALL-<=-2))
 (1 1 (:REWRITE USE-ALL-<=))
 (1 1 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (1 1 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (1 1 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (1 1 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (1 1 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (1 1 (:REWRITE NOT-<-WHEN-SBVLT))
 (1 1 (:REWRITE INEQ-HACK2))
 (1 1 (:REWRITE INEQ-HACK))
 (1 1 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (1 1 (:REWRITE EQUAL-OF-+-OF-MINUS-32))
 (1 1 (:REWRITE EQUAL-OF-+-OF-MINUS))
 (1 1 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (1 1 (:REWRITE DROP-LINEAR-HYPS3))
 (1 1 (:REWRITE DROP-<=-HYPS))
 (1 1 (:REWRITE CDR-CONS))
 (1 1 (:REWRITE CAR-CONS))
 (1 1 (:REWRITE BV-3-2-1-HACK))
 (1 1 (:REWRITE BV-1-0-HACK))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 (1 1 (:REWRITE ARITH-HACK-CHEAP))
 (1 1 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 )
(SYNTAX-OKAY-FOR-ANNOTATIONSP)
(CHECK-ANNOTATIONS)
(KEEP-ENTRIES
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(SAFE-MIN)
(SAFE-MAX)
(SAFE-MAX-DEBUG)
(SIG-<-AUX
 (27 14 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (27 14 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (13 13 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (13 13 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(SIG-<)
(MERGE-SIG-<
 (1996 44 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1478 110 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (850 2 (:DEFINITION SIG-<-AUX))
 (454 36 (:REWRITE DEFAULT-CDR))
 (448 16 (:REWRITE <-0-+-NEGATIVE-1))
 (236 118 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (236 118 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (192 110 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (130 82 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (122 4 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (118 118 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (118 118 (:TYPE-PRESCRIPTION NAT-LISTP))
 (110 2 (:REWRITE LIST::EQUAL-CAR-DIFFERENTIAL))
 (88 2 (:REWRITE EQUAL-CONSTANT-+))
 (86 2 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (82 82 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (82 82 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (82 82 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (82 82 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (82 82 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (82 82 (:META LEN-CONS-META-RULE))
 (64 32 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (58 2 (:REWRITE LIST::LIST-EQUIV-HACK))
 (56 4 (:REWRITE LIST::OPEN-EQUIV))
 (52 36 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (48 16 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (48 16 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (44 44 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (44 44 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (42 42 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (42 38 (:REWRITE DEFAULT-+-2))
 (42 22 (:REWRITE DEFAULT-<-2))
 (40 40 (:REWRITE USE-ALL-CONSP-2))
 (40 40 (:REWRITE USE-ALL-CONSP))
 (40 40 (:REWRITE LEN-GIVES-CONSP))
 (40 40 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (40 40 (:REWRITE CONSP-FROM-LEN-BOUND))
 (40 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (38 38 (:REWRITE DEFAULT-+-1))
 (38 38 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (32 32 (:TYPE-PRESCRIPTION ALL-NATP))
 (30 30 (:REWRITE +-OF-MINUS))
 (28 28 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (28 14 (:TYPE-PRESCRIPTION TRUE-LISTP-REVAPPEND-TYPE-PRESCRIPTION))
 (26 26 (:REWRITE DROP-LINEAR-HYPS2))
 (26 26 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (24 24 (:REWRITE DROP->-HYPS))
 (24 24 (:REWRITE DROP-<-HYPS))
 (24 2 (:REWRITE <<-IMPLIES-LEXORDER))
 (22 22 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (22 22 (:REWRITE USE-ALL-<-2))
 (22 22 (:REWRITE USE-ALL-<))
 (22 22 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (22 22 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (22 22 (:REWRITE DEFAULT-<-1))
 (22 22 (:REWRITE BOUND-WHEN-USB2))
 (22 22 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (22 22 (:REWRITE <-WHEN-BVLT))
 (22 22 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (22 22 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (22 22 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (22 22 (:REWRITE <-OF-0-WHEN-<-FREE))
 (22 22 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (22 22 (:REWRITE <-FROM-<=-FREE))
 (22 2 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (20 4 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (18 18 (:REWRITE DEFAULT-CAR))
 (18 18 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (18 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (16 16 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (16 16 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (16 16 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (16 4 (:REWRITE <<-TRICHOTOMY))
 (14 4 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (12 12 (:TYPE-PRESCRIPTION <<))
 (10 10 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (10 2 (:REWRITE HACK1))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (6 6 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (6 6 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (6 6 (:REWRITE CLR-DIFFERENTIAL))
 (4 4 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (4 4 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (4 4 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (4 4 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (4 4 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (4 4 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (4 4 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (4 4 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (4 4 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (4 4 (:REWRITE INEQ-HACK2))
 (4 4 (:REWRITE INEQ-HACK))
 (4 4 (:REWRITE IMPOSSIBLE-VALUE-2))
 (4 4 (:REWRITE IMPOSSIBLE-VALUE-1))
 (4 4 (:REWRITE FOLD-CONSTS-IN-+))
 (4 4 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (4 4 (:REWRITE EQUAL-WHEN-BVLT))
 (4 4 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (4 4 (:REWRITE EQUAL-WHEN-<-OF-+))
 (4 4 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (4 4 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (4 4 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (4 4 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (4 4 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (4 4 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (4 4 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (4 4 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (4 4 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (4 4 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (4 4 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (4 4 (:REWRITE DROP-LINEAR-HYPS3))
 (4 4 (:REWRITE DROP-LINEAR-HYPS1))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE BOUND-LEMMA))
 (4 4 (:REWRITE ARITH-HACK-CHEAP))
 (4 4 (:REWRITE <<-TRANSITIVE))
 (4 4 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (4 4 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (4 4 (:REWRITE <-OF-+-AND-+-CANCEL-CONSTANTS))
 (4 4 (:REWRITE +-COMBINE-CONSTANTS))
 (4 2 (:REWRITE LIST::TRUE-LISTP-FIX))
 (4 2 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (4 2 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (4 2 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (4 2 (:REWRITE <<-ASYMMETRIC))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (2 2 (:TYPE-PRESCRIPTION BOOLEANP))
 (2 2 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (2 2 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (2 2 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (2 2 (:REWRITE LEXORDER-TRANSITIVE))
 (2 2 (:REWRITE HELPER-HELPER2))
 (2 2 (:REWRITE HELPER-HELPER))
 (2 2 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (2 2 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (2 2 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (2 2 (:REWRITE DROP-<=-HYPS))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE CDR-CONS))
 (2 2 (:REWRITE LIST::CARS-MATCH-FROM-FIRSTN-FACT-2))
 (2 2 (:REWRITE LIST::CARS-MATCH-FROM-FIRSTN-FACT))
 (2 2 (:REWRITE CAR-CONS))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(EVENS-TAIL
 (3916 9 (:DEFINITION ACL2-COUNT))
 (3076 28 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2987 219 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1974 8 (:DEFINITION INTEGER-ABS))
 (888 4 (:DEFINITION LENGTH))
 (805 41 (:REWRITE INEQ-HACK2))
 (805 41 (:REWRITE INEQ-HACK))
 (646 19 (:REWRITE EQUAL-CONSTANT-+))
 (627 19 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (560 20 (:REWRITE <-0-+-NEGATIVE-1))
 (384 12 (:REWRITE STR::CONSP-OF-EXPLODE))
 (383 219 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (361 19 (:REWRITE LIST::LIST-EQUIV-HACK))
 (356 2 (:LINEAR LEN-OF-CDR-LINEAR-STRONG))
 (356 2 (:LINEAR LIST::LEN-OF-CDR-LINEAR))
 (351 5 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (348 2 (:LINEAR LEN-OF-CDR-LINEAR))
 (348 2 (:LINEAR LIST::LEN-OF-CDR-BOUND-WEAK-LINEAR))
 (348 2 (:LINEAR LIST::LEN-OF-CDR-BOUND-TIGHT-LINEAR))
 (342 38 (:REWRITE LIST::OPEN-EQUIV))
 (248 4 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (227 83 (:REWRITE DEFAULT-CDR))
 (208 104 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (172 122 (:REWRITE DEFAULT-+-2))
 (161 141 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (161 35 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (156 52 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (156 52 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (141 141 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (141 141 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (141 141 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (141 141 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (141 141 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (141 141 (:META LEN-CONS-META-RULE))
 (140 122 (:REWRITE DEFAULT-+-1))
 (122 122 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (119 119 (:TYPE-PRESCRIPTION ALL-NATP))
 (110 83 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (108 54 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (108 54 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (95 19 (:REWRITE HACK1))
 (91 5 (:REWRITE USE-ALL-<-FOR-CAR))
 (85 85 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (82 82 (:REWRITE +-OF-MINUS))
 (71 71 (:TYPE-PRESCRIPTION NAT-LISTP))
 (70 65 (:REWRITE DEFAULT-<-2))
 (68 68 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (67 67 (:REWRITE DEFAULT-CAR))
 (67 67 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (66 65 (:REWRITE DEFAULT-<-1))
 (65 65 (:REWRITE USE-ALL-<-2))
 (65 65 (:REWRITE USE-ALL-<))
 (65 65 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (65 65 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (65 65 (:REWRITE DROP-LINEAR-HYPS2))
 (65 65 (:REWRITE DROP->-HYPS))
 (65 65 (:REWRITE DROP-<-HYPS))
 (65 65 (:REWRITE BOUND-WHEN-USB2))
 (65 65 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (65 65 (:REWRITE <-WHEN-BVLT))
 (65 65 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (65 65 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (65 65 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (65 65 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (65 65 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (65 65 (:REWRITE <-FROM-<=-FREE))
 (54 54 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (52 52 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (49 41 (:REWRITE NOT-<-WHEN-SBVLT))
 (43 43 (:REWRITE CLR-DIFFERENTIAL))
 (43 41 (:REWRITE ARITH-HACK-CHEAP))
 (41 41 (:REWRITE USE-ALL-<=-2))
 (41 41 (:REWRITE USE-ALL-<=))
 (41 41 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (41 41 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (41 41 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (41 41 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (41 41 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (41 41 (:REWRITE DROP-LINEAR-HYPS3))
 (41 41 (:REWRITE DROP-<=-HYPS))
 (41 41 (:REWRITE BOUND-WHEN-USB))
 (41 41 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (41 41 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (41 41 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (41 41 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (41 41 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (40 40 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (40 8 (:REWRITE COMMUTATIVITY-OF-+))
 (39 2 (:REWRITE LIST::LEN-POS-REWRITE))
 (38 19 (:REWRITE LIST::TRUE-LISTP-FIX))
 (38 19 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (38 19 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (38 19 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (35 35 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (35 35 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (35 5 (:REWRITE ALL-<-OF-CDR))
 (31 5 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (28 28 (:REWRITE USE-ALL-CONSP-2))
 (28 28 (:REWRITE USE-ALL-CONSP))
 (28 28 (:REWRITE LEN-GIVES-CONSP))
 (28 28 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (28 28 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (28 28 (:REWRITE CONSP-FROM-LEN-BOUND))
 (28 5 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (24 24 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (24 24 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (24 24 (:REWRITE <-OF-0-WHEN-<-FREE))
 (21 21 (:TYPE-PRESCRIPTION ALL-<))
 (20 2 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (19 19 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (19 19 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (19 19 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (19 19 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (19 19 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (19 19 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (19 19 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (19 19 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (19 19 (:REWRITE CDR-CONS))
 (19 19 (:REWRITE CAR-CONS))
 (16 16 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (16 16 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (16 16 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (16 16 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (16 16 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (16 16 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (16 16 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (16 16 (:REWRITE IMPOSSIBLE-VALUE-2))
 (16 16 (:REWRITE IMPOSSIBLE-VALUE-1))
 (16 16 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (16 16 (:REWRITE EQUAL-WHEN-BVLT))
 (16 16 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (16 16 (:REWRITE EQUAL-WHEN-<-OF-+))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (16 16 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (16 16 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (15 2 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (14 14 (:REWRITE HELPER-HELPER2))
 (14 14 (:REWRITE HELPER-HELPER))
 (14 14 (:REWRITE FOLD-CONSTS-IN-+))
 (14 14 (:REWRITE +-COMBINE-CONSTANTS))
 (14 1 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (13 5 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (13 2 (:REWRITE ALL-NATP-OF-CDR))
 (10 5 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (10 5 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (10 1 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (8 8 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (8 8 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE DEFAULT-UNARY-MINUS))
 (8 4 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (8 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (7 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (7 1 (:REWRITE INTEGER-LISTP-OF-CDR))
 (6 6 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (6 6 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (6 6 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (6 6 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (6 6 (:REWRITE ALL-<-TRANSITIVE))
 (6 3 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (6 1 (:REWRITE ACL2-COUNT-WHEN-MEMBER))
 (5 5 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (5 5 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (5 5 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (5 5 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (5 5 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (5 5 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (5 1 (:REWRITE ALL-RATIONALP-OF-CDR))
 (4 4 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (4 4 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (4 4 (:REWRITE USE-ALL-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-RATIONALP))
 (4 4 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (4 4 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (4 4 (:REWRITE DEFAULT-REALPART))
 (4 4 (:REWRITE DEFAULT-NUMERATOR))
 (4 4 (:REWRITE DEFAULT-IMAGPART))
 (4 4 (:REWRITE DEFAULT-DENOMINATOR))
 (4 2 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (3 3 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (3 3 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (3 1 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (3 1 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (2 2 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (2 2 (:TYPE-PRESCRIPTION ALISTP))
 (2 2 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (2 2 (:REWRITE USE-ALL-INTEGER-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (2 1 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (1 1 (:REWRITE WFR-HACK5))
 (1 1 (:REWRITE SUBSETP-MEMBER . 2))
 (1 1 (:REWRITE SUBSETP-MEMBER . 1))
 (1 1 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (1 1 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 )
(LEN-OF-EVENS-TAIL-BOUND
 (2545 1495 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (2449 170 (:REWRITE DEFAULT-CDR))
 (1378 6 (:LINEAR LEN-OF-CDR-LINEAR))
 (1148 6 (:LINEAR LEN-OF-CDR-LINEAR-STRONG))
 (991 928 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (952 34 (:REWRITE <-0-+-NEGATIVE-1))
 (939 939 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (939 939 (:META LEN-CONS-META-RULE))
 (928 928 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (928 928 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (928 928 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (928 928 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (673 37 (:REWRITE PLUS-OF-MINUS-3-BV-5))
 (629 590 (:REWRITE DEFAULT-+-2))
 (611 590 (:REWRITE DEFAULT-+-1))
 (610 10 (:REWRITE REVERSE-REMOVAL))
 (590 590 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (564 16 (:REWRITE CONSP-OF-REVERSE))
 (551 551 (:REWRITE +-OF-MINUS))
 (524 4 (:REWRITE BVLE-TO-BVLT))
 (477 17 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (396 396 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (396 396 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (280 20 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (280 20 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (239 23 (:REWRITE LIST::LEN-POS-REWRITE))
 (237 170 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (211 19 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (210 210 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (210 210 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (210 210 (:REWRITE CLR-DIFFERENTIAL))
 (203 203 (:REWRITE USE-ALL-CONSP-2))
 (203 203 (:REWRITE USE-ALL-CONSP))
 (203 203 (:REWRITE LEN-GIVES-CONSP))
 (203 203 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (203 203 (:REWRITE CONSP-FROM-LEN-BOUND))
 (164 82 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (162 81 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (147 147 (:TYPE-PRESCRIPTION REVERSE))
 (139 93 (:REWRITE DEFAULT-<-2))
 (130 130 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (123 41 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (123 41 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (100 93 (:REWRITE DEFAULT-<-1))
 (96 96 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (94 94 (:REWRITE DROP->-HYPS))
 (94 94 (:REWRITE DROP-<-HYPS))
 (94 2 (:REWRITE LIST::CDR-APPEND-CONSP))
 (93 93 (:REWRITE USE-ALL-<-2))
 (93 93 (:REWRITE USE-ALL-<))
 (93 93 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (93 93 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (93 93 (:REWRITE BOUND-WHEN-USB2))
 (93 93 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (93 93 (:REWRITE <-WHEN-BVLT))
 (93 93 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (93 93 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (93 93 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (93 93 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (93 93 (:REWRITE <-FROM-<=-FREE))
 (90 10 (:REWRITE REVERSE-BECOMES-REVERSE-LIST))
 (82 82 (:TYPE-PRESCRIPTION ALL-NATP))
 (81 81 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (81 81 (:REWRITE <-OF-0-WHEN-<-FREE))
 (51 46 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (47 47 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (46 46 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (46 46 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (46 46 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (46 46 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (46 46 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (46 46 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (46 46 (:REWRITE IMPOSSIBLE-VALUE-2))
 (46 46 (:REWRITE IMPOSSIBLE-VALUE-1))
 (46 46 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (46 46 (:REWRITE EQUAL-WHEN-BVLT))
 (46 46 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (46 46 (:REWRITE EQUAL-WHEN-<-OF-+))
 (46 46 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (46 46 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (46 46 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (46 46 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (46 46 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (46 46 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (46 46 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (46 46 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (46 46 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (46 46 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (46 46 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (46 46 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (41 41 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (40 40 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (40 20 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (39 39 (:REWRITE LIST::APPEND-OF-NON-CONSP-2))
 (35 15 (:REWRITE ARITH-HACK-CHEAP))
 (34 17 (:REWRITE APPEND-WHEN-NOT-CONSP-ARG1-CHEAP))
 (24 2 (:REWRITE CDR-OF-APPEND-WHEN-CONSP))
 (24 2 (:REWRITE LIST::CDR-APPEND-NOT-CONSP))
 (22 13 (:REWRITE DEFAULT-CAR))
 (20 20 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (20 20 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (20 8 (:REWRITE BVLT-WHEN-NOT-MAX))
 (20 8 (:REWRITE BVLT-MAX-ARG3-CONSTANT-VERSION))
 (19 12 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (17 17 (:REWRITE APPEND-OF-CONSTANT-AND-CONS-OF-CONSTANT))
 (17 17 (:REWRITE APPEND-ATOM-UNDER-LIST-EQUIV))
 (16 4 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (15 15 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (15 15 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (14 14 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (14 14 (:REWRITE DROP-LINEAR-HYPS3))
 (13 13 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (13 13 (:REWRITE INEQ-HACK2))
 (13 13 (:REWRITE INEQ-HACK))
 (13 13 (:REWRITE DROP-<=-HYPS))
 (13 13 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (13 13 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONZERO))
 (12 12 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP))
 (12 12 (:REWRITE USE-ALL-<=-2))
 (12 12 (:REWRITE USE-ALL-<=))
 (12 12 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (12 12 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 12 (:REWRITE BOUND-WHEN-USB))
 (12 12 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (12 12 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (12 8 (:REWRITE BVLT-TRIM-CONSTANT-ARG2))
 (11 1 (:REWRITE UNICITY-OF-0))
 (10 10 (:REWRITE REVERSE-BECOMES-REVERSE-LIST-GEN))
 (10 10 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (10 10 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (10 10 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (10 10 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (10 1 (:REWRITE FIX-OF-LEN))
 (8 8 (:TYPE-PRESCRIPTION BVLT))
 (8 8 (:REWRITE NOT-BVLT-WHEN-NOT-BVLT-NARROWER2))
 (8 8 (:REWRITE NOT-BVLT-WHEN-NOT-BVLT-NARROWER))
 (8 8 (:REWRITE NOT-BVLT-OF-CONSTANT-WHEN-<=-OF-CONSTANT))
 (8 8 (:REWRITE NOT-BVLT-OF-CONSTANT-WHEN-<-OF-CONSTANT))
 (8 8 (:REWRITE BVLT-WHEN-UNSIGNED-BYTE-P-BETTER-NON-CONSTANT))
 (8 8 (:REWRITE BVLT-WHEN-UNSIGNED-BYTE-P-BETTER))
 (8 8 (:REWRITE BVLT-WHEN-UNSIGNED-BYTE-P))
 (8 8 (:REWRITE BVLT-WHEN-SBVLT-FALSE))
 (8 8 (:REWRITE BVLT-WHEN-NOT-POSP))
 (8 8 (:REWRITE BVLT-WHEN-NOT-BVLT-ONE-MORE))
 (8 8 (:REWRITE BVLT-WHEN-NOT-BVLT))
 (8 8 (:REWRITE BVLT-WHEN-LOW-BITS-TOO-BIG))
 (8 8 (:REWRITE BVLT-WHEN-EQUAL-OF-CONSTANT))
 (8 8 (:REWRITE BVLT-WHEN-BVLT-WIDER))
 (8 8 (:REWRITE BVLT-WHEN-BVLT-SMALLER-OF-CONSTANT))
 (8 8 (:REWRITE BVLT-WHEN-BVLT-SMALLER))
 (8 8 (:REWRITE BVLT-WHEN-BVLT-REVERSE))
 (8 8 (:REWRITE BVLT-WHEN-BVLT-MUST-BE-FAKE-FREE))
 (8 8 (:REWRITE BVLT-WHEN-BVLT-FALSE2))
 (8 8 (:REWRITE BVLT-WHEN-BVLT-FALSE))
 (8 8 (:REWRITE BVLT-WHEN-BVCHOP-KNOWN-SUBST-ALT))
 (8 8 (:REWRITE BVLT-WHEN-BVCHOP-KNOWN-SUBST))
 (8 8 (:REWRITE BVLT-WHEN-BOUND))
 (8 8 (:REWRITE BVLT-WHEN-ARG2-IS-NOT-AN-INTEGER))
 (8 8 (:REWRITE BVLT-WHEN-ARG1-IS-NOT-AN-INTEGER))
 (8 8 (:REWRITE BVLT-UNIQUE))
 (8 8 (:REWRITE BVLT-TRIM-CONSTANT-ARG1))
 (8 8 (:REWRITE BVLT-TRIM-ARG2))
 (8 8 (:REWRITE BVLT-TRIM-ARG1))
 (8 8 (:REWRITE BVLT-TRANSITIVE-FREE2-BACK-CONSTANTS))
 (8 8 (:REWRITE BVLT-TRANSITIVE-FREE2-BACK))
 (8 8 (:REWRITE BVLT-TRANSITIVE-5-B))
 (8 8 (:REWRITE BVLT-TRANSITIVE-5-A))
 (8 8 (:REWRITE BVLT-TRANSITIVE-4-B))
 (8 8 (:REWRITE BVLT-TRANSITIVE-4-A))
 (8 8 (:REWRITE BVLT-TRANSITIVE-3-B))
 (8 8 (:REWRITE BVLT-TRANSITIVE-3-A))
 (8 8 (:REWRITE BVLT-TRANSITIVE-2-B))
 (8 8 (:REWRITE BVLT-TRANSITIVE-2-A))
 (8 8 (:REWRITE BVLT-TRANSITIVE-1-B))
 (8 8 (:REWRITE BVLT-TRANSITIVE-1-A))
 (8 8 (:REWRITE BVLT-TIGHTEN-NON-DAG))
 (8 8 (:REWRITE BVLT-TIGHTEN-FREE-AND-FREE))
 (8 8 (:REWRITE BVLT-TIGHTEN-FREE-ALT))
 (8 8 (:REWRITE BVLT-TIGHTEN-FREE))
 (8 8 (:REWRITE BVLT-TIGHTEN))
 (8 8 (:REWRITE BVLT-OF-MAX-MINUS-1-ARG2-CONSTANT-VERSION))
 (8 8 (:REWRITE BVLT-OF-MAX-CONSTANT-VERSION))
 (8 8 (:REWRITE BVLT-OF-MAX-ARG2))
 (8 8 (:REWRITE BVLT-OF-CONSTANT-WHEN-USB))
 (8 8 (:REWRITE BVLT-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-TIGHTER))
 (8 8 (:REWRITE BVLT-OF-CONSTANT-WHEN-<-OF-CONSTANT))
 (8 8 (:REWRITE BVLT-MUST-BE))
 (8 8 (:REWRITE BVLT-FALSE-WHEN-BVLT-BETTER))
 (8 8 (:REWRITE BVLT-FALSE-WHEN-BVLT))
 (8 8 (:REWRITE BOUND-WHEN-LOW-BITS-0-ALT))
 (8 8 (:REWRITE BOUND-WHEN-LOW-BITS-0))
 (6 6 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (5 5 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (5 5 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (5 1 (:REWRITE PLUS-OF-MINUS-AND-TIMES-TWO))
 (4 4 (:TYPE-PRESCRIPTION BVLE))
 (4 4 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-2))
 (4 4 (:REWRITE USE-ALL-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE USB-WHEN-BVLT-HACK-GEN))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-WHEN-ZP-CHEAP))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0-POLARITY))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-WHEN-NOT-BVLT-TIGHTEN))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT-TIGHTEN))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-WHEN-SLICE-IS-0))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-FROM-BOUND))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-OF-CONSTANT))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-CONSTANT-VERSION))
 (4 4 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-<=-VERSION))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 (1 1 (:REWRITE DROP-LINEAR-HYPS1))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (1 1 (:REWRITE BOUND-LEMMA))
 (1 1 (:REWRITE <-OF-IF-ARG1-SAFE))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (1 1 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (1 1 (:REWRITE <-OF-+-AND-+-CANCEL-CONSTANTS))
 )
(EVENS-TAIL-OF-SINGLETON
 (232 20 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (118 5 (:REWRITE LEN-OF-CDR-BETTER))
 (105 2 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (90 9 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (38 1 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (38 1 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (36 6 (:REWRITE DEFAULT-CDR))
 (33 6 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (31 1 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (31 1 (:REWRITE <-0-+-NEGATIVE-1))
 (29 3 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (26 18 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (26 9 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (25 1 (:REWRITE LIST::TRUE-LISTP-FIX))
 (20 20 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (20 20 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (18 9 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (17 17 (:REWRITE USE-ALL-CONSP-2))
 (17 17 (:REWRITE USE-ALL-CONSP))
 (17 17 (:REWRITE LEN-GIVES-CONSP))
 (17 17 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (17 17 (:REWRITE CONSP-FROM-LEN-BOUND))
 (16 16 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (13 13 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (13 13 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (13 13 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (13 13 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (13 13 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (13 13 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (13 13 (:META LEN-CONS-META-RULE))
 (12 4 (:REWRITE DEFAULT-CAR))
 (10 2 (:REWRITE LIST::OPEN-EQUIV))
 (10 1 (:REWRITE LIST::LEN-POS-REWRITE))
 (9 9 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (9 1 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (9 1 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (9 1 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (9 1 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (8 1 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (4 4 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (4 2 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (4 2 (:REWRITE DEFAULT-<-2))
 (4 2 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (3 1 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (3 1 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (2 2 (:TYPE-PRESCRIPTION ALL-NATP))
 (2 2 (:REWRITE USE-ALL-<-2))
 (2 2 (:REWRITE USE-ALL-<))
 (2 2 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (2 2 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (2 2 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (2 2 (:REWRITE DROP-LINEAR-HYPS2))
 (2 2 (:REWRITE DROP->-HYPS))
 (2 2 (:REWRITE DROP-<-HYPS))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE BOUND-WHEN-USB2))
 (2 2 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (2 2 (:REWRITE <-WHEN-BVLT))
 (2 2 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (2 2 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (2 2 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (2 2 (:REWRITE <-OF-0-WHEN-<-FREE))
 (2 2 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (2 2 (:REWRITE <-FROM-<=-FREE))
 (2 2 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (2 2 (:REWRITE +-OF-MINUS))
 (1 1 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 )
(ODDS-TAIL)
(MERGE-SORT-SIG-<
 (2021 854 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (1701 19 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (1320 20 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (1107 21 (:REWRITE EQUAL-CONSTANT-+))
 (1038 27 (:REWRITE <-0-+-NEGATIVE-1))
 (742 627 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (645 19 (:REWRITE LIST::LIST-EQUIV-HACK))
 (635 635 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (635 635 (:META LEN-CONS-META-RULE))
 (627 627 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (627 627 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (627 627 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (627 627 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (432 4 (:REWRITE <-OF-IF-ARG1-SAFE))
 (424 19 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (402 13 (:REWRITE LIST::EQUIV-CONS-CASES))
 (401 401 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (401 401 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (286 32 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (246 24 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (228 19 (:REWRITE LIST::TRUE-LISTP-FIX))
 (227 227 (:REWRITE USE-ALL-CONSP-2))
 (227 227 (:REWRITE USE-ALL-CONSP))
 (227 227 (:REWRITE LEN-GIVES-CONSP))
 (227 227 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (227 227 (:REWRITE CONSP-FROM-LEN-BOUND))
 (221 149 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (218 157 (:REWRITE DEFAULT-+-2))
 (177 38 (:REWRITE LIST::OPEN-EQUIV))
 (170 76 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (159 87 (:REWRITE DEFAULT-<-2))
 (157 157 (:REWRITE DEFAULT-+-1))
 (157 157 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (156 156 (:REWRITE +-OF-MINUS))
 (123 38 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (123 38 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (119 119 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (114 24 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (110 110 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (104 87 (:REWRITE DEFAULT-<-1))
 (100 19 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (97 45 (:REWRITE DEFAULT-CAR))
 (90 90 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (88 88 (:REWRITE DROP->-HYPS))
 (88 88 (:REWRITE DROP-<-HYPS))
 (87 87 (:REWRITE USE-ALL-<-2))
 (87 87 (:REWRITE USE-ALL-<))
 (87 87 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (87 87 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (87 87 (:REWRITE BOUND-WHEN-USB2))
 (87 87 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (87 87 (:REWRITE <-WHEN-BVLT))
 (87 87 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (87 87 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (87 87 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (87 87 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (87 87 (:REWRITE <-FROM-<=-FREE))
 (87 17 (:REWRITE HACK1))
 (86 86 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (76 76 (:TYPE-PRESCRIPTION ALL-NATP))
 (67 67 (:REWRITE <-OF-0-WHEN-<-FREE))
 (66 19 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (66 19 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (54 25 (:REWRITE ARITH-HACK-CHEAP))
 (48 24 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (48 19 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (46 19 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (45 45 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (38 38 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (35 35 (:REWRITE CLR-DIFFERENTIAL))
 (35 4 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (32 32 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (27 20 (:REWRITE NOT-<-WHEN-SBVLT))
 (25 25 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (24 24 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (24 24 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (24 24 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (23 23 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (23 23 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (23 20 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (22 22 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (22 22 (:REWRITE DROP-LINEAR-HYPS3))
 (21 21 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (21 21 (:REWRITE INEQ-HACK2))
 (21 21 (:REWRITE INEQ-HACK))
 (21 21 (:REWRITE DROP-<=-HYPS))
 (21 21 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (20 20 (:REWRITE USE-ALL-<=-2))
 (20 20 (:REWRITE USE-ALL-<=))
 (20 20 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (20 20 (:REWRITE BOUND-WHEN-USB))
 (20 20 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (20 20 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (20 20 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (19 19 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (18 14 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (16 16 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (16 8 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (10 10 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (8 8 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (8 8 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (8 8 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (8 8 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (8 8 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (8 8 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (8 8 (:REWRITE IMPOSSIBLE-VALUE-2))
 (8 8 (:REWRITE IMPOSSIBLE-VALUE-1))
 (8 8 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (8 8 (:REWRITE EQUAL-WHEN-BVLT))
 (8 8 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (8 8 (:REWRITE EQUAL-WHEN-<-OF-+))
 (8 8 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (7 7 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (7 7 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (7 7 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (7 7 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (6 6 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (6 6 (:REWRITE CAR-CONS))
 (6 6 (:REWRITE <-OF-LEN-AND-LEN-WHEN-PREFIXP))
 (1 1 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (1 1 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (1 1 (:REWRITE DROP-LINEAR-HYPS1))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE BV-1-0-HACK))
 (1 1 (:REWRITE BOUND-LEMMA))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (1 1 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 )
(MERGE-LEXORDER-OF-CDRS!
 (1486 36 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1434 98 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (448 16 (:REWRITE <-0-+-NEGATIVE-1))
 (446 28 (:REWRITE DEFAULT-CDR))
 (148 98 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (106 74 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (88 2 (:REWRITE EQUAL-CONSTANT-+))
 (86 2 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (84 42 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (84 42 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (74 74 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (74 74 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (74 74 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (74 74 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (74 74 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (74 74 (:META LEN-CONS-META-RULE))
 (64 32 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (58 2 (:REWRITE LIST::LIST-EQUIV-HACK))
 (56 4 (:REWRITE LIST::OPEN-EQUIV))
 (48 16 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (48 16 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (42 42 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (42 42 (:TYPE-PRESCRIPTION NAT-LISTP))
 (40 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (38 38 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (36 36 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (36 36 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (36 28 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (34 34 (:REWRITE DEFAULT-+-2))
 (34 34 (:REWRITE DEFAULT-+-1))
 (34 34 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (32 32 (:TYPE-PRESCRIPTION ALL-NATP))
 (32 32 (:REWRITE USE-ALL-CONSP-2))
 (32 32 (:REWRITE USE-ALL-CONSP))
 (32 32 (:REWRITE LEN-GIVES-CONSP))
 (32 32 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (32 32 (:REWRITE CONSP-FROM-LEN-BOUND))
 (28 14 (:TYPE-PRESCRIPTION TRUE-LISTP-REVAPPEND-TYPE-PRESCRIPTION))
 (26 26 (:REWRITE +-OF-MINUS))
 (24 24 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (24 2 (:REWRITE <<-IMPLIES-LEXORDER))
 (22 22 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (22 22 (:REWRITE DROP-LINEAR-HYPS2))
 (22 22 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (22 2 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (20 20 (:REWRITE DROP->-HYPS))
 (20 20 (:REWRITE DROP-<-HYPS))
 (18 18 (:REWRITE USE-ALL-<-2))
 (18 18 (:REWRITE USE-ALL-<))
 (18 18 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (18 18 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (18 18 (:REWRITE DEFAULT-<-2))
 (18 18 (:REWRITE DEFAULT-<-1))
 (18 18 (:REWRITE BOUND-WHEN-USB2))
 (18 18 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (18 18 (:REWRITE <-WHEN-BVLT))
 (18 18 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (18 18 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (18 18 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (18 18 (:REWRITE <-OF-0-WHEN-<-FREE))
 (18 18 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (18 18 (:REWRITE <-FROM-<=-FREE))
 (16 16 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (16 4 (:REWRITE <<-TRICHOTOMY))
 (12 12 (:TYPE-PRESCRIPTION <<))
 (12 4 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (10 10 (:REWRITE DEFAULT-CAR))
 (10 10 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (10 2 (:REWRITE HACK1))
 (8 8 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (8 8 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION ALISTP))
 (4 4 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (4 4 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (4 4 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (4 4 (:REWRITE INEQ-HACK2))
 (4 4 (:REWRITE INEQ-HACK))
 (4 4 (:REWRITE FOLD-CONSTS-IN-+))
 (4 4 (:REWRITE DROP-LINEAR-HYPS3))
 (4 4 (:REWRITE DROP-LINEAR-HYPS1))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 4 (:REWRITE BOUND-LEMMA))
 (4 4 (:REWRITE ARITH-HACK-CHEAP))
 (4 4 (:REWRITE <<-TRANSITIVE))
 (4 4 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (4 4 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (4 4 (:REWRITE <-OF-+-AND-+-CANCEL-CONSTANTS))
 (4 4 (:REWRITE +-COMBINE-CONSTANTS))
 (4 2 (:REWRITE LIST::TRUE-LISTP-FIX))
 (4 2 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (4 2 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (4 2 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (4 2 (:REWRITE <<-ASYMMETRIC))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (2 2 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (2 2 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (2 2 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (2 2 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (2 2 (:REWRITE LEXORDER-TRANSITIVE))
 (2 2 (:REWRITE HELPER-HELPER2))
 (2 2 (:REWRITE HELPER-HELPER))
 (2 2 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (2 2 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (2 2 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (2 2 (:REWRITE DROP-<=-HYPS))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE CLR-DIFFERENTIAL))
 (2 2 (:REWRITE CDR-CONS))
 (2 2 (:REWRITE CAR-CONS))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(MERGE-SORT-LEXORDER-OF-CDRS
 (2021 854 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (1701 19 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (1320 20 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (1107 21 (:REWRITE EQUAL-CONSTANT-+))
 (1038 27 (:REWRITE <-0-+-NEGATIVE-1))
 (742 627 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (645 19 (:REWRITE LIST::LIST-EQUIV-HACK))
 (635 635 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (635 635 (:META LEN-CONS-META-RULE))
 (627 627 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (627 627 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (627 627 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (627 627 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (432 4 (:REWRITE <-OF-IF-ARG1-SAFE))
 (424 19 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (402 13 (:REWRITE LIST::EQUIV-CONS-CASES))
 (401 401 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (401 401 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (286 32 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (246 24 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (228 19 (:REWRITE LIST::TRUE-LISTP-FIX))
 (227 227 (:REWRITE USE-ALL-CONSP-2))
 (227 227 (:REWRITE USE-ALL-CONSP))
 (227 227 (:REWRITE LEN-GIVES-CONSP))
 (227 227 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (227 227 (:REWRITE CONSP-FROM-LEN-BOUND))
 (221 149 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (218 157 (:REWRITE DEFAULT-+-2))
 (177 38 (:REWRITE LIST::OPEN-EQUIV))
 (170 76 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (159 87 (:REWRITE DEFAULT-<-2))
 (157 157 (:REWRITE DEFAULT-+-1))
 (157 157 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (156 156 (:REWRITE +-OF-MINUS))
 (123 38 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (123 38 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (119 119 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (114 24 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (110 110 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (104 87 (:REWRITE DEFAULT-<-1))
 (100 19 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (97 45 (:REWRITE DEFAULT-CAR))
 (90 90 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (88 88 (:REWRITE DROP->-HYPS))
 (88 88 (:REWRITE DROP-<-HYPS))
 (87 87 (:REWRITE USE-ALL-<-2))
 (87 87 (:REWRITE USE-ALL-<))
 (87 87 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (87 87 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (87 87 (:REWRITE BOUND-WHEN-USB2))
 (87 87 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (87 87 (:REWRITE <-WHEN-BVLT))
 (87 87 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (87 87 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (87 87 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (87 87 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (87 87 (:REWRITE <-FROM-<=-FREE))
 (87 17 (:REWRITE HACK1))
 (86 86 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (76 76 (:TYPE-PRESCRIPTION ALL-NATP))
 (67 67 (:REWRITE <-OF-0-WHEN-<-FREE))
 (66 19 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (66 19 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (54 25 (:REWRITE ARITH-HACK-CHEAP))
 (48 24 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (48 19 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (46 19 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (45 45 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (38 38 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (35 35 (:REWRITE CLR-DIFFERENTIAL))
 (35 4 (:REWRITE TRUE-LISTP-OF-CDR-WHEN-CONSP))
 (32 32 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (27 20 (:REWRITE NOT-<-WHEN-SBVLT))
 (25 25 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (24 24 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (24 24 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (24 24 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (23 23 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (23 23 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (23 20 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (22 22 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (22 22 (:REWRITE DROP-LINEAR-HYPS3))
 (21 21 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (21 21 (:REWRITE INEQ-HACK2))
 (21 21 (:REWRITE INEQ-HACK))
 (21 21 (:REWRITE DROP-<=-HYPS))
 (21 21 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (20 20 (:REWRITE USE-ALL-<=-2))
 (20 20 (:REWRITE USE-ALL-<=))
 (20 20 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (20 20 (:REWRITE BOUND-WHEN-USB))
 (20 20 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (20 20 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (20 20 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (19 19 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (18 14 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (16 16 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (16 8 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (10 10 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (8 8 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (8 8 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (8 8 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (8 8 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (8 8 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (8 8 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (8 8 (:REWRITE IMPOSSIBLE-VALUE-2))
 (8 8 (:REWRITE IMPOSSIBLE-VALUE-1))
 (8 8 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (8 8 (:REWRITE EQUAL-WHEN-BVLT))
 (8 8 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (8 8 (:REWRITE EQUAL-WHEN-<-OF-+))
 (8 8 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (8 8 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (8 8 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (7 7 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (7 7 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (7 7 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (7 7 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (6 6 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (6 6 (:REWRITE CAR-CONS))
 (6 6 (:REWRITE <-OF-LEN-AND-LEN-WHEN-PREFIXP))
 (1 1 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (1 1 (:REWRITE EQUAL-1-BECOMES-BVLT))
 (1 1 (:REWRITE DROP-LINEAR-HYPS1))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE BV-1-0-HACK))
 (1 1 (:REWRITE BOUND-LEMMA))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (1 1 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 )
(CLEAN-UP-HYPS)
(FACT-IS-ABOUT-ITEM)
(FACT-IS-ABOUT-ANY-ITEM
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(KEEP-FACTS-NOT-ABOUT-ITEMS
 (8 4 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (8 4 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 4 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (4 4 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CONCLUSION-CONJUNCTS
 (10 10 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (10 5 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (10 5 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (5 5 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (5 5 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 )
(DAG-ARRAY-TO-DAG-LST2-AUX
 (4 2 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (2 2 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (2 2 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (2 2 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (2 2 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (2 2 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (2 2 (:REWRITE INEQ-HACK2))
 (2 2 (:REWRITE INEQ-HACK))
 (2 2 (:REWRITE DROP-LINEAR-HYPS3))
 (2 2 (:REWRITE DROP-LINEAR-HYPS2))
 (2 2 (:REWRITE ARITH-HACK-CHEAP))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (2 1 (:REWRITE NOT-<-WHEN-SBVLT))
 (1 1 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USE-ALL-<=-2))
 (1 1 (:REWRITE USE-ALL-<=))
 (1 1 (:REWRITE USE-ALL-<-2))
 (1 1 (:REWRITE USE-ALL-<))
 (1 1 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (1 1 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (1 1 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (1 1 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (1 1 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE DROP->-HYPS))
 (1 1 (:REWRITE DROP-<=-HYPS))
 (1 1 (:REWRITE DROP-<-HYPS))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE BOUND-WHEN-USB2))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 (1 1 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (1 1 (:REWRITE <-WHEN-BVLT))
 (1 1 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (1 1 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (1 1 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (1 1 (:REWRITE <-FROM-<=-FREE))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(DAG-ARRAY-TO-DAG-LST2)
(EQUATE-ITEMS-TO-T-BOTH-WAYS
 (36 20 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (36 20 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-PARAM-CONSTANT-ALIST
 (18 9 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (18 9 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (9 9 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (9 9 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LIST-ONTO-ALL
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REPLACE-NTHCDR-0-IN-IF-NEST
 (82 41 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (82 41 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (41 41 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (41 41 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-MATCH
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIXUP-INNER-BODY-FOR-MAKE-INDUCTION-FUNCTION
 (9358 13 (:DEFINITION ACL2-COUNT))
 (4983 16 (:DEFINITION INTEGER-ABS))
 (3932 68 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2401 176 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (2362 54 (:REWRITE LEN-OF-CDR-BETTER))
 (1856 8 (:DEFINITION LENGTH))
 (1785 81 (:REWRITE INEQ-HACK2))
 (1785 81 (:REWRITE INEQ-HACK))
 (847 24 (:REWRITE STR::CONSP-OF-EXPLODE))
 (619 17 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (616 308 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (616 308 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (616 22 (:REWRITE <-0-+-NEGATIVE-1))
 (600 15 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (574 73 (:REWRITE DEFAULT-CDR))
 (559 176 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (539 3 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (522 18 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (514 8 (:REWRITE EQUAL-CONSTANT-+))
 (511 7 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (506 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (498 8 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (380 59 (:REWRITE DEFAULT-CAR))
 (366 366 (:TYPE-PRESCRIPTION NAT-LISTP))
 (353 15 (:REWRITE USE-ALL-<-FOR-CAR))
 (344 172 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (310 310 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (282 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (274 16 (:REWRITE LIST::OPEN-EQUIV))
 (265 55 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (258 86 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (258 86 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (226 226 (:TYPE-PRESCRIPTION ALL-NATP))
 (204 122 (:REWRITE DEFAULT-+-2))
 (200 10 (:REWRITE ALL-NATP-OF-CDR))
 (176 120 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (166 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (154 12 (:REWRITE ALL-<-OF-CDR))
 (152 122 (:REWRITE DEFAULT-+-1))
 (141 141 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (136 136 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (130 5 (:REWRITE LIST::LEN-POS-REWRITE))
 (128 119 (:REWRITE DEFAULT-<-2))
 (122 122 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (120 120 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (120 120 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (120 120 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (120 120 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (120 120 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (120 120 (:META LEN-CONS-META-RULE))
 (120 119 (:REWRITE DEFAULT-<-1))
 (119 119 (:REWRITE USE-ALL-<-2))
 (119 119 (:REWRITE USE-ALL-<))
 (119 119 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (119 119 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (119 119 (:REWRITE DROP-LINEAR-HYPS2))
 (119 119 (:REWRITE DROP->-HYPS))
 (119 119 (:REWRITE DROP-<-HYPS))
 (119 119 (:REWRITE BOUND-WHEN-USB2))
 (119 119 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (119 119 (:REWRITE <-WHEN-BVLT))
 (119 119 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (119 119 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (119 119 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (119 119 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (119 119 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (119 119 (:REWRITE <-FROM-<=-FREE))
 (105 73 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (97 81 (:REWRITE NOT-<-WHEN-SBVLT))
 (94 1 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (92 92 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (86 86 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (86 43 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (83 81 (:REWRITE ARITH-HACK-CHEAP))
 (81 81 (:REWRITE USE-ALL-<=-2))
 (81 81 (:REWRITE USE-ALL-<=))
 (81 81 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (81 81 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (81 81 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (81 81 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (81 81 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (81 81 (:REWRITE DROP-LINEAR-HYPS3))
 (81 81 (:REWRITE DROP-<=-HYPS))
 (81 81 (:REWRITE BOUND-WHEN-USB))
 (81 81 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (81 81 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (80 16 (:REWRITE COMMUTATIVITY-OF-+))
 (77 19 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (75 75 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (75 75 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (75 1 (:DEFINITION STRIP-CARS))
 (69 7 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (68 68 (:REWRITE USE-ALL-CONSP-2))
 (68 68 (:REWRITE USE-ALL-CONSP))
 (68 68 (:REWRITE LEN-GIVES-CONSP))
 (68 68 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (68 68 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (68 68 (:REWRITE CONSP-FROM-LEN-BOUND))
 (67 2 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (64 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (61 61 (:TYPE-PRESCRIPTION ALL-<))
 (59 59 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (58 58 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (58 7 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (57 57 (:REWRITE CLR-DIFFERENTIAL))
 (54 54 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (54 54 (:REWRITE +-OF-MINUS))
 (51 51 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (49 49 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (48 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (48 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (48 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (48 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (46 18 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (45 1 (:REWRITE ACL2-COUNT-WHEN-MEMBER))
 (41 41 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (41 41 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (40 8 (:REWRITE HACK1))
 (39 1 (:REWRITE SUBSETP-CAR-MEMBER))
 (38 38 (:REWRITE <-OF-0-WHEN-<-FREE))
 (38 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (36 18 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (33 33 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (33 33 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (33 33 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (33 33 (:REWRITE IMPOSSIBLE-VALUE-2))
 (33 33 (:REWRITE IMPOSSIBLE-VALUE-1))
 (33 33 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (33 33 (:REWRITE EQUAL-WHEN-BVLT))
 (33 33 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (33 33 (:REWRITE EQUAL-WHEN-<-OF-+))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (32 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (30 15 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (28 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (24 24 (:REWRITE WFR-HACK5))
 (24 24 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (24 3 (:REWRITE USE-ALL-CDRS-RATIONALP-FOR-CAR))
 (23 2 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (22 22 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (22 22 (:REWRITE HELPER-HELPER2))
 (22 22 (:REWRITE HELPER-HELPER))
 (22 22 (:REWRITE FOLD-CONSTS-IN-+))
 (22 22 (:REWRITE +-COMBINE-CONSTANTS))
 (22 11 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (22 11 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (21 3 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (19 19 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (19 19 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (19 19 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (19 19 (:REWRITE ALL-<-TRANSITIVE))
 (18 18 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (17 17 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (16 16 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (16 16 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (16 16 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (16 16 (:REWRITE DEFAULT-UNARY-MINUS))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (16 8 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (15 15 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (15 3 (:REWRITE USE-ALL-INTEGER-LISTP-FOR-CAR))
 (14 14 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (14 7 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 4 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (12 4 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (11 11 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (10 10 (:TYPE-PRESCRIPTION BINARY-APPEND))
 (9 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-HIT-COUNT-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE USE-ALL-RATIONALP-2))
 (8 8 (:REWRITE USE-ALL-RATIONALP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (8 8 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (8 8 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (8 8 (:REWRITE DEFAULT-REALPART))
 (8 8 (:REWRITE DEFAULT-NUMERATOR))
 (8 8 (:REWRITE DEFAULT-IMAGPART))
 (8 8 (:REWRITE DEFAULT-DENOMINATOR))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 8 (:REWRITE CDR-CONS))
 (8 8 (:REWRITE CAR-CONS))
 (7 7 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (7 7 (:REWRITE USE-ALL-INTEGER-LISTP))
 (7 7 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (6 6 (:TYPE-PRESCRIPTION HIT-COUNT-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION ALL-INTEGER-LISTP))
 (6 6 (:TYPE-PRESCRIPTION ALL-CDRS-RATIONALP))
 (6 6 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (6 3 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (5 5 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (5 5 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (3 3 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (3 3 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (3 3 (:REWRITE SUBSETP-TRANS2))
 (3 3 (:REWRITE SUBSETP-TRANS))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (3 3 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP))
 (3 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (2 1 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-AUX-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION WEAK-DAGP))
 (1 1 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (1 1 (:REWRITE USE-ALL-RATIONAL-LISTP-2))
 (1 1 (:REWRITE USE-ALL-RATIONAL-LISTP))
 (1 1 (:REWRITE SUBSETP-MEMBER . 2))
 (1 1 (:REWRITE SUBSETP-MEMBER . 1))
 (1 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE <-OF-0-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 )
(MAKE-INDUCTION-FUNCTION-AUX
 (9358 13 (:DEFINITION ACL2-COUNT))
 (4983 16 (:DEFINITION INTEGER-ABS))
 (3932 68 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2401 176 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (2362 54 (:REWRITE LEN-OF-CDR-BETTER))
 (1856 8 (:DEFINITION LENGTH))
 (1785 81 (:REWRITE INEQ-HACK2))
 (1785 81 (:REWRITE INEQ-HACK))
 (847 24 (:REWRITE STR::CONSP-OF-EXPLODE))
 (619 17 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (616 22 (:REWRITE <-0-+-NEGATIVE-1))
 (608 304 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (608 304 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (600 15 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (574 73 (:REWRITE DEFAULT-CDR))
 (559 176 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (539 3 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (522 18 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (514 8 (:REWRITE EQUAL-CONSTANT-+))
 (511 7 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (506 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (498 8 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (380 59 (:REWRITE DEFAULT-CAR))
 (362 362 (:TYPE-PRESCRIPTION NAT-LISTP))
 (353 15 (:REWRITE USE-ALL-<-FOR-CAR))
 (344 172 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (306 306 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (282 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (274 16 (:REWRITE LIST::OPEN-EQUIV))
 (265 55 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (258 86 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (258 86 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (226 226 (:TYPE-PRESCRIPTION ALL-NATP))
 (204 122 (:REWRITE DEFAULT-+-2))
 (200 10 (:REWRITE ALL-NATP-OF-CDR))
 (176 120 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (166 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (154 12 (:REWRITE ALL-<-OF-CDR))
 (152 122 (:REWRITE DEFAULT-+-1))
 (141 141 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (136 136 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (130 5 (:REWRITE LIST::LEN-POS-REWRITE))
 (128 119 (:REWRITE DEFAULT-<-2))
 (122 122 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (120 120 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (120 120 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (120 120 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (120 120 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (120 120 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (120 120 (:META LEN-CONS-META-RULE))
 (120 119 (:REWRITE DEFAULT-<-1))
 (119 119 (:REWRITE USE-ALL-<-2))
 (119 119 (:REWRITE USE-ALL-<))
 (119 119 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (119 119 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (119 119 (:REWRITE DROP-LINEAR-HYPS2))
 (119 119 (:REWRITE DROP->-HYPS))
 (119 119 (:REWRITE DROP-<-HYPS))
 (119 119 (:REWRITE BOUND-WHEN-USB2))
 (119 119 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (119 119 (:REWRITE <-WHEN-BVLT))
 (119 119 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (119 119 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (119 119 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (119 119 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (119 119 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (119 119 (:REWRITE <-FROM-<=-FREE))
 (105 73 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (97 81 (:REWRITE NOT-<-WHEN-SBVLT))
 (94 1 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (92 92 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (86 86 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (86 43 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (83 81 (:REWRITE ARITH-HACK-CHEAP))
 (81 81 (:REWRITE USE-ALL-<=-2))
 (81 81 (:REWRITE USE-ALL-<=))
 (81 81 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (81 81 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (81 81 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (81 81 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (81 81 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (81 81 (:REWRITE DROP-LINEAR-HYPS3))
 (81 81 (:REWRITE DROP-<=-HYPS))
 (81 81 (:REWRITE BOUND-WHEN-USB))
 (81 81 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (81 81 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (80 16 (:REWRITE COMMUTATIVITY-OF-+))
 (77 19 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (75 75 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (75 75 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (75 1 (:DEFINITION STRIP-CARS))
 (69 7 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (68 68 (:REWRITE USE-ALL-CONSP-2))
 (68 68 (:REWRITE USE-ALL-CONSP))
 (68 68 (:REWRITE LEN-GIVES-CONSP))
 (68 68 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (68 68 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (68 68 (:REWRITE CONSP-FROM-LEN-BOUND))
 (67 2 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (64 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (61 61 (:TYPE-PRESCRIPTION ALL-<))
 (59 59 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (58 58 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (58 7 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (57 57 (:REWRITE CLR-DIFFERENTIAL))
 (54 54 (:REWRITE +-OF-MINUS))
 (51 51 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (49 49 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (48 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (48 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (48 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (48 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (46 18 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (45 1 (:REWRITE ACL2-COUNT-WHEN-MEMBER))
 (41 41 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (41 41 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (40 8 (:REWRITE HACK1))
 (39 1 (:REWRITE SUBSETP-CAR-MEMBER))
 (38 38 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (38 38 (:REWRITE <-OF-0-WHEN-<-FREE))
 (38 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (36 18 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (33 33 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (33 33 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (33 33 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (33 33 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (33 33 (:REWRITE IMPOSSIBLE-VALUE-2))
 (33 33 (:REWRITE IMPOSSIBLE-VALUE-1))
 (33 33 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (33 33 (:REWRITE EQUAL-WHEN-BVLT))
 (33 33 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (33 33 (:REWRITE EQUAL-WHEN-<-OF-+))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (33 33 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (33 33 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (32 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (30 15 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (28 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (24 24 (:REWRITE WFR-HACK5))
 (24 24 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (24 3 (:REWRITE USE-ALL-CDRS-RATIONALP-FOR-CAR))
 (23 2 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (22 22 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (22 22 (:REWRITE HELPER-HELPER2))
 (22 22 (:REWRITE HELPER-HELPER))
 (22 22 (:REWRITE FOLD-CONSTS-IN-+))
 (22 22 (:REWRITE +-COMBINE-CONSTANTS))
 (21 3 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (19 19 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (19 19 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (19 19 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (19 19 (:REWRITE ALL-<-TRANSITIVE))
 (18 18 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (17 17 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (16 16 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (16 16 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (16 16 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (16 16 (:REWRITE DEFAULT-UNARY-MINUS))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (16 8 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (15 15 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (15 3 (:REWRITE USE-ALL-INTEGER-LISTP-FOR-CAR))
 (14 14 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (14 7 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 4 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (12 4 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (9 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-HIT-COUNT-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE USE-ALL-RATIONALP-2))
 (8 8 (:REWRITE USE-ALL-RATIONALP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (8 8 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (8 8 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (8 8 (:REWRITE DEFAULT-REALPART))
 (8 8 (:REWRITE DEFAULT-NUMERATOR))
 (8 8 (:REWRITE DEFAULT-IMAGPART))
 (8 8 (:REWRITE DEFAULT-DENOMINATOR))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 8 (:REWRITE CDR-CONS))
 (8 8 (:REWRITE CAR-CONS))
 (7 7 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (7 7 (:REWRITE USE-ALL-INTEGER-LISTP))
 (7 7 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (6 6 (:TYPE-PRESCRIPTION HIT-COUNT-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION ALL-INTEGER-LISTP))
 (6 6 (:TYPE-PRESCRIPTION ALL-CDRS-RATIONALP))
 (6 6 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (6 3 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (6 3 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (6 3 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (5 5 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (5 5 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (3 3 (:TYPE-PRESCRIPTION BINARY-APPEND))
 (3 3 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (3 3 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 (3 3 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (3 3 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (3 3 (:REWRITE SUBSETP-TRANS2))
 (3 3 (:REWRITE SUBSETP-TRANS))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (3 3 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP))
 (3 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (2 1 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-AUX-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION WEAK-DAGP))
 (1 1 (:TYPE-PRESCRIPTION FIXUP-INNER-BODY-FOR-MAKE-INDUCTION-FUNCTION))
 (1 1 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (1 1 (:REWRITE USE-ALL-RATIONAL-LISTP-2))
 (1 1 (:REWRITE USE-ALL-RATIONAL-LISTP))
 (1 1 (:REWRITE SUBSETP-MEMBER . 2))
 (1 1 (:REWRITE SUBSETP-MEMBER . 1))
 (1 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE <-OF-0-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 )
(MAKE-INDUCTION-FUNCTION-HELPER
 (1 1 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (1 1 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 )
(MAKE-INDUCTION-FUNCTION)
(MAKE-INDUCTION-FUNCTION2)
(MAKE-ARG-SYMBOLS
 (2 2 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (2 2 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (2 2 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (2 2 (:REWRITE INEQ-HACK2))
 (2 2 (:REWRITE INEQ-HACK))
 (2 2 (:REWRITE DROP-LINEAR-HYPS3))
 (2 2 (:REWRITE DROP-LINEAR-HYPS2))
 (2 2 (:REWRITE ARITH-HACK-CHEAP))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (2 1 (:REWRITE NOT-<-WHEN-SBVLT))
 (1 1 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USE-ALL-<=-2))
 (1 1 (:REWRITE USE-ALL-<=))
 (1 1 (:REWRITE USE-ALL-<-2))
 (1 1 (:REWRITE USE-ALL-<))
 (1 1 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (1 1 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (1 1 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (1 1 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (1 1 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE DROP->-HYPS))
 (1 1 (:REWRITE DROP-<=-HYPS))
 (1 1 (:REWRITE DROP-<-HYPS))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE BOUND-WHEN-USB2))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 (1 1 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (1 1 (:REWRITE <-WHEN-BVLT))
 (1 1 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (1 1 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (1 1 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (1 1 (:REWRITE <-FROM-<=-FREE))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(NTH-NEST-AROUND-SOME-SYMBOL
 (3594 12 (:DEFINITION INTEGER-ABS))
 (3195 61 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1996 162 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1835 51 (:REWRITE LEN-OF-CDR-BETTER))
 (1336 6 (:DEFINITION LENGTH))
 (1229 61 (:REWRITE INEQ-HACK2))
 (1229 61 (:REWRITE INEQ-HACK))
 (588 21 (:REWRITE <-0-+-NEGATIVE-1))
 (580 18 (:REWRITE STR::CONSP-OF-EXPLODE))
 (522 14 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (498 10 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (448 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (441 57 (:REWRITE DEFAULT-CDR))
 (434 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (424 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (418 162 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (412 29 (:REWRITE DEFAULT-CAR))
 (372 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (360 178 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (360 178 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (298 8 (:REWRITE EQUAL-CONSTANT-+))
 (290 10 (:REWRITE USE-ALL-<-FOR-CAR))
 (290 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (276 138 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (226 226 (:TYPE-PRESCRIPTION NAT-LISTP))
 (207 69 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (207 69 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (188 10 (:REWRITE ALL-NATP-OF-CDR))
 (184 184 (:TYPE-PRESCRIPTION ALL-NATP))
 (178 178 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (178 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (170 16 (:REWRITE LIST::OPEN-EQUIV))
 (154 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (150 12 (:REWRITE ALL-<-OF-CDR))
 (148 110 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (145 96 (:REWRITE DEFAULT-+-2))
 (117 117 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (116 32 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (112 96 (:REWRITE DEFAULT-+-1))
 (110 110 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (110 110 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (110 110 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (110 110 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (110 110 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (110 110 (:META LEN-CONS-META-RULE))
 (103 96 (:REWRITE DEFAULT-<-2))
 (102 102 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (97 96 (:REWRITE DEFAULT-<-1))
 (97 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (96 96 (:REWRITE USE-ALL-<-2))
 (96 96 (:REWRITE USE-ALL-<))
 (96 96 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (96 96 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (96 96 (:REWRITE DROP-LINEAR-HYPS2))
 (96 96 (:REWRITE DROP->-HYPS))
 (96 96 (:REWRITE DROP-<-HYPS))
 (96 96 (:REWRITE BOUND-WHEN-USB2))
 (96 96 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (96 96 (:REWRITE <-WHEN-BVLT))
 (96 96 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (96 96 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (96 96 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (96 96 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (96 96 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (96 96 (:REWRITE <-FROM-<=-FREE))
 (96 96 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (79 79 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (77 57 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (73 61 (:REWRITE NOT-<-WHEN-SBVLT))
 (72 36 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (69 69 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (64 14 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (63 61 (:REWRITE ARITH-HACK-CHEAP))
 (61 61 (:REWRITE USE-ALL-CONSP-2))
 (61 61 (:REWRITE USE-ALL-CONSP))
 (61 61 (:REWRITE USE-ALL-<=-2))
 (61 61 (:REWRITE USE-ALL-<=))
 (61 61 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (61 61 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (61 61 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (61 61 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (61 61 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (61 61 (:REWRITE LEN-GIVES-CONSP))
 (61 61 (:REWRITE DROP-LINEAR-HYPS3))
 (61 61 (:REWRITE DROP-<=-HYPS))
 (61 61 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (61 61 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (61 61 (:REWRITE CONSP-FROM-LEN-BOUND))
 (61 61 (:REWRITE BOUND-WHEN-USB))
 (61 61 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (61 61 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (60 12 (:REWRITE COMMUTATIVITY-OF-+))
 (58 6 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (54 6 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (53 53 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (51 51 (:REWRITE +-OF-MINUS))
 (46 46 (:TYPE-PRESCRIPTION ALL-<))
 (46 46 (:REWRITE CLR-DIFFERENTIAL))
 (45 38 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (42 42 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (42 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (40 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (40 8 (:REWRITE HACK1))
 (36 26 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (35 35 (:REWRITE <-OF-0-WHEN-<-FREE))
 (34 34 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (34 34 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (30 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (29 29 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (28 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (27 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (26 26 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (26 26 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (26 26 (:REWRITE IMPOSSIBLE-VALUE-2))
 (26 26 (:REWRITE IMPOSSIBLE-VALUE-1))
 (26 26 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-BVLT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (23 23 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (23 23 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (20 10 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (19 19 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (16 16 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (16 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (16 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (16 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (15 5 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (15 5 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (14 14 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (14 14 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (14 14 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (14 14 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (14 14 (:REWRITE ALL-<-TRANSITIVE))
 (13 1 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (12 12 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (12 12 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (12 12 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE HELPER-HELPER2))
 (12 12 (:REWRITE HELPER-HELPER))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE +-COMBINE-CONSTANTS))
 (12 6 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (12 6 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (10 10 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (6 6 (:TYPE-PRESCRIPTION ALISTP))
 (6 6 (:REWRITE USE-ALL-RATIONALP-2))
 (6 6 (:REWRITE USE-ALL-RATIONALP))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP))
 (6 6 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (6 6 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (6 6 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (3 3 (:REWRITE WFR-HACK5))
 (3 3 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (1 1 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(GET-MENTIONED-ARG-COMPONENTS-AUX
 (4 4 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-MENTIONED-ARG-COMPONENTS)
(DISJOINT-COMPONENTS)
(DISJOINT-COMPONENT-FROM-ALL
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-DISJOINT-COMPONENTS
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(HYP-MENTIONS-A-COMPONENTP)
(KEEP-HYPS-ABOUT-COMPONENTS-AUX
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(KEEP-HYPS-ABOUT-COMPONENTS)
(GET-EXTRA-CONCS)
(CAR-LIST
 (12 5 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 5 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (5 5 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (5 5 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2 1 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 )
(CDR-LIST
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CAR-OF-CDR-LIST
 (662 22 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (366 183 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (232 16 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (183 183 (:TYPE-PRESCRIPTION NAT-LISTP))
 (84 32 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (84 32 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (84 32 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (66 6 (:LINEAR LIST::LEN-NON-NEGATIVE-LINEAR))
 (60 6 (:REWRITE LIST::LEN-POS-REWRITE))
 (32 32 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (32 32 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (32 32 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (32 32 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (32 32 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (32 32 (:META LEN-CONS-META-RULE))
 (30 15 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (22 22 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (22 22 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (20 2 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (18 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (16 2 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (13 13 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (12 12 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (12 12 (:REWRITE USE-ALL-CONSP-2))
 (12 12 (:REWRITE USE-ALL-CONSP))
 (12 12 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (12 12 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (12 12 (:REWRITE LEN-GIVES-CONSP))
 (12 12 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (12 12 (:REWRITE CONSP-FROM-LEN-BOUND))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (8 4 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION ALISTP))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 6 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION BOOLEANP))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (2 2 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (2 2 (:REWRITE IMPOSSIBLE-VALUE-2))
 (2 2 (:REWRITE IMPOSSIBLE-VALUE-1))
 (2 2 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-BVLT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE CLR-DIFFERENTIAL))
 )
(MAKE-TEST-CASES-FOR-FORMAL-REV
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-TEST-CASES-FOR-FORMALS-AUX
 (3 3 (:TYPE-PRESCRIPTION MAKE-TEST-CASES-FOR-FORMAL-REV))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-TEST-CASES-FOR-FORMALS)
(EXTEND-ALIST
 (6 3 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (6 3 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (3 3 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (3 3 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(COMPOSE-ALISTS
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-TEST-CASES-FOR-FORMALS-AND-OLD-VARS-FOR-TRACE-REV
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1 1 (:TYPE-PRESCRIPTION EXTEND-ALIST))
 )
(MAKE-TEST-CASES-FOR-FORMALS-AND-OLD-VARS-AUX
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-TEST-CASES-FOR-FORMALS-AND-OLD-VARS)
(APPEND-LIST-AUX
 (14 9 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (14 9 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 1 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (5 5 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (5 5 (:TYPE-PRESCRIPTION NAT-LISTP))
 (5 1 (:TYPE-PRESCRIPTION BINARY-APPEND))
 (4 1 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (3 1 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (3 1 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LISTP))
 )
(APPEND-LIST)
(EMPTY-ANALYZED-FUNCTION-TABLE)
(NTH-NEST-AROUND-ITEM
 (3594 12 (:DEFINITION INTEGER-ABS))
 (3195 61 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1996 162 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1835 51 (:REWRITE LEN-OF-CDR-BETTER))
 (1336 6 (:DEFINITION LENGTH))
 (1229 61 (:REWRITE INEQ-HACK2))
 (1229 61 (:REWRITE INEQ-HACK))
 (588 21 (:REWRITE <-0-+-NEGATIVE-1))
 (580 18 (:REWRITE STR::CONSP-OF-EXPLODE))
 (522 14 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (498 10 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (448 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (441 57 (:REWRITE DEFAULT-CDR))
 (434 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (424 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (418 162 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (412 29 (:REWRITE DEFAULT-CAR))
 (376 186 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (376 186 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (372 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (298 8 (:REWRITE EQUAL-CONSTANT-+))
 (290 10 (:REWRITE USE-ALL-<-FOR-CAR))
 (290 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (276 138 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (234 234 (:TYPE-PRESCRIPTION NAT-LISTP))
 (207 69 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (207 69 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (188 10 (:REWRITE ALL-NATP-OF-CDR))
 (186 186 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (184 184 (:TYPE-PRESCRIPTION ALL-NATP))
 (178 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (170 16 (:REWRITE LIST::OPEN-EQUIV))
 (154 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (150 12 (:REWRITE ALL-<-OF-CDR))
 (148 110 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (145 96 (:REWRITE DEFAULT-+-2))
 (117 117 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (116 32 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (112 96 (:REWRITE DEFAULT-+-1))
 (110 110 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (110 110 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (110 110 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (110 110 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (110 110 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (110 110 (:META LEN-CONS-META-RULE))
 (103 96 (:REWRITE DEFAULT-<-2))
 (102 102 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (97 96 (:REWRITE DEFAULT-<-1))
 (97 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (96 96 (:REWRITE USE-ALL-<-2))
 (96 96 (:REWRITE USE-ALL-<))
 (96 96 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (96 96 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (96 96 (:REWRITE DROP-LINEAR-HYPS2))
 (96 96 (:REWRITE DROP->-HYPS))
 (96 96 (:REWRITE DROP-<-HYPS))
 (96 96 (:REWRITE BOUND-WHEN-USB2))
 (96 96 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (96 96 (:REWRITE <-WHEN-BVLT))
 (96 96 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (96 96 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (96 96 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (96 96 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (96 96 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (96 96 (:REWRITE <-FROM-<=-FREE))
 (96 96 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (79 79 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (77 57 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (76 38 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (73 61 (:REWRITE NOT-<-WHEN-SBVLT))
 (69 69 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (64 14 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (63 61 (:REWRITE ARITH-HACK-CHEAP))
 (61 61 (:REWRITE USE-ALL-CONSP-2))
 (61 61 (:REWRITE USE-ALL-CONSP))
 (61 61 (:REWRITE USE-ALL-<=-2))
 (61 61 (:REWRITE USE-ALL-<=))
 (61 61 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (61 61 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (61 61 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (61 61 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (61 61 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (61 61 (:REWRITE LEN-GIVES-CONSP))
 (61 61 (:REWRITE DROP-LINEAR-HYPS3))
 (61 61 (:REWRITE DROP-<=-HYPS))
 (61 61 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (61 61 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (61 61 (:REWRITE CONSP-FROM-LEN-BOUND))
 (61 61 (:REWRITE BOUND-WHEN-USB))
 (61 61 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (61 61 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (60 12 (:REWRITE COMMUTATIVITY-OF-+))
 (58 6 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (54 6 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (53 53 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (51 51 (:REWRITE +-OF-MINUS))
 (47 47 (:REWRITE CLR-DIFFERENTIAL))
 (46 46 (:TYPE-PRESCRIPTION ALL-<))
 (46 39 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (44 44 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (42 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (40 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (40 8 (:REWRITE HACK1))
 (37 27 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (35 35 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (35 35 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (35 35 (:REWRITE <-OF-0-WHEN-<-FREE))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (30 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (29 29 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (28 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (27 27 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (27 27 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (27 27 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (27 27 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (27 27 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (27 27 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (27 27 (:REWRITE IMPOSSIBLE-VALUE-2))
 (27 27 (:REWRITE IMPOSSIBLE-VALUE-1))
 (27 27 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (27 27 (:REWRITE EQUAL-WHEN-BVLT))
 (27 27 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (27 27 (:REWRITE EQUAL-WHEN-<-OF-+))
 (27 27 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (27 27 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (27 27 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (27 27 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (27 27 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (27 27 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (27 27 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (27 27 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (27 27 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (27 27 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (27 27 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (27 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (23 23 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (23 23 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (20 10 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (19 19 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (16 16 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (16 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (16 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (16 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (15 5 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (15 5 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (14 14 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (14 14 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (14 14 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (14 14 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (14 14 (:REWRITE ALL-<-TRANSITIVE))
 (13 1 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (12 12 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (12 12 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (12 12 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE HELPER-HELPER2))
 (12 12 (:REWRITE HELPER-HELPER))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE +-COMBINE-CONSTANTS))
 (12 6 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (12 6 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (10 10 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (6 6 (:TYPE-PRESCRIPTION ALISTP))
 (6 6 (:REWRITE USE-ALL-RATIONALP-2))
 (6 6 (:REWRITE USE-ALL-RATIONALP))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP))
 (6 6 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (6 6 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (6 6 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (3 3 (:REWRITE WFR-HACK5))
 (3 3 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (1 1 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(MAKE-EQUALITIES
 (4436 308 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (3765 136 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1163 124 (:REWRITE DEFAULT-CDR))
 (741 3 (:LINEAR LEN-OF-CDR-LINEAR-STRONG))
 (741 3 (:LINEAR LIST::LEN-OF-CDR-LINEAR))
 (729 3 (:LINEAR LIST::LEN-OF-CDR-BOUND-TIGHT-LINEAR))
 (728 26 (:REWRITE <-0-+-NEGATIVE-1))
 (723 3 (:LINEAR LEN-OF-CDR-LINEAR))
 (723 3 (:LINEAR LIST::LEN-OF-CDR-BOUND-WEAK-LINEAR))
 (541 308 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (420 20 (:REWRITE EQUAL-CONSTANT-+))
 (400 20 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (202 5 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (198 198 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (198 198 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (198 198 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (198 198 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (198 198 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (198 198 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (198 198 (:META LEN-CONS-META-RULE))
 (165 124 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (136 136 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (136 136 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (114 113 (:REWRITE DEFAULT-+-2))
 (113 113 (:REWRITE DEFAULT-+-1))
 (113 113 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (113 113 (:REWRITE +-OF-MINUS))
 (110 97 (:REWRITE LEN-GIVES-CONSP))
 (104 52 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (100 20 (:REWRITE HACK1))
 (100 20 (:REWRITE LIST::EQUAL-CONS-CASES))
 (97 97 (:REWRITE USE-ALL-CONSP-2))
 (97 97 (:REWRITE USE-ALL-CONSP))
 (97 97 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (97 97 (:REWRITE CONSP-FROM-LEN-BOUND))
 (90 90 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (81 5 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (80 80 (:REWRITE DEFAULT-CAR))
 (80 80 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (78 26 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (78 26 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (73 73 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (52 52 (:TYPE-PRESCRIPTION ALL-NATP))
 (48 47 (:REWRITE DEFAULT-<-2))
 (47 47 (:REWRITE USE-ALL-<-2))
 (47 47 (:REWRITE USE-ALL-<))
 (47 47 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (47 47 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (47 47 (:REWRITE DROP-LINEAR-HYPS2))
 (47 47 (:REWRITE DROP->-HYPS))
 (47 47 (:REWRITE DROP-<-HYPS))
 (47 47 (:REWRITE DEFAULT-<-1))
 (47 47 (:REWRITE BOUND-WHEN-USB2))
 (47 47 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (47 47 (:REWRITE <-WHEN-BVLT))
 (47 47 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (47 47 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (47 47 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (47 47 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (47 47 (:REWRITE <-OF-0-WHEN-<-FREE))
 (47 47 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (47 47 (:REWRITE <-FROM-<=-FREE))
 (31 3 (:REWRITE LIST::LEN-POS-REWRITE))
 (26 26 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (22 22 (:REWRITE LIST::TRUE-LISTP-FIX))
 (22 22 (:REWRITE CLR-DIFFERENTIAL))
 (21 21 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (21 21 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (20 20 (:REWRITE CDR-CONS))
 (20 20 (:REWRITE CAR-CONS))
 (10 1 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (7 1 (:REWRITE LEN-WHEN-EQUAL-OF-TRUE-LIST-FIX-AND-TRUE-LIST-FIX))
 (5 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (5 2 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (2 1 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (1 1 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (1 1 (:REWRITE IMPOSSIBLE-VALUE-2))
 (1 1 (:REWRITE IMPOSSIBLE-VALUE-1))
 (1 1 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (1 1 (:REWRITE EQUAL-WHEN-BVLT))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+))
 (1 1 (:REWRITE EQUAL-OF-LEN-AND-LEN-WHEN-PREFIXP-ALT))
 (1 1 (:REWRITE EQUAL-OF-LEN-AND-LEN-WHEN-PREFIXP))
 (1 1 (:REWRITE EQUAL-OF-LEN-AND-LEN-WHEN-EQUAL-OF-NTHCDR-AND-NTHCDR))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(FIND-TERMS
 (4 4 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-TERM)
(LOOKUP-EQUAL-ALL
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-BINDINGS-FOR-USE-HINT
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-ALIST-INTO-BINDINGS
 (18 9 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (18 9 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (9 9 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (9 9 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-CONSED-ITEMS-FROM-CONS-NEST
 (2659 51 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2402 12 (:DEFINITION INTEGER-ABS))
 (1627 43 (:REWRITE LEN-OF-CDR-BETTER))
 (1553 131 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1336 6 (:DEFINITION LENGTH))
 (621 37 (:REWRITE INEQ-HACK2))
 (621 37 (:REWRITE INEQ-HACK))
 (580 18 (:REWRITE STR::CONSP-OF-EXPLODE))
 (522 14 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (494 6 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (448 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (434 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (433 49 (:REWRITE DEFAULT-CDR))
 (424 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (383 131 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (372 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (364 13 (:REWRITE <-0-+-NEGATIVE-1))
 (298 8 (:REWRITE EQUAL-CONSTANT-+))
 (290 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (279 26 (:REWRITE DEFAULT-CAR))
 (250 6 (:REWRITE USE-ALL-<-FOR-CAR))
 (192 101 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (192 101 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (188 10 (:REWRITE ALL-NATP-OF-CDR))
 (178 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (170 16 (:REWRITE LIST::OPEN-EQUIV))
 (154 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (148 74 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (142 8 (:REWRITE ALL-<-OF-CDR))
 (140 32 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (139 139 (:TYPE-PRESCRIPTION NAT-LISTP))
 (137 88 (:REWRITE DEFAULT-+-2))
 (121 87 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (120 120 (:TYPE-PRESCRIPTION ALL-NATP))
 (111 37 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (111 37 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (104 88 (:REWRITE DEFAULT-+-1))
 (102 102 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (91 91 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (88 88 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (87 87 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (87 87 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (87 87 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (87 87 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (87 87 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (87 87 (:META LEN-CONS-META-RULE))
 (77 77 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (71 64 (:REWRITE DEFAULT-<-2))
 (69 69 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (69 49 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (68 3 (:REWRITE LIST::LEN-POS-REWRITE))
 (65 64 (:REWRITE DEFAULT-<-1))
 (64 64 (:REWRITE USE-ALL-<-2))
 (64 64 (:REWRITE USE-ALL-<))
 (64 64 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (64 64 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (64 64 (:REWRITE DROP-LINEAR-HYPS2))
 (64 64 (:REWRITE DROP->-HYPS))
 (64 64 (:REWRITE DROP-<-HYPS))
 (64 64 (:REWRITE BOUND-WHEN-USB2))
 (64 64 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (64 64 (:REWRITE <-WHEN-BVLT))
 (64 64 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (64 64 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (64 64 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (64 64 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (64 64 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (64 64 (:REWRITE <-FROM-<=-FREE))
 (60 12 (:REWRITE COMMUTATIVITY-OF-+))
 (60 10 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (58 6 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (54 6 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (51 51 (:REWRITE USE-ALL-CONSP-2))
 (51 51 (:REWRITE USE-ALL-CONSP))
 (51 51 (:REWRITE LEN-GIVES-CONSP))
 (51 51 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (51 51 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (51 51 (:REWRITE CONSP-FROM-LEN-BOUND))
 (49 37 (:REWRITE NOT-<-WHEN-SBVLT))
 (45 45 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (45 45 (:REWRITE CLR-DIFFERENTIAL))
 (43 43 (:REWRITE +-OF-MINUS))
 (42 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (40 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (40 8 (:REWRITE HACK1))
 (39 37 (:REWRITE ARITH-HACK-CHEAP))
 (37 37 (:REWRITE USE-ALL-<=-2))
 (37 37 (:REWRITE USE-ALL-<=))
 (37 37 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (37 37 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (37 37 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (37 37 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (37 37 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (37 37 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (37 37 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (37 37 (:REWRITE DROP-LINEAR-HYPS3))
 (37 37 (:REWRITE DROP-<=-HYPS))
 (37 37 (:REWRITE BOUND-WHEN-USB))
 (37 37 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (37 37 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (33 33 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (33 33 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (30 30 (:TYPE-PRESCRIPTION ALL-<))
 (29 25 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (28 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (27 27 (:REWRITE <-OF-0-WHEN-<-FREE))
 (26 26 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (25 25 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (25 25 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (25 25 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (25 25 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (25 25 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (25 25 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (25 25 (:REWRITE IMPOSSIBLE-VALUE-2))
 (25 25 (:REWRITE IMPOSSIBLE-VALUE-1))
 (25 25 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (25 25 (:REWRITE EQUAL-WHEN-BVLT))
 (25 25 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (25 25 (:REWRITE EQUAL-WHEN-<-OF-+))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (25 25 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (25 25 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (22 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (20 4 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (16 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (16 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (16 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (14 14 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (14 14 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (13 1 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (12 12 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (12 12 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (12 12 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (12 12 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE HELPER-HELPER2))
 (12 12 (:REWRITE HELPER-HELPER))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE +-COMBINE-CONSTANTS))
 (12 6 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (12 6 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 6 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (12 6 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (12 4 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (12 4 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (10 10 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (10 10 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (10 10 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (10 10 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (10 10 (:REWRITE ALL-<-TRANSITIVE))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 6 (:REWRITE USE-ALL-RATIONALP-2))
 (6 6 (:REWRITE USE-ALL-RATIONALP))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP))
 (6 6 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (6 6 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (6 6 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (6 6 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION ALISTP))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(KEEP-TERMS-THAT-MENTION-ONLY
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-NTHS-OF-SYMBOL
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(KEEP-TERMS-THAT-MENTION
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-EQUALITIES-FROM-ALIST
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(STRIP-LEN-AND-NTH-ALIST)
(MAKE-OLD-VAR-NAMES-AUX
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-OLD-VAR-NAMES)
(ASSOC-FLIPPED-EQ
 (28 14 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (28 14 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (14 14 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (14 14 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LOOKUP-FLIPPED-EQ)
(LOOKUP-FLIPPED-LST-EQ
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-ALIST-FROM-EQUALITIES
 (48 24 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (48 24 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (24 24 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (24 24 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-UNCHANGED-VAR-INVARS
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ORIENT-EQUALITY)
(CALL-OF-USER-FN-ON-FORMALSP
 (10 5 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (10 5 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (5 5 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (5 5 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CALL-OF-USER-FNP
 (10 5 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (10 5 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (5 5 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (5 5 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(EXPAND-FN-CALL-EXPR
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(EXPAND-FN-CALL-EXPR-AND-PROVE-THEOREM)
(CLOSURE-OF-REPLACEMENT-ALIST-AUX
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CLOSURE-OF-REPLACEMENT-ALIST)
(REWRITE-ALIST-VALS
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-CONNECTION-EQUALITIES3
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PACKNEW-LIST)
(NO-COMPONENTS-REPLACED
 (86 43 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (86 43 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (43 43 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (43 43 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PAIR-KEPT-COMPONENTS-WITH-NEW-EXPRS
 (16 9 (:REWRITE NOT-<-WHEN-SBVLT))
 (14 14 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (9 9 (:REWRITE USE-ALL-<=-2))
 (9 9 (:REWRITE USE-ALL-<=))
 (9 9 (:REWRITE USE-ALL-<-2))
 (9 9 (:REWRITE USE-ALL-<))
 (9 9 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (9 9 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (9 9 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (9 9 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (9 9 (:REWRITE INEQ-HACK2))
 (9 9 (:REWRITE INEQ-HACK))
 (9 9 (:REWRITE DROP-LINEAR-HYPS3))
 (9 9 (:REWRITE DROP-LINEAR-HYPS2))
 (9 9 (:REWRITE DROP->-HYPS))
 (9 9 (:REWRITE DROP-<=-HYPS))
 (9 9 (:REWRITE DROP-<-HYPS))
 (9 9 (:REWRITE DEFAULT-<-2))
 (9 9 (:REWRITE DEFAULT-<-1))
 (9 9 (:REWRITE BOUND-WHEN-USB2))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 9 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (9 9 (:REWRITE <-WHEN-BVLT))
 (9 9 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (9 9 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (9 9 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (9 9 (:REWRITE <-FROM-<=-FREE))
 (8 8 (:REWRITE DEFAULT-+-2))
 (8 8 (:REWRITE DEFAULT-+-1))
 (8 8 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (7 7 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 4 (:REWRITE USE-ALL-NATP-2))
 (4 4 (:REWRITE USE-ALL-NATP))
 (4 4 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE +-OF-MINUS))
 (3 3 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (3 3 (:REWRITE DROP-LINEAR-HYPS1))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (3 3 (:REWRITE BOUND-LEMMA))
 (3 3 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (3 3 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-IF-ARG1-SAFE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(COPY-VALS-IN-TEST-CASES
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(TEST-CASE-VAL-FOR-NEW-FORMAL
 (16 9 (:REWRITE NOT-<-WHEN-SBVLT))
 (14 14 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (9 9 (:REWRITE USE-ALL-<=-2))
 (9 9 (:REWRITE USE-ALL-<=))
 (9 9 (:REWRITE USE-ALL-<-2))
 (9 9 (:REWRITE USE-ALL-<))
 (9 9 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (9 9 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (9 9 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (9 9 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (9 9 (:REWRITE INEQ-HACK2))
 (9 9 (:REWRITE INEQ-HACK))
 (9 9 (:REWRITE DROP-LINEAR-HYPS3))
 (9 9 (:REWRITE DROP-LINEAR-HYPS2))
 (9 9 (:REWRITE DROP->-HYPS))
 (9 9 (:REWRITE DROP-<=-HYPS))
 (9 9 (:REWRITE DROP-<-HYPS))
 (9 9 (:REWRITE DEFAULT-<-2))
 (9 9 (:REWRITE DEFAULT-<-1))
 (9 9 (:REWRITE BOUND-WHEN-USB2))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 9 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (9 9 (:REWRITE <-WHEN-BVLT))
 (9 9 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (9 9 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (9 9 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (9 9 (:REWRITE <-FROM-<=-FREE))
 (8 8 (:REWRITE DEFAULT-+-2))
 (8 8 (:REWRITE DEFAULT-+-1))
 (8 8 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (7 7 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 4 (:REWRITE USE-ALL-NATP-2))
 (4 4 (:REWRITE USE-ALL-NATP))
 (4 4 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE +-OF-MINUS))
 (3 3 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (3 3 (:REWRITE DROP-LINEAR-HYPS1))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (3 3 (:REWRITE BOUND-LEMMA))
 (3 3 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (3 3 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (2 1 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (1 1 (:TYPE-PRESCRIPTION ALL-NATP))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-IF-ARG1-SAFE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(DROPPED-COMPONENT-RENAMING-ALIST
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(NEW-UPDATE-EXPR-COMPONENTS
 (15 15 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (15 15 (:REWRITE ARITH-HACK-CHEAP))
 (15 15 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (14 14 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (14 14 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (14 14 (:REWRITE INEQ-HACK2))
 (14 14 (:REWRITE INEQ-HACK))
 (14 14 (:REWRITE DROP-LINEAR-HYPS3))
 (14 14 (:REWRITE DROP-LINEAR-HYPS2))
 (14 14 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (14 14 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (14 10 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 12 (:REWRITE DROP->-HYPS))
 (12 12 (:REWRITE DROP-<=-HYPS))
 (12 12 (:REWRITE DROP-<-HYPS))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (10 10 (:REWRITE USE-ALL-<=-2))
 (10 10 (:REWRITE USE-ALL-<=))
 (10 10 (:REWRITE USE-ALL-<-2))
 (10 10 (:REWRITE USE-ALL-<))
 (10 10 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (10 10 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (10 10 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (10 10 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (10 10 (:REWRITE DEFAULT-<-2))
 (10 10 (:REWRITE DEFAULT-<-1))
 (10 10 (:REWRITE DEFAULT-+-2))
 (10 10 (:REWRITE DEFAULT-+-1))
 (10 10 (:REWRITE BOUND-WHEN-USB2))
 (10 10 (:REWRITE BOUND-WHEN-USB))
 (10 10 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (10 10 (:REWRITE <-WHEN-BVLT))
 (10 10 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (10 10 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (10 10 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (10 10 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (10 10 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (10 10 (:REWRITE <-FROM-<=-FREE))
 (10 10 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (8 8 (:REWRITE DROP-LINEAR-HYPS1))
 (8 8 (:REWRITE BOUND-LEMMA))
 (6 6 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (4 4 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 4 (:REWRITE USE-ALL-NATP-2))
 (4 4 (:REWRITE USE-ALL-NATP))
 (4 4 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (4 4 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (4 4 (:REWRITE +-OF-MINUS))
 (3 3 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE <-OF-NEGATIVE-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 )
(FIND-HIGHEST-NUMBERED-COMPONENT-KEY
 (466 201 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (466 201 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (195 195 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (195 195 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CONS-ALL-ONTO
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LOOKUP-FORMAL-COMPONENTS
 (15 15 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (15 15 (:REWRITE ARITH-HACK-CHEAP))
 (15 15 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (14 14 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (14 14 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (14 14 (:REWRITE INEQ-HACK2))
 (14 14 (:REWRITE INEQ-HACK))
 (14 14 (:REWRITE DROP-LINEAR-HYPS3))
 (14 14 (:REWRITE DROP-LINEAR-HYPS2))
 (14 14 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (14 14 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (14 10 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 12 (:REWRITE DROP->-HYPS))
 (12 12 (:REWRITE DROP-<=-HYPS))
 (12 12 (:REWRITE DROP-<-HYPS))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (10 10 (:REWRITE USE-ALL-<=-2))
 (10 10 (:REWRITE USE-ALL-<=))
 (10 10 (:REWRITE USE-ALL-<-2))
 (10 10 (:REWRITE USE-ALL-<))
 (10 10 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (10 10 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (10 10 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (10 10 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (10 10 (:REWRITE DEFAULT-<-2))
 (10 10 (:REWRITE DEFAULT-<-1))
 (10 10 (:REWRITE DEFAULT-+-2))
 (10 10 (:REWRITE DEFAULT-+-1))
 (10 10 (:REWRITE BOUND-WHEN-USB2))
 (10 10 (:REWRITE BOUND-WHEN-USB))
 (10 10 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (10 10 (:REWRITE <-WHEN-BVLT))
 (10 10 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (10 10 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (10 10 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (10 10 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (10 10 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (10 10 (:REWRITE <-FROM-<=-FREE))
 (10 10 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (8 8 (:REWRITE DROP-LINEAR-HYPS1))
 (8 8 (:REWRITE BOUND-LEMMA))
 (6 6 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (4 4 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 4 (:REWRITE USE-ALL-NATP-2))
 (4 4 (:REWRITE USE-ALL-NATP))
 (4 4 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (4 4 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (4 4 (:REWRITE +-OF-MINUS))
 (3 3 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE <-OF-NEGATIVE-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-UNARY-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 )
(EXPRESS-NEW-PARAMS-IN-TERMS-OF-OLD
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(NTH-NEST-WITH-COREP
 (2659 51 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2402 12 (:DEFINITION INTEGER-ABS))
 (1627 43 (:REWRITE LEN-OF-CDR-BETTER))
 (1553 131 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1336 6 (:DEFINITION LENGTH))
 (621 37 (:REWRITE INEQ-HACK2))
 (621 37 (:REWRITE INEQ-HACK))
 (580 18 (:REWRITE STR::CONSP-OF-EXPLODE))
 (522 14 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (494 6 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (448 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (434 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (433 49 (:REWRITE DEFAULT-CDR))
 (424 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (383 131 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (372 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (364 13 (:REWRITE <-0-+-NEGATIVE-1))
 (298 8 (:REWRITE EQUAL-CONSTANT-+))
 (290 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (279 26 (:REWRITE DEFAULT-CAR))
 (250 6 (:REWRITE USE-ALL-<-FOR-CAR))
 (211 111 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (211 111 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (188 10 (:REWRITE ALL-NATP-OF-CDR))
 (178 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (170 16 (:REWRITE LIST::OPEN-EQUIV))
 (154 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (148 148 (:TYPE-PRESCRIPTION NAT-LISTP))
 (148 74 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (142 8 (:REWRITE ALL-<-OF-CDR))
 (140 32 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (137 88 (:REWRITE DEFAULT-+-2))
 (121 87 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (120 120 (:TYPE-PRESCRIPTION ALL-NATP))
 (111 37 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (111 37 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (104 88 (:REWRITE DEFAULT-+-1))
 (102 102 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (100 100 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (88 88 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (87 87 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (87 87 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (87 87 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (87 87 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (87 87 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (87 87 (:META LEN-CONS-META-RULE))
 (77 77 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (71 64 (:REWRITE DEFAULT-<-2))
 (69 69 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (69 49 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (68 3 (:REWRITE LIST::LEN-POS-REWRITE))
 (65 64 (:REWRITE DEFAULT-<-1))
 (64 64 (:REWRITE USE-ALL-<-2))
 (64 64 (:REWRITE USE-ALL-<))
 (64 64 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (64 64 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (64 64 (:REWRITE DROP-LINEAR-HYPS2))
 (64 64 (:REWRITE DROP->-HYPS))
 (64 64 (:REWRITE DROP-<-HYPS))
 (64 64 (:REWRITE BOUND-WHEN-USB2))
 (64 64 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (64 64 (:REWRITE <-WHEN-BVLT))
 (64 64 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (64 64 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (64 64 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (64 64 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (64 64 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (64 64 (:REWRITE <-FROM-<=-FREE))
 (60 12 (:REWRITE COMMUTATIVITY-OF-+))
 (60 10 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (58 6 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (54 6 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (51 51 (:REWRITE USE-ALL-CONSP-2))
 (51 51 (:REWRITE USE-ALL-CONSP))
 (51 51 (:REWRITE LEN-GIVES-CONSP))
 (51 51 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (51 51 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (51 51 (:REWRITE CONSP-FROM-LEN-BOUND))
 (49 37 (:REWRITE NOT-<-WHEN-SBVLT))
 (46 46 (:REWRITE CLR-DIFFERENTIAL))
 (45 45 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (43 43 (:REWRITE +-OF-MINUS))
 (42 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (40 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (40 8 (:REWRITE HACK1))
 (39 38 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (39 37 (:REWRITE ARITH-HACK-CHEAP))
 (37 37 (:REWRITE USE-ALL-<=-2))
 (37 37 (:REWRITE USE-ALL-<=))
 (37 37 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (37 37 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (37 37 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (37 37 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (37 37 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (37 37 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (37 37 (:REWRITE DROP-LINEAR-HYPS3))
 (37 37 (:REWRITE DROP-<=-HYPS))
 (37 37 (:REWRITE BOUND-WHEN-USB))
 (37 37 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (37 37 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (37 37 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (34 34 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (34 34 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (30 30 (:TYPE-PRESCRIPTION ALL-<))
 (30 26 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (28 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (27 27 (:REWRITE <-OF-0-WHEN-<-FREE))
 (26 26 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (26 26 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (26 26 (:REWRITE IMPOSSIBLE-VALUE-2))
 (26 26 (:REWRITE IMPOSSIBLE-VALUE-1))
 (26 26 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-BVLT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (26 26 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (22 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (20 4 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (16 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (16 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (16 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (14 14 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (14 14 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (13 1 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (12 12 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (12 12 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (12 12 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (12 12 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE HELPER-HELPER2))
 (12 12 (:REWRITE HELPER-HELPER))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE +-COMBINE-CONSTANTS))
 (12 6 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (12 6 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 6 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (12 6 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (12 4 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (12 4 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (10 10 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (10 10 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (10 10 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (10 10 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (10 10 (:REWRITE ALL-<-TRANSITIVE))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 6 (:REWRITE USE-ALL-RATIONALP-2))
 (6 6 (:REWRITE USE-ALL-RATIONALP))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP))
 (6 6 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (6 6 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (6 6 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (6 6 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION ALISTP))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE WFR-HACK5))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(SOME-COMPONENTS-REPLACEDP
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(KEPT-COMPONENT-RENAMING-ALIST2
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION ADD-RENAMINGS-OF-KEPT-COMPONENTS))
 )
(FORMAL-REPLACEMENT-TERMS2
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(NEW-FORMALS-IN-TERMS-OF-OLD-ALIST
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2 2 (:TYPE-PRESCRIPTION COMPONENT-IN-TERMS-OF-OLD))
 )
(EVAL-CONS-AND-NTH-NEST
 (8200 154 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (7748 40 (:DEFINITION INTEGER-ABS))
 (5406 394 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (4596 120 (:REWRITE LEN-OF-CDR-BETTER))
 (4464 20 (:DEFINITION LENGTH))
 (2100 124 (:REWRITE INEQ-HACK2))
 (2100 124 (:REWRITE INEQ-HACK))
 (1944 60 (:REWRITE STR::CONSP-OF-EXPLODE))
 (1456 52 (:REWRITE <-0-+-NEGATIVE-1))
 (1436 48 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (1360 24 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (1250 394 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (1240 20 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (1208 144 (:REWRITE DEFAULT-CDR))
 (1204 8 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (1156 52 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (1124 20 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (838 72 (:REWRITE DEFAULT-CAR))
 (828 24 (:REWRITE USE-ALL-<-FOR-CAR))
 (734 381 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (734 381 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (596 16 (:REWRITE EQUAL-CONSTANT-+))
 (580 16 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (538 269 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (517 517 (:TYPE-PRESCRIPTION NAT-LISTP))
 (492 108 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (438 272 (:REWRITE DEFAULT-+-2))
 (428 28 (:REWRITE ALL-NATP-OF-CDR))
 (421 421 (:TYPE-PRESCRIPTION ALL-NATP))
 (408 28 (:REWRITE ALL-<-OF-CDR))
 (396 272 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (396 132 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (396 132 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (356 16 (:REWRITE LIST::LIST-EQUIV-HACK))
 (353 353 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (340 340 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (340 32 (:REWRITE LIST::OPEN-EQUIV))
 (328 12 (:REWRITE ALL-RATIONALP-OF-CDR))
 (326 272 (:REWRITE DEFAULT-+-1))
 (272 272 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (272 272 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (272 272 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (272 272 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (272 272 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (272 272 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (272 272 (:META LEN-CONS-META-RULE))
 (272 12 (:REWRITE LIST::LEN-POS-REWRITE))
 (264 264 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (236 212 (:REWRITE DEFAULT-<-2))
 (216 212 (:REWRITE DEFAULT-<-1))
 (214 214 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (212 212 (:REWRITE USE-ALL-<-2))
 (212 212 (:REWRITE USE-ALL-<))
 (212 212 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (212 212 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (212 212 (:REWRITE DROP-LINEAR-HYPS2))
 (212 212 (:REWRITE DROP->-HYPS))
 (212 212 (:REWRITE DROP-<-HYPS))
 (212 212 (:REWRITE BOUND-WHEN-USB2))
 (212 212 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (212 212 (:REWRITE <-WHEN-BVLT))
 (212 212 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (212 212 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (212 212 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (212 212 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (212 212 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (212 212 (:REWRITE <-FROM-<=-FREE))
 (200 144 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (200 40 (:REWRITE COMMUTATIVITY-OF-+))
 (196 20 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (180 36 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (180 16 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (168 20 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (164 124 (:REWRITE NOT-<-WHEN-SBVLT))
 (154 154 (:REWRITE USE-ALL-CONSP-2))
 (154 154 (:REWRITE USE-ALL-CONSP))
 (154 154 (:REWRITE LEN-GIVES-CONSP))
 (154 154 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (154 154 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (154 154 (:REWRITE CONSP-FROM-LEN-BOUND))
 (140 140 (:REWRITE CLR-DIFFERENTIAL))
 (140 8 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (132 132 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (132 124 (:REWRITE ARITH-HACK-CHEAP))
 (132 52 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (130 130 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (124 124 (:REWRITE USE-ALL-<=-2))
 (124 124 (:REWRITE USE-ALL-<=))
 (124 124 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (124 124 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (124 124 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (124 124 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (124 124 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (124 124 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (124 124 (:REWRITE DROP-LINEAR-HYPS3))
 (124 124 (:REWRITE DROP-<=-HYPS))
 (124 124 (:REWRITE BOUND-WHEN-USB))
 (124 124 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (124 124 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (124 124 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (124 124 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (124 124 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (120 120 (:REWRITE +-OF-MINUS))
 (112 112 (:TYPE-PRESCRIPTION ALL-<))
 (104 52 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (100 100 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (100 100 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (100 84 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (88 88 (:REWRITE <-OF-0-WHEN-<-FREE))
 (84 84 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (84 84 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (84 84 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (84 84 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (84 84 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (84 84 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (84 84 (:REWRITE IMPOSSIBLE-VALUE-2))
 (84 84 (:REWRITE IMPOSSIBLE-VALUE-1))
 (84 84 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (84 84 (:REWRITE EQUAL-WHEN-BVLT))
 (84 84 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (84 84 (:REWRITE EQUAL-WHEN-<-OF-+))
 (84 84 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (84 84 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (84 84 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (84 84 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (84 84 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (84 84 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (84 84 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (84 84 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (84 84 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (84 84 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (84 84 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (84 12 (:REWRITE INTEGER-LISTP-OF-CDR))
 (80 16 (:REWRITE HACK1))
 (76 16 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (72 72 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (68 16 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (64 64 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (52 52 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (48 48 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (48 48 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (48 24 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (48 24 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (40 40 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (40 40 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (40 40 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (40 40 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (40 40 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (40 40 (:REWRITE HELPER-HELPER2))
 (40 40 (:REWRITE HELPER-HELPER))
 (40 40 (:REWRITE FOLD-CONSTS-IN-+))
 (40 40 (:REWRITE DEFAULT-UNARY-MINUS))
 (40 40 (:REWRITE +-COMBINE-CONSTANTS))
 (40 20 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (40 20 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (36 36 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (36 36 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (36 36 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (36 36 (:REWRITE ALL-<-TRANSITIVE))
 (36 12 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (36 12 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (32 16 (:REWRITE LIST::TRUE-LISTP-FIX))
 (32 16 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (32 16 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (32 16 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (32 16 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (32 16 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (26 2 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (24 24 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (20 20 (:REWRITE USE-ALL-RATIONALP-2))
 (20 20 (:REWRITE USE-ALL-RATIONALP))
 (20 20 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (20 20 (:REWRITE USE-ALL-INTEGER-LISTP))
 (20 20 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (20 20 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (20 20 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (20 20 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (20 20 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (20 20 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (20 20 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (20 20 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (20 20 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (20 20 (:REWRITE DEFAULT-REALPART))
 (20 20 (:REWRITE DEFAULT-NUMERATOR))
 (20 20 (:REWRITE DEFAULT-IMAGPART))
 (20 20 (:REWRITE DEFAULT-DENOMINATOR))
 (20 20 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (16 16 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (16 16 (:TYPE-PRESCRIPTION ALISTP))
 (16 16 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (16 16 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (16 16 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (16 16 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (16 16 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (16 16 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (16 16 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (16 16 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (16 16 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (16 16 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (16 16 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (16 16 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (16 8 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (16 8 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (16 8 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (16 8 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (16 8 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (12 12 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (12 12 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (8 8 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (8 8 (:REWRITE WFR-HACK5))
 (8 8 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 8 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (8 8 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (4 4 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (4 4 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (4 4 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (4 4 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (4 4 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 )
(EXTEND-TEST-CASE-FOR-NEW-FORMALS
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ADD-TEST-CASES-FOR-NEW-FORMALS2
 (5 1 (:TYPE-PRESCRIPTION EXTEND-TEST-CASE-FOR-NEW-FORMALS))
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FILTER-USER-FNS-TO-OPEN
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CONVERT-TO-HEAD-RECURSIVE-EVENTS-WRAPPER)
(SUBLIS-VAR-AND-EVAL-LST2)
(SKIP-LEN
 (72 36 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (72 36 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (36 36 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (36 36 (:TYPE-PRESCRIPTION NAT-LISTP))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(GET-FNS-OF-ITEMS
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (1 1 (:TYPE-PRESCRIPTION TRUE-LISTP))
 )
(MAKE-FNS-ARRAY-FOR-NODES
 (110 5 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (14 14 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (14 14 (:REWRITE DEFAULT-+-2))
 (14 14 (:REWRITE DEFAULT-+-1))
 (14 14 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (14 10 (:REWRITE NOT-<-WHEN-SBVLT))
 (13 13 (:REWRITE ARITH-HACK-CHEAP))
 (13 13 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (12 12 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (12 12 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (11 11 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (11 11 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (11 11 (:REWRITE INEQ-HACK2))
 (11 11 (:REWRITE INEQ-HACK))
 (11 11 (:REWRITE DROP-LINEAR-HYPS3))
 (11 11 (:REWRITE DROP-LINEAR-HYPS2))
 (11 11 (:REWRITE DROP->-HYPS))
 (11 11 (:REWRITE DROP-<=-HYPS))
 (11 11 (:REWRITE DROP-<-HYPS))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (10 10 (:REWRITE USE-ALL-<=-2))
 (10 10 (:REWRITE USE-ALL-<=))
 (10 10 (:REWRITE USE-ALL-<-2))
 (10 10 (:REWRITE USE-ALL-<))
 (10 10 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (10 10 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (10 10 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (10 10 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (10 10 (:REWRITE DEFAULT-<-2))
 (10 10 (:REWRITE DEFAULT-<-1))
 (10 10 (:REWRITE BOUND-WHEN-USB2))
 (10 10 (:REWRITE BOUND-WHEN-USB))
 (10 10 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (10 10 (:REWRITE <-WHEN-BVLT))
 (10 10 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (10 10 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (10 10 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (10 10 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (10 10 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (10 10 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (10 10 (:REWRITE <-FROM-<=-FREE))
 (4 4 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 4 (:REWRITE USE-ALL-NATP-2))
 (4 4 (:REWRITE USE-ALL-NATP))
 (4 4 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE DROP-LINEAR-HYPS1))
 (4 4 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (4 4 (:REWRITE BOUND-LEMMA))
 (3 3 (:REWRITE FOLD-CONSTS-IN-+))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (3 3 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (3 3 (:REWRITE +-COMBINE-CONSTANTS))
 (2 2 (:REWRITE HELPER-HELPER2))
 (2 2 (:REWRITE HELPER-HELPER))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE +-OF-MINUS))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(FNS-THAT-SUPPORT-NODE
 (10 5 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (5 5 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (5 5 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(ASSERT-NON-NIL)
(SUB1-LIST
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(SOME-ELEMENT-REWRITES-TO-TARGET
 (43 24 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (43 24 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (19 19 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (19 19 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(GET-SUBTERMS
 (4 4 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REMOVE-CONNECTIONS-THAT-MIGHT-LOOP
 (80 44 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (80 44 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (36 36 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (36 36 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(DROPLAST)
(MAP-DROPLAST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAP-DROPLAST-OF-NIL)
(MAP-DROPLAST-OF-CONS)
(MAP-DROPLAST-OF-TRUE-LIST-FIX)
(MAP-DROPLAST-OPENER)
(MAP-DROPLAST-OF-APPEND)
(CAR-OF-MAP-DROPLAST)
(CDR-OF-MAP-DROPLAST)
(LEN-OF-MAP-DROPLAST)
(CONSP-OF-MAP-DROPLAST)
(MAP-DROPLAST-IFF)
(TRUE-LISTP-OF-MAP-DROPLAST)
(FIRSTN-OF-MAP-DROPLAST)
(TAKE-OF-MAP-DROPLAST)
(NTH-OF-MAP-DROPLAST)
(NTHCDR-OF-MAP-DROPLAST)
(FIND-VAL-OTHER-THAN
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(TEST-CASE-ALIST-FOR-SET
 (16 8 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 (8 8 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(DROP-AND-COUNT-SINGLETONS
 (14 7 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (14 7 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (7 7 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (7 7 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(STRIP-CDRS-UNIQUE
 (477 15 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (287 25 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (165 96 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (165 96 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (149 7 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (105 3 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (84 3 (:REWRITE <-0-+-NEGATIVE-1))
 (82 9 (:REWRITE SUBSETP-CAR-MEMBER))
 (71 3 (:REWRITE LIST::LEN-POS-REWRITE))
 (69 69 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (69 69 (:TYPE-PRESCRIPTION NAT-LISTP))
 (69 3 (:REWRITE LEN-OF-CDR-BETTER))
 (43 2 (:REWRITE DEFAULT-CAR))
 (42 1 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (41 25 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (38 22 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (35 9 (:REWRITE MEMBER-WHEN-ATOM))
 (28 2 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (28 2 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (27 1 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (22 22 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (22 22 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (22 22 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (22 22 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (22 22 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (22 22 (:META LEN-CONS-META-RULE))
 (18 9 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (16 8 (:REWRITE MEMBERP-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (16 8 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-CDR-CHEAP))
 (16 8 (:REWRITE JVM::MEMBER-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (15 15 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (15 15 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (12 6 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (11 11 (:REWRITE USE-ALL-CONSP-2))
 (11 11 (:REWRITE LEN-GIVES-CONSP))
 (11 11 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (11 11 (:REWRITE CONSP-FROM-LEN-BOUND))
 (10 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (9 9 (:REWRITE SUBSETP-MEMBER . 4))
 (9 9 (:REWRITE SUBSETP-MEMBER . 3))
 (9 9 (:REWRITE SUBSETP-MEMBER . 2))
 (9 9 (:REWRITE SUBSETP-MEMBER . 1))
 (9 9 (:REWRITE INTERSECTP-MEMBER . 3))
 (9 9 (:REWRITE INTERSECTP-MEMBER . 2))
 (9 8 (:REWRITE MEMBERP-WHEN-SINGLETON-CHEAP))
 (9 3 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (9 3 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (8 8 (:REWRITE NOT-MEMBERP-WHEN-MEMBERP-OF-TAKE))
 (8 8 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-2))
 (8 8 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-1))
 (8 8 (:REWRITE MEMBERP-WHEN-NOT-EQUAL-OF-CAR-CHEAP))
 (8 8 (:REWRITE MEMBERP-WHEN-NOT-CONS-OF-CDR-CHEAP))
 (8 8 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-FIRSTN))
 (8 8 (:REWRITE MEMBERP-OF-CONSTANT-WHEN-NOT-MEMBER-OF-CONSTANT))
 (8 8 (:REWRITE MEMBERP-CONSTANT-OPENER))
 (8 8 (:REWRITE FW-1))
 (7 7 (:REWRITE DEFAULT-CDR))
 (7 7 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION ALL-NATP))
 (6 6 (:TYPE-PRESCRIPTION ALISTP))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (4 4 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 2 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (3 3 (:REWRITE USE-ALL-<-2))
 (3 3 (:REWRITE USE-ALL-<))
 (3 3 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (3 3 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (3 3 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (3 3 (:REWRITE DROP-LINEAR-HYPS2))
 (3 3 (:REWRITE DROP->-HYPS))
 (3 3 (:REWRITE DROP-<-HYPS))
 (3 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (3 3 (:REWRITE BOUND-WHEN-USB2))
 (3 3 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (3 3 (:REWRITE <-WHEN-BVLT))
 (3 3 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (3 3 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (3 3 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (3 3 (:REWRITE <-OF-0-WHEN-<-FREE))
 (3 3 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (3 3 (:REWRITE <-FROM-<=-FREE))
 (3 3 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (3 3 (:REWRITE +-OF-MINUS))
 (2 2 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (2 2 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (1 1 (:REWRITE WFR-HACK5))
 (1 1 (:REWRITE SUBSETP-TRANS2))
 (1 1 (:REWRITE SUBSETP-TRANS))
 (1 1 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 )
(SPLIT-SET)
(TRY-TO-SPLIT-SET
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (2 1 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (2 1 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (1 1 (:TYPE-PRESCRIPTION BINARY-APPEND))
 (1 1 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (1 1 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 )
(NEW-PROBABLY-EQUAL-NODE-SETS
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(STRIP-CDRS-AND-REV
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-FULL-DAG-VAL-ALIST
 (122 4 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (33 9 (:REWRITE DEFAULT-<-2))
 (33 9 (:REWRITE DEFAULT-<-1))
 (28 4 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (16 16 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (16 8 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (14 14 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (12 12 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (12 12 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (12 12 (:REWRITE INEQ-HACK2))
 (12 12 (:REWRITE INEQ-HACK))
 (12 12 (:REWRITE DROP-LINEAR-HYPS3))
 (12 12 (:REWRITE DROP-LINEAR-HYPS2))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (12 9 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (11 11 (:REWRITE DROP->-HYPS))
 (11 11 (:REWRITE DROP-<=-HYPS))
 (11 11 (:REWRITE DROP-<-HYPS))
 (11 11 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-+-1))
 (11 11 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (9 9 (:REWRITE USE-ALL-<=-2))
 (9 9 (:REWRITE USE-ALL-<=))
 (9 9 (:REWRITE USE-ALL-<-2))
 (9 9 (:REWRITE USE-ALL-<))
 (9 9 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (9 9 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (9 9 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (9 9 (:REWRITE BOUND-WHEN-USB2))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 9 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (9 9 (:REWRITE <-WHEN-BVLT))
 (9 9 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (9 9 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (9 9 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (9 9 (:REWRITE <-FROM-<=-FREE))
 (8 8 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (8 8 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (7 7 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (7 7 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (7 7 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (7 7 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (7 7 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (7 7 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE USE-ALL-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-RATIONALP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (3 3 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (3 3 (:REWRITE USE-ALL-NATP-2))
 (3 3 (:REWRITE USE-ALL-NATP))
 (3 3 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (3 3 (:REWRITE DROP-LINEAR-HYPS1))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (3 3 (:REWRITE BOUND-LEMMA))
 (3 3 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (3 3 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE +-OF-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 (1 1 (:REWRITE <-OF-IF-ARG1-SAFE))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (1 1 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 )
(FIND-ENTRIES-WITH-SIG
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-DEFUN)
(MAKE-ALIAS-FOR-TAIL-FUNCTION)
(SPLIT-TAIL-FUNCTION-HELPER)
(COMPLETELY-UNROLL-TAIL-FUNCTION-HELPER)
(COMPLETELY-UNROLL-TAIL-FUNCTION)
(SPLIT-TAIL-FUNCTION)
(STRIP-CDARS
 (22 9 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (22 9 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (9 9 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (9 9 (:TYPE-PRESCRIPTION NAT-LISTP))
 (4 2 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 )
(CAR-OF-STRIP-CDARS
 (1868 34 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1444 629 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (858 26 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (629 629 (:TYPE-PRESCRIPTION NAT-LISTP))
 (364 52 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (364 52 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (364 52 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (88 8 (:LINEAR LIST::LEN-NON-NEGATIVE-LINEAR))
 (80 8 (:REWRITE LIST::LEN-POS-REWRITE))
 (52 52 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (52 52 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (52 52 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (52 52 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (52 52 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (52 52 (:META LEN-CONS-META-RULE))
 (48 2 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (42 14 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (36 18 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (34 34 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (34 34 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (28 28 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (28 28 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (28 28 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (28 14 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (27 27 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (16 16 (:REWRITE USE-ALL-CONSP-2))
 (16 16 (:REWRITE USE-ALL-CONSP))
 (16 16 (:REWRITE LEN-GIVES-CONSP))
 (16 16 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (16 16 (:REWRITE CONSP-FROM-LEN-BOUND))
 (16 2 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (14 14 (:TYPE-PRESCRIPTION ALISTP))
 (14 14 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 8 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (7 7 (:REWRITE WFR-HACK5))
 (7 7 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION BOOLEANP))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (2 2 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (2 2 (:REWRITE IMPOSSIBLE-VALUE-2))
 (2 2 (:REWRITE IMPOSSIBLE-VALUE-1))
 (2 2 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-BVLT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE CLR-DIFFERENTIAL))
 )
(MAP-MOD
 (8 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (8 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (7 1 (:TYPE-PRESCRIPTION RATIONALP-OF-MOD))
 (3 1 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE-2))
 (3 1 (:TYPE-PRESCRIPTION NONNEG-OF-MOD-TYPE))
 (3 1 (:TYPE-PRESCRIPTION INTEGERP-OF-MOD-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAP-MOD-OF-NIL)
(MAP-MOD-OF-CONS)
(MAP-MOD-OF-TRUE-LIST-FIX)
(MAP-MOD-OPENER)
(MAP-MOD-OF-APPEND)
(CAR-OF-MAP-MOD)
(CDR-OF-MAP-MOD)
(LEN-OF-MAP-MOD)
(CONSP-OF-MAP-MOD)
(MAP-MOD-IFF)
(TRUE-LISTP-OF-MAP-MOD)
(FIRSTN-OF-MAP-MOD)
(TAKE-OF-MAP-MOD)
(NTH-OF-MAP-MOD)
(NTHCDR-OF-MAP-MOD)
(MAP-FLOOR
 (7 5 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (7 5 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (7 1 (:TYPE-PRESCRIPTION FLOOR-TYPE-WHEN-NONPOSITIVE-AND-NONNEGATIVE))
 (3 1 (:TYPE-PRESCRIPTION FLOOR-TYPE-NON-NEGATIVE))
 (3 1 (:TYPE-PRESCRIPTION FLOOR-TYPE-1-PART-1-BETTER))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAP-FLOOR-OF-NIL)
(MAP-FLOOR-OF-CONS)
(MAP-FLOOR-OF-TRUE-LIST-FIX)
(MAP-FLOOR-OPENER)
(MAP-FLOOR-OF-APPEND)
(CAR-OF-MAP-FLOOR)
(CDR-OF-MAP-FLOOR)
(LEN-OF-MAP-FLOOR)
(CONSP-OF-MAP-FLOOR)
(MAP-FLOOR-IFF)
(TRUE-LISTP-OF-MAP-FLOOR)
(FIRSTN-OF-MAP-FLOOR)
(TAKE-OF-MAP-FLOOR)
(NTH-OF-MAP-FLOOR)
(NTHCDR-OF-MAP-FLOOR)
(TRY-TO-EXPLAIN-SEQUENCE-FROM-SEQUENCE)
(TRY-TO-EXPLAIN-SEQUENCE-FROM-ALISTS-AUX
 (2588 41 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2246 93 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1164 1 (:DEFINITION LEN-LIST))
 (1028 396 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (1028 396 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (768 21 (:REWRITE DEFAULT-CDR))
 (634 313 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (628 93 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (531 16 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (396 396 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (396 396 (:TYPE-PRESCRIPTION NAT-LISTP))
 (321 321 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (307 73 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (306 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (212 18 (:REWRITE DEFAULT-CAR))
 (211 6 (:REWRITE <-0-+-NEGATIVE-1))
 (146 1 (:DEFINITION STRIP-CDARS))
 (128 2 (:REWRITE EQUAL-CONSTANT-+))
 (126 2 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (119 6 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (100 1 (:REWRITE CAR-OF-STRIP-CDARS))
 (84 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (73 73 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (73 73 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (73 73 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (73 73 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (73 73 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (73 73 (:META LEN-CONS-META-RULE))
 (70 2 (:REWRITE LIST::LIST-EQUIV-HACK))
 (68 4 (:REWRITE LIST::OPEN-EQUIV))
 (61 61 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (61 61 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (51 11 (:REWRITE DEFAULT-<-2))
 (41 41 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (41 41 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (33 21 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (31 31 (:REWRITE USE-ALL-CONSP-2))
 (31 31 (:REWRITE USE-ALL-CONSP))
 (31 31 (:REWRITE LEN-GIVES-CONSP))
 (31 31 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (31 31 (:REWRITE CONSP-FROM-LEN-BOUND))
 (28 22 (:REWRITE DEFAULT-+-2))
 (28 14 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (25 14 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (24 12 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (22 22 (:REWRITE DEFAULT-+-1))
 (22 22 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (22 2 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (21 21 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (20 20 (:REWRITE +-OF-MINUS))
 (19 19 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (18 18 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (18 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (18 6 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (18 6 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (16 5 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (15 15 (:REWRITE DROP-LINEAR-HYPS2))
 (15 15 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (14 14 (:TYPE-PRESCRIPTION ALISTP))
 (14 14 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (13 13 (:REWRITE DROP->-HYPS))
 (13 13 (:REWRITE DROP-<-HYPS))
 (12 12 (:TYPE-PRESCRIPTION ALL-NATP))
 (12 2 (:REWRITE LIST::TRUE-LISTP-FIX))
 (12 2 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (12 2 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (12 2 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (11 11 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (11 11 (:REWRITE USE-ALL-<-2))
 (11 11 (:REWRITE USE-ALL-<))
 (11 11 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (11 11 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (11 11 (:REWRITE DEFAULT-<-1))
 (11 11 (:REWRITE BOUND-WHEN-USB2))
 (11 11 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (11 11 (:REWRITE <-WHEN-BVLT))
 (11 11 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (11 11 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (11 11 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (11 11 (:REWRITE <-OF-0-WHEN-<-FREE))
 (11 11 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (11 11 (:REWRITE <-FROM-<=-FREE))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (10 2 (:REWRITE HACK1))
 (9 5 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (8 8 (:REWRITE WFR-HACK5))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (7 7 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (7 7 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (7 7 (:REWRITE CLR-DIFFERENTIAL))
 (5 5 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (5 5 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (5 5 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (5 5 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (5 5 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (5 5 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (5 5 (:REWRITE IMPOSSIBLE-VALUE-2))
 (5 5 (:REWRITE IMPOSSIBLE-VALUE-1))
 (5 5 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (5 5 (:REWRITE EQUAL-WHEN-BVLT))
 (5 5 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (5 5 (:REWRITE EQUAL-WHEN-<-OF-+))
 (5 5 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (5 5 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (5 5 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (5 5 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (5 5 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (5 5 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (5 5 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (5 5 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (5 5 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (5 5 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (5 5 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (4 4 (:TYPE-PRESCRIPTION BOOLEANP))
 (4 4 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (4 4 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (4 4 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (4 4 (:REWRITE INEQ-HACK2))
 (4 4 (:REWRITE INEQ-HACK))
 (4 4 (:REWRITE DROP-LINEAR-HYPS3))
 (4 4 (:REWRITE ARITH-HACK-CHEAP))
 (4 4 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (2 2 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (2 2 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (2 2 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (2 2 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (2 2 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (2 2 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (2 2 (:REWRITE DROP-LINEAR-HYPS1))
 (2 2 (:REWRITE DROP-<=-HYPS))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (2 2 (:REWRITE CDR-CONS))
 (2 2 (:REWRITE CAR-CONS))
 (2 2 (:REWRITE BOUND-LEMMA))
 (2 2 (:REWRITE <-OF-LEN-AND-CONSTANT))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (2 2 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (1 1 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (1 1 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (1 1 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 )
(TRY-TO-EXPLAIN-SEQUENCE-FROM-ALISTS
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-BOUND-FOR-PATTERN
 (93 44 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (93 44 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (39 39 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (39 39 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(TRY-TO-COMPLETELY-UNROLL)
(OPEN-ONE-MORE-STEP)
(LEN-OF-VALS-IN-TRACES-IF-ALL-SAME-LEN
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-FORMAL-SHAPE-ALIST
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(EVENT-TYPE)
(FILTER-RULES-TO-USE-IN-PROVER
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (14 14 (:TYPE-PRESCRIPTION TRUE-LISTP-SUBSEQ-TYPE-PRESCRIPTION))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FILTER-REC-FN-NODES-TO-HANDLE
 (16 8 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 (8 8 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(EMPTY-TREES-EQUAL-TO-TREE)
(FILTER-ALIST-PAIRS
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(DROP-ITEMS-THAT-DONT-HAVE-VARS-FROM-BOTH-SETS
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ORIENT-EQUALITY2)
(ORIENT-EQUALITIES)
(MAX-ARRAY-ELEM2
 (16 8 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 (8 8 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION MAX))
 )
(ATTEMPT-AGGRESSIVELY-CUT-EQUIVALENCE-PROOF)
(ATTEMPT-CUT-EQUIVALENCE-PROOFS)
(TRY-TO-PROVE-PURE-NODES-EQUIVALENT)
(NON-TAGGED-SUPPORTERS-WITH-REC-FNS-TO-HANDLE)
(UNIFY-TERM-WITH-ANY
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-LEN-FROM-HYP
 (44 22 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (44 22 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (22 22 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (22 22 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(STRIP-EQUAL-T
 (106 60 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (106 60 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (46 46 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (46 46 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(EXTEND-VAR-TYPE-ALIST-WITH-HYP
 (395 183 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (395 183 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (178 178 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (178 178 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-VAR-TYPE-ALIST-FROM-HYPS-AUX
 (6 6 (:TYPE-PRESCRIPTION EXTEND-VAR-TYPE-ALIST-WITH-HYP))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-VAR-TYPE-ALIST-FROM-HYPS)
(PRINT-VALS-OF-NODES)
(EVALUATE-AND-CHECK-TEST-CASE
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(HANDLE-NEWLY-USED-NODES
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(NEW-PROBABLY-CONSTANT-ALIST
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(UPDATE-PROBABLE-FACTS-WITH-TEST-CASES
 (1674 6 (:DEFINITION ACL2-COUNT))
 (804 8 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (660 3 (:DEFINITION LENGTH))
 (548 41 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (357 6 (:REWRITE LEN-OF-CDR-BETTER))
 (282 9 (:REWRITE STR::CONSP-OF-EXPLODE))
 (252 6 (:DEFINITION INTEGER-ABS))
 (195 3 (:REWRITE <-0-+-NEGATIVE-1))
 (189 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (155 41 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (117 12 (:REWRITE DEFAULT-CDR))
 (96 24 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (89 89 (:TYPE-PRESCRIPTION LEN))
 (77 7 (:LINEAR LIST::LEN-NON-NEGATIVE-LINEAR))
 (73 7 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (72 36 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (72 36 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (69 33 (:REWRITE DEFAULT-+-2))
 (67 7 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (51 51 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (45 33 (:REWRITE DEFAULT-+-1))
 (44 35 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (36 36 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (36 36 (:TYPE-PRESCRIPTION NAT-LISTP))
 (35 35 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (35 35 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (35 35 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (35 35 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (35 35 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (35 35 (:META LEN-CONS-META-RULE))
 (33 33 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (30 6 (:REWRITE COMMUTATIVITY-OF-+))
 (26 14 (:REWRITE DEFAULT-<-1))
 (24 12 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (20 14 (:REWRITE DEFAULT-<-2))
 (18 18 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (18 18 (:REWRITE CLR-DIFFERENTIAL))
 (17 17 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (17 17 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (15 8 (:REWRITE NOT-<-WHEN-SBVLT))
 (14 14 (:REWRITE USE-ALL-<-2))
 (14 14 (:REWRITE USE-ALL-<))
 (14 14 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (14 14 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (14 14 (:REWRITE DROP-LINEAR-HYPS2))
 (14 14 (:REWRITE DROP->-HYPS))
 (14 14 (:REWRITE DROP-<-HYPS))
 (14 14 (:REWRITE BOUND-WHEN-USB2))
 (14 14 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (14 14 (:REWRITE <-WHEN-BVLT))
 (14 14 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (14 14 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (14 14 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (14 14 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (14 14 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (14 14 (:REWRITE <-FROM-<=-FREE))
 (14 2 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (13 1 (:REWRITE DEFAULT-*-2))
 (12 12 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (12 12 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (12 12 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (12 12 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (12 12 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (12 12 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (12 12 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (12 12 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (12 12 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (12 12 (:REWRITE IMPOSSIBLE-VALUE-2))
 (12 12 (:REWRITE IMPOSSIBLE-VALUE-1))
 (12 12 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (12 12 (:REWRITE EQUAL-WHEN-BVLT))
 (12 12 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (12 12 (:REWRITE EQUAL-WHEN-<-OF-+))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (12 12 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (12 12 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (12 6 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (10 1 (:REWRITE LIST::LEN-POS-REWRITE))
 (9 9 (:REWRITE HELPER-HELPER2))
 (9 9 (:REWRITE HELPER-HELPER))
 (9 9 (:REWRITE FOLD-CONSTS-IN-+))
 (9 9 (:REWRITE +-COMBINE-CONSTANTS))
 (9 3 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (9 3 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (8 8 (:REWRITE USE-ALL-CONSP-2))
 (8 8 (:REWRITE USE-ALL-CONSP))
 (8 8 (:REWRITE USE-ALL-<=-2))
 (8 8 (:REWRITE USE-ALL-<=))
 (8 8 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (8 8 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (8 8 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (8 8 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (8 8 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (8 8 (:REWRITE LEN-GIVES-CONSP))
 (8 8 (:REWRITE INEQ-HACK2))
 (8 8 (:REWRITE INEQ-HACK))
 (8 8 (:REWRITE DROP-LINEAR-HYPS3))
 (8 8 (:REWRITE DROP-<=-HYPS))
 (8 8 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (8 8 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (8 8 (:REWRITE CONSP-FROM-LEN-BOUND))
 (8 8 (:REWRITE BOUND-WHEN-USB))
 (8 8 (:REWRITE ARITH-HACK-CHEAP))
 (8 8 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (8 8 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (7 7 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:TYPE-PRESCRIPTION ALL-NATP))
 (6 6 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE DEFAULT-UNARY-MINUS))
 (6 6 (:REWRITE DEFAULT-CAR))
 (6 6 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (6 6 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (6 6 (:REWRITE <-OF-0-WHEN-<-FREE))
 (6 6 (:REWRITE +-OF-MINUS))
 (6 3 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (6 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (5 5 (:REWRITE USE-ALL-RATIONALP-2))
 (5 5 (:REWRITE USE-ALL-RATIONALP))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (5 5 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (5 5 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (5 5 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (5 5 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (3 3 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (3 3 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (3 3 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (3 3 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (3 3 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (3 3 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (3 3 (:REWRITE DEFAULT-REALPART))
 (3 3 (:REWRITE DEFAULT-NUMERATOR))
 (3 3 (:REWRITE DEFAULT-IMAGPART))
 (3 3 (:REWRITE DEFAULT-DENOMINATOR))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE DEFAULT-*-1))
 (1 1 (:REWRITE COLLECT-CONSTANTS-<-/))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 )
(INITIAL-PROBABLY-EQUAL-NODE-SETS-BETTER)
(HARVEST-PROBABLE-CONSTANTS-FROM-FIRST-TEST-CASE
 (28 4 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (26 2 (:REWRITE DEFAULT-<-2))
 (26 2 (:REWRITE DEFAULT-<-1))
 (24 12 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (12 12 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (12 12 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (12 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (8 8 (:REWRITE DEFAULT-+-2))
 (8 8 (:REWRITE DEFAULT-+-1))
 (8 8 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (6 6 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (6 6 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (5 5 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (4 4 (:REWRITE USE-ALL-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-RATIONALP))
 (4 4 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (4 4 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (4 4 (:REWRITE DROP-LINEAR-HYPS3))
 (4 4 (:REWRITE DROP-LINEAR-HYPS2))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (4 4 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (3 3 (:REWRITE INEQ-HACK))
 (2 2 (:REWRITE USE-ALL-<=-2))
 (2 2 (:REWRITE USE-ALL-<=))
 (2 2 (:REWRITE USE-ALL-<-2))
 (2 2 (:REWRITE USE-ALL-<))
 (2 2 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (2 2 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (2 2 (:REWRITE NOT-<-WHEN-SBVLT))
 (2 2 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (2 2 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DROP-LINEAR-HYPS1))
 (2 2 (:REWRITE DROP->-HYPS))
 (2 2 (:REWRITE DROP-<=-HYPS))
 (2 2 (:REWRITE DROP-<-HYPS))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE BOUND-WHEN-USB2))
 (2 2 (:REWRITE BOUND-WHEN-USB))
 (2 2 (:REWRITE BOUND-LEMMA))
 (2 2 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (2 2 (:REWRITE <-WHEN-BVLT))
 (2 2 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (2 2 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (2 2 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (2 2 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (2 2 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (2 2 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (2 2 (:REWRITE <-FROM-<=-FREE))
 (2 2 (:REWRITE +-OF-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-AND-+-CANCEL-CONSTANTS))
 )
(PROBABLE-FACTS
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REMOVE-SET-OF-UNUSED-NODES
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 (10 10 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (10 5 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (10 5 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (5 5 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (5 5 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 )
(UNROLL-FUNCTION)
(GET-NODE-TAG
 (216 83 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (83 83 (:TYPE-PRESCRIPTION NAT-LISTP))
 (30 15 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (15 15 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (15 15 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 )
(SET-TAG
 (226 88 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (88 88 (:TYPE-PRESCRIPTION NAT-LISTP))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (9 9 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(TAG-PROBABLY-EQUAL-NODE-SET
 (19132 366 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (17780 49 (:DEFINITION ASSOC-KEYWORD))
 (17628 7 (:REWRITE USE-ALL-<-FOR-CAR))
 (15056 19 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (14513 12 (:REWRITE <-OF-IF-ARG1-SAFE))
 (14410 138 (:REWRITE DEFAULT-<-1))
 (11005 14 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (10654 167 (:REWRITE DEFAULT-CDR))
 (9748 9 (:REWRITE USE-ALL-INTEGER-LISTP-FOR-CAR))
 (9658 18 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP))
 (9438 191 (:REWRITE LEN-OF-CDR-BETTER))
 (9399 3059 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6886 5 (:REWRITE INTEGERP-OF-IF))
 (6686 26 (:REWRITE CONSP-OF-CDR-OF-ASSOC-KEYWORD))
 (5597 13 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (5038 115 (:REWRITE DEFAULT-CAR))
 (4439 17 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (4017 9 (:REWRITE ALL-INTEGER-LISTP-OF-CDR))
 (3516 23 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (3015 4 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (2668 1334 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (2543 8 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (2516 138 (:REWRITE DEFAULT-<-2))
 (2131 141 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (2071 749 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1800 198 (:REWRITE DEFAULT-+-2))
 (1712 4 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (1668 4 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1533 749 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (1474 29 (:REWRITE <-0-+-NEGATIVE-1))
 (1334 1334 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (1225 558 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (1068 4 (:DEFINITION STRIP-CARS))
 (854 18 (:REWRITE ALL-<-TRANSITIVE))
 (752 376 (:REWRITE LEN-OF-AREF1-WHEN-QUOTEP-AND-PSEUDO-DAG-ARRAYP-AUX))
 (673 28 (:REWRITE ARITH-HACK-CHEAP))
 (570 34 (:REWRITE LIST::LEN-POS-REWRITE))
 (558 558 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (558 558 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (558 558 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (558 558 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (558 558 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (558 558 (:META LEN-CONS-META-RULE))
 (505 93 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (366 366 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (366 366 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (327 327 (:REWRITE USE-ALL-CONSP-2))
 (327 327 (:REWRITE USE-ALL-CONSP))
 (327 327 (:REWRITE LEN-GIVES-CONSP))
 (327 327 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (327 327 (:REWRITE CONSP-FROM-LEN-BOUND))
 (314 167 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (282 1 (:REWRITE <-OF-+-CANCEL-FIRST-AND-FIRST))
 (237 237 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (210 138 (:REWRITE USE-ALL-<))
 (198 198 (:REWRITE DEFAULT-+-1))
 (198 198 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (198 198 (:REWRITE +-OF-MINUS))
 (171 171 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (166 10 (:REWRITE TRUE-LISTP-WHEN-NOT-CONSP))
 (166 10 (:REWRITE LIST::TRUE-LISTP-OF-NON-CONSP))
 (140 140 (:REWRITE CONSP-OF-AREF1-WHEN-EVAL-ARRAYP))
 (138 138 (:REWRITE USE-ALL-<-2))
 (138 138 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (138 138 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (138 138 (:REWRITE DROP-LINEAR-HYPS2))
 (138 138 (:REWRITE DROP->-HYPS))
 (138 138 (:REWRITE DROP-<-HYPS))
 (138 138 (:REWRITE BOUND-WHEN-USB2))
 (138 138 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (138 138 (:REWRITE <-WHEN-BVLT))
 (138 138 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (138 138 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (138 138 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (138 138 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (138 138 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (138 138 (:REWRITE <-FROM-<=-FREE))
 (125 125 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (118 118 (:REWRITE <-OF-0-WHEN-<-FREE))
 (115 115 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (96 48 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-AREF1))
 (93 93 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (93 93 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (93 93 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (93 93 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (93 93 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (93 93 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (93 93 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (93 93 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (93 93 (:REWRITE IMPOSSIBLE-VALUE-2))
 (93 93 (:REWRITE IMPOSSIBLE-VALUE-1))
 (93 93 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (93 93 (:REWRITE EQUAL-WHEN-BVLT))
 (93 93 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (93 93 (:REWRITE EQUAL-WHEN-<-OF-+))
 (93 93 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (93 93 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (93 93 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (93 93 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (93 93 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (93 93 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (93 93 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (93 93 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (93 93 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (93 93 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (93 93 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (93 93 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (93 93 (:REWRITE CLR-DIFFERENTIAL))
 (90 58 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (90 18 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (86 21 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (84 13 (:REWRITE ALL-<-OF-ALEN1-WHEN-PSEUDO-DAG-ARRAYP-LIST))
 (79 30 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (74 29 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (74 29 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (66 17 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (53 10 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (52 52 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (49 49 (:REWRITE NOT-CDR-OF-CDR-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP))
 (49 49 (:REWRITE NOT-CDDR-OF-AREF1-WHEN-RENAMING-ARRAYP-AUX))
 (49 49 (:REWRITE CONSP-OF-CDR-OF-AREF1-WHEN-RENAMING-ARRAYP-AUX))
 (49 49 (:REWRITE CONSP-OF-CDR-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX-AND-QUOTEP))
 (49 49 (:REWRITE CONSP-OF-CDR-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP))
 (48 48 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP))
 (44 22 (:REWRITE MEMBERP-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (44 22 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-CDR-CHEAP))
 (44 22 (:REWRITE JVM::MEMBER-WHEN-NOT-MEMBERP-OF-CDR-CHEAP))
 (42 21 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (39 13 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (38 10 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (37 37 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (37 37 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (37 37 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (37 37 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (36 36 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (36 36 (:TYPE-PRESCRIPTION ALL-INTEGER-LISTP))
 (36 18 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP-CHEAP))
 (36 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (34 17 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (33 33 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (32 4 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (29 29 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (28 28 (:TYPE-PRESCRIPTION PSEUDO-DAG-ARRAYP-LIST))
 (27 19 (:REWRITE NOT-<-WHEN-SBVLT))
 (26 26 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (26 26 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (24 12 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (24 8 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (24 4 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (22 22 (:REWRITE NOT-MEMBERP-WHEN-MEMBERP-OF-TAKE))
 (22 22 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-2))
 (22 22 (:REWRITE MEMBERP-WHEN-SUBSETP-EQUAL-1))
 (22 22 (:REWRITE MEMBERP-WHEN-SINGLETON-CHEAP))
 (22 22 (:REWRITE MEMBERP-WHEN-NOT-EQUAL-OF-CAR-CHEAP))
 (22 22 (:REWRITE MEMBERP-WHEN-NOT-CONS-OF-CDR-CHEAP))
 (22 22 (:REWRITE MEMBERP-WHEN-MEMBERP-OF-FIRSTN))
 (22 22 (:REWRITE MEMBERP-OF-CONSTANT-WHEN-NOT-MEMBER-OF-CONSTANT))
 (22 22 (:REWRITE MEMBERP-CONSTANT-OPENER))
 (22 22 (:REWRITE FW-1))
 (22 11 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (21 21 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (20 19 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (20 10 (:REWRITE TRUE-LISTP-WHEN-POSSIBLY-NEGATED-NODENUMSP))
 (20 5 (:REWRITE NOT-<-OF-ALEN1-WHEN-PSEUDO-DAG-ARRAYP))
 (19 19 (:REWRITE USE-ALL-<=-2))
 (19 19 (:REWRITE USE-ALL-<=))
 (19 19 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (19 19 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (19 19 (:REWRITE INEQ-HACK2))
 (19 19 (:REWRITE INEQ-HACK))
 (19 19 (:REWRITE DROP-LINEAR-HYPS3))
 (19 19 (:REWRITE DROP-<=-HYPS))
 (19 19 (:REWRITE BOUND-WHEN-USB))
 (19 19 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (19 19 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (19 19 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (19 19 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (19 19 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (18 18 (:REWRITE USE-ALL-NATP-2))
 (18 18 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (18 18 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (18 18 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (18 9 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (18 9 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (18 9 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (18 9 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-CHEAP))
 (18 9 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-AUX-CHEAP))
 (17 17 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (17 17 (:REWRITE USE-ALL-INTEGER-LISTP))
 (14 14 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-WHEN-ALL-DARGP-LESS-THAN-SPECIAL-ALT))
 (14 14 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-WHEN-ALL-DARGP-LESS-THAN-SPECIAL))
 (14 14 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-WHEN-ALL-DARGP-LESS-THAN))
 (13 13 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (13 13 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (13 13 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (12 12 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (12 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (12 12 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (12 4 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (10 10 (:TYPE-PRESCRIPTION POSSIBLY-NEGATED-NODENUMSP))
 (10 10 (:REWRITE TRUE-LISTP-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE TRUE-LISTP-WHEN-BV-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-TERM-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-SUPPORTERS-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-SIZE-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-RESULT-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-RENAMING-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-PSEUDO-DAG-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-EVAL-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-DEPTH-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-CONTEXT-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-BINDING-ARRAYP))
 (10 10 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (10 10 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (10 10 (:LINEAR ARRAY2P-LINEAR))
 (10 4 (:REWRITE ARRAY-OF-MEMO-ALISTSP-OF-ASET1))
 (9 9 (:TYPE-PRESCRIPTION WEAK-DAGP))
 (9 9 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (9 9 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (9 9 (:REWRITE WFR-HACK5))
 (9 9 (:REWRITE USE-ALL-RATIONALP-2))
 (9 9 (:REWRITE USE-ALL-RATIONALP))
 (9 9 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (9 9 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (9 9 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (9 9 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (9 9 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (9 9 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (9 9 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (9 9 (:REWRITE INTEGERP-OF-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (9 9 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (8 8 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (8 4 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (8 4 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (8 4 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (7 7 (:REWRITE NOT-ALL-<-WHEN-MEMBERP))
 (7 7 (:REWRITE NOT-ALL-<-WHEN-MEMBER-EQUAL))
 (6 1 (:REWRITE PSEUDO-DAG-ARRAYP-LIST-OF-CDR))
 (5 5 (:REWRITE USE-ALL-RATIONAL-LISTP-2))
 (5 5 (:REWRITE USE-ALL-RATIONAL-LISTP))
 (5 5 (:REWRITE PSEUDO-DAG-ARRAYP-MONOTONE))
 (5 5 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (5 5 (:LINEAR POSITION-EQUAL-BOUND))
 (4 4 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (4 4 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 )
(TAG-PROBABLY-EQUAL-NODE-SETS
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 (16 8 (:TYPE-PRESCRIPTION ASSOC-EQUAL-TYPE))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (6 6 (:TYPE-PRESCRIPTION TAG-PROBABLY-EQUAL-NODE-SET))
 )
(TAG-PROBABLY-CONSTANT-NODES2
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REMOVE-ONE-EQL
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REMOVE-NODE-FROM-SMALLER-NODES-THAT-MIGHT-BE-EQUAL)
(REMOVE-NODE-FROM-SMALLER-NODES-THAT-MIGHT-BE-EQUAL-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(UPDATE-TAGS-FOR-PROVED-CONSTANT-NODE)
(UPDATE-TAGS-FOR-FAILED-CONSTANT-NODE)
(UPDATE-TAGS-FOR-PROVED-EQUAL-NODE)
(UPDATE-TAGS-FOR-FAILED-EQUAL-NODE)
(FIND-A-NODE-TO-REPLACE
 (123 5 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (16 16 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (16 8 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (14 14 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (13 9 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 12 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (12 12 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (12 12 (:REWRITE INEQ-HACK2))
 (12 12 (:REWRITE INEQ-HACK))
 (12 12 (:REWRITE DROP-LINEAR-HYPS3))
 (12 12 (:REWRITE DROP-LINEAR-HYPS2))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (11 11 (:REWRITE DROP->-HYPS))
 (11 11 (:REWRITE DROP-<=-HYPS))
 (11 11 (:REWRITE DROP-<-HYPS))
 (11 11 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-+-1))
 (11 11 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (10 2 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (9 9 (:REWRITE USE-ALL-<=-2))
 (9 9 (:REWRITE USE-ALL-<=))
 (9 9 (:REWRITE USE-ALL-<-2))
 (9 9 (:REWRITE USE-ALL-<))
 (9 9 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (9 9 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (9 9 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (9 9 (:REWRITE DEFAULT-<-2))
 (9 9 (:REWRITE DEFAULT-<-1))
 (9 9 (:REWRITE BOUND-WHEN-USB2))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 9 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (9 9 (:REWRITE <-WHEN-BVLT))
 (9 9 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (9 9 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (9 9 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (9 9 (:REWRITE <-FROM-<=-FREE))
 (8 8 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (8 2 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (8 2 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 4 (:REWRITE USE-ALL-NATP-2))
 (4 4 (:REWRITE USE-ALL-NATP))
 (4 4 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (4 2 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (3 3 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (3 3 (:REWRITE DROP-LINEAR-HYPS1))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (3 3 (:REWRITE BOUND-LEMMA))
 (3 3 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (3 3 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (2 2 (:TYPE-PRESCRIPTION ARRAY1P))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE +-OF-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 (1 1 (:REWRITE <-OF-IF-ARG1-SAFE))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (1 1 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 )
(ENQUOTE-CDRS
 (205 13 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (194 5 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (92 45 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (92 45 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (84 3 (:REWRITE <-0-+-NEGATIVE-1))
 (77 1 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (77 1 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (69 3 (:REWRITE LEN-OF-CDR-BETTER))
 (45 45 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (45 45 (:TYPE-PRESCRIPTION NAT-LISTP))
 (13 13 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (12 6 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (10 10 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (10 10 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (10 10 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (10 10 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (10 10 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (10 10 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (10 10 (:META LEN-CONS-META-RULE))
 (10 1 (:REWRITE LIST::LEN-POS-REWRITE))
 (9 3 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (9 3 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (6 6 (:TYPE-PRESCRIPTION ALL-NATP))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (5 5 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (5 5 (:REWRITE USE-ALL-CONSP-2))
 (5 5 (:REWRITE USE-ALL-CONSP))
 (5 5 (:REWRITE LEN-GIVES-CONSP))
 (5 5 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (5 5 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (5 5 (:REWRITE CONSP-FROM-LEN-BOUND))
 (5 1 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (4 1 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (3 3 (:REWRITE USE-ALL-<-2))
 (3 3 (:REWRITE USE-ALL-<))
 (3 3 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (3 3 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (3 3 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (3 3 (:REWRITE DROP-LINEAR-HYPS2))
 (3 3 (:REWRITE DROP->-HYPS))
 (3 3 (:REWRITE DROP-<-HYPS))
 (3 3 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (3 3 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (3 3 (:REWRITE BOUND-WHEN-USB2))
 (3 3 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (3 3 (:REWRITE <-WHEN-BVLT))
 (3 3 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (3 3 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (3 3 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (3 3 (:REWRITE <-OF-0-WHEN-<-FREE))
 (3 3 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (3 3 (:REWRITE <-FROM-<=-FREE))
 (3 3 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (3 3 (:REWRITE +-OF-MINUS))
 (3 1 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (3 1 (:REWRITE RESULT-ALISTP-FORWARD-TO-ALISTP))
 (3 1 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (3 1 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (2 2 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (2 2 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION RESULT-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (2 2 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (2 2 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (2 1 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (2 1 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (2 1 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (1 1 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (1 1 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (1 1 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (1 1 (:REWRITE USE-ALL-RULE-ALISTP))
 (1 1 (:REWRITE USE-ALL-ALISTP-2))
 (1 1 (:REWRITE USE-ALL-ALISTP))
 (1 1 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (1 1 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (1 1 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (1 1 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 )
(PARTITION-TEST-CASES
 (20 10 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (20 10 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (10 10 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (10 10 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-SORTED-PAIR)
(NODENUM-HAS-BOTH-TRUE-AND-FALSE-TEST-CASES
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(SMALLEST-NODE-WITH-BOTH-TRUE-AND-FALSE-TEST-CASES-AUX
 (16 8 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 (8 8 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(FIND-A-NODE-WITH-BOTH-TRUE-AND-FALSE-TEST-CASES
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(SMALLEST-NODE-WITH-BOTH-TRUE-AND-FALSE-TEST-CASES
 (2 1 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (1 1 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (1 1 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(NODES-THAT-CALL
 (23 14 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (23 14 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (14 7 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (9 9 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (9 9 (:TYPE-PRESCRIPTION NAT-LISTP))
 (7 7 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (7 7 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (2 2 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (2 2 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (2 2 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (2 2 (:REWRITE INEQ-HACK2))
 (2 2 (:REWRITE INEQ-HACK))
 (2 2 (:REWRITE DROP-LINEAR-HYPS3))
 (2 2 (:REWRITE DROP-LINEAR-HYPS2))
 (2 2 (:REWRITE ARITH-HACK-CHEAP))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (2 1 (:REWRITE NOT-<-WHEN-SBVLT))
 (1 1 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USE-ALL-<=-2))
 (1 1 (:REWRITE USE-ALL-<=))
 (1 1 (:REWRITE USE-ALL-<-2))
 (1 1 (:REWRITE USE-ALL-<))
 (1 1 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (1 1 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (1 1 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (1 1 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (1 1 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE DROP->-HYPS))
 (1 1 (:REWRITE DROP-<=-HYPS))
 (1 1 (:REWRITE DROP-<-HYPS))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE DEFAULT-+-2))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE BOUND-WHEN-USB2))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 (1 1 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (1 1 (:REWRITE <-WHEN-BVLT))
 (1 1 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (1 1 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (1 1 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (1 1 (:REWRITE <-FROM-<=-FREE))
 (1 1 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 )
(NODES-TO-NOT-USE-PROVER-FOR)
(FIND-NODE-TO-SPLIT-CANDIDATES
 (123 5 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (16 16 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (14 14 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (13 9 (:REWRITE NOT-<-WHEN-SBVLT))
 (12 12 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (12 12 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (12 12 (:REWRITE INEQ-HACK2))
 (12 12 (:REWRITE INEQ-HACK))
 (12 12 (:REWRITE DROP-LINEAR-HYPS3))
 (12 12 (:REWRITE DROP-LINEAR-HYPS2))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (12 12 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (11 11 (:REWRITE DROP->-HYPS))
 (11 11 (:REWRITE DROP-<=-HYPS))
 (11 11 (:REWRITE DROP-<-HYPS))
 (11 11 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-+-1))
 (11 11 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (9 9 (:REWRITE USE-ALL-<=-2))
 (9 9 (:REWRITE USE-ALL-<=))
 (9 9 (:REWRITE USE-ALL-<-2))
 (9 9 (:REWRITE USE-ALL-<))
 (9 9 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (9 9 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (9 9 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (9 9 (:REWRITE DEFAULT-<-2))
 (9 9 (:REWRITE DEFAULT-<-1))
 (9 9 (:REWRITE BOUND-WHEN-USB2))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 9 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (9 9 (:REWRITE <-WHEN-BVLT))
 (9 9 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (9 9 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (9 9 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (9 9 (:REWRITE <-FROM-<=-FREE))
 (4 4 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (4 4 (:REWRITE USE-ALL-NATP-2))
 (4 4 (:REWRITE USE-ALL-NATP))
 (4 4 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (4 4 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (4 4 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (3 3 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (3 3 (:REWRITE DROP-LINEAR-HYPS1))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (3 3 (:REWRITE BOUND-LEMMA))
 (3 3 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (3 3 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:REWRITE FOLD-CONSTS-IN-+))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE +-OF-MINUS))
 (2 2 (:REWRITE +-COMBINE-CONSTANTS))
 (2 1 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (1 1 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (1 1 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (1 1 (:REWRITE HELPER-HELPER2))
 (1 1 (:REWRITE HELPER-HELPER))
 (1 1 (:REWRITE <-OF-IF-ARG1-SAFE))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (1 1 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 )
(FIND-A-NODE-TO-SPLIT-MITER-ON)
(TEST-CASE-SATISFIES-ALL-HYPSP
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(KEEP-TEST-CASES-THAT-SATISFY-HYPS
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(TOP-FNS-OF-TERMS
 (37 23 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (37 23 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (14 14 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (14 14 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(SUM-OF-CDR-LENS
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PURE-FN-CALL-EXPRP
 (34 17 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (34 17 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (17 17 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (17 17 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(EXPR-IS-PUREP
 (14 7 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (14 7 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (7 7 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (7 7 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MITER-IS-PUREP-AUX
 (33 9 (:REWRITE DEFAULT-<-2))
 (33 9 (:REWRITE DEFAULT-<-1))
 (28 4 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (15 9 (:REWRITE NOT-<-WHEN-SBVLT))
 (13 13 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (12 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (9 9 (:REWRITE USE-ALL-<=-2))
 (9 9 (:REWRITE USE-ALL-<=))
 (9 9 (:REWRITE USE-ALL-<-2))
 (9 9 (:REWRITE USE-ALL-<))
 (9 9 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (9 9 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (9 9 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (9 9 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (9 9 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (9 9 (:REWRITE INEQ-HACK2))
 (9 9 (:REWRITE INEQ-HACK))
 (9 9 (:REWRITE DROP-LINEAR-HYPS3))
 (9 9 (:REWRITE DROP-LINEAR-HYPS2))
 (9 9 (:REWRITE DROP->-HYPS))
 (9 9 (:REWRITE DROP-<=-HYPS))
 (9 9 (:REWRITE DROP-<-HYPS))
 (9 9 (:REWRITE BOUND-WHEN-USB2))
 (9 9 (:REWRITE BOUND-WHEN-USB))
 (9 9 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (9 9 (:REWRITE <-WHEN-BVLT))
 (9 9 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (9 9 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (9 9 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (9 9 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (9 9 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (9 9 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (9 9 (:REWRITE <-FROM-<=-FREE))
 (7 7 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (7 7 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (7 7 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (7 7 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (7 7 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (7 7 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (4 4 (:REWRITE USE-ALL-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-RATIONALP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE +-OF-MINUS))
 (4 1 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (3 3 (:REWRITE USE-ALL-NATP-2))
 (3 3 (:REWRITE USE-ALL-NATP))
 (3 3 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (3 3 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (3 3 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (3 3 (:REWRITE DROP-LINEAR-HYPS1))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (3 3 (:REWRITE BOUND-LEMMA))
 (3 3 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (3 3 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 1 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (2 1 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (1 1 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (1 1 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (1 1 (:TYPE-PRESCRIPTION ARRAY1P))
 (1 1 (:REWRITE FOLD-CONSTS-IN-+))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-IF-ARG1-SAFE))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (1 1 (:REWRITE +-COMBINE-CONSTANTS))
 )
(MITER-IS-PUREP)
(NODE-IS-PUREP)
(BOTH-NODES-ARE-PUREP)
(STRIP-LAMBDAS-AND-GATHER-CALLED-FNS-AUX
 (9358 13 (:DEFINITION ACL2-COUNT))
 (4983 16 (:DEFINITION INTEGER-ABS))
 (3932 68 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (2401 176 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (2362 54 (:REWRITE LEN-OF-CDR-BETTER))
 (1856 8 (:DEFINITION LENGTH))
 (1785 81 (:REWRITE INEQ-HACK2))
 (1785 81 (:REWRITE INEQ-HACK))
 (847 24 (:REWRITE STR::CONSP-OF-EXPLODE))
 (619 17 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (616 22 (:REWRITE <-0-+-NEGATIVE-1))
 (600 15 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (574 73 (:REWRITE DEFAULT-CDR))
 (559 176 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (539 3 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (534 267 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (534 267 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (522 18 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (514 8 (:REWRITE EQUAL-CONSTANT-+))
 (511 7 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (506 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (498 8 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (378 57 (:REWRITE DEFAULT-CAR))
 (353 15 (:REWRITE USE-ALL-<-FOR-CAR))
 (344 172 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (325 325 (:TYPE-PRESCRIPTION NAT-LISTP))
 (282 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (274 16 (:REWRITE LIST::OPEN-EQUIV))
 (269 269 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (265 55 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (258 86 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (258 86 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (226 226 (:TYPE-PRESCRIPTION ALL-NATP))
 (204 122 (:REWRITE DEFAULT-+-2))
 (200 10 (:REWRITE ALL-NATP-OF-CDR))
 (176 120 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (166 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (154 12 (:REWRITE ALL-<-OF-CDR))
 (152 122 (:REWRITE DEFAULT-+-1))
 (141 141 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (136 136 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (130 5 (:REWRITE LIST::LEN-POS-REWRITE))
 (128 119 (:REWRITE DEFAULT-<-2))
 (122 122 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (120 120 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (120 120 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (120 120 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (120 120 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (120 120 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (120 120 (:META LEN-CONS-META-RULE))
 (120 119 (:REWRITE DEFAULT-<-1))
 (119 119 (:REWRITE USE-ALL-<-2))
 (119 119 (:REWRITE USE-ALL-<))
 (119 119 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (119 119 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (119 119 (:REWRITE DROP-LINEAR-HYPS2))
 (119 119 (:REWRITE DROP->-HYPS))
 (119 119 (:REWRITE DROP-<-HYPS))
 (119 119 (:REWRITE BOUND-WHEN-USB2))
 (119 119 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (119 119 (:REWRITE <-WHEN-BVLT))
 (119 119 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (119 119 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (119 119 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (119 119 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (119 119 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (119 119 (:REWRITE <-FROM-<=-FREE))
 (105 73 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (97 81 (:REWRITE NOT-<-WHEN-SBVLT))
 (94 1 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (92 92 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (86 86 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (86 43 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (83 81 (:REWRITE ARITH-HACK-CHEAP))
 (81 81 (:REWRITE USE-ALL-<=-2))
 (81 81 (:REWRITE USE-ALL-<=))
 (81 81 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (81 81 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (81 81 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (81 81 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (81 81 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (81 81 (:REWRITE DROP-LINEAR-HYPS3))
 (81 81 (:REWRITE DROP-<=-HYPS))
 (81 81 (:REWRITE BOUND-WHEN-USB))
 (81 81 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (81 81 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (81 81 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (80 16 (:REWRITE COMMUTATIVITY-OF-+))
 (77 19 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (75 75 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (75 75 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (75 1 (:DEFINITION STRIP-CARS))
 (69 7 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (68 68 (:REWRITE USE-ALL-CONSP-2))
 (68 68 (:REWRITE USE-ALL-CONSP))
 (68 68 (:REWRITE LEN-GIVES-CONSP))
 (68 68 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (68 68 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (68 68 (:REWRITE CONSP-FROM-LEN-BOUND))
 (67 2 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (64 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (61 61 (:TYPE-PRESCRIPTION ALL-<))
 (58 58 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (58 7 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (57 57 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (56 56 (:REWRITE CLR-DIFFERENTIAL))
 (54 54 (:REWRITE +-OF-MINUS))
 (51 51 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (48 48 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (48 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (48 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (48 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (48 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (46 18 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (45 1 (:REWRITE ACL2-COUNT-WHEN-MEMBER))
 (40 40 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (40 40 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (40 8 (:REWRITE HACK1))
 (39 1 (:REWRITE SUBSETP-CAR-MEMBER))
 (38 38 (:REWRITE <-OF-0-WHEN-<-FREE))
 (38 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (36 18 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (33 33 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 32 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (32 32 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (32 32 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (32 32 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (32 32 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (32 32 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (32 32 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (32 32 (:REWRITE IMPOSSIBLE-VALUE-2))
 (32 32 (:REWRITE IMPOSSIBLE-VALUE-1))
 (32 32 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (32 32 (:REWRITE EQUAL-WHEN-BVLT))
 (32 32 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (32 32 (:REWRITE EQUAL-WHEN-<-OF-+))
 (32 32 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (32 32 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (32 32 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (32 32 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (32 32 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (32 32 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (32 32 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (32 32 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (32 32 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (32 32 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (32 32 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (32 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (30 15 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (28 8 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (24 24 (:REWRITE WFR-HACK5))
 (24 24 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (24 3 (:REWRITE USE-ALL-CDRS-RATIONALP-FOR-CAR))
 (23 2 (:REWRITE SUBSETP-IMPLIES-SUBSETP-CDR))
 (22 22 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (22 22 (:REWRITE HELPER-HELPER2))
 (22 22 (:REWRITE HELPER-HELPER))
 (22 22 (:REWRITE FOLD-CONSTS-IN-+))
 (22 22 (:REWRITE +-COMBINE-CONSTANTS))
 (21 3 (:REWRITE SUBSETP-WHEN-ATOM-LEFT))
 (19 19 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (19 19 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (19 19 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (19 19 (:REWRITE ALL-<-TRANSITIVE))
 (18 18 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (17 17 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (16 16 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (16 16 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (16 16 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (16 16 (:REWRITE DEFAULT-UNARY-MINUS))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (16 8 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (15 15 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (15 3 (:REWRITE USE-ALL-INTEGER-LISTP-FOR-CAR))
 (14 14 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (14 7 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 4 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (12 4 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (9 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-HIT-COUNT-ALISTP))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:TYPE-PRESCRIPTION ALISTP))
 (8 8 (:REWRITE USE-ALL-RATIONALP-2))
 (8 8 (:REWRITE USE-ALL-RATIONALP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (8 8 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (8 8 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (8 8 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (8 8 (:REWRITE DEFAULT-REALPART))
 (8 8 (:REWRITE DEFAULT-NUMERATOR))
 (8 8 (:REWRITE DEFAULT-IMAGPART))
 (8 8 (:REWRITE DEFAULT-DENOMINATOR))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (8 8 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (8 8 (:REWRITE CDR-CONS))
 (8 8 (:REWRITE CAR-CONS))
 (7 7 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (7 7 (:REWRITE USE-ALL-INTEGER-LISTP))
 (7 7 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION SUBSETP-EQUAL))
 (6 6 (:TYPE-PRESCRIPTION HIT-COUNT-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION ALL-INTEGER-LISTP))
 (6 6 (:TYPE-PRESCRIPTION ALL-CDRS-RATIONALP))
 (6 6 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (6 3 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (6 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (5 5 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (5 5 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 3 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-UNION-EQUAL-TYPE))
 (3 3 (:TYPE-PRESCRIPTION UNION-EQUAL))
 (3 3 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (3 3 (:REWRITE SUBSETP-WHEN-ATOM-RIGHT))
 (3 3 (:REWRITE SUBSETP-TRANS2))
 (3 3 (:REWRITE SUBSETP-TRANS))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (3 3 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (3 3 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP))
 (3 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-CDRS-RATIONALP-WHEN-NOT-CONSP))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION MEMBER-EQUAL))
 (2 1 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-CHEAP))
 (2 1 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-AUX-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION WEAK-DAGP))
 (1 1 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (1 1 (:REWRITE USE-ALL-RATIONAL-LISTP-2))
 (1 1 (:REWRITE USE-ALL-RATIONAL-LISTP))
 (1 1 (:REWRITE SUBSETP-MEMBER . 2))
 (1 1 (:REWRITE SUBSETP-MEMBER . 1))
 (1 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE MEMBER-EQUAL-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (1 1 (:REWRITE INTEGERP-OF-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE <-OF-0-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 )
(STRIP-LAMBDAS-AND-GATHER-CALLED-FNS)
(HEAD-REC-LIST-BUILDERP
 (64 35 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (64 35 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (29 29 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (29 29 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CONVERT-LIST-BUILDER-TO-TAIL)
(HEAD-AUX-FN-OF-DEFSEQUENCE-AUX
 (22 11 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (22 11 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (11 11 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (11 11 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(HEAD-AUX-FN-OF-DEFSEQUENCE)
(FNS-AT-NODES
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 (16 8 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (8 8 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (8 8 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(FIND-REC-FN-NODE-TO-SPLIT
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(ADD-ALIST-CDRS-TO-DAG
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIXUP-ARGS-SPECIAL
 (16 8 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 (8 8 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 )
(REBUILD-NODE-RANGE
 (750 1 (:DEFINITION FIXUP-ARGS-SPECIAL))
 (474 15 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (399 3 (:REWRITE USE-ALL-<=-FOR-CAR))
 (340 2 (:REWRITE ALL-<=-WHEN-<=-AND-DECREASINGP))
 (330 15 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (245 24 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (237 45 (:REWRITE DEFAULT-<-2))
 (236 1 (:REWRITE ALL-<=-OF-CDR))
 (224 44 (:REWRITE INEQ-HACK2))
 (224 44 (:REWRITE INEQ-HACK))
 (214 107 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (124 62 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (124 62 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (122 4 (:REWRITE LEN-OF-CDR-BETTER))
 (109 3 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-<-2))
 (107 107 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (98 4 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (85 2 (:REWRITE ALL-<-OF-CDR))
 (84 3 (:REWRITE <-0-+-NEGATIVE-1))
 (80 40 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-AREF1))
 (73 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (65 6 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (64 64 (:TYPE-PRESCRIPTION NAT-LISTP))
 (62 62 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (57 57 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (57 50 (:REWRITE ARITH-HACK-CHEAP))
 (57 44 (:REWRITE DEFAULT-+-2))
 (57 3 (:REWRITE LIST::LEN-POS-REWRITE))
 (54 18 (:REWRITE LEN-OF-AREF1-WHEN-QUOTEP-AND-PSEUDO-DAG-ARRAYP-AUX))
 (53 41 (:REWRITE NOT-<-WHEN-SBVLT))
 (50 50 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (49 45 (:REWRITE DEFAULT-<-1))
 (48 48 (:REWRITE DROP-LINEAR-HYPS2))
 (48 48 (:REWRITE DROP->-HYPS))
 (48 48 (:REWRITE DROP-<-HYPS))
 (48 48 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (48 12 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (45 45 (:REWRITE USE-ALL-<-2))
 (45 45 (:REWRITE USE-ALL-<))
 (45 45 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (45 45 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (45 45 (:REWRITE BOUND-WHEN-USB2))
 (45 45 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (45 45 (:REWRITE <-WHEN-BVLT))
 (45 45 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (45 45 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (45 45 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (45 45 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (45 45 (:REWRITE <-FROM-<=-FREE))
 (44 44 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (44 44 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (44 44 (:REWRITE DROP-LINEAR-HYPS3))
 (44 44 (:REWRITE DROP-<=-HYPS))
 (44 44 (:REWRITE DEFAULT-+-1))
 (44 44 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (44 44 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (44 44 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (44 22 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (41 41 (:REWRITE USE-ALL-<=-2))
 (41 41 (:REWRITE USE-ALL-<=))
 (41 41 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (41 41 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (41 41 (:REWRITE BOUND-WHEN-USB))
 (41 41 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (41 41 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (41 41 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (40 40 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP))
 (36 5 (:REWRITE DEFAULT-CDR))
 (36 5 (:REWRITE DEFAULT-CAR))
 (33 11 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (33 11 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (32 24 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (31 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (31 2 (:REWRITE ALL-<=-WHEN-ALL-<))
 (29 29 (:TYPE-PRESCRIPTION ALL-NATP))
 (28 20 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (28 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (24 12 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (24 6 (:REWRITE PSEUDO-DAG-ARRAYP-AUX-WHEN-PSEUDO-DAGP-AUX))
 (21 1 (:REWRITE ALL-RATIONALP-OF-CDR))
 (20 20 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (20 20 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (20 20 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (20 20 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (20 20 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (20 20 (:META LEN-CONS-META-RULE))
 (19 3 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (18 2 (:REWRITE ALL-<=-WHEN-NOT-CONSP))
 (16 2 (:REWRITE SYMBOLP-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX-AND-NOT-CONSP))
 (15 15 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (15 15 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (15 15 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (15 15 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (15 15 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (15 15 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (15 15 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (15 15 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (14 2 (:REWRITE SYMBOLP-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-2))
 (13 13 (:REWRITE USE-ALL-CONSP-2))
 (13 13 (:REWRITE USE-ALL-CONSP))
 (13 13 (:REWRITE LEN-GIVES-CONSP))
 (13 13 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (13 13 (:REWRITE CONSP-FROM-LEN-BOUND))
 (12 12 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (12 12 (:TYPE-PRESCRIPTION PSEUDO-DAGP-AUX))
 (12 12 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (12 12 (:TYPE-PRESCRIPTION ARRAY1P))
 (12 12 (:TYPE-PRESCRIPTION ALL-<))
 (12 12 (:REWRITE USE-ALL-NATP-2))
 (12 12 (:REWRITE USE-ALL-NATP))
 (12 12 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (12 12 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (12 12 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (12 12 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (12 12 (:REWRITE DROP-LINEAR-HYPS1))
 (12 12 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (12 12 (:REWRITE BOUND-LEMMA))
 (12 1 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (12 1 (:REWRITE INTEGER-LISTP-OF-CDR))
 (11 11 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (10 10 (:REWRITE +-OF-MINUS))
 (10 4 (:REWRITE ALL-<-OF-AREF1-WHEN-BOUNDED-DAG-PARENT-ARRAYP))
 (9 9 (:REWRITE CONSP-OF-AREF1-WHEN-EVAL-ARRAYP))
 (9 9 (:REWRITE <-OF-+-COMBINE-CONSTANTS-2))
 (9 9 (:REWRITE <-OF-+-ARG1-WHEN-NEGATIVE-CONSTANT))
 (9 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (8 8 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (8 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (8 1 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (8 1 (:REWRITE NOT-EQUAL-OF-CAR-AND-QUOTE-WHEN-LEN-WRONG-AND-PSEUDO-DAG-ARRAYP-AUX))
 (7 5 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (7 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (6 6 (:TYPE-PRESCRIPTION ALL-<=))
 (6 6 (:REWRITE PSEUDO-DAGP-AUX-WHEN-NOT-CONSP-CHEAP))
 (6 6 (:REWRITE PSEUDO-DAG-ARRAYP-AUX-MONOTONE))
 (6 6 (:REWRITE FOLD-CONSTS-IN-+))
 (6 6 (:REWRITE DEFAULT-UNARY-MINUS))
 (6 6 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (6 6 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (6 6 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (6 6 (:REWRITE ALL-<-TRANSITIVE))
 (6 6 (:REWRITE +-COMBINE-CONSTANTS))
 (6 3 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (5 5 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (5 5 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (5 2 (:REWRITE INTEGER-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (4 4 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (4 4 (:TYPE-PRESCRIPTION BOUNDED-DAG-PARENT-ARRAYP))
 (4 4 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (4 4 (:REWRITE CONSP-OF-CDR-OF-AREF1-WHEN-RENAMING-ARRAYP-AUX))
 (4 4 (:REWRITE CONSP-OF-CDR-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX-AND-QUOTEP))
 (4 4 (:REWRITE CONSP-OF-CDR-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP))
 (4 4 (:REWRITE ALL-<-OF-AREF1-WHEN-BOUNDED-DAG-PARENT-ENTRIESP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (4 4 (:REWRITE <-OF-0-WHEN-<-FREE))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (3 3 (:REWRITE USE-ALL-RATIONALP-2))
 (3 3 (:REWRITE USE-ALL-RATIONALP))
 (3 3 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (3 3 (:REWRITE USE-ALL-INTEGER-LISTP))
 (3 3 (:REWRITE HELPER-HELPER2))
 (3 3 (:REWRITE HELPER-HELPER))
 (3 3 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (3 3 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (3 3 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (3 3 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 (3 1 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (3 1 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (2 2 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:TYPE-PRESCRIPTION ALISTP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (2 2 (:REWRITE SYMBOLP-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP))
 (2 2 (:REWRITE PSEUDO-DAG-ARRAYP-MONOTONE))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:REWRITE INTEGER-LISTP-OF-AREF1-WHEN-ALL-DAG-PARENT-ENTRIESP))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE BOUNDED-DAG-PARENT-ARRAYP-MONOTONE))
 (2 2 (:REWRITE ALL-<=-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-<=-MONOTONE))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (1 1 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (1 1 (:REWRITE NOT-CDR-OF-CDR-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP))
 (1 1 (:REWRITE NOT-CDDR-OF-AREF1-WHEN-RENAMING-ARRAYP-AUX))
 (1 1 (:REWRITE IMPOSSIBLE-VALUE-2))
 (1 1 (:REWRITE IMPOSSIBLE-VALUE-1))
 (1 1 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (1 1 (:REWRITE EQUAL-WHEN-BVLT))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+))
 (1 1 (:REWRITE EQUAL-OF-QUOTE-AND-CAR-OF-AREF1-WHEN-RENAMING-ARRAYP-AUX))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (1 1 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE DAG-PARENT-ARRAYP-WHEN-WF-DAGP))
 (1 1 (:REWRITE CLR-DIFFERENTIAL))
 )
(BIND-OLD-VARS
 (474 15 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (226 26 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (180 88 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (180 88 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (112 4 (:REWRITE <-0-+-NEGATIVE-1))
 (103 3 (:REWRITE ALISTP-WHEN-HONS-DUPLICITY-ALIST-P))
 (96 6 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (94 3 (:REWRITE HONS-DUPLICITY-ALIST-P-WHEN-NOT-CONSP))
 (92 4 (:REWRITE LEN-OF-CDR-BETTER))
 (88 88 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (88 88 (:TYPE-PRESCRIPTION NAT-LISTP))
 (85 5 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (69 5 (:REWRITE LIST::LEN-POS-REWRITE))
 (34 26 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (30 22 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (28 10 (:REWRITE DEFAULT-CAR))
 (22 22 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (22 22 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (22 22 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (22 22 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (22 22 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (22 22 (:META LEN-CONS-META-RULE))
 (21 5 (:REWRITE RULE-ALISTP-MEANS-SYMBOL-ALISTP))
 (19 7 (:REWRITE SYMBOL-ALISTP-WHEN-SYMBOL-COUNT-WORLDP))
 (19 7 (:REWRITE SYMBOL-ALISTP-WHEN-INFO-WORLDP))
 (19 7 (:REWRITE RESULT-ALISTP-FORWARD-TO-SYMBOL-ALISTP))
 (18 18 (:TYPE-PRESCRIPTION RESULT-ALISTP))
 (17 8 (:REWRITE DEFAULT-CDR))
 (16 8 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (15 15 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (15 15 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (14 14 (:REWRITE USE-ALL-CONSP-2))
 (14 14 (:REWRITE USE-ALL-CONSP))
 (14 14 (:REWRITE LEN-GIVES-CONSP))
 (14 14 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (14 14 (:REWRITE CONSP-FROM-LEN-BOUND))
 (14 7 (:REWRITE SYMBOL-ALISTP-WHEN-REFINED-ASSUMPTION-ALISTP-CHEAP))
 (12 12 (:TYPE-PRESCRIPTION SYMBOL-COUNT-WORLDP))
 (12 12 (:TYPE-PRESCRIPTION RULE-ALISTP))
 (12 12 (:TYPE-PRESCRIPTION INFO-WORLDP))
 (12 8 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (12 4 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (12 4 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (11 11 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (10 10 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (10 5 (:REWRITE SYMBOL-ALISTP-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (10 2 (:REWRITE RULE-ALISTP-MEANS-ALISTP))
 (9 3 (:REWRITE RULE-LIMITSP-FORWARD-TO-ALISTP))
 (9 3 (:REWRITE RESULT-ALISTP-FORWARD-TO-ALISTP))
 (9 3 (:REWRITE DAG-VARIABLE-ALISTP-FORWARD-TO-ALIST))
 (9 3 (:REWRITE JVM::ALISTP-WHEN-METHOD-PROGRAMP))
 (8 8 (:TYPE-PRESCRIPTION ALL-NATP))
 (8 8 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (8 4 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (7 7 (:TYPE-PRESCRIPTION REFINED-ASSUMPTION-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION RULE-LIMITSP))
 (6 6 (:TYPE-PRESCRIPTION JVM::METHOD-PROGRAMP))
 (6 6 (:TYPE-PRESCRIPTION HONS-DUPLICITY-ALIST-P))
 (6 6 (:TYPE-PRESCRIPTION DAG-VARIABLE-ALISTP))
 (6 6 (:REWRITE USE-ALL-RULE-ALISTP-2))
 (6 6 (:REWRITE USE-ALL-RULE-ALISTP))
 (6 3 (:REWRITE ALISTP-WHEN-NODENUM-TYPE-ALISTP-CHEAP))
 (5 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (4 4 (:REWRITE USE-ALL-<-2))
 (4 4 (:REWRITE USE-ALL-<))
 (4 4 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (4 4 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (4 4 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (4 4 (:REWRITE DROP-LINEAR-HYPS2))
 (4 4 (:REWRITE DROP->-HYPS))
 (4 4 (:REWRITE DROP-<-HYPS))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 4 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (4 4 (:REWRITE BOUND-WHEN-USB2))
 (4 4 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (4 4 (:REWRITE <-WHEN-BVLT))
 (4 4 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (4 4 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (4 4 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (4 4 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (4 4 (:REWRITE <-OF-0-WHEN-<-FREE))
 (4 4 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (4 4 (:REWRITE <-FROM-<=-FREE))
 (4 4 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (4 4 (:REWRITE +-OF-MINUS))
 (4 2 (:REWRITE SYMBOLP-OF-CDAR-WHEN-WEAK-DAGP-AUX-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (4 2 (:REWRITE ALISTP-WHEN-PSEUDO-TERM-ALISTP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (3 3 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (3 3 (:REWRITE WFR-HACK5))
 (3 3 (:REWRITE USE-ALL-ALISTP-2))
 (3 3 (:REWRITE USE-ALL-ALISTP))
 (3 3 (:REWRITE SYMBOLP-WHEN-BOUNDED-DAG-EXPRP))
 (3 3 (:REWRITE NODE-REPLACEMENT-ALISTP-FORWARD-TO-ALISTP))
 (3 3 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE ALISTP-WHEN-PSEUDO-DAGP-AUX))
 (3 3 (:REWRITE JVM::ALISTP-WHEN-JVM-INSTRUCTIONS-OKAYP))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION PSEUDO-TERM-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (2 2 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (2 1 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:REWRITE SYMBOLP-OF-CAR-WHEN-BOUNDED-DAG-EXPRP))
 )
(CHECK-CONNECTION-ON-TUPLES
 (3 3 (:TYPE-PRESCRIPTION EXTEND-ALIST))
 )
(CHECK-CONNECTION-ON-TRACE
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CONNECTION-WORKS-ON-TRACESP
 (31 20 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (31 20 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (11 11 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (11 11 (:TYPE-PRESCRIPTION NAT-LISTP))
 (4 4 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (4 2 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (4 2 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (2 2 (:TYPE-PRESCRIPTION BINARY-APPEND))
 (2 2 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (2 2 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 )
(DISCARD-FALSE-CONNECTIONS
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CHECK-INVAR-ON-TUPLE
 (1 1 (:TYPE-PRESCRIPTION EXTEND-ALIST))
 )
(CHECK-INVAR-ON-TRACE
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(INVAR-WORKS-ON-TRACESP
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(INVARS-WORK-ON-TRACESP
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(RV-CLAIM-WORKS-ON-TRACESP
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(RV-CLAIMS-WORK-ON-TRACESP
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-UNCDR-PARAM-REPLACEMENT-ALIST
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-UNCDRED-UPDATE-EXPRS
 (20 10 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (20 10 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (10 10 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (10 10 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FORMAL-RENAMING-ALIST
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(BIND-NEW-TO-OLD-FOR-CDRED-FORMALS
 (16 8 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 8 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (8 8 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (8 8 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REMOVE-CDRING-FROM-FUNCTION)
(REPORT-CDRED-FORMALS
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-CDRED-FORMALS
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PURE-ASSUMPTIONP
 (9783 4695 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (9783 4695 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4432 4432 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (4432 4432 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PURE-ASSUMPTIONSP
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIND-UNHANDLED-REC-FN-NODES-SIMPLE
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-TEST-CASE-ALIST
 (12 6 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6 6 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (6 6 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(TRY-TO-COMPLETELY-UNROLL-REC-FNS)
(PRINT-NON-CONSTANT-PROBABLY-EQUAL-SETS
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REMOVE-EQUALITIES-WITH-LHSES
 (16 7 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (16 7 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (7 7 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (7 7 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(RENAME-EXPLANATION-GRAPH
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(LHSES-WHOSE-RHSES-MENTION
 (20 10 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (20 10 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (10 10 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (10 10 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(TRY-TO-EXPRESS-LAST-VALUE-OF-WHOLE-TARGET-WITH-ANY-CANDIDATE
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PROVE-FINAL-CLAIMS-AUX)
(PROVE-FINAL-CLAIMS)
(MAKE-RULES-TO-EXPOSE-TUPLE-ELEMENTS-FOR-FORMALS)
(MAKE-RULES-TO-EXPOSE-TUPLE-ELEMENTS)
(GET-DAG-FOR-EXPR-NO-THEOREM)
(GET-DAGS-FOR-EXPRS-NO-THEOREM)
(GET-DAG-FOR-EXPR)
(GET-DAGS-FOR-EXPRS)
(EXPAND-UPDATE-FN-CALLS)
(FIND-NUMCDRS-FORMAL-FOR-TAIL-REC-CONSUMER)
(TAIL-REC-CONSUMER)
(CONSUMER-NUMCDRS-PARAMETERS-AUX)
(CONSUMER-NUMCDRS-PARAMETERS)
(REPLACE-IN-DAG)
(REPLACE-IN-DAGS-AUX)
(REPLACE-IN-DAGS)
(EMBED-DAG-AS-TERM)
(EMBED-DAGS-AS-TERMS
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(PROVE-EMBEDDED-DAGS-EQUAL)
(PROVE-EMBEDDED-DAG-EQUALITIES)
(TRANSFORM-FN-INTO-NICE-CONSUMER-FORM)
(TOP-EXPR
 (8 4 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (8 4 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 4 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (4 4 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(KEEP-KEYS-PAIRED-WITH-QUOTED-ZERO
 (30 15 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-AREF1-WHEN-DAG-PARENT-ARRAYP))
 (20 10 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (20 10 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (15 15 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (15 15 (:TYPE-PRESCRIPTION DAG-PARENT-ARRAYP))
 (10 10 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (10 10 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CONS-LIST
 (6 3 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (6 3 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (3 3 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (3 3 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REPLACE-IN-EACH-TERM
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(COMPOSE-TERMS-AND-DAGS)
(COMBINE-PRODUCER-AND-CONSUMER)
(TAIL-REC-PRODUCER)
(FIND-COMPOSITION-OF-PRODUCER-AND-CONSUMER)
(HANDLE-PRODUCER-CONSUMER-PATTERN-FOR-ONE-SIDE)
(HANDLE-PRODUCER-CONSUMER-PATTERN)
(REWRITE-TO-EXPOSE-TUPLE-ELEMENTS)
(SIMPLIFY-TREE-AND-ADD-TO-DAG-WRAPPER)
(SIMPLIFY-CONCLUSION)
(SIMPLIFY-CONCLUSIONS)
(SIMPLIFY-TERM-AND-PROVE-THEOREM)
(MAKE-NEW-UPDATE-DEFUN-FOR-FORMAL)
(MAKE-NEW-UPDATE-DEFUNS)
(DROP-PARAMS-FROM-TAIL-FUNCTION)
(PEEL-OFF-BASE-CASE-OF-TAIL-FN)
(SIMPLIFY-FACT)
(FIND-AN-INVAR-TO-IMPROVE)
(IMPROVE-INVARS-AUX)
(IMPROVE-INVARS)
(MERGE-RAND
 (1394 90 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1262 32 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (448 16 (:REWRITE <-0-+-NEGATIVE-1))
 (154 24 (:REWRITE DEFAULT-CDR))
 (108 90 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (88 2 (:REWRITE EQUAL-CONSTANT-+))
 (86 2 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (66 66 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (66 66 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (66 66 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (66 66 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (66 66 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (66 66 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (66 66 (:META LEN-CONS-META-RULE))
 (64 32 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (58 2 (:REWRITE LIST::LIST-EQUIV-HACK))
 (56 4 (:REWRITE LIST::OPEN-EQUIV))
 (48 16 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (48 16 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (40 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (38 38 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (34 34 (:REWRITE DEFAULT-+-2))
 (34 34 (:REWRITE DEFAULT-+-1))
 (34 34 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (32 32 (:TYPE-PRESCRIPTION ALL-NATP))
 (32 32 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (32 32 (:REWRITE USE-ALL-CONSP-2))
 (32 32 (:REWRITE USE-ALL-CONSP))
 (32 32 (:REWRITE LEN-GIVES-CONSP))
 (32 32 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (32 32 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (32 32 (:REWRITE CONSP-FROM-LEN-BOUND))
 (28 24 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (26 26 (:REWRITE +-OF-MINUS))
 (24 24 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (22 22 (:REWRITE DROP-LINEAR-HYPS2))
 (22 22 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (22 2 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (20 20 (:REWRITE DROP->-HYPS))
 (20 20 (:REWRITE DROP-<-HYPS))
 (18 18 (:REWRITE USE-ALL-<-2))
 (18 18 (:REWRITE USE-ALL-<))
 (18 18 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (18 18 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (18 18 (:REWRITE DEFAULT-<-2))
 (18 18 (:REWRITE DEFAULT-<-1))
 (18 18 (:REWRITE BOUND-WHEN-USB2))
 (18 18 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (18 18 (:REWRITE <-WHEN-BVLT))
 (18 18 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (18 18 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (18 18 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (18 18 (:REWRITE <-OF-0-WHEN-<-FREE))
 (18 18 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (18 18 (:REWRITE <-FROM-<=-FREE))
 (16 16 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (10 2 (:REWRITE HACK1))
 (6 6 (:REWRITE DEFAULT-CAR))
 (6 6 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (4 4 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (4 4 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (4 4 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (4 4 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (4 4 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (4 4 (:REWRITE INEQ-HACK2))
 (4 4 (:REWRITE INEQ-HACK))
 (4 4 (:REWRITE FOLD-CONSTS-IN-+))
 (4 4 (:REWRITE DROP-LINEAR-HYPS3))
 (4 4 (:REWRITE DROP-LINEAR-HYPS1))
 (4 4 (:REWRITE CLR-DIFFERENTIAL))
 (4 4 (:REWRITE BOUND-LEMMA))
 (4 4 (:REWRITE ARITH-HACK-CHEAP))
 (4 4 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (4 4 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (4 4 (:REWRITE <-OF-+-AND-+-CANCEL-CONSTANTS))
 (4 4 (:REWRITE +-COMBINE-CONSTANTS))
 (4 2 (:TYPE-PRESCRIPTION TRUE-LISTP-REVAPPEND-TYPE-PRESCRIPTION))
 (4 2 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 2 (:REWRITE LIST::TRUE-LISTP-FIX))
 (4 2 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (4 2 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (4 2 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (2 2 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (2 2 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2 2 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (2 2 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (2 2 (:REWRITE NOT-0-WHEN-BIT-NOT-0))
 (2 2 (:REWRITE NO-ROOM-BETWEEN-INTS-LEMMA))
 (2 2 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (2 2 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (2 2 (:REWRITE IMPOSSIBLE-VALUE-2))
 (2 2 (:REWRITE IMPOSSIBLE-VALUE-1))
 (2 2 (:REWRITE HELPER-HELPER2))
 (2 2 (:REWRITE HELPER-HELPER))
 (2 2 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (2 2 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (2 2 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (2 2 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-BVLT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (2 2 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (2 2 (:REWRITE EQUAL-OF-0-WHEN-BVLT-OF-SLICE))
 (2 2 (:REWRITE EQUAL-OF-0-WHEN-BVLT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE DROP-<=-HYPS))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<-2))
 (2 2 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (2 2 (:REWRITE CDR-CONS))
 (2 2 (:REWRITE CAR-CONS))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (2 2 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(GET-FORMAL-AND-PATH
 (3594 12 (:DEFINITION INTEGER-ABS))
 (3195 61 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (1996 162 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (1835 51 (:REWRITE LEN-OF-CDR-BETTER))
 (1336 6 (:DEFINITION LENGTH))
 (1229 61 (:REWRITE INEQ-HACK2))
 (1229 61 (:REWRITE INEQ-HACK))
 (588 21 (:REWRITE <-0-+-NEGATIVE-1))
 (580 18 (:REWRITE STR::CONSP-OF-EXPLODE))
 (522 14 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (498 10 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (448 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (441 57 (:REWRITE DEFAULT-CDR))
 (434 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (424 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (418 162 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (412 29 (:REWRITE DEFAULT-CAR))
 (380 193 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (380 193 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (372 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (298 8 (:REWRITE EQUAL-CONSTANT-+))
 (290 10 (:REWRITE USE-ALL-<-FOR-CAR))
 (290 8 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (276 138 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (229 229 (:TYPE-PRESCRIPTION NAT-LISTP))
 (207 69 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (207 69 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (188 10 (:REWRITE ALL-NATP-OF-CDR))
 (184 184 (:TYPE-PRESCRIPTION ALL-NATP))
 (181 181 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (178 8 (:REWRITE LIST::LIST-EQUIV-HACK))
 (170 16 (:REWRITE LIST::OPEN-EQUIV))
 (154 4 (:REWRITE ALL-RATIONALP-OF-CDR))
 (150 12 (:REWRITE ALL-<-OF-CDR))
 (148 110 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (145 96 (:REWRITE DEFAULT-+-2))
 (117 117 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (116 32 (:REWRITE ACL2-COUNT-WHEN-STRING))
 (112 96 (:REWRITE DEFAULT-+-1))
 (110 110 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (110 110 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (110 110 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (110 110 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (110 110 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (110 110 (:META LEN-CONS-META-RULE))
 (103 96 (:REWRITE DEFAULT-<-2))
 (102 102 (:TYPE-PRESCRIPTION STR::TRUE-LISTP-OF-EXPLODE))
 (97 96 (:REWRITE DEFAULT-<-1))
 (97 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (96 96 (:REWRITE USE-ALL-<-2))
 (96 96 (:REWRITE USE-ALL-<))
 (96 96 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (96 96 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (96 96 (:REWRITE DROP-LINEAR-HYPS2))
 (96 96 (:REWRITE DROP->-HYPS))
 (96 96 (:REWRITE DROP-<-HYPS))
 (96 96 (:REWRITE BOUND-WHEN-USB2))
 (96 96 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (96 96 (:REWRITE <-WHEN-BVLT))
 (96 96 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (96 96 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (96 96 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (96 96 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (96 96 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (96 96 (:REWRITE <-FROM-<=-FREE))
 (96 96 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (90 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (79 79 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (77 57 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (73 61 (:REWRITE NOT-<-WHEN-SBVLT))
 (72 36 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (69 69 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (64 14 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (63 61 (:REWRITE ARITH-HACK-CHEAP))
 (61 61 (:REWRITE USE-ALL-CONSP-2))
 (61 61 (:REWRITE USE-ALL-CONSP))
 (61 61 (:REWRITE USE-ALL-<=-2))
 (61 61 (:REWRITE USE-ALL-<=))
 (61 61 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (61 61 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (61 61 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (61 61 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (61 61 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (61 61 (:REWRITE LEN-GIVES-CONSP))
 (61 61 (:REWRITE DROP-LINEAR-HYPS3))
 (61 61 (:REWRITE DROP-<=-HYPS))
 (61 61 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (61 61 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (61 61 (:REWRITE CONSP-FROM-LEN-BOUND))
 (61 61 (:REWRITE BOUND-WHEN-USB))
 (61 61 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (61 61 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (61 61 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (60 12 (:REWRITE COMMUTATIVITY-OF-+))
 (58 6 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (54 6 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (53 53 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (51 51 (:REWRITE +-OF-MINUS))
 (46 46 (:TYPE-PRESCRIPTION ALL-<))
 (46 46 (:REWRITE CLR-DIFFERENTIAL))
 (45 38 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (42 42 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (42 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (40 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (40 8 (:REWRITE HACK1))
 (36 26 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (35 35 (:REWRITE <-OF-0-WHEN-<-FREE))
 (34 34 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (34 34 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (32 32 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (32 16 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (30 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (29 29 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (28 4 (:REWRITE INTEGER-LISTP-OF-CDR))
 (27 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (26 26 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (26 26 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (26 26 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (26 26 (:REWRITE IMPOSSIBLE-VALUE-2))
 (26 26 (:REWRITE IMPOSSIBLE-VALUE-1))
 (26 26 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-BVLT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (26 26 (:REWRITE EQUAL-WHEN-<-OF-+))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (26 26 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (26 26 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (23 23 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (23 23 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (20 10 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (19 19 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (16 16 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (16 16 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (16 8 (:REWRITE LIST::TRUE-LISTP-FIX))
 (16 8 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (16 8 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (15 5 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (15 5 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (14 14 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (14 14 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (14 14 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (14 14 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (14 14 (:REWRITE ALL-<-TRANSITIVE))
 (13 1 (:LINEAR ACL2-COUNT-WHEN-CONSP-LINEAR))
 (12 12 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (12 12 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (12 12 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE HELPER-HELPER2))
 (12 12 (:REWRITE HELPER-HELPER))
 (12 12 (:REWRITE FOLD-CONSTS-IN-+))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 12 (:REWRITE +-COMBINE-CONSTANTS))
 (12 6 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (12 6 (:REWRITE STR::COERCE-TO-LIST-REMOVAL))
 (10 10 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (8 8 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (8 8 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (8 8 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (8 8 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (8 8 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (6 6 (:TYPE-PRESCRIPTION ALISTP))
 (6 6 (:REWRITE USE-ALL-RATIONALP-2))
 (6 6 (:REWRITE USE-ALL-RATIONALP))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (6 6 (:REWRITE USE-ALL-INTEGER-LISTP))
 (6 6 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE NUMERATOR-WHEN-INTEGERP))
 (6 6 (:REWRITE INTEGERP==>DENOMINATOR=1))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (6 6 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (6 6 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (6 6 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (6 6 (:REWRITE STR::EXPLODE-WHEN-NOT-STRINGP))
 (6 6 (:REWRITE DEFAULT-REALPART))
 (6 6 (:REWRITE DEFAULT-NUMERATOR))
 (6 6 (:REWRITE DEFAULT-IMAGPART))
 (6 6 (:REWRITE DEFAULT-DENOMINATOR))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 6 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (3 3 (:REWRITE WFR-HACK5))
 (3 3 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (2 2 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (2 2 (:LINEAR ACL2-COUNT-WHEN-MEMBER))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE QUOTE-LEMMA-FOR-ALL-DARGP-LESS-THAN-GEN-ALT))
 (1 1 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE COLLECT-CONSTANTS-OVER-<))
 (1 1 (:REWRITE <-OF-CONSTANT-AND-+-OF-CONSTANT))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-OF-+-COMBINE-CONSTANTS-1))
 (1 1 (:REWRITE <-OF-+-ARG2-WHEN-NEGATIVE-CONSTANT))
 )
(PRINT-COMPONENT
 (18 3 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (8 4 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (8 4 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 4 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (4 4 (:TYPE-PRESCRIPTION NAT-LISTP))
 (3 3 (:TYPE-PRESCRIPTION ALL-NATP))
 )
(PRINT-COMPONENTS-OF-TRACE)
(PRINT-COMPONENTS-OF-TRACES)
(PRINT-TRACES
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CONSP-WITH-RATIONALP-CAR
 (8 4 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (8 4 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (4 4 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (4 4 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(CAR-<
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-CONSP-WITH-RATIONALP-CAR
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(ALL-CONSP-WITH-RATIONALP-CAR-OF-CONS-FOR-DEFMERGESORT
 (628 16 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (342 2 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (304 2 (:DEFINITION STRIP-CARS))
 (286 4 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (149 11 (:LINEAR LIST::LEN-NON-NEGATIVE-LINEAR))
 (130 2 (:REWRITE <-0-+-NEGATIVE-1))
 (108 7 (:REWRITE LIST::LEN-POS-REWRITE))
 (74 74 (:TYPE-PRESCRIPTION LEN))
 (72 36 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (72 36 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (63 11 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (59 11 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (52 2 (:REWRITE LEN-OF-CDR-BETTER))
 (48 32 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (48 32 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (46 30 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (40 40 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (36 36 (:TYPE-PRESCRIPTION NAT-LISTP))
 (30 30 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (30 30 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (30 30 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (30 30 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (30 30 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (30 30 (:META LEN-CONS-META-RULE))
 (25 5 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (16 16 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (16 16 (:REWRITE USE-ALL-CONSP-2))
 (16 16 (:REWRITE USE-ALL-CONSP))
 (16 16 (:REWRITE LEN-GIVES-CONSP))
 (16 16 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (16 16 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (16 16 (:REWRITE CONSP-FROM-LEN-BOUND))
 (12 12 (:REWRITE DEFAULT-CAR))
 (12 12 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (11 11 (:TYPE-PRESCRIPTION ALL-NATP))
 (10 10 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (10 10 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (10 5 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (10 5 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (10 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (8 8 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (8 4 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (8 4 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (8 4 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 2 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (6 2 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (6 2 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (6 2 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (5 5 (:REWRITE USE-ALL-RATIONALP-2))
 (5 5 (:REWRITE USE-ALL-RATIONALP))
 (5 5 (:REWRITE DEFAULT-CDR))
 (5 5 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (5 5 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (4 4 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (4 4 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (4 4 (:TYPE-PRESCRIPTION ALISTP))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (4 2 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (4 2 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (4 2 (:REWRITE DEFAULT-<-2))
 (4 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (2 2 (:REWRITE USE-ALL-RATIONAL-LISTP-2))
 (2 2 (:REWRITE USE-ALL-RATIONAL-LISTP))
 (2 2 (:REWRITE USE-ALL-<-2))
 (2 2 (:REWRITE USE-ALL-<))
 (2 2 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (2 2 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (2 2 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (2 2 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (2 2 (:REWRITE DROP-LINEAR-HYPS2))
 (2 2 (:REWRITE DROP->-HYPS))
 (2 2 (:REWRITE DROP-<-HYPS))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (2 2 (:REWRITE BOUND-WHEN-USB2))
 (2 2 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (2 2 (:REWRITE <-WHEN-BVLT))
 (2 2 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (2 2 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (2 2 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (2 2 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (2 2 (:REWRITE <-OF-0-WHEN-<-FREE))
 (2 2 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (2 2 (:REWRITE <-FROM-<=-FREE))
 (2 2 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (2 2 (:REWRITE +-OF-MINUS))
 )
(USE-ALL-CONSP-WITH-RATIONALP-CAR-FOR-CAR-FOR-DEFMERGESORT
 (923 19 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (649 49 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (308 11 (:REWRITE <-0-+-NEGATIVE-1))
 (253 11 (:REWRITE LEN-OF-CDR-BETTER))
 (246 6 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (246 6 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (188 2 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (176 80 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (176 80 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (150 2 (:DEFINITION STRIP-CARS))
 (134 4 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (97 4 (:REWRITE LIST::LEN-POS-REWRITE))
 (84 84 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (80 80 (:TYPE-PRESCRIPTION NAT-LISTP))
 (73 49 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (62 38 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (44 22 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (38 38 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (38 38 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (38 38 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (38 38 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (38 38 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (38 38 (:META LEN-CONS-META-RULE))
 (33 11 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (33 11 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (26 26 (:TYPE-PRESCRIPTION ALL-NATP))
 (22 22 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (22 11 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (19 19 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (19 19 (:REWRITE USE-ALL-CONSP-2))
 (19 19 (:REWRITE USE-ALL-CONSP))
 (19 19 (:REWRITE LEN-GIVES-CONSP))
 (19 19 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (19 19 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (19 19 (:REWRITE CONSP-FROM-LEN-BOUND))
 (17 17 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (15 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (13 13 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (12 12 (:REWRITE DEFAULT-CDR))
 (12 12 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (12 6 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (11 11 (:REWRITE USE-ALL-<-2))
 (11 11 (:REWRITE USE-ALL-<))
 (11 11 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (11 11 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (11 11 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (11 11 (:REWRITE DROP-LINEAR-HYPS2))
 (11 11 (:REWRITE DROP->-HYPS))
 (11 11 (:REWRITE DROP-<-HYPS))
 (11 11 (:REWRITE DEFAULT-CAR))
 (11 11 (:REWRITE DEFAULT-<-2))
 (11 11 (:REWRITE DEFAULT-<-1))
 (11 11 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-+-1))
 (11 11 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (11 11 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (11 11 (:REWRITE BOUND-WHEN-USB2))
 (11 11 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (11 11 (:REWRITE <-WHEN-BVLT))
 (11 11 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (11 11 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (11 11 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (11 11 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (11 11 (:REWRITE <-OF-0-WHEN-<-FREE))
 (11 11 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (11 11 (:REWRITE <-FROM-<=-FREE))
 (11 11 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (11 11 (:REWRITE +-OF-MINUS))
 (10 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (6 6 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (6 6 (:TYPE-PRESCRIPTION ALISTP))
 (6 6 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (6 6 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (6 6 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (6 6 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (6 2 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (6 2 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (5 5 (:REWRITE WFR-HACK5))
 (5 5 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 4 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (4 4 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (4 2 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (2 2 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (2 2 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (2 2 (:REWRITE USE-ALL-RATIONALP-2))
 (2 2 (:REWRITE USE-ALL-RATIONALP))
 (2 2 (:REWRITE USE-ALL-RATIONAL-LISTP-2))
 (2 2 (:REWRITE USE-ALL-RATIONAL-LISTP))
 (2 2 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 (2 2 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 )
(ALL-CONSP-WITH-RATIONALP-CAR-OF-CDR-FOR-DEFMERGESORT
 (672 2 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (662 9 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (618 2 (:DEFINITION STRIP-CARS))
 (506 4 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (195 3 (:REWRITE <-0-+-NEGATIVE-1))
 (157 5 (:REWRITE LEN-OF-CDR-BETTER))
 (107 9 (:LINEAR LIST::LEN-WHEN-CONSP-LINEAR))
 (102 8 (:LINEAR LIST::LEN-NON-NEGATIVE-LINEAR))
 (86 11 (:REWRITE DEFAULT-CAR))
 (79 79 (:TYPE-PRESCRIPTION LEN))
 (72 8 (:LINEAR LEN-POSITIVE-WHEN-CONSP-LINEAR-CHEAP))
 (54 27 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (54 27 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (53 37 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (53 37 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (49 1 (:REWRITE RATIONAL-LISTP-OF-CONS))
 (48 32 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (39 2 (:REWRITE LIST::LEN-POS-REWRITE))
 (38 1 (:REWRITE EQUAL-CONSTANT-+))
 (35 1 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (32 32 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (32 32 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (32 32 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (32 32 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (32 32 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (32 32 (:META LEN-CONS-META-RULE))
 (30 30 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (27 27 (:TYPE-PRESCRIPTION NAT-LISTP))
 (20 1 (:REWRITE LIST::LIST-EQUIV-HACK))
 (19 2 (:REWRITE LIST::OPEN-EQUIV))
 (14 7 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (12 6 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (11 11 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (10 5 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (10 5 (:REWRITE DEFAULT-+-2))
 (10 3 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (9 9 (:TYPE-PRESCRIPTION ALL-NATP))
 (9 9 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (9 9 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (9 3 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (9 3 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (8 8 (:REWRITE USE-ALL-CONSP-2))
 (8 8 (:REWRITE USE-ALL-CONSP))
 (8 8 (:REWRITE LEN-GIVES-CONSP))
 (8 8 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (8 8 (:REWRITE CONSP-FROM-LEN-BOUND))
 (7 7 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (7 7 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (6 6 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 3 (:REWRITE DEFAULT-<-2))
 (6 3 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (6 2 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (6 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (6 1 (:REWRITE HACK1))
 (5 5 (:REWRITE DEFAULT-+-1))
 (5 5 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (5 5 (:REWRITE +-OF-MINUS))
 (5 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (4 4 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (4 4 (:REWRITE WFR-HACK5))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (4 4 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (4 4 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (4 4 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (4 4 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (4 2 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 1 (:REWRITE USE-ALL-CONSP-WITH-RATIONALP-CAR-FOR-CAR-FOR-DEFMERGESORT))
 (3 3 (:TYPE-PRESCRIPTION ALISTP))
 (3 3 (:REWRITE USE-ALL-<-2))
 (3 3 (:REWRITE USE-ALL-<))
 (3 3 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (3 3 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (3 3 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (3 3 (:REWRITE DROP-LINEAR-HYPS2))
 (3 3 (:REWRITE DROP->-HYPS))
 (3 3 (:REWRITE DROP-<-HYPS))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (3 3 (:REWRITE BOUND-WHEN-USB2))
 (3 3 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (3 3 (:REWRITE <-WHEN-BVLT))
 (3 3 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (3 3 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (3 3 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (3 3 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (3 3 (:REWRITE <-OF-0-WHEN-<-FREE))
 (3 3 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (3 3 (:REWRITE <-FROM-<=-FREE))
 (3 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (3 1 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (3 1 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (2 2 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (2 2 (:REWRITE USE-ALL-RATIONALP-2))
 (2 2 (:REWRITE USE-ALL-RATIONALP))
 (2 2 (:REWRITE USE-ALL-RATIONAL-LISTP-2))
 (2 2 (:REWRITE USE-ALL-RATIONAL-LISTP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (2 2 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (2 1 (:REWRITE LIST::TRUE-LISTP-FIX))
 (2 1 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (2 1 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (2 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (2 1 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (2 1 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (2 1 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (1 1 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (1 1 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (1 1 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (1 1 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (1 1 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (1 1 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (1 1 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (1 1 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (1 1 (:REWRITE CLR-DIFFERENTIAL))
 (1 1 (:REWRITE CDR-CONS))
 (1 1 (:REWRITE CAR-CONS))
 (1 1 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 )
(ALL-CONSP-WITH-RATIONALP-CAR)
(MERGE-CAR-<-2
 (228 92 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (228 92 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (92 92 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (92 92 (:TYPE-PRESCRIPTION NAT-LISTP))
 (44 22 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (28 14 (:TYPE-PRESCRIPTION TRUE-LISTP-REVAPPEND-TYPE-PRESCRIPTION))
 (22 22 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 )
(CONSP-OF-MERGE-CAR-<-2
 (8447 241 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (8224 17 (:REWRITE NOT-<-OF-CAR-WHEN-NAT-LISTP))
 (6806 2855 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (6806 2855 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (6183 27 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (6117 25 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-<-2))
 (4814 77 (:REWRITE DEFAULT-+-2))
 (4091 86 (:REWRITE DEFAULT-<-2))
 (3890 22 (:REWRITE RATIONALP-OF-CAR-OF-CAR))
 (3635 25 (:REWRITE USE-ALL-<=-FOR-CAR))
 (3028 22 (:DEFINITION STRIP-CARS))
 (2940 2940 (:TYPE-PRESCRIPTION NAT-LISTP))
 (2895 2895 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (2862 422 (:REWRITE LIST::LEN-WHEN-AT-MOST-1))
 (2470 44 (:REWRITE STRIP-CARS-OF-NON-CONSP))
 (2373 18 (:REWRITE ALL-<=-WHEN-<=-AND-DECREASINGP))
 (1902 60 (:REWRITE <-0-+-NEGATIVE-1))
 (1770 174 (:REWRITE DEFAULT-CAR))
 (1678 68 (:REWRITE LEN-OF-CDR-BETTER))
 (1593 27 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (1483 47 (:REWRITE ALL-<-WHEN-NOT-CONSP))
 (1478 22 (:REWRITE USE-ALL-RATIONALP-FOR-CAR))
 (1330 18 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP))
 (1096 548 (:TYPE-PRESCRIPTION SYMBOLP-OF-CAR-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-TYPE))
 (881 52 (:REWRITE LIST::LEN-POS-REWRITE))
 (794 18 (:REWRITE ALL-<=-WHEN-ALL-<))
 (764 26 (:REWRITE ARITH-HACK-CHEAP))
 (750 422 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (682 354 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (626 69 (:REWRITE <-OF-0-WHEN-<-FREE))
 (624 624 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (608 86 (:REWRITE DEFAULT-<-1))
 (576 4 (:REWRITE RATIONAL-LISTP-OF-CONS))
 (559 21 (:REWRITE ALL-NATP-WHEN-NOT-CONSP))
 (466 17 (:REWRITE USE-ALL-<-FOR-CAR))
 (447 10 (:REWRITE ALL-<-OF-0-WHEN-ALL-NATP))
 (355 1 (:DEFINITION NATP))
 (354 354 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (354 354 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (354 354 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (354 354 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (354 354 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (354 354 (:META LEN-CONS-META-RULE))
 (306 18 (:REWRITE ALL-<=-WHEN-NOT-CONSP))
 (269 22 (:REWRITE NAT-LISTP-WHEN-ALL-NATP))
 (250 250 (:TYPE-PRESCRIPTION ALL-NATP))
 (241 241 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (241 241 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (240 120 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (235 47 (:REWRITE ALL-<-WHEN-NOT-CONSP-CHEAP))
 (228 19 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-BETTER))
 (216 8 (:REWRITE APPEND-WHEN-NOT-CONSP))
 (209 209 (:REWRITE USE-ALL-CONSP-2))
 (209 209 (:REWRITE USE-ALL-CONSP))
 (209 209 (:REWRITE LEN-GIVES-CONSP))
 (209 209 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (209 209 (:REWRITE CONSP-FROM-LEN-BOUND))
 (196 98 (:REWRITE CONSP-OF-CAR-WHEN-ALISTP-CHEAP))
 (180 60 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (180 60 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (174 174 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (156 98 (:REWRITE JVM::CONSP-OF-CAR-WHEN-FIELD-INFO-ALISTP))
 (152 76 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (146 146 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (140 1 (:REWRITE USE-ALL-NATP-FOR-CAR))
 (139 10 (:REWRITE ALL-<-OF-0-WHEN-NAT-LISTP))
 (136 4 (:REWRITE EQUAL-CONSTANT-+))
 (133 76 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP))
 (132 4 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (111 111 (:TYPE-PRESCRIPTION ALL-<))
 (105 21 (:REWRITE ALL-NATP-WHEN-NOT-CONSP-CHEAP))
 (101 101 (:TYPE-PRESCRIPTION PSEUDO-DAGP))
 (99 79 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (98 98 (:TYPE-PRESCRIPTION ALISTP))
 (98 98 (:REWRITE CONSP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (95 19 (:REWRITE USE-ALL-INTEGER-LISTP-FOR-CAR))
 (90 18 (:REWRITE ALL-RATIONALP-WHEN-NOT-CONSP-CHEAP))
 (90 18 (:REWRITE ALL-<=-WHEN-NOT-CONSP-CHEAP))
 (86 86 (:REWRITE USE-ALL-<-2))
 (86 86 (:REWRITE USE-ALL-<))
 (86 86 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (86 86 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (86 86 (:REWRITE DROP-LINEAR-HYPS2))
 (86 86 (:REWRITE DROP->-HYPS))
 (86 86 (:REWRITE DROP-<-HYPS))
 (86 86 (:REWRITE BOUND-WHEN-USB2))
 (86 86 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (86 86 (:REWRITE <-WHEN-BVLT))
 (86 86 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (86 86 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (86 86 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (86 86 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (86 86 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (86 86 (:REWRITE <-FROM-<=-FREE))
 (82 82 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN-STRONG))
 (82 82 (:REWRITE LEN-OF-CAR-WHEN-ITEMS-HAVE-LEN))
 (79 79 (:REWRITE DEFAULT-CDR))
 (77 77 (:REWRITE DEFAULT-+-1))
 (77 77 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (76 76 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (76 76 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (76 76 (:REWRITE CONSP-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (76 4 (:REWRITE LIST::LIST-EQUIV-HACK))
 (72 8 (:REWRITE LIST::OPEN-EQUIV))
 (68 68 (:REWRITE +-OF-MINUS))
 (66 18 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP))
 (65 21 (:REWRITE ALL-NATP-WHEN-NAT-LISTP))
 (64 64 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (60 60 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (60 8 (:REWRITE APPEND-ATOM-UNDER-LIST-EQUIV))
 (57 57 (:TYPE-PRESCRIPTION INTEGER-LISTP))
 (57 47 (:REWRITE ALL-<-TRANSITIVE-FREE-2))
 (54 54 (:TYPE-PRESCRIPTION JVM::FIELD-INFO-ALISTP))
 (54 18 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS))
 (51 51 (:REWRITE WFR-HACK5))
 (51 51 (:REWRITE CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX))
 (47 47 (:REWRITE ALL-<-TRANSITIVE-FREE))
 (47 47 (:REWRITE ALL-<-TRANSITIVE))
 (44 22 (:REWRITE RATIONAL-OF-CAR--WHEN-ALL-NATP-CHEAP))
 (43 43 (:TYPE-PRESCRIPTION ALL-<=))
 (42 21 (:REWRITE ALL-NATP-WHEN-NAT-LISTP-CHEAP))
 (38 38 (:TYPE-PRESCRIPTION ALL-INTEGER-LISTP))
 (38 19 (:REWRITE INTEGERP-OF-CAR-WHEN-NAT-LISTP-CHEAP))
 (38 19 (:REWRITE INTEGERP-OF-CAR-WHEN-INTEGER-LISTP-CHEAP))
 (38 19 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-NATP-CHEAP))
 (38 19 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-INTEGERP-CHEAP))
 (38 19 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-CHEAP))
 (38 19 (:REWRITE INTEGERP-OF-CAR-OF-CAR-WHEN-WEAK-DAGP-AUX-CHEAP))
 (38 19 (:REWRITE INTEGER-LISTP-WHEN-ALL-NATP-CHEAP))
 (37 37 (:TYPE-PRESCRIPTION WEAK-DAGP-AUX))
 (36 36 (:TYPE-PRESCRIPTION NODENUM-TYPE-ALISTP))
 (36 36 (:TYPE-PRESCRIPTION ALL-RATIONALP))
 (36 18 (:REWRITE RATIONAL-LISTP-WHEN-ALL-NATP-CHEAP))
 (36 18 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-WEAK-DAGP-AUX))
 (36 18 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-COUNTEREXAMPLEP))
 (35 26 (:REWRITE NOT-<-WHEN-SBVLT-ALT))
 (34 17 (:REWRITE <-OF-CAR-WHEN-ALL-<-CHEAP))
 (27 27 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (27 27 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (27 26 (:REWRITE NOT-<-WHEN-SBVLT))
 (26 26 (:REWRITE USE-ALL-<=-2))
 (26 26 (:REWRITE USE-ALL-<=))
 (26 26 (:REWRITE USE-<=-PLUS-CONSTANT-BOUND-TO-DROP-<=-HYP))
 (26 26 (:REWRITE USE-<=-BOUND-TO-DROP-<=-HYP))
 (26 26 (:REWRITE NOT-LESS-WHEN->=-MAX-OF-CONTAINING-BAG))
 (26 26 (:REWRITE NOT-GREATER-WHEN-<=-OF-MINELEM))
 (26 26 (:REWRITE INEQ-HACK2))
 (26 26 (:REWRITE INEQ-HACK))
 (26 26 (:REWRITE DROP-LINEAR-HYPS3))
 (26 26 (:REWRITE DROP-<=-HYPS))
 (26 26 (:REWRITE BOUND-WHEN-USB))
 (26 26 (:REWRITE <-OF-NEGATIVE-WHEN-USBP))
 (26 26 (:REWRITE <-OF-CONSTANT-WHEN-USB))
 (26 26 (:REWRITE <-OF-CONSTANT-WHEN-UNSIGNED-BYTE-P-SIZE-PARAM))
 (26 26 (:REWRITE <-OF-CONSTANT-WHEN-<=-OF-FREE))
 (26 26 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-ALT-NON-DAG))
 (22 22 (:REWRITE USE-ALL-RATIONALP-2))
 (22 22 (:REWRITE USE-ALL-RATIONALP))
 (22 22 (:REWRITE USE-ALL-RATIONAL-LISTP-2))
 (22 22 (:REWRITE USE-ALL-RATIONAL-LISTP))
 (20 20 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (20 4 (:REWRITE HACK1))
 (19 19 (:TYPE-PRESCRIPTION WEAK-DAGP))
 (19 19 (:TYPE-PRESCRIPTION ALL-INTEGERP))
 (19 19 (:REWRITE USE-ALL-INTEGER-LISTP-2))
 (19 19 (:REWRITE USE-ALL-INTEGER-LISTP))
 (19 19 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (19 19 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (19 19 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (19 19 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (19 19 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (19 19 (:REWRITE INTEGERP-OF-CAR-WHEN-POSSIBLY-NEGATED-NODENUMSP-WEAKEN-CHEAP))
 (19 19 (:REWRITE INTEGERP-OF-CAR-WHEN-ALL-DARGP-LESS-THAN))
 (19 19 (:REWRITE INTEGERP-OF-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (19 19 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (19 19 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP-CHEAP))
 (19 19 (:REWRITE ALL-INTEGER-LISTP-WHEN-NOT-CONSP))
 (19 1 (:REWRITE NATP-WHEN-INTEGERP-CHEAP))
 (18 18 (:TYPE-PRESCRIPTION COUNTEREXAMPLEP))
 (18 18 (:REWRITE RATIONAL-LISTP-OF-STRIP-CARS-WHEN-PSEUDO-DAGP-AUX))
 (18 18 (:REWRITE ALL-<=-MONOTONE))
 (17 17 (:REWRITE NOT-<-OF-CAR-WHEN-ALL-DARGP-LESS-THAN-2))
 (12 4 (:REWRITE PSEUDO-DAGP-OF-CDR))
 (12 4 (:REWRITE JVM::FIELD-INFO-ALISTP-OF-CDR))
 (10 10 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (8 8 (:REWRITE APPEND-WHEN-NOT-CONSP-ARG1-CHEAP))
 (8 8 (:REWRITE LIST::APPEND-OF-NON-CONSP-ONE))
 (8 4 (:REWRITE LIST::TRUE-LISTP-FIX))
 (8 4 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (8 4 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (8 4 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (6 6 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (6 6 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (6 6 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (6 6 (:REWRITE CLR-DIFFERENTIAL))
 (4 4 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (4 4 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (4 4 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (4 4 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (4 4 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (4 4 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (4 4 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (4 4 (:REWRITE CDR-CONS))
 (4 4 (:REWRITE CAR-CONS))
 (4 2 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (4 2 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (2 2 (:TYPE-PRESCRIPTION DECREASINGP))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (2 2 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (2 2 (:REWRITE IMPOSSIBLE-VALUE-2))
 (2 2 (:REWRITE IMPOSSIBLE-VALUE-1))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+))
 (2 2 (:REWRITE EQUAL-OF-IF-CONSTANTS))
 (1 1 (:TYPE-PRESCRIPTION NATP))
 (1 1 (:TYPE-PRESCRIPTION BINARY-APPEND))
 (1 1 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 (1 1 (:REWRITE USE-ALL-NATP-2))
 (1 1 (:REWRITE USE-ALL-NATP))
 (1 1 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE NATP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE NATP-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (1 1 (:REWRITE NATP-OF-CAR-OF-CAR-WHEN-PSEUDO-DAGP-AUX-2))
 (1 1 (:REWRITE <-OF-0-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 )
(MERGE-SORT-CAR-<-2)
(CONSP-OF-MERGE-SORT-CAR-<-2
 (2967 52 (:REWRITE CONSP-FROM-LEN-CHEAP))
 (868 31 (:REWRITE <-0-+-NEGATIVE-1))
 (408 12 (:REWRITE EQUAL-CONSTANT-+))
 (396 12 (:REWRITE LIST::LEN-EQUAL-1-REWRITE))
 (356 2 (:LINEAR LIST::LEN-OF-CDR-LINEAR))
 (348 2 (:LINEAR LIST::LEN-OF-CDR-BOUND-WEAK-LINEAR))
 (348 2 (:LINEAR LIST::LEN-OF-CDR-BOUND-TIGHT-LINEAR))
 (228 12 (:REWRITE LIST::LIST-EQUIV-HACK))
 (225 225 (:REWRITE LIST::LEN-OF-NON-CONSP))
 (216 24 (:REWRITE LIST::OPEN-EQUIV))
 (178 1 (:LINEAR LEN-OF-CDR-LINEAR-STRONG))
 (174 1 (:LINEAR LEN-OF-CDR-LINEAR))
 (157 157 (:REWRITE LEN-WHEN-PSEUDO-DAGP-AUX))
 (157 157 (:REWRITE LEN-WHEN-NOT-CONSP-CHEAP))
 (157 157 (:REWRITE LEN-WHEN-EQUAL-TAKE))
 (157 157 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (157 157 (:REWRITE LEN-WHEN-BV-ARRAYP))
 (157 157 (:REWRITE LEN-WHEN-BOUNDED-DAG-EXPRP-AND-QUOTEP))
 (157 157 (:META LEN-CONS-META-RULE))
 (124 62 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (93 31 (:REWRITE <-OF-LEN-WHEN-NTH-NON-NIL))
 (93 31 (:REWRITE <-OF-LEN-WHEN-INTEGERP-OF-NTH))
 (90 9 (:REWRITE LIST::LEN-POS-REWRITE))
 (81 67 (:REWRITE CDR-WHEN-EQUAL-OF-LEN-AND-1-CHEAP))
 (72 71 (:REWRITE DEFAULT-+-2))
 (71 71 (:REWRITE DEFAULT-+-1))
 (71 71 (:REWRITE +-OF-MINUS-CONSTANT-VERSION))
 (71 71 (:REWRITE +-OF-MINUS))
 (63 63 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (62 62 (:TYPE-PRESCRIPTION ALL-NATP))
 (60 12 (:REWRITE HACK1))
 (56 56 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (52 52 (:REWRITE USE-ALL-HEAPREF-TABLE-ENTRYP-2))
 (52 52 (:REWRITE CONSP-WHEN-LEN-EQUAL-CONSTANT))
 (51 51 (:REWRITE USE-ALL-CONSP-2))
 (51 51 (:REWRITE USE-ALL-CONSP))
 (51 51 (:REWRITE LEN-GIVES-CONSP))
 (51 51 (:REWRITE CONSP-WHEN-LEN-GREATER))
 (51 51 (:REWRITE CONSP-FROM-LEN-BOUND))
 (36 36 (:REWRITE DEFAULT-CAR))
 (36 36 (:REWRITE CAR-WHEN-EQUAL-NTHCDR))
 (33 32 (:REWRITE DEFAULT-<-2))
 (32 32 (:REWRITE USE-ALL-<-2))
 (32 32 (:REWRITE USE-ALL-<))
 (32 32 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (32 32 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (32 32 (:REWRITE DROP-LINEAR-HYPS2))
 (32 32 (:REWRITE DROP->-HYPS))
 (32 32 (:REWRITE DROP-<-HYPS))
 (32 32 (:REWRITE DEFAULT-<-1))
 (32 32 (:REWRITE CONSP-OF-CDR-WHEN-LEN-KNOWN))
 (32 32 (:REWRITE BOUND-WHEN-USB2))
 (32 32 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (32 32 (:REWRITE <-WHEN-BVLT))
 (32 32 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (32 32 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (32 32 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (32 32 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (32 32 (:REWRITE <-OF-0-WHEN-<-FREE))
 (32 32 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (32 32 (:REWRITE <-FROM-<=-FREE))
 (31 31 (:REWRITE EQUAL-OF-LEN-AND-NEGATIVE-CONSTANT))
 (24 12 (:REWRITE LIST::TRUE-LISTP-FIX))
 (24 12 (:REWRITE TRUE-LIST-FIX-WHEN-TRUE-LISTP))
 (24 12 (:REWRITE LIST-FIX-WHEN-TRUE-LISTP))
 (24 12 (:REWRITE LIST::EQUIV-OF-TWO-TRUE-LISTPS))
 (16 8 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-MV-NTH-1-OF-SPLIT-LIST-FAST))
 (13 13 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (13 13 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (13 13 (:REWRITE CLR-DIFFERENTIAL))
 (12 12 (:TYPE-PRESCRIPTION TRUE-LIST-FIX))
 (12 12 (:REWRITE TRUE-LIST-FIX-WHEN-NOT-CONSP-CHEAP))
 (12 12 (:REWRITE LIST-FIX-WHEN-NOT-CONSP))
 (12 12 (:REWRITE LIST-FIX-WHEN-LEN-ZERO))
 (12 12 (:REWRITE LIST::FIX-OF-NON-CONSP))
 (12 12 (:REWRITE LIST::EQUIV-OF-NON-CONSP-TWO))
 (12 12 (:REWRITE LIST::EQUIV-OF-NON-CONSP-ONE))
 (12 12 (:REWRITE LIST::EQUIV-OF-CONSTANT))
 (12 12 (:REWRITE CDR-CONS))
 (12 12 (:REWRITE CAR-CONS))
 (11 1 (:REWRITE LIST::LEN-EQUAL-0-REWRITE))
 (1 1 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (1 1 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (1 1 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (1 1 (:REWRITE IMPOSSIBLE-VALUE-2))
 (1 1 (:REWRITE IMPOSSIBLE-VALUE-1))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (1 1 (:REWRITE EQUAL-WHEN-<-OF-+))
 )
(ALL-CONSP-WITH-RATIONALP-CAR-OF-MV-NTH-0-OF-SPLIT-LIST-FAST-AUX)
(ALL-CONSP-WITH-RATIONALP-CAR-OF-MV-NTH-0-OF-SPLIT-LIST-FAST)
(ALL-CONSP-WITH-RATIONALP-CAR-OF-MV-NTH-1-OF-SPLIT-LIST-FAST-AUX)
(ALL-CONSP-WITH-RATIONALP-CAR-OF-MV-NTH-1-OF-SPLIT-LIST-FAST)
(ALL-CONSP-WITH-RATIONALP-CAR-OF-MERGE-CAR-<-2)
(TRUE-LISTP-OF-MERGE-CAR-<-2)
(TRUE-LISTP-OF-MERGE-SORT-CAR-<-2)
(ALL-CONSP-WITH-RATIONALP-CAR-OF-MERGE-SORT-CAR-<-2)
(MERGE-SORT-CAR-<-2)
(PERM-OF-MERGE-CAR-<-2)
(PERM-OF-MERGE-SORT-CAR-<-2)
(PROVE-THEOREMS-ABOUT-TAIL-FUNCTION)
(APPLY-RULE-AT-NODENUM
 (12 12 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (12 6 (:TYPE-PRESCRIPTION TRUE-LISTP-APPEND))
 (12 6 (:TYPE-PRESCRIPTION LIST::APPEND-TRUE-LISTP-TYPE-PRESCRIPTION))
 (6 6 (:TYPE-PRESCRIPTION TYPE-OF-AREF1-WHEN-PSEUDO-DAG-ARRAYP-AUX))
 (6 6 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-TWO))
 (6 6 (:TYPE-PRESCRIPTION LIST::APPEND-CONSP-TYPE-ONE))
 )
(PROVE-THEOREM)
(EXECUTABLE-COUNTERPARTS)
(REMOVE-VARS-NOT-PASSED-THROUGH
 (32 16 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (32 16 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (16 16 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (16 16 (:TYPE-PRESCRIPTION NAT-LISTP))
 (16 8 (:TYPE-PRESCRIPTION INTEGERP-OF-NTH-WHEN-ALL-NATP))
 (8 8 (:TYPE-PRESCRIPTION ALL-NATP))
 )
(FIND-VARS-PASSED-THROUGH
 (58 29 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (58 29 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (29 29 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (29 29 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-VAR-REPLACEMENT-ASSUMPTIONS
 (18 9 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (18 9 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (9 9 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (9 9 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(REMOVE-LIST
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(DROP-NTHS
 (2 1 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (2 1 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (1 1 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (1 1 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIXUP-RECURSIVE-CALLS
 (56 28 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (56 28 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (28 28 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (28 28 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(MAKE-FORMAL-CONSTANT-ALIST2
 (18 9 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (18 9 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (9 9 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (9 9 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIXUP-VARS-IN-EXPR-AUX
 (14 7 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (14 7 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (7 7 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (7 7 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(FIXUP-VARS-IN-EXPR
 (42 21 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (42 21 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (21 21 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (21 21 (:TYPE-PRESCRIPTION NAT-LISTP))
 (1 1 (:TYPE-PRESCRIPTION FIXUP-VARS-IN-EXPR))
 )
(SPECIALIZE-FN)
(SPECIALIZE-FNS)
(EXTRA-STUFF-OKAYP-AUX
 (24 12 (:TYPE-PRESCRIPTION RATIONALP-OF-CAR-WHEN-RATIONAL-LISTP-CHEAP))
 (24 12 (:TYPE-PRESCRIPTION NATP-OF-CAR-WHEN-NAT-LISTP-TYPE))
 (12 12 (:TYPE-PRESCRIPTION RATIONAL-LISTP))
 (12 12 (:TYPE-PRESCRIPTION NAT-LISTP))
 )
(EXTRA-STUFF-OKAYP)
(PROVE-MITER-FN-HELPER)
(PROVE-MITER-FN)
(PROVE-EQUIVALENCE-FN)
(IF-OF-BOOL-FIX)
(MYIF-OF-BOOL-FIX
 (63 3 (:REWRITE MYIF-BECOMES-BIF))
 (51 51 (:TYPE-PRESCRIPTION MYIF))
 (42 1 (:REWRITE MYIF-EQUAL-LEMMA))
 (36 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUNDS))
 (34 1 (:REWRITE EQUAL-OF-MYIF-SAME-2-ALT))
 (13 1 (:REWRITE DEFAULT-<-1))
 (7 1 (:REWRITE INTEGERP-IMPLIES-ACL2-NUMBERP))
 (6 6 (:TYPE-PRESCRIPTION BOOLEANP))
 (5 2 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (4 2 (:REWRITE NOT-EQUAL-WHEN-LESS))
 (3 3 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (3 3 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (3 3 (:REWRITE MYIF-WHEN-NIL))
 (3 3 (:REWRITE MYIF-OF-CONSTANT-WHEN-NOT-NIL))
 (3 3 (:REWRITE CLR-DIFFERENTIAL))
 (3 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (3 1 (:REWRITE BOOL-FIX-WHEN-BOOLEANP))
 (2 2 (:TYPE-PRESCRIPTION UNSIGNED-BYTE-P))
 (2 2 (:REWRITE NOT-EQUAL-WHEN-NOT-EQUAL-BVCHOP))
 (2 2 (:REWRITE NOT-EQUAL-FROM-BOUND))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P-ALT))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT2))
 (2 2 (:REWRITE NOT-EQUAL-CONSTANT-WHEN-BOUND-FORBIDS-IT))
 (2 2 (:REWRITE IMPOSSIBLE-VALUE-2))
 (2 2 (:REWRITE IMPOSSIBLE-VALUE-1))
 (2 2 (:REWRITE IF-OF-T-AND-NIL-UNDER-IFF))
 (2 2 (:REWRITE EQUAL-WHEN-BVLT-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-BVLT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+-ALT))
 (2 2 (:REWRITE EQUAL-WHEN-<-OF-+))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-SBVLT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-2))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-NOT-BVLT-CONSTANT-1))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2-ALT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-2))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1-ALT))
 (2 2 (:REWRITE EQUAL-OF-CONSTANT-WHEN-BVLT-CONSTANT-1))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SLICE-EQUAL-CONSTANT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-NOT-SBVLT))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-POSITIVE))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-NONZERO))
 (1 1 (:TYPE-PRESCRIPTION EXPT-TYPE-PRESCRIPTION-INTEGERP))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P-2))
 (1 1 (:REWRITE USE-ALL-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE USE-ALL-RATIONALP-2))
 (1 1 (:REWRITE USE-ALL-RATIONALP))
 (1 1 (:REWRITE USE-ALL-<-2))
 (1 1 (:REWRITE USE-ALL-<))
 (1 1 (:REWRITE USB-WHEN-BVLT-HACK-GEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-ZP-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0-POLARITY))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-TOP-BIT-0))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-NOT-BVLT-TIGHTEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT-TIGHTEN))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-BVLT))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-WHEN-<=-CHEAP))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-TIGHTEN-FROM-BOUND))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-CONSTANT))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-OF-1-WHEN-NOT-0-FREE))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-CONSTANT-VERSION))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND-<=-VERSION))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-FROM-BOUND))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-1-WHEN-NOT-1))
 (1 1 (:REWRITE UNSIGNED-BYTE-P-1-WHEN-NOT-0))
 (1 1 (:REWRITE UBP-LONGER-BETTER))
 (1 1 (:REWRITE MY-NON-INTEGERP-<-INTEGERP))
 (1 1 (:REWRITE MY-INTEGERP-<-NON-INTEGERP))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-SIZE-ARG))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-UNSIGNED-BYTE-P-FORCED-FREE))
 (1 1 (:REWRITE INTEGERP-WHEN-SIGNED-BYTE-P))
 (1 1 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE EQUAL-OF-MYIF-ARG2-SAFE))
 (1 1 (:REWRITE EQUAL-OF-MYIF-ARG1-SAFE))
 (1 1 (:REWRITE DROP-LINEAR-HYPS2))
 (1 1 (:REWRITE DROP->-HYPS))
 (1 1 (:REWRITE DROP-<-HYPS))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE BOUND-WHEN-USB2))
 (1 1 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-WHEN-SBVLT-CONSTANTS))
 (1 1 (:REWRITE <-WHEN-BVLT))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE <-WHEN-ALL-DARGP-LESS-THAN-GEN))
 (1 1 (:REWRITE <-TIGHTEN-WHEN-SLICE-IS-0))
 (1 1 (:REWRITE <-OF-NON-INTEGERP-AND-INTEGERP))
 (1 1 (:REWRITE <-OF-CONSTANT-WHEN-USB2))
 (1 1 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE <-LEMMA-FOR-KNOWN-OPERATORS-NON-DAG))
 (1 1 (:REWRITE <-FROM-<=-FREE))
 )
(BOOLIF-OF-BOOL-FIX)
(PAIRLIS$-SAFE)
